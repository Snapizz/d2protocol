/// <reference path="../typings/ts-bytearray/ts-bytearray.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ByteArray = require('ts-bytearray');
var Protocol;
(function (Protocol) {
    var Metadata = (function () {
        function Metadata() {
        }
        Metadata.PROTOCOL_BUILD = 1666;
        Metadata.PROTOCOL_REQUIRED_BUILD = 1666;
        Metadata.PROTOCOL_DATE = 'Mon, 17 Aug 2015 15:51:44 +0200';
        Metadata.PROTOCOL_VISIBILITY = 'local';
        return Metadata;
    })();
    Protocol.Metadata = Metadata;
    (function (ProtocolConstantsEnum) {
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAP_CELL_COUNT"] = 560] = "MAP_CELL_COUNT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_LEVEL"] = 200] = "MAX_LEVEL";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_GUILD_LEVEL"] = 200] = "MAX_GUILD_LEVEL";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_MOUNT_LEVEL"] = 100] = "MAX_MOUNT_LEVEL";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_CHAT_LEN"] = 512] = "MAX_CHAT_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["USER_MAX_CHAT_LEN"] = 256] = "USER_MAX_CHAT_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_STAT_LEN"] = 512] = "MAX_STAT_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_STAT_BY_MSG"] = 20] = "MAX_STAT_BY_MSG";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_LOGIN_LEN"] = 3] = "MIN_LOGIN_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_LOGIN_LEN"] = 50] = "MAX_LOGIN_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_PLAYER_NAME_LEN"] = 2] = "MIN_PLAYER_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PLAYER_NAME_LEN"] = 20] = "MAX_PLAYER_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_NICK_LEN"] = 2] = "MIN_NICK_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_NICK_LEN"] = 30] = "MAX_NICK_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_GUILDNAME_LEN"] = 3] = "MIN_GUILDNAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_GUILDNAME_LEN"] = 30] = "MAX_GUILDNAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_ALLIANCENAME_LEN"] = 3] = "MIN_ALLIANCENAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_ALLIANCENAME_LEN"] = 30] = "MAX_ALLIANCENAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_ALLIANCETAG_LEN"] = 3] = "MIN_ALLIANCETAG_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_ALLIANCETAG_LEN"] = 5] = "MAX_ALLIANCETAG_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_PARTY_NAME_LEN"] = 0] = "MIN_PARTY_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PARTY_NAME_LEN"] = 25] = "MAX_PARTY_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PLAYER_COLOR"] = 5] = "MAX_PLAYER_COLOR";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_ENTITY_COLOR"] = 10] = "MAX_ENTITY_COLOR";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PLAYERS_PER_TEAM"] = 8] = "MAX_PLAYERS_PER_TEAM";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_MEMBERS_PER_PARTY"] = 8] = "MAX_MEMBERS_PER_PARTY";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_GUESTS_PER_PARTY"] = 7] = "MAX_GUESTS_PER_PARTY";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_MEMBERS_PER_ARENA_PARTY"] = 5] = "MAX_MEMBERS_PER_ARENA_PARTY";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_MONSTERS_IN_GROUP_ON_MAP"] = 16] = "MAX_MONSTERS_IN_GROUP_ON_MAP";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_CHAT_OBJECT_REF"] = 16] = "MAX_CHAT_OBJECT_REF";
        ProtocolConstantsEnum[ProtocolConstantsEnum["NOT_EQUIPED"] = 63] = "NOT_EQUIPED";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_EQUIPED"] = 255] = "MAX_EQUIPED";
        ProtocolConstantsEnum[ProtocolConstantsEnum["SLOTS_EQUIPABLE_BY_USER"] = 16] = "SLOTS_EQUIPABLE_BY_USER";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_CRAFT_SLOT"] = 9] = "MAX_CRAFT_SLOT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_JOB_LEVEL"] = 200] = "MAX_JOB_LEVEL";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_HONOR"] = 20000] = "MAX_HONOR";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_SHORTCUT"] = 99] = "MAX_SHORTCUT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_ARENA_RANK"] = 2300] = "MAX_ARENA_RANK";
        ProtocolConstantsEnum[ProtocolConstantsEnum["CHAR_MIN_LEVEL_ARENA"] = 50] = "CHAR_MIN_LEVEL_ARENA";
        ProtocolConstantsEnum[ProtocolConstantsEnum["CHAR_MIN_LEVEL_RIDE"] = 60] = "CHAR_MIN_LEVEL_RIDE";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_DUNGEON_REGISTER"] = 10] = "MAX_DUNGEON_REGISTER";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_RIDE_NAME_LEN"] = 0] = "MIN_RIDE_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_RIDE_NAME_LEN"] = 16] = "MAX_RIDE_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_EFFECTS_COUNT"] = 100] = "MAX_EFFECTS_COUNT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_LOCKABLE_CODE_LEN"] = 8] = "MAX_LOCKABLE_CODE_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PRESET_ITEM_COUNT"] = 24] = "MAX_PRESET_ITEM_COUNT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MIN_OBJ_COUNT_BY_XFERT"] = 1] = "MIN_OBJ_COUNT_BY_XFERT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_OBJ_COUNT_BY_XFERT"] = 800] = "MAX_OBJ_COUNT_BY_XFERT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_OBJ_COUNT_BY_DECRAFT"] = 50] = "MAX_OBJ_COUNT_BY_DECRAFT";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_WAVE"] = 100] = "MAX_WAVE";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_OBJECT_EFFECT_STRING_LEN"] = 30] = "MAX_OBJECT_EFFECT_STRING_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_PLAYER_OR_ACCOUNT_NAME_LEN"] = 31] = "MAX_PLAYER_OR_ACCOUNT_NAME_LEN";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_MEMBERS_PER_GUILD"] = 240] = "MAX_MEMBERS_PER_GUILD";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_ADDITIONNAL_PER_CARAC"] = 100] = "MAX_ADDITIONNAL_PER_CARAC";
        ProtocolConstantsEnum[ProtocolConstantsEnum["MAX_RECONNECTION_ATTEMPTS"] = 5] = "MAX_RECONNECTION_ATTEMPTS";
    })(Protocol.ProtocolConstantsEnum || (Protocol.ProtocolConstantsEnum = {}));
    var ProtocolConstantsEnum = Protocol.ProtocolConstantsEnum;
    (function (AccessoryPreviewErrorEnum) {
        AccessoryPreviewErrorEnum[AccessoryPreviewErrorEnum["PREVIEW_ERROR"] = 0] = "PREVIEW_ERROR";
        AccessoryPreviewErrorEnum[AccessoryPreviewErrorEnum["PREVIEW_COOLDOWN"] = 1] = "PREVIEW_COOLDOWN";
        AccessoryPreviewErrorEnum[AccessoryPreviewErrorEnum["PREVIEW_BAD_ITEM"] = 2] = "PREVIEW_BAD_ITEM";
    })(Protocol.AccessoryPreviewErrorEnum || (Protocol.AccessoryPreviewErrorEnum = {}));
    var AccessoryPreviewErrorEnum = Protocol.AccessoryPreviewErrorEnum;
    (function (AggressableStatusEnum) {
        AggressableStatusEnum[AggressableStatusEnum["NON_AGGRESSABLE"] = 0] = "NON_AGGRESSABLE";
        AggressableStatusEnum[AggressableStatusEnum["PvP_ENABLED_AGGRESSABLE"] = 10] = "PvP_ENABLED_AGGRESSABLE";
        AggressableStatusEnum[AggressableStatusEnum["PvP_ENABLED_NON_AGGRESSABLE"] = 11] = "PvP_ENABLED_NON_AGGRESSABLE";
        AggressableStatusEnum[AggressableStatusEnum["AvA_ENABLED_AGGRESSABLE"] = 20] = "AvA_ENABLED_AGGRESSABLE";
        AggressableStatusEnum[AggressableStatusEnum["AvA_ENABLED_NON_AGGRESSABLE"] = 21] = "AvA_ENABLED_NON_AGGRESSABLE";
        AggressableStatusEnum[AggressableStatusEnum["AvA_DISQUALIFIED"] = 22] = "AvA_DISQUALIFIED";
        AggressableStatusEnum[AggressableStatusEnum["AvA_PREQUALIFIED_AGGRESSABLE"] = 23] = "AvA_PREQUALIFIED_AGGRESSABLE";
    })(Protocol.AggressableStatusEnum || (Protocol.AggressableStatusEnum = {}));
    var AggressableStatusEnum = Protocol.AggressableStatusEnum;
    (function (AlignmentSideEnum) {
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_UNKNOWN"] = -2] = "ALIGNMENT_UNKNOWN";
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_WITHOUT"] = -1] = "ALIGNMENT_WITHOUT";
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_NEUTRAL"] = 0] = "ALIGNMENT_NEUTRAL";
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_ANGEL"] = 1] = "ALIGNMENT_ANGEL";
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_EVIL"] = 2] = "ALIGNMENT_EVIL";
        AlignmentSideEnum[AlignmentSideEnum["ALIGNMENT_MERCENARY"] = 3] = "ALIGNMENT_MERCENARY";
    })(Protocol.AlignmentSideEnum || (Protocol.AlignmentSideEnum = {}));
    var AlignmentSideEnum = Protocol.AlignmentSideEnum;
    (function (AllianceRightsBitEnum) {
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_NONE"] = 0] = "ALLIANCE_RIGHT_NONE";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_BOSS"] = 1] = "ALLIANCE_RIGHT_BOSS";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_MANAGE_PRISMS"] = 2] = "ALLIANCE_RIGHT_MANAGE_PRISMS";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_TALK_IN_CHAN"] = 4] = "ALLIANCE_RIGHT_TALK_IN_CHAN";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_RECRUIT_GUILDS"] = 8] = "ALLIANCE_RIGHT_RECRUIT_GUILDS";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_KICK_GUILDS"] = 16] = "ALLIANCE_RIGHT_KICK_GUILDS";
        AllianceRightsBitEnum[AllianceRightsBitEnum["ALLIANCE_RIGHT_MANAGE_RIGHTS"] = 32] = "ALLIANCE_RIGHT_MANAGE_RIGHTS";
    })(Protocol.AllianceRightsBitEnum || (Protocol.AllianceRightsBitEnum = {}));
    var AllianceRightsBitEnum = Protocol.AllianceRightsBitEnum;
    (function (BreedEnum) {
        BreedEnum[BreedEnum["UNDEFINED"] = 0] = "UNDEFINED";
        BreedEnum[BreedEnum["Feca"] = 1] = "Feca";
        BreedEnum[BreedEnum["Osamodas"] = 2] = "Osamodas";
        BreedEnum[BreedEnum["Enutrof"] = 3] = "Enutrof";
        BreedEnum[BreedEnum["Sram"] = 4] = "Sram";
        BreedEnum[BreedEnum["Xelor"] = 5] = "Xelor";
        BreedEnum[BreedEnum["Ecaflip"] = 6] = "Ecaflip";
        BreedEnum[BreedEnum["Eniripsa"] = 7] = "Eniripsa";
        BreedEnum[BreedEnum["Iop"] = 8] = "Iop";
        BreedEnum[BreedEnum["Cra"] = 9] = "Cra";
        BreedEnum[BreedEnum["Sadida"] = 10] = "Sadida";
        BreedEnum[BreedEnum["Sacrieur"] = 11] = "Sacrieur";
        BreedEnum[BreedEnum["Pandawa"] = 12] = "Pandawa";
        BreedEnum[BreedEnum["Roublard"] = 13] = "Roublard";
        BreedEnum[BreedEnum["Zobal"] = 14] = "Zobal";
        BreedEnum[BreedEnum["Steamer"] = 15] = "Steamer";
        BreedEnum[BreedEnum["Eliotrope"] = 16] = "Eliotrope";
        BreedEnum[BreedEnum["SUMMONED"] = -1] = "SUMMONED";
        BreedEnum[BreedEnum["MONSTER"] = -2] = "MONSTER";
        BreedEnum[BreedEnum["MONSTER_GROUP"] = -3] = "MONSTER_GROUP";
        BreedEnum[BreedEnum["NPC"] = -4] = "NPC";
        BreedEnum[BreedEnum["HUMAN_VENDOR"] = -5] = "HUMAN_VENDOR";
        BreedEnum[BreedEnum["TAX_COLLECTOR"] = -6] = "TAX_COLLECTOR";
        BreedEnum[BreedEnum["MUTANT"] = -7] = "MUTANT";
        BreedEnum[BreedEnum["MUTANT_IN_DUNGEON"] = -8] = "MUTANT_IN_DUNGEON";
        BreedEnum[BreedEnum["MOUNT_OUTSIDE"] = -9] = "MOUNT_OUTSIDE";
        BreedEnum[BreedEnum["PRISM"] = -10] = "PRISM";
        BreedEnum[BreedEnum["INCARNATION"] = -11] = "INCARNATION";
    })(Protocol.BreedEnum || (Protocol.BreedEnum = {}));
    var BreedEnum = Protocol.BreedEnum;
    (function (BuildTypeEnum) {
        BuildTypeEnum[BuildTypeEnum["RELEASE"] = 0] = "RELEASE";
        BuildTypeEnum[BuildTypeEnum["BETA"] = 1] = "BETA";
        BuildTypeEnum[BuildTypeEnum["ALPHA"] = 2] = "ALPHA";
        BuildTypeEnum[BuildTypeEnum["TESTING"] = 3] = "TESTING";
        BuildTypeEnum[BuildTypeEnum["INTERNAL"] = 4] = "INTERNAL";
        BuildTypeEnum[BuildTypeEnum["DEBUG"] = 5] = "DEBUG";
        BuildTypeEnum[BuildTypeEnum["EXPERIMENTAL"] = 6] = "EXPERIMENTAL";
    })(Protocol.BuildTypeEnum || (Protocol.BuildTypeEnum = {}));
    var BuildTypeEnum = Protocol.BuildTypeEnum;
    (function (CharacterCreationResultEnum) {
        CharacterCreationResultEnum[CharacterCreationResultEnum["OK"] = 0] = "OK";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_NO_REASON"] = 1] = "ERR_NO_REASON";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_INVALID_NAME"] = 2] = "ERR_INVALID_NAME";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_NAME_ALREADY_EXISTS"] = 3] = "ERR_NAME_ALREADY_EXISTS";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_TOO_MANY_CHARACTERS"] = 4] = "ERR_TOO_MANY_CHARACTERS";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_NOT_ALLOWED"] = 5] = "ERR_NOT_ALLOWED";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_NEW_PLAYER_NOT_ALLOWED"] = 6] = "ERR_NEW_PLAYER_NOT_ALLOWED";
        CharacterCreationResultEnum[CharacterCreationResultEnum["ERR_RESTRICED_ZONE"] = 7] = "ERR_RESTRICED_ZONE";
    })(Protocol.CharacterCreationResultEnum || (Protocol.CharacterCreationResultEnum = {}));
    var CharacterCreationResultEnum = Protocol.CharacterCreationResultEnum;
    (function (CharacterDeletionErrorEnum) {
        CharacterDeletionErrorEnum[CharacterDeletionErrorEnum["DEL_ERR_NO_REASON"] = 1] = "DEL_ERR_NO_REASON";
        CharacterDeletionErrorEnum[CharacterDeletionErrorEnum["DEL_ERR_TOO_MANY_CHAR_DELETION"] = 2] = "DEL_ERR_TOO_MANY_CHAR_DELETION";
        CharacterDeletionErrorEnum[CharacterDeletionErrorEnum["DEL_ERR_BAD_SECRET_ANSWER"] = 3] = "DEL_ERR_BAD_SECRET_ANSWER";
        CharacterDeletionErrorEnum[CharacterDeletionErrorEnum["DEL_ERR_RESTRICED_ZONE"] = 4] = "DEL_ERR_RESTRICED_ZONE";
    })(Protocol.CharacterDeletionErrorEnum || (Protocol.CharacterDeletionErrorEnum = {}));
    var CharacterDeletionErrorEnum = Protocol.CharacterDeletionErrorEnum;
    (function (CharacterInventoryPositionEnum) {
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_HAT"] = 6] = "ACCESSORY_POSITION_HAT";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_CAPE"] = 7] = "ACCESSORY_POSITION_CAPE";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_BELT"] = 3] = "ACCESSORY_POSITION_BELT";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_BOOTS"] = 5] = "ACCESSORY_POSITION_BOOTS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_AMULET"] = 0] = "ACCESSORY_POSITION_AMULET";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_SHIELD"] = 15] = "ACCESSORY_POSITION_SHIELD";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_WEAPON"] = 1] = "ACCESSORY_POSITION_WEAPON";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["ACCESSORY_POSITION_PETS"] = 8] = "ACCESSORY_POSITION_PETS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_RING_LEFT"] = 2] = "INVENTORY_POSITION_RING_LEFT";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_RING_RIGHT"] = 4] = "INVENTORY_POSITION_RING_RIGHT";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_1"] = 9] = "INVENTORY_POSITION_DOFUS_1";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_2"] = 10] = "INVENTORY_POSITION_DOFUS_2";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_3"] = 11] = "INVENTORY_POSITION_DOFUS_3";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_4"] = 12] = "INVENTORY_POSITION_DOFUS_4";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_5"] = 13] = "INVENTORY_POSITION_DOFUS_5";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_DOFUS_6"] = 14] = "INVENTORY_POSITION_DOFUS_6";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_MOUNT"] = 16] = "INVENTORY_POSITION_MOUNT";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_MUTATION"] = 20] = "INVENTORY_POSITION_MUTATION";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_BOOST_FOOD"] = 21] = "INVENTORY_POSITION_BOOST_FOOD";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_FIRST_BONUS"] = 22] = "INVENTORY_POSITION_FIRST_BONUS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_SECOND_BONUS"] = 23] = "INVENTORY_POSITION_SECOND_BONUS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_FIRST_MALUS"] = 24] = "INVENTORY_POSITION_FIRST_MALUS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_SECOND_MALUS"] = 25] = "INVENTORY_POSITION_SECOND_MALUS";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_ROLEPLAY_BUFFER"] = 26] = "INVENTORY_POSITION_ROLEPLAY_BUFFER";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_FOLLOWER"] = 27] = "INVENTORY_POSITION_FOLLOWER";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_COMPANION"] = 28] = "INVENTORY_POSITION_COMPANION";
        CharacterInventoryPositionEnum[CharacterInventoryPositionEnum["INVENTORY_POSITION_NOT_EQUIPED"] = 63] = "INVENTORY_POSITION_NOT_EQUIPED";
    })(Protocol.CharacterInventoryPositionEnum || (Protocol.CharacterInventoryPositionEnum = {}));
    var CharacterInventoryPositionEnum = Protocol.CharacterInventoryPositionEnum;
    (function (CharacterRemodelingEnum) {
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_NOT_APPLICABLE"] = 0] = "CHARACTER_REMODELING_NOT_APPLICABLE";
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_NAME"] = 1] = "CHARACTER_REMODELING_NAME";
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_COLORS"] = 2] = "CHARACTER_REMODELING_COLORS";
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_COSMETIC"] = 4] = "CHARACTER_REMODELING_COSMETIC";
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_BREED"] = 8] = "CHARACTER_REMODELING_BREED";
        CharacterRemodelingEnum[CharacterRemodelingEnum["CHARACTER_REMODELING_GENDER"] = 16] = "CHARACTER_REMODELING_GENDER";
    })(Protocol.CharacterRemodelingEnum || (Protocol.CharacterRemodelingEnum = {}));
    var CharacterRemodelingEnum = Protocol.CharacterRemodelingEnum;
    (function (CharacterSpellModificationTypeEnum) {
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["INVALID_MODIFICATION"] = 0] = "INVALID_MODIFICATION";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["RANGEABLE"] = 1] = "RANGEABLE";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["DAMAGE"] = 2] = "DAMAGE";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["BASE_DAMAGE"] = 3] = "BASE_DAMAGE";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["HEAL_BONUS"] = 4] = "HEAL_BONUS";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["AP_COST"] = 5] = "AP_COST";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["CAST_INTERVAL"] = 6] = "CAST_INTERVAL";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["CAST_INTERVAL_SET"] = 7] = "CAST_INTERVAL_SET";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["CRITICAL_HIT_BONUS"] = 8] = "CRITICAL_HIT_BONUS";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["CAST_LINE"] = 9] = "CAST_LINE";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["LOS"] = 10] = "LOS";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["MAX_CAST_PER_TURN"] = 11] = "MAX_CAST_PER_TURN";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["MAX_CAST_PER_TARGET"] = 12] = "MAX_CAST_PER_TARGET";
        CharacterSpellModificationTypeEnum[CharacterSpellModificationTypeEnum["RANGE"] = 13] = "RANGE";
    })(Protocol.CharacterSpellModificationTypeEnum || (Protocol.CharacterSpellModificationTypeEnum = {}));
    var CharacterSpellModificationTypeEnum = Protocol.CharacterSpellModificationTypeEnum;
    (function (ChatActivableChannelsEnum) {
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_GLOBAL"] = 0] = "CHANNEL_GLOBAL";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_TEAM"] = 1] = "CHANNEL_TEAM";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_GUILD"] = 2] = "CHANNEL_GUILD";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_ALLIANCE"] = 3] = "CHANNEL_ALLIANCE";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_PARTY"] = 4] = "CHANNEL_PARTY";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_SALES"] = 5] = "CHANNEL_SALES";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_SEEK"] = 6] = "CHANNEL_SEEK";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_NOOB"] = 7] = "CHANNEL_NOOB";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_ADMIN"] = 8] = "CHANNEL_ADMIN";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_ADS"] = 12] = "CHANNEL_ADS";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["CHANNEL_ARENA"] = 13] = "CHANNEL_ARENA";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["PSEUDO_CHANNEL_PRIVATE"] = 9] = "PSEUDO_CHANNEL_PRIVATE";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["PSEUDO_CHANNEL_INFO"] = 10] = "PSEUDO_CHANNEL_INFO";
        ChatActivableChannelsEnum[ChatActivableChannelsEnum["PSEUDO_CHANNEL_FIGHT_LOG"] = 11] = "PSEUDO_CHANNEL_FIGHT_LOG";
    })(Protocol.ChatActivableChannelsEnum || (Protocol.ChatActivableChannelsEnum = {}));
    var ChatActivableChannelsEnum = Protocol.ChatActivableChannelsEnum;
    (function (ChatChannelsMultiEnum) {
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_GLOBAL"] = 0] = "CHANNEL_GLOBAL";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_TEAM"] = 1] = "CHANNEL_TEAM";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_GUILD"] = 2] = "CHANNEL_GUILD";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_ALLIANCE"] = 3] = "CHANNEL_ALLIANCE";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_PARTY"] = 4] = "CHANNEL_PARTY";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_SALES"] = 5] = "CHANNEL_SALES";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_SEEK"] = 6] = "CHANNEL_SEEK";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_NOOB"] = 7] = "CHANNEL_NOOB";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_ADMIN"] = 8] = "CHANNEL_ADMIN";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_ADS"] = 12] = "CHANNEL_ADS";
        ChatChannelsMultiEnum[ChatChannelsMultiEnum["CHANNEL_ARENA"] = 13] = "CHANNEL_ARENA";
    })(Protocol.ChatChannelsMultiEnum || (Protocol.ChatChannelsMultiEnum = {}));
    var ChatChannelsMultiEnum = Protocol.ChatChannelsMultiEnum;
    (function (ChatErrorEnum) {
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_UNKNOWN"] = 0] = "CHAT_ERROR_UNKNOWN";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_RECEIVER_NOT_FOUND"] = 1] = "CHAT_ERROR_RECEIVER_NOT_FOUND";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_INTERIOR_MONOLOGUE"] = 2] = "CHAT_ERROR_INTERIOR_MONOLOGUE";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_NO_GUILD"] = 3] = "CHAT_ERROR_NO_GUILD";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_NO_PARTY"] = 4] = "CHAT_ERROR_NO_PARTY";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_ALLIANCE"] = 5] = "CHAT_ERROR_ALLIANCE";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_INVALID_MAP"] = 6] = "CHAT_ERROR_INVALID_MAP";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_NO_PARTY_ARENA"] = 7] = "CHAT_ERROR_NO_PARTY_ARENA";
        ChatErrorEnum[ChatErrorEnum["CHAT_ERROR_NO_TEAM"] = 8] = "CHAT_ERROR_NO_TEAM";
    })(Protocol.ChatErrorEnum || (Protocol.ChatErrorEnum = {}));
    var ChatErrorEnum = Protocol.ChatErrorEnum;
    (function (ClientInstallTypeEnum) {
        ClientInstallTypeEnum[ClientInstallTypeEnum["CLIENT_INSTALL_UNKNOWN"] = 0] = "CLIENT_INSTALL_UNKNOWN";
        ClientInstallTypeEnum[ClientInstallTypeEnum["CLIENT_BUNDLE"] = 1] = "CLIENT_BUNDLE";
        ClientInstallTypeEnum[ClientInstallTypeEnum["CLIENT_STREAMING"] = 2] = "CLIENT_STREAMING";
    })(Protocol.ClientInstallTypeEnum || (Protocol.ClientInstallTypeEnum = {}));
    var ClientInstallTypeEnum = Protocol.ClientInstallTypeEnum;
    (function (ClientTechnologyEnum) {
        ClientTechnologyEnum[ClientTechnologyEnum["CLIENT_TECHNOLOGY_UNKNOWN"] = 0] = "CLIENT_TECHNOLOGY_UNKNOWN";
        ClientTechnologyEnum[ClientTechnologyEnum["CLIENT_AIR"] = 1] = "CLIENT_AIR";
        ClientTechnologyEnum[ClientTechnologyEnum["CLIENT_FLASH"] = 2] = "CLIENT_FLASH";
    })(Protocol.ClientTechnologyEnum || (Protocol.ClientTechnologyEnum = {}));
    var ClientTechnologyEnum = Protocol.ClientTechnologyEnum;
    (function (CompassTypeEnum) {
        CompassTypeEnum[CompassTypeEnum["COMPASS_TYPE_SIMPLE"] = 0] = "COMPASS_TYPE_SIMPLE";
        CompassTypeEnum[CompassTypeEnum["COMPASS_TYPE_SPOUSE"] = 1] = "COMPASS_TYPE_SPOUSE";
        CompassTypeEnum[CompassTypeEnum["COMPASS_TYPE_PARTY"] = 2] = "COMPASS_TYPE_PARTY";
        CompassTypeEnum[CompassTypeEnum["COMPASS_TYPE_PVP_SEEK"] = 3] = "COMPASS_TYPE_PVP_SEEK";
        CompassTypeEnum[CompassTypeEnum["COMPASS_TYPE_QUEST"] = 4] = "COMPASS_TYPE_QUEST";
    })(Protocol.CompassTypeEnum || (Protocol.CompassTypeEnum = {}));
    var CompassTypeEnum = Protocol.CompassTypeEnum;
    (function (ConsoleMessageTypeEnum) {
        ConsoleMessageTypeEnum[ConsoleMessageTypeEnum["CONSOLE_TEXT_MESSAGE"] = 0] = "CONSOLE_TEXT_MESSAGE";
        ConsoleMessageTypeEnum[ConsoleMessageTypeEnum["CONSOLE_INFO_MESSAGE"] = 1] = "CONSOLE_INFO_MESSAGE";
        ConsoleMessageTypeEnum[ConsoleMessageTypeEnum["CONSOLE_ERR_MESSAGE"] = 2] = "CONSOLE_ERR_MESSAGE";
    })(Protocol.ConsoleMessageTypeEnum || (Protocol.ConsoleMessageTypeEnum = {}));
    var ConsoleMessageTypeEnum = Protocol.ConsoleMessageTypeEnum;
    (function (CraftResultEnum) {
        CraftResultEnum[CraftResultEnum["CRAFT_IMPOSSIBLE"] = 0] = "CRAFT_IMPOSSIBLE";
        CraftResultEnum[CraftResultEnum["CRAFT_FAILED"] = 1] = "CRAFT_FAILED";
        CraftResultEnum[CraftResultEnum["CRAFT_SUCCESS"] = 2] = "CRAFT_SUCCESS";
        CraftResultEnum[CraftResultEnum["CRAFT_NEUTRAL"] = 3] = "CRAFT_NEUTRAL";
    })(Protocol.CraftResultEnum || (Protocol.CraftResultEnum = {}));
    var CraftResultEnum = Protocol.CraftResultEnum;
    (function (DebugLevelEnum) {
        DebugLevelEnum[DebugLevelEnum["LEVEL_TRACE"] = 0] = "LEVEL_TRACE";
        DebugLevelEnum[DebugLevelEnum["LEVEL_DEBUG"] = 1] = "LEVEL_DEBUG";
        DebugLevelEnum[DebugLevelEnum["LEVEL_INFO"] = 2] = "LEVEL_INFO";
        DebugLevelEnum[DebugLevelEnum["LEVEL_WARN"] = 3] = "LEVEL_WARN";
        DebugLevelEnum[DebugLevelEnum["LEVEL_ERROR"] = 4] = "LEVEL_ERROR";
        DebugLevelEnum[DebugLevelEnum["LEVEL_FATAL"] = 5] = "LEVEL_FATAL";
    })(Protocol.DebugLevelEnum || (Protocol.DebugLevelEnum = {}));
    var DebugLevelEnum = Protocol.DebugLevelEnum;
    (function (DelayedActionTypeEnum) {
        DelayedActionTypeEnum[DelayedActionTypeEnum["DELAYED_ACTION_DISCONNECT"] = 0] = "DELAYED_ACTION_DISCONNECT";
        DelayedActionTypeEnum[DelayedActionTypeEnum["DELAYED_ACTION_OBJECT_USE"] = 1] = "DELAYED_ACTION_OBJECT_USE";
        DelayedActionTypeEnum[DelayedActionTypeEnum["DELAYED_ACTION_JOIN_CHARACTER"] = 2] = "DELAYED_ACTION_JOIN_CHARACTER";
        DelayedActionTypeEnum[DelayedActionTypeEnum["DELAYED_ACTION_AGGRESSION_IMMUNE"] = 3] = "DELAYED_ACTION_AGGRESSION_IMMUNE";
    })(Protocol.DelayedActionTypeEnum || (Protocol.DelayedActionTypeEnum = {}));
    var DelayedActionTypeEnum = Protocol.DelayedActionTypeEnum;
    (function (DialogTypeEnum) {
        DialogTypeEnum[DialogTypeEnum["DIALOG_BOOK"] = 0] = "DIALOG_BOOK";
        DialogTypeEnum[DialogTypeEnum["DIALOG_DIALOG"] = 1] = "DIALOG_DIALOG";
        DialogTypeEnum[DialogTypeEnum["DIALOG_LOCKABLE"] = 2] = "DIALOG_LOCKABLE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_PURCHASABLE"] = 3] = "DIALOG_PURCHASABLE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_GUILD_INVITATION"] = 4] = "DIALOG_GUILD_INVITATION";
        DialogTypeEnum[DialogTypeEnum["DIALOG_GUILD_CREATE"] = 5] = "DIALOG_GUILD_CREATE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_GUILD_RENAME"] = 6] = "DIALOG_GUILD_RENAME";
        DialogTypeEnum[DialogTypeEnum["DIALOG_MARRIAGE"] = 7] = "DIALOG_MARRIAGE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_DUNGEON_MEETING"] = 8] = "DIALOG_DUNGEON_MEETING";
        DialogTypeEnum[DialogTypeEnum["DIALOG_SPELL_FORGET"] = 9] = "DIALOG_SPELL_FORGET";
        DialogTypeEnum[DialogTypeEnum["DIALOG_TELEPORTER"] = 10] = "DIALOG_TELEPORTER";
        DialogTypeEnum[DialogTypeEnum["DIALOG_EXCHANGE"] = 11] = "DIALOG_EXCHANGE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_ALLIANCE_INVITATION"] = 12] = "DIALOG_ALLIANCE_INVITATION";
        DialogTypeEnum[DialogTypeEnum["DIALOG_ALLIANCE_CREATE"] = 13] = "DIALOG_ALLIANCE_CREATE";
        DialogTypeEnum[DialogTypeEnum["DIALOG_ALLIANCE_RENAME"] = 14] = "DIALOG_ALLIANCE_RENAME";
    })(Protocol.DialogTypeEnum || (Protocol.DialogTypeEnum = {}));
    var DialogTypeEnum = Protocol.DialogTypeEnum;
    (function (DirectionsEnum) {
        DirectionsEnum[DirectionsEnum["DIRECTION_EAST"] = 0] = "DIRECTION_EAST";
        DirectionsEnum[DirectionsEnum["DIRECTION_SOUTH_EAST"] = 1] = "DIRECTION_SOUTH_EAST";
        DirectionsEnum[DirectionsEnum["DIRECTION_SOUTH"] = 2] = "DIRECTION_SOUTH";
        DirectionsEnum[DirectionsEnum["DIRECTION_SOUTH_WEST"] = 3] = "DIRECTION_SOUTH_WEST";
        DirectionsEnum[DirectionsEnum["DIRECTION_WEST"] = 4] = "DIRECTION_WEST";
        DirectionsEnum[DirectionsEnum["DIRECTION_NORTH_WEST"] = 5] = "DIRECTION_NORTH_WEST";
        DirectionsEnum[DirectionsEnum["DIRECTION_NORTH"] = 6] = "DIRECTION_NORTH";
        DirectionsEnum[DirectionsEnum["DIRECTION_NORTH_EAST"] = 7] = "DIRECTION_NORTH_EAST";
    })(Protocol.DirectionsEnum || (Protocol.DirectionsEnum = {}));
    var DirectionsEnum = Protocol.DirectionsEnum;
    (function (ExchangeErrorEnum) {
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_IMPOSSIBLE"] = 1] = "REQUEST_IMPOSSIBLE";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_OCCUPIED"] = 2] = "REQUEST_CHARACTER_OCCUPIED";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_JOB_NOT_EQUIPED"] = 3] = "REQUEST_CHARACTER_JOB_NOT_EQUIPED";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_TOOL_TOO_FAR"] = 4] = "REQUEST_CHARACTER_TOOL_TOO_FAR";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_OVERLOADED"] = 5] = "REQUEST_CHARACTER_OVERLOADED";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_NOT_SUSCRIBER"] = 6] = "REQUEST_CHARACTER_NOT_SUSCRIBER";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_RESTRICTED"] = 7] = "REQUEST_CHARACTER_RESTRICTED";
        ExchangeErrorEnum[ExchangeErrorEnum["REQUEST_CHARACTER_GUEST"] = 8] = "REQUEST_CHARACTER_GUEST";
        ExchangeErrorEnum[ExchangeErrorEnum["SELL_ERROR"] = 63] = "SELL_ERROR";
        ExchangeErrorEnum[ExchangeErrorEnum["BUY_ERROR"] = 64] = "BUY_ERROR";
        ExchangeErrorEnum[ExchangeErrorEnum["MOUNT_PADDOCK_ERROR"] = 10] = "MOUNT_PADDOCK_ERROR";
        ExchangeErrorEnum[ExchangeErrorEnum["BID_SEARCH_ERROR"] = 11] = "BID_SEARCH_ERROR";
    })(Protocol.ExchangeErrorEnum || (Protocol.ExchangeErrorEnum = {}));
    var ExchangeErrorEnum = Protocol.ExchangeErrorEnum;
    (function (ExchangeReplayStopReasonEnum) {
        ExchangeReplayStopReasonEnum[ExchangeReplayStopReasonEnum["STOPPED_REASON_OK"] = 1] = "STOPPED_REASON_OK";
        ExchangeReplayStopReasonEnum[ExchangeReplayStopReasonEnum["STOPPED_REASON_USER"] = 2] = "STOPPED_REASON_USER";
        ExchangeReplayStopReasonEnum[ExchangeReplayStopReasonEnum["STOPPED_REASON_MISSING_RESSOURCE"] = 3] = "STOPPED_REASON_MISSING_RESSOURCE";
        ExchangeReplayStopReasonEnum[ExchangeReplayStopReasonEnum["STOPPED_REASON_IMPOSSIBLE_MODIFICATION"] = 4] = "STOPPED_REASON_IMPOSSIBLE_MODIFICATION";
    })(Protocol.ExchangeReplayStopReasonEnum || (Protocol.ExchangeReplayStopReasonEnum = {}));
    var ExchangeReplayStopReasonEnum = Protocol.ExchangeReplayStopReasonEnum;
    (function (ExchangeTypeEnum) {
        ExchangeTypeEnum[ExchangeTypeEnum["NPC_SHOP"] = 0] = "NPC_SHOP";
        ExchangeTypeEnum[ExchangeTypeEnum["PLAYER_TRADE"] = 1] = "PLAYER_TRADE";
        ExchangeTypeEnum[ExchangeTypeEnum["NPC_TRADE"] = 2] = "NPC_TRADE";
        ExchangeTypeEnum[ExchangeTypeEnum["CRAFT"] = 3] = "CRAFT";
        ExchangeTypeEnum[ExchangeTypeEnum["DISCONNECTED_VENDOR"] = 4] = "DISCONNECTED_VENDOR";
        ExchangeTypeEnum[ExchangeTypeEnum["STORAGE"] = 5] = "STORAGE";
        ExchangeTypeEnum[ExchangeTypeEnum["SHOP_STOCK"] = 6] = "SHOP_STOCK";
        ExchangeTypeEnum[ExchangeTypeEnum["TAXCOLLECTOR"] = 8] = "TAXCOLLECTOR";
        ExchangeTypeEnum[ExchangeTypeEnum["NPC_MODIFY_TRADE"] = 9] = "NPC_MODIFY_TRADE";
        ExchangeTypeEnum[ExchangeTypeEnum["BIDHOUSE_SELL"] = 10] = "BIDHOUSE_SELL";
        ExchangeTypeEnum[ExchangeTypeEnum["BIDHOUSE_BUY"] = 11] = "BIDHOUSE_BUY";
        ExchangeTypeEnum[ExchangeTypeEnum["MULTICRAFT_CRAFTER"] = 12] = "MULTICRAFT_CRAFTER";
        ExchangeTypeEnum[ExchangeTypeEnum["MULTICRAFT_CUSTOMER"] = 13] = "MULTICRAFT_CUSTOMER";
        ExchangeTypeEnum[ExchangeTypeEnum["JOB_INDEX"] = 14] = "JOB_INDEX";
        ExchangeTypeEnum[ExchangeTypeEnum["MOUNT"] = 15] = "MOUNT";
        ExchangeTypeEnum[ExchangeTypeEnum["MOUNT_STABLE"] = 16] = "MOUNT_STABLE";
        ExchangeTypeEnum[ExchangeTypeEnum["NPC_RESURECT_PET"] = 17] = "NPC_RESURECT_PET";
        ExchangeTypeEnum[ExchangeTypeEnum["NPC_TRADE_MOUNT"] = 18] = "NPC_TRADE_MOUNT";
        ExchangeTypeEnum[ExchangeTypeEnum["REALESTATE_HOUSE"] = 19] = "REALESTATE_HOUSE";
        ExchangeTypeEnum[ExchangeTypeEnum["REALESTATE_FARM"] = 20] = "REALESTATE_FARM";
        ExchangeTypeEnum[ExchangeTypeEnum["RUNES_TRADE"] = 21] = "RUNES_TRADE";
        ExchangeTypeEnum[ExchangeTypeEnum["RECYCLE_TRADE"] = 22] = "RECYCLE_TRADE";
    })(Protocol.ExchangeTypeEnum || (Protocol.ExchangeTypeEnum = {}));
    var ExchangeTypeEnum = Protocol.ExchangeTypeEnum;
    (function (FightDispellableEnum) {
        FightDispellableEnum[FightDispellableEnum["DISPELLABLE"] = 1] = "DISPELLABLE";
        FightDispellableEnum[FightDispellableEnum["DISPELLABLE_BY_DEATH"] = 2] = "DISPELLABLE_BY_DEATH";
        FightDispellableEnum[FightDispellableEnum["DISPELLABLE_BY_STRONG_DISPEL"] = 3] = "DISPELLABLE_BY_STRONG_DISPEL";
        FightDispellableEnum[FightDispellableEnum["REALLY_NOT_DISPELLABLE"] = 4] = "REALLY_NOT_DISPELLABLE";
    })(Protocol.FightDispellableEnum || (Protocol.FightDispellableEnum = {}));
    var FightDispellableEnum = Protocol.FightDispellableEnum;
    (function (FightOptionsEnum) {
        FightOptionsEnum[FightOptionsEnum["FIGHT_OPTION_SET_SECRET"] = 0] = "FIGHT_OPTION_SET_SECRET";
        FightOptionsEnum[FightOptionsEnum["FIGHT_OPTION_SET_TO_PARTY_ONLY"] = 1] = "FIGHT_OPTION_SET_TO_PARTY_ONLY";
        FightOptionsEnum[FightOptionsEnum["FIGHT_OPTION_SET_CLOSED"] = 2] = "FIGHT_OPTION_SET_CLOSED";
        FightOptionsEnum[FightOptionsEnum["FIGHT_OPTION_ASK_FOR_HELP"] = 3] = "FIGHT_OPTION_ASK_FOR_HELP";
    })(Protocol.FightOptionsEnum || (Protocol.FightOptionsEnum = {}));
    var FightOptionsEnum = Protocol.FightOptionsEnum;
    (function (FightOutcomeEnum) {
        FightOutcomeEnum[FightOutcomeEnum["RESULT_LOST"] = 0] = "RESULT_LOST";
        FightOutcomeEnum[FightOutcomeEnum["RESULT_DRAW"] = 1] = "RESULT_DRAW";
        FightOutcomeEnum[FightOutcomeEnum["RESULT_VICTORY"] = 2] = "RESULT_VICTORY";
        FightOutcomeEnum[FightOutcomeEnum["RESULT_TAX"] = 5] = "RESULT_TAX";
        FightOutcomeEnum[FightOutcomeEnum["RESULT_DEFENDER_GROUP"] = 6] = "RESULT_DEFENDER_GROUP";
    })(Protocol.FightOutcomeEnum || (Protocol.FightOutcomeEnum = {}));
    var FightOutcomeEnum = Protocol.FightOutcomeEnum;
    (function (FightSpellCastCriticalEnum) {
        FightSpellCastCriticalEnum[FightSpellCastCriticalEnum["NORMAL"] = 1] = "NORMAL";
        FightSpellCastCriticalEnum[FightSpellCastCriticalEnum["CRITICAL_HIT"] = 2] = "CRITICAL_HIT";
        FightSpellCastCriticalEnum[FightSpellCastCriticalEnum["CRITICAL_FAIL"] = 3] = "CRITICAL_FAIL";
    })(Protocol.FightSpellCastCriticalEnum || (Protocol.FightSpellCastCriticalEnum = {}));
    var FightSpellCastCriticalEnum = Protocol.FightSpellCastCriticalEnum;
    (function (FightTypeEnum) {
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_CHALLENGE"] = 0] = "FIGHT_TYPE_CHALLENGE";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_AGRESSION"] = 1] = "FIGHT_TYPE_AGRESSION";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PvMA"] = 2] = "FIGHT_TYPE_PvMA";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_MXvM"] = 3] = "FIGHT_TYPE_MXvM";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PvM"] = 4] = "FIGHT_TYPE_PvM";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PvT"] = 5] = "FIGHT_TYPE_PvT";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PvMU"] = 6] = "FIGHT_TYPE_PvMU";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PVP_ARENA"] = 7] = "FIGHT_TYPE_PVP_ARENA";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_Koh"] = 8] = "FIGHT_TYPE_Koh";
        FightTypeEnum[FightTypeEnum["FIGHT_TYPE_PvPr"] = 9] = "FIGHT_TYPE_PvPr";
    })(Protocol.FightTypeEnum || (Protocol.FightTypeEnum = {}));
    var FightTypeEnum = Protocol.FightTypeEnum;
    (function (FighterRefusedReasonEnum) {
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["FIGHTER_REFUSED"] = -1] = "FIGHTER_REFUSED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["FIGHTER_ACCEPTED"] = 0] = "FIGHTER_ACCEPTED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["CHALLENGE_FULL"] = 1] = "CHALLENGE_FULL";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["TEAM_FULL"] = 2] = "TEAM_FULL";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["WRONG_ALIGNMENT"] = 3] = "WRONG_ALIGNMENT";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["WRONG_GUILD"] = 4] = "WRONG_GUILD";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["TOO_LATE"] = 5] = "TOO_LATE";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["MUTANT_REFUSED"] = 6] = "MUTANT_REFUSED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["WRONG_MAP"] = 7] = "WRONG_MAP";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["JUST_RESPAWNED"] = 8] = "JUST_RESPAWNED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["IM_OCCUPIED"] = 9] = "IM_OCCUPIED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["OPPONENT_OCCUPIED"] = 10] = "OPPONENT_OCCUPIED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["FIGHT_MYSELF"] = 11] = "FIGHT_MYSELF";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["INSUFFICIENT_RIGHTS"] = 12] = "INSUFFICIENT_RIGHTS";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["MEMBER_ACCOUNT_NEEDED"] = 13] = "MEMBER_ACCOUNT_NEEDED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["OPPONENT_NOT_MEMBER"] = 14] = "OPPONENT_NOT_MEMBER";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["TEAM_LIMITED_BY_MAINCHARACTER"] = 15] = "TEAM_LIMITED_BY_MAINCHARACTER";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["MULTIACCOUNT_NOT_ALLOWED"] = 16] = "MULTIACCOUNT_NOT_ALLOWED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["GHOST_REFUSED"] = 17] = "GHOST_REFUSED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["RESTRICTED_ACCOUNT"] = 19] = "RESTRICTED_ACCOUNT";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["WRONG_ALLIANCE"] = 20] = "WRONG_ALLIANCE";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["AVA_ZONE"] = 21] = "AVA_ZONE";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["COMPANION_REFUSED"] = 22] = "COMPANION_REFUSED";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["NOT_ENOUGH_ROOM"] = 23] = "NOT_ENOUGH_ROOM";
        FighterRefusedReasonEnum[FighterRefusedReasonEnum["GUEST_ACCOUNT"] = 24] = "GUEST_ACCOUNT";
    })(Protocol.FighterRefusedReasonEnum || (Protocol.FighterRefusedReasonEnum = {}));
    var FighterRefusedReasonEnum = Protocol.FighterRefusedReasonEnum;
    (function (GameActionFightInvisibilityStateEnum) {
        GameActionFightInvisibilityStateEnum[GameActionFightInvisibilityStateEnum["INVISIBLE"] = 1] = "INVISIBLE";
        GameActionFightInvisibilityStateEnum[GameActionFightInvisibilityStateEnum["DETECTED"] = 2] = "DETECTED";
        GameActionFightInvisibilityStateEnum[GameActionFightInvisibilityStateEnum["VISIBLE"] = 3] = "VISIBLE";
    })(Protocol.GameActionFightInvisibilityStateEnum || (Protocol.GameActionFightInvisibilityStateEnum = {}));
    var GameActionFightInvisibilityStateEnum = Protocol.GameActionFightInvisibilityStateEnum;
    (function (GameActionMarkCellsTypeEnum) {
        GameActionMarkCellsTypeEnum[GameActionMarkCellsTypeEnum["CELLS_CIRCLE"] = 0] = "CELLS_CIRCLE";
        GameActionMarkCellsTypeEnum[GameActionMarkCellsTypeEnum["CELLS_CROSS"] = 1] = "CELLS_CROSS";
        GameActionMarkCellsTypeEnum[GameActionMarkCellsTypeEnum["CELLS_SQUARE"] = 2] = "CELLS_SQUARE";
    })(Protocol.GameActionMarkCellsTypeEnum || (Protocol.GameActionMarkCellsTypeEnum = {}));
    var GameActionMarkCellsTypeEnum = Protocol.GameActionMarkCellsTypeEnum;
    (function (GameActionMarkTypeEnum) {
        GameActionMarkTypeEnum[GameActionMarkTypeEnum["GLYPH"] = 1] = "GLYPH";
        GameActionMarkTypeEnum[GameActionMarkTypeEnum["TRAP"] = 2] = "TRAP";
        GameActionMarkTypeEnum[GameActionMarkTypeEnum["WALL"] = 3] = "WALL";
        GameActionMarkTypeEnum[GameActionMarkTypeEnum["PORTAL"] = 4] = "PORTAL";
    })(Protocol.GameActionMarkTypeEnum || (Protocol.GameActionMarkTypeEnum = {}));
    var GameActionMarkTypeEnum = Protocol.GameActionMarkTypeEnum;
    (function (GameContextEnum) {
        GameContextEnum[GameContextEnum["ROLE_PLAY"] = 1] = "ROLE_PLAY";
        GameContextEnum[GameContextEnum["FIGHT"] = 2] = "FIGHT";
    })(Protocol.GameContextEnum || (Protocol.GameContextEnum = {}));
    var GameContextEnum = Protocol.GameContextEnum;
    (function (GameHierarchyEnum) {
        GameHierarchyEnum[GameHierarchyEnum["UNAVAILABLE"] = -1] = "UNAVAILABLE";
        GameHierarchyEnum[GameHierarchyEnum["PLAYER"] = 0] = "PLAYER";
        GameHierarchyEnum[GameHierarchyEnum["MODERATOR"] = 10] = "MODERATOR";
        GameHierarchyEnum[GameHierarchyEnum["GAMEMASTER_PADAWAN"] = 20] = "GAMEMASTER_PADAWAN";
        GameHierarchyEnum[GameHierarchyEnum["GAMEMASTER"] = 30] = "GAMEMASTER";
        GameHierarchyEnum[GameHierarchyEnum["ADMIN"] = 40] = "ADMIN";
    })(Protocol.GameHierarchyEnum || (Protocol.GameHierarchyEnum = {}));
    var GameHierarchyEnum = Protocol.GameHierarchyEnum;
    (function (GuestLimitationEnum) {
        GuestLimitationEnum[GuestLimitationEnum["LIMITED_TO_REGISTERED"] = 0] = "LIMITED_TO_REGISTERED";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_JOB_XP"] = 1] = "GUEST_LIMIT_ON_JOB_XP";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_JOB_USE"] = 2] = "GUEST_LIMIT_ON_JOB_USE";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_MAP"] = 3] = "GUEST_LIMIT_ON_MAP";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_ITEM"] = 4] = "GUEST_LIMIT_ON_ITEM";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_VENDOR"] = 5] = "GUEST_LIMIT_ON_VENDOR";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_CHAT"] = 6] = "GUEST_LIMIT_ON_CHAT";
        GuestLimitationEnum[GuestLimitationEnum["GUEST_LIMIT_ON_GUILD"] = 7] = "GUEST_LIMIT_ON_GUILD";
    })(Protocol.GuestLimitationEnum || (Protocol.GuestLimitationEnum = {}));
    var GuestLimitationEnum = Protocol.GuestLimitationEnum;
    (function (GuildInformationsTypeEnum) {
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_GENERAL"] = 1] = "INFO_GENERAL";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_MEMBERS"] = 2] = "INFO_MEMBERS";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_BOOSTS"] = 3] = "INFO_BOOSTS";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_PADDOCKS"] = 4] = "INFO_PADDOCKS";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_HOUSES"] = 5] = "INFO_HOUSES";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_TAX_COLLECTOR_GUILD_ONLY"] = 6] = "INFO_TAX_COLLECTOR_GUILD_ONLY";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_TAX_COLLECTOR_ALLIANCE"] = 7] = "INFO_TAX_COLLECTOR_ALLIANCE";
        GuildInformationsTypeEnum[GuildInformationsTypeEnum["INFO_TAX_COLLECTOR_LEAVE"] = 8] = "INFO_TAX_COLLECTOR_LEAVE";
    })(Protocol.GuildInformationsTypeEnum || (Protocol.GuildInformationsTypeEnum = {}));
    var GuildInformationsTypeEnum = Protocol.GuildInformationsTypeEnum;
    (function (GuildRightsBitEnum) {
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_NONE"] = 0] = "GUILD_RIGHT_NONE";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_BOSS"] = 1] = "GUILD_RIGHT_BOSS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_MANAGE_GUILD_BOOSTS"] = 2] = "GUILD_RIGHT_MANAGE_GUILD_BOOSTS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_MANAGE_RIGHTS"] = 4] = "GUILD_RIGHT_MANAGE_RIGHTS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_INVITE_NEW_MEMBERS"] = 8] = "GUILD_RIGHT_INVITE_NEW_MEMBERS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_BAN_MEMBERS"] = 16] = "GUILD_RIGHT_BAN_MEMBERS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_MANAGE_XP_CONTRIBUTION"] = 32] = "GUILD_RIGHT_MANAGE_XP_CONTRIBUTION";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_MANAGE_RANKS"] = 64] = "GUILD_RIGHT_MANAGE_RANKS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_HIRE_TAX_COLLECTOR"] = 128] = "GUILD_RIGHT_HIRE_TAX_COLLECTOR";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_MANAGE_MY_XP_CONTRIBUTION"] = 256] = "GUILD_RIGHT_MANAGE_MY_XP_CONTRIBUTION";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_COLLECT"] = 512] = "GUILD_RIGHT_COLLECT";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_USE_PADDOCKS"] = 4096] = "GUILD_RIGHT_USE_PADDOCKS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_ORGANIZE_PADDOCKS"] = 8192] = "GUILD_RIGHT_ORGANIZE_PADDOCKS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_TAKE_OTHERS_MOUNTS_IN_PADDOCKS"] = 16384] = "GUILD_RIGHT_TAKE_OTHERS_MOUNTS_IN_PADDOCKS";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_DEFENSE_PRIORITY"] = 32768] = "GUILD_RIGHT_DEFENSE_PRIORITY";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_COLLECT_MY_TAX_COLLECTOR"] = 65536] = "GUILD_RIGHT_COLLECT_MY_TAX_COLLECTOR";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_SET_ALLIANCE_PRISM"] = 131072] = "GUILD_RIGHT_SET_ALLIANCE_PRISM";
        GuildRightsBitEnum[GuildRightsBitEnum["GUILD_RIGHT_TALK_IN_ALLIANCE_CHAN"] = 262144] = "GUILD_RIGHT_TALK_IN_ALLIANCE_CHAN";
    })(Protocol.GuildRightsBitEnum || (Protocol.GuildRightsBitEnum = {}));
    var GuildRightsBitEnum = Protocol.GuildRightsBitEnum;
    (function (HardcoreOrEpicDeathStateEnum) {
        HardcoreOrEpicDeathStateEnum[HardcoreOrEpicDeathStateEnum["DEATH_STATE_ALIVE"] = 0] = "DEATH_STATE_ALIVE";
        HardcoreOrEpicDeathStateEnum[HardcoreOrEpicDeathStateEnum["DEATH_STATE_DEAD"] = 1] = "DEATH_STATE_DEAD";
        HardcoreOrEpicDeathStateEnum[HardcoreOrEpicDeathStateEnum["DEATH_STATE_WAITING_CONFIRMATION"] = 2] = "DEATH_STATE_WAITING_CONFIRMATION";
    })(Protocol.HardcoreOrEpicDeathStateEnum || (Protocol.HardcoreOrEpicDeathStateEnum = {}));
    var HardcoreOrEpicDeathStateEnum = Protocol.HardcoreOrEpicDeathStateEnum;
    (function (IdentificationFailureReasonEnum) {
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["BAD_VERSION"] = 1] = "BAD_VERSION";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["WRONG_CREDENTIALS"] = 2] = "WRONG_CREDENTIALS";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["BANNED"] = 3] = "BANNED";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["KICKED"] = 4] = "KICKED";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["IN_MAINTENANCE"] = 5] = "IN_MAINTENANCE";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["TOO_MANY_ON_IP"] = 6] = "TOO_MANY_ON_IP";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["TIME_OUT"] = 7] = "TIME_OUT";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["BAD_IPRANGE"] = 8] = "BAD_IPRANGE";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["CREDENTIALS_RESET"] = 9] = "CREDENTIALS_RESET";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["EMAIL_UNVALIDATED"] = 10] = "EMAIL_UNVALIDATED";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["OTP_TIMEOUT"] = 11] = "OTP_TIMEOUT";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["SERVICE_UNAVAILABLE"] = 53] = "SERVICE_UNAVAILABLE";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["EXTERNAL_ACCOUNT_LINK_REFUSED"] = 61] = "EXTERNAL_ACCOUNT_LINK_REFUSED";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["EXTERNAL_ACCOUNT_ALREADY_LINKED"] = 62] = "EXTERNAL_ACCOUNT_ALREADY_LINKED";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["UNKNOWN_AUTH_ERROR"] = 99] = "UNKNOWN_AUTH_ERROR";
        IdentificationFailureReasonEnum[IdentificationFailureReasonEnum["SPARE"] = 100] = "SPARE";
    })(Protocol.IdentificationFailureReasonEnum || (Protocol.IdentificationFailureReasonEnum = {}));
    var IdentificationFailureReasonEnum = Protocol.IdentificationFailureReasonEnum;
    (function (ListAddFailureEnum) {
        ListAddFailureEnum[ListAddFailureEnum["LIST_ADD_FAILURE_UNKNOWN"] = 0] = "LIST_ADD_FAILURE_UNKNOWN";
        ListAddFailureEnum[ListAddFailureEnum["LIST_ADD_FAILURE_OVER_QUOTA"] = 1] = "LIST_ADD_FAILURE_OVER_QUOTA";
        ListAddFailureEnum[ListAddFailureEnum["LIST_ADD_FAILURE_NOT_FOUND"] = 2] = "LIST_ADD_FAILURE_NOT_FOUND";
        ListAddFailureEnum[ListAddFailureEnum["LIST_ADD_FAILURE_EGOCENTRIC"] = 3] = "LIST_ADD_FAILURE_EGOCENTRIC";
        ListAddFailureEnum[ListAddFailureEnum["LIST_ADD_FAILURE_IS_DOUBLE"] = 4] = "LIST_ADD_FAILURE_IS_DOUBLE";
    })(Protocol.ListAddFailureEnum || (Protocol.ListAddFailureEnum = {}));
    var ListAddFailureEnum = Protocol.ListAddFailureEnum;
    (function (MapObstacleStateEnum) {
        MapObstacleStateEnum[MapObstacleStateEnum["OBSTACLE_OPENED"] = 1] = "OBSTACLE_OPENED";
        MapObstacleStateEnum[MapObstacleStateEnum["OBSTACLE_CLOSED"] = 2] = "OBSTACLE_CLOSED";
    })(Protocol.MapObstacleStateEnum || (Protocol.MapObstacleStateEnum = {}));
    var MapObstacleStateEnum = Protocol.MapObstacleStateEnum;
    (function (MountEquipedErrorEnum) {
        MountEquipedErrorEnum[MountEquipedErrorEnum["UNSET"] = 0] = "UNSET";
        MountEquipedErrorEnum[MountEquipedErrorEnum["SET"] = 1] = "SET";
        MountEquipedErrorEnum[MountEquipedErrorEnum["RIDING"] = 2] = "RIDING";
    })(Protocol.MountEquipedErrorEnum || (Protocol.MountEquipedErrorEnum = {}));
    var MountEquipedErrorEnum = Protocol.MountEquipedErrorEnum;
    (function (NicknameErrorEnum) {
        NicknameErrorEnum[NicknameErrorEnum["ALREADY_USED"] = 1] = "ALREADY_USED";
        NicknameErrorEnum[NicknameErrorEnum["SAME_AS_LOGIN"] = 2] = "SAME_AS_LOGIN";
        NicknameErrorEnum[NicknameErrorEnum["TOO_SIMILAR_TO_LOGIN"] = 3] = "TOO_SIMILAR_TO_LOGIN";
        NicknameErrorEnum[NicknameErrorEnum["INVALID_NICK"] = 4] = "INVALID_NICK";
        NicknameErrorEnum[NicknameErrorEnum["UNKNOWN_NICK_ERROR"] = 99] = "UNKNOWN_NICK_ERROR";
    })(Protocol.NicknameErrorEnum || (Protocol.NicknameErrorEnum = {}));
    var NicknameErrorEnum = Protocol.NicknameErrorEnum;
    (function (NicknameGeneratingFailureEnum) {
        NicknameGeneratingFailureEnum[NicknameGeneratingFailureEnum["NICKNAME_GENERATOR_RETRY_TOO_SHORT"] = 1] = "NICKNAME_GENERATOR_RETRY_TOO_SHORT";
        NicknameGeneratingFailureEnum[NicknameGeneratingFailureEnum["NICKNAME_GENERATOR_UNAVAILABLE"] = 2] = "NICKNAME_GENERATOR_UNAVAILABLE";
    })(Protocol.NicknameGeneratingFailureEnum || (Protocol.NicknameGeneratingFailureEnum = {}));
    var NicknameGeneratingFailureEnum = Protocol.NicknameGeneratingFailureEnum;
    (function (ObjectErrorEnum) {
        ObjectErrorEnum[ObjectErrorEnum["INVENTORY_FULL"] = 1] = "INVENTORY_FULL";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_EQUIP_TWICE"] = 2] = "CANNOT_EQUIP_TWICE";
        ObjectErrorEnum[ObjectErrorEnum["NOT_TRADABLE"] = 3] = "NOT_TRADABLE";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_DROP"] = 4] = "CANNOT_DROP";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_DROP_NO_PLACE"] = 5] = "CANNOT_DROP_NO_PLACE";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_DESTROY"] = 6] = "CANNOT_DESTROY";
        ObjectErrorEnum[ObjectErrorEnum["LEVEL_TOO_LOW"] = 7] = "LEVEL_TOO_LOW";
        ObjectErrorEnum[ObjectErrorEnum["LIVING_OBJECT_REFUSED_FOOD"] = 8] = "LIVING_OBJECT_REFUSED_FOOD";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_UNEQUIP"] = 9] = "CANNOT_UNEQUIP";
        ObjectErrorEnum[ObjectErrorEnum["CANNOT_EQUIP_HERE"] = 10] = "CANNOT_EQUIP_HERE";
        ObjectErrorEnum[ObjectErrorEnum["CRITERIONS"] = 11] = "CRITERIONS";
        ObjectErrorEnum[ObjectErrorEnum["SYMBIOTIC_OBJECT_ERROR"] = 12] = "SYMBIOTIC_OBJECT_ERROR";
    })(Protocol.ObjectErrorEnum || (Protocol.ObjectErrorEnum = {}));
    var ObjectErrorEnum = Protocol.ObjectErrorEnum;
    (function (PartStateEnum) {
        PartStateEnum[PartStateEnum["PART_NOT_INSTALLED"] = 0] = "PART_NOT_INSTALLED";
        PartStateEnum[PartStateEnum["PART_BEING_UPDATER"] = 1] = "PART_BEING_UPDATER";
        PartStateEnum[PartStateEnum["PART_UP_TO_DATE"] = 2] = "PART_UP_TO_DATE";
    })(Protocol.PartStateEnum || (Protocol.PartStateEnum = {}));
    var PartStateEnum = Protocol.PartStateEnum;
    (function (PartyJoinErrorEnum) {
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_UNKNOWN"] = 0] = "PARTY_JOIN_ERROR_UNKNOWN";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_NOT_FOUND"] = 1] = "PARTY_JOIN_ERROR_PLAYER_NOT_FOUND";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PARTY_NOT_FOUND"] = 2] = "PARTY_JOIN_ERROR_PARTY_NOT_FOUND";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PARTY_FULL"] = 3] = "PARTY_JOIN_ERROR_PARTY_FULL";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_BUSY"] = 4] = "PARTY_JOIN_ERROR_PLAYER_BUSY";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_ALREADY_INVITED"] = 6] = "PARTY_JOIN_ERROR_PLAYER_ALREADY_INVITED";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_TOO_SOLLICITED"] = 7] = "PARTY_JOIN_ERROR_PLAYER_TOO_SOLLICITED";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_LOYAL"] = 8] = "PARTY_JOIN_ERROR_PLAYER_LOYAL";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_UNMODIFIABLE"] = 9] = "PARTY_JOIN_ERROR_UNMODIFIABLE";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_UNMET_CRITERION"] = 10] = "PARTY_JOIN_ERROR_UNMET_CRITERION";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_NOT_ENOUGH_ROOM"] = 11] = "PARTY_JOIN_ERROR_NOT_ENOUGH_ROOM";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_COMPOSITION_CHANGED"] = 12] = "PARTY_JOIN_ERROR_COMPOSITION_CHANGED";
        PartyJoinErrorEnum[PartyJoinErrorEnum["PARTY_JOIN_ERROR_PLAYER_IN_TUTORIAL"] = 13] = "PARTY_JOIN_ERROR_PLAYER_IN_TUTORIAL";
    })(Protocol.PartyJoinErrorEnum || (Protocol.PartyJoinErrorEnum = {}));
    var PartyJoinErrorEnum = Protocol.PartyJoinErrorEnum;
    (function (PartyNameErrorEnum) {
        PartyNameErrorEnum[PartyNameErrorEnum["PARTY_NAME_UNDEFINED_ERROR"] = 0] = "PARTY_NAME_UNDEFINED_ERROR";
        PartyNameErrorEnum[PartyNameErrorEnum["PARTY_NAME_INVALID"] = 1] = "PARTY_NAME_INVALID";
        PartyNameErrorEnum[PartyNameErrorEnum["PARTY_NAME_ALREADY_USED"] = 2] = "PARTY_NAME_ALREADY_USED";
        PartyNameErrorEnum[PartyNameErrorEnum["PARTY_NAME_UNALLOWED_RIGHTS"] = 3] = "PARTY_NAME_UNALLOWED_RIGHTS";
        PartyNameErrorEnum[PartyNameErrorEnum["PARTY_NAME_UNALLOWED_NOW"] = 4] = "PARTY_NAME_UNALLOWED_NOW";
    })(Protocol.PartyNameErrorEnum || (Protocol.PartyNameErrorEnum = {}));
    var PartyNameErrorEnum = Protocol.PartyNameErrorEnum;
    (function (PartyTypeEnum) {
        PartyTypeEnum[PartyTypeEnum["PARTY_TYPE_UNDEFINED"] = 0] = "PARTY_TYPE_UNDEFINED";
        PartyTypeEnum[PartyTypeEnum["PARTY_TYPE_CLASSICAL"] = 1] = "PARTY_TYPE_CLASSICAL";
        PartyTypeEnum[PartyTypeEnum["PARTY_TYPE_DUNGEON"] = 2] = "PARTY_TYPE_DUNGEON";
        PartyTypeEnum[PartyTypeEnum["PARTY_TYPE_ARENA"] = 3] = "PARTY_TYPE_ARENA";
    })(Protocol.PartyTypeEnum || (Protocol.PartyTypeEnum = {}));
    var PartyTypeEnum = Protocol.PartyTypeEnum;
    (function (PlayableBreedEnum) {
        PlayableBreedEnum[PlayableBreedEnum["UNDEFINED"] = 0] = "UNDEFINED";
        PlayableBreedEnum[PlayableBreedEnum["Feca"] = 1] = "Feca";
        PlayableBreedEnum[PlayableBreedEnum["Osamodas"] = 2] = "Osamodas";
        PlayableBreedEnum[PlayableBreedEnum["Enutrof"] = 3] = "Enutrof";
        PlayableBreedEnum[PlayableBreedEnum["Sram"] = 4] = "Sram";
        PlayableBreedEnum[PlayableBreedEnum["Xelor"] = 5] = "Xelor";
        PlayableBreedEnum[PlayableBreedEnum["Ecaflip"] = 6] = "Ecaflip";
        PlayableBreedEnum[PlayableBreedEnum["Eniripsa"] = 7] = "Eniripsa";
        PlayableBreedEnum[PlayableBreedEnum["Iop"] = 8] = "Iop";
        PlayableBreedEnum[PlayableBreedEnum["Cra"] = 9] = "Cra";
        PlayableBreedEnum[PlayableBreedEnum["Sadida"] = 10] = "Sadida";
        PlayableBreedEnum[PlayableBreedEnum["Sacrieur"] = 11] = "Sacrieur";
        PlayableBreedEnum[PlayableBreedEnum["Pandawa"] = 12] = "Pandawa";
        PlayableBreedEnum[PlayableBreedEnum["Roublard"] = 13] = "Roublard";
        PlayableBreedEnum[PlayableBreedEnum["Zobal"] = 14] = "Zobal";
        PlayableBreedEnum[PlayableBreedEnum["Steamer"] = 15] = "Steamer";
        PlayableBreedEnum[PlayableBreedEnum["Eliotrope"] = 16] = "Eliotrope";
    })(Protocol.PlayableBreedEnum || (Protocol.PlayableBreedEnum = {}));
    var PlayableBreedEnum = Protocol.PlayableBreedEnum;
    (function (PlayerLifeStatusEnum) {
        PlayerLifeStatusEnum[PlayerLifeStatusEnum["STATUS_ALIVE_AND_KICKING"] = 0] = "STATUS_ALIVE_AND_KICKING";
        PlayerLifeStatusEnum[PlayerLifeStatusEnum["STATUS_TOMBSTONE"] = 1] = "STATUS_TOMBSTONE";
        PlayerLifeStatusEnum[PlayerLifeStatusEnum["STATUS_PHANTOM"] = 2] = "STATUS_PHANTOM";
    })(Protocol.PlayerLifeStatusEnum || (Protocol.PlayerLifeStatusEnum = {}));
    var PlayerLifeStatusEnum = Protocol.PlayerLifeStatusEnum;
    (function (PlayerStateEnum) {
        PlayerStateEnum[PlayerStateEnum["NOT_CONNECTED"] = 0] = "NOT_CONNECTED";
        PlayerStateEnum[PlayerStateEnum["GAME_TYPE_ROLEPLAY"] = 1] = "GAME_TYPE_ROLEPLAY";
        PlayerStateEnum[PlayerStateEnum["GAME_TYPE_FIGHT"] = 2] = "GAME_TYPE_FIGHT";
        PlayerStateEnum[PlayerStateEnum["UNKNOWN_STATE"] = 99] = "UNKNOWN_STATE";
    })(Protocol.PlayerStateEnum || (Protocol.PlayerStateEnum = {}));
    var PlayerStateEnum = Protocol.PlayerStateEnum;
    (function (PlayerStatusEnum) {
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_OFFLINE"] = 0] = "PLAYER_STATUS_OFFLINE";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_UNKNOWN"] = 1] = "PLAYER_STATUS_UNKNOWN";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_AVAILABLE"] = 10] = "PLAYER_STATUS_AVAILABLE";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_IDLE"] = 20] = "PLAYER_STATUS_IDLE";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_AFK"] = 21] = "PLAYER_STATUS_AFK";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_PRIVATE"] = 30] = "PLAYER_STATUS_PRIVATE";
        PlayerStatusEnum[PlayerStatusEnum["PLAYER_STATUS_SOLO"] = 40] = "PLAYER_STATUS_SOLO";
    })(Protocol.PlayerStatusEnum || (Protocol.PlayerStatusEnum = {}));
    var PlayerStatusEnum = Protocol.PlayerStatusEnum;
    (function (PresetDeleteResultEnum) {
        PresetDeleteResultEnum[PresetDeleteResultEnum["PRESET_DEL_OK"] = 1] = "PRESET_DEL_OK";
        PresetDeleteResultEnum[PresetDeleteResultEnum["PRESET_DEL_ERR_UNKNOWN"] = 2] = "PRESET_DEL_ERR_UNKNOWN";
        PresetDeleteResultEnum[PresetDeleteResultEnum["PRESET_DEL_ERR_BAD_PRESET_ID"] = 3] = "PRESET_DEL_ERR_BAD_PRESET_ID";
    })(Protocol.PresetDeleteResultEnum || (Protocol.PresetDeleteResultEnum = {}));
    var PresetDeleteResultEnum = Protocol.PresetDeleteResultEnum;
    (function (PresetSaveResultEnum) {
        PresetSaveResultEnum[PresetSaveResultEnum["PRESET_SAVE_OK"] = 1] = "PRESET_SAVE_OK";
        PresetSaveResultEnum[PresetSaveResultEnum["PRESET_SAVE_ERR_UNKNOWN"] = 2] = "PRESET_SAVE_ERR_UNKNOWN";
        PresetSaveResultEnum[PresetSaveResultEnum["PRESET_SAVE_ERR_TOO_MANY"] = 3] = "PRESET_SAVE_ERR_TOO_MANY";
    })(Protocol.PresetSaveResultEnum || (Protocol.PresetSaveResultEnum = {}));
    var PresetSaveResultEnum = Protocol.PresetSaveResultEnum;
    (function (PresetSaveUpdateErrorEnum) {
        PresetSaveUpdateErrorEnum[PresetSaveUpdateErrorEnum["PRESET_UPDATE_ERR_UNKNOWN"] = 1] = "PRESET_UPDATE_ERR_UNKNOWN";
        PresetSaveUpdateErrorEnum[PresetSaveUpdateErrorEnum["PRESET_UPDATE_ERR_BAD_PRESET_ID"] = 2] = "PRESET_UPDATE_ERR_BAD_PRESET_ID";
        PresetSaveUpdateErrorEnum[PresetSaveUpdateErrorEnum["PRESET_UPDATE_ERR_BAD_POSITION"] = 3] = "PRESET_UPDATE_ERR_BAD_POSITION";
        PresetSaveUpdateErrorEnum[PresetSaveUpdateErrorEnum["PRESET_UPDATE_ERR_BAD_OBJECT_ID"] = 4] = "PRESET_UPDATE_ERR_BAD_OBJECT_ID";
    })(Protocol.PresetSaveUpdateErrorEnum || (Protocol.PresetSaveUpdateErrorEnum = {}));
    var PresetSaveUpdateErrorEnum = Protocol.PresetSaveUpdateErrorEnum;
    (function (PresetUseResultEnum) {
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_OK"] = 1] = "PRESET_USE_OK";
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_OK_PARTIAL"] = 2] = "PRESET_USE_OK_PARTIAL";
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_ERR_UNKNOWN"] = 3] = "PRESET_USE_ERR_UNKNOWN";
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_ERR_CRITERION"] = 4] = "PRESET_USE_ERR_CRITERION";
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_ERR_BAD_PRESET_ID"] = 5] = "PRESET_USE_ERR_BAD_PRESET_ID";
        PresetUseResultEnum[PresetUseResultEnum["PRESET_USE_ERR_COOLDOWN"] = 6] = "PRESET_USE_ERR_COOLDOWN";
    })(Protocol.PresetUseResultEnum || (Protocol.PresetUseResultEnum = {}));
    var PresetUseResultEnum = Protocol.PresetUseResultEnum;
    (function (PrismListenEnum) {
        PrismListenEnum[PrismListenEnum["PRISM_LISTEN_NONE"] = 0] = "PRISM_LISTEN_NONE";
        PrismListenEnum[PrismListenEnum["PRISM_LISTEN_MINE"] = 1] = "PRISM_LISTEN_MINE";
        PrismListenEnum[PrismListenEnum["PRISM_LISTEN_ALL"] = 2] = "PRISM_LISTEN_ALL";
    })(Protocol.PrismListenEnum || (Protocol.PrismListenEnum = {}));
    var PrismListenEnum = Protocol.PrismListenEnum;
    (function (PrismSetSabotagedRefusedReasonEnum) {
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_REFUSED"] = -1] = "SABOTAGE_REFUSED";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_INSUFFICIENT_RIGHTS"] = 0] = "SABOTAGE_INSUFFICIENT_RIGHTS";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_MEMBER_ACCOUNT_NEEDED"] = 1] = "SABOTAGE_MEMBER_ACCOUNT_NEEDED";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_RESTRICTED_ACCOUNT"] = 2] = "SABOTAGE_RESTRICTED_ACCOUNT";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_WRONG_ALLIANCE"] = 3] = "SABOTAGE_WRONG_ALLIANCE";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_NO_PRISM"] = 4] = "SABOTAGE_NO_PRISM";
        PrismSetSabotagedRefusedReasonEnum[PrismSetSabotagedRefusedReasonEnum["SABOTAGE_WRONG_STATE"] = 5] = "SABOTAGE_WRONG_STATE";
    })(Protocol.PrismSetSabotagedRefusedReasonEnum || (Protocol.PrismSetSabotagedRefusedReasonEnum = {}));
    var PrismSetSabotagedRefusedReasonEnum = Protocol.PrismSetSabotagedRefusedReasonEnum;
    (function (PrismStateEnum) {
        PrismStateEnum[PrismStateEnum["PRISM_STATE_INVULNERABLE"] = 0] = "PRISM_STATE_INVULNERABLE";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_NORMAL"] = 1] = "PRISM_STATE_NORMAL";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_ATTACKED"] = 2] = "PRISM_STATE_ATTACKED";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_FIGHTING"] = 3] = "PRISM_STATE_FIGHTING";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_WEAKENED"] = 4] = "PRISM_STATE_WEAKENED";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_VULNERABLE"] = 5] = "PRISM_STATE_VULNERABLE";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_DEFEATED"] = 6] = "PRISM_STATE_DEFEATED";
        PrismStateEnum[PrismStateEnum["PRISM_STATE_SABOTAGED"] = 7] = "PRISM_STATE_SABOTAGED";
    })(Protocol.PrismStateEnum || (Protocol.PrismStateEnum = {}));
    var PrismStateEnum = Protocol.PrismStateEnum;
    (function (PvpArenaStepEnum) {
        PvpArenaStepEnum[PvpArenaStepEnum["ARENA_STEP_REGISTRED"] = 0] = "ARENA_STEP_REGISTRED";
        PvpArenaStepEnum[PvpArenaStepEnum["ARENA_STEP_WAITING_FIGHT"] = 1] = "ARENA_STEP_WAITING_FIGHT";
        PvpArenaStepEnum[PvpArenaStepEnum["ARENA_STEP_STARTING_FIGHT"] = 2] = "ARENA_STEP_STARTING_FIGHT";
        PvpArenaStepEnum[PvpArenaStepEnum["ARENA_STEP_UNREGISTER"] = 3] = "ARENA_STEP_UNREGISTER";
    })(Protocol.PvpArenaStepEnum || (Protocol.PvpArenaStepEnum = {}));
    var PvpArenaStepEnum = Protocol.PvpArenaStepEnum;
    (function (PvpArenaTypeEnum) {
        PvpArenaTypeEnum[PvpArenaTypeEnum["ARENA_TYPE_3VS3"] = 3] = "ARENA_TYPE_3VS3";
        PvpArenaTypeEnum[PvpArenaTypeEnum["ARENA_TYPE_5VS5"] = 5] = "ARENA_TYPE_5VS5";
    })(Protocol.PvpArenaTypeEnum || (Protocol.PvpArenaTypeEnum = {}));
    var PvpArenaTypeEnum = Protocol.PvpArenaTypeEnum;
    (function (SequenceTypeEnum) {
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_SPELL"] = 1] = "SEQUENCE_SPELL";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_WEAPON"] = 2] = "SEQUENCE_WEAPON";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_GLYPH_TRAP"] = 3] = "SEQUENCE_GLYPH_TRAP";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_TRIGGERED"] = 4] = "SEQUENCE_TRIGGERED";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_MOVE"] = 5] = "SEQUENCE_MOVE";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_CHARACTER_DEATH"] = 6] = "SEQUENCE_CHARACTER_DEATH";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_TURN_START"] = 7] = "SEQUENCE_TURN_START";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_TURN_END"] = 8] = "SEQUENCE_TURN_END";
        SequenceTypeEnum[SequenceTypeEnum["SEQUENCE_FIGHT_START"] = 9] = "SEQUENCE_FIGHT_START";
    })(Protocol.SequenceTypeEnum || (Protocol.SequenceTypeEnum = {}));
    var SequenceTypeEnum = Protocol.SequenceTypeEnum;
    (function (ServerConnectionErrorEnum) {
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_DUE_TO_STATUS"] = 0] = "SERVER_CONNECTION_ERROR_DUE_TO_STATUS";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_NO_REASON"] = 1] = "SERVER_CONNECTION_ERROR_NO_REASON";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_ACCOUNT_RESTRICTED"] = 2] = "SERVER_CONNECTION_ERROR_ACCOUNT_RESTRICTED";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_COMMUNITY_RESTRICTED"] = 3] = "SERVER_CONNECTION_ERROR_COMMUNITY_RESTRICTED";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_LOCATION_RESTRICTED"] = 4] = "SERVER_CONNECTION_ERROR_LOCATION_RESTRICTED";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_SUBSCRIBERS_ONLY"] = 5] = "SERVER_CONNECTION_ERROR_SUBSCRIBERS_ONLY";
        ServerConnectionErrorEnum[ServerConnectionErrorEnum["SERVER_CONNECTION_ERROR_REGULAR_PLAYERS_ONLY"] = 6] = "SERVER_CONNECTION_ERROR_REGULAR_PLAYERS_ONLY";
    })(Protocol.ServerConnectionErrorEnum || (Protocol.ServerConnectionErrorEnum = {}));
    var ServerConnectionErrorEnum = Protocol.ServerConnectionErrorEnum;
    (function (ServerStatusEnum) {
        ServerStatusEnum[ServerStatusEnum["STATUS_UNKNOWN"] = 0] = "STATUS_UNKNOWN";
        ServerStatusEnum[ServerStatusEnum["OFFLINE"] = 1] = "OFFLINE";
        ServerStatusEnum[ServerStatusEnum["STARTING"] = 2] = "STARTING";
        ServerStatusEnum[ServerStatusEnum["ONLINE"] = 3] = "ONLINE";
        ServerStatusEnum[ServerStatusEnum["NOJOIN"] = 4] = "NOJOIN";
        ServerStatusEnum[ServerStatusEnum["SAVING"] = 5] = "SAVING";
        ServerStatusEnum[ServerStatusEnum["STOPING"] = 6] = "STOPING";
        ServerStatusEnum[ServerStatusEnum["FULL"] = 7] = "FULL";
    })(Protocol.ServerStatusEnum || (Protocol.ServerStatusEnum = {}));
    var ServerStatusEnum = Protocol.ServerStatusEnum;
    (function (ShortcutBarEnum) {
        ShortcutBarEnum[ShortcutBarEnum["GENERAL_SHORTCUT_BAR"] = 0] = "GENERAL_SHORTCUT_BAR";
        ShortcutBarEnum[ShortcutBarEnum["SPELL_SHORTCUT_BAR"] = 1] = "SPELL_SHORTCUT_BAR";
    })(Protocol.ShortcutBarEnum || (Protocol.ShortcutBarEnum = {}));
    var ShortcutBarEnum = Protocol.ShortcutBarEnum;
    (function (SocialContactCategoryEnum) {
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_FRIEND"] = 0] = "SOCIAL_CONTACT_FRIEND";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_SPOUSE"] = 1] = "SOCIAL_CONTACT_SPOUSE";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_PARTY"] = 2] = "SOCIAL_CONTACT_PARTY";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_GUILD"] = 3] = "SOCIAL_CONTACT_GUILD";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_ALLIANCE"] = 4] = "SOCIAL_CONTACT_ALLIANCE";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_CRAFTER"] = 5] = "SOCIAL_CONTACT_CRAFTER";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_INTERLOCUTOR"] = 6] = "SOCIAL_CONTACT_INTERLOCUTOR";
        SocialContactCategoryEnum[SocialContactCategoryEnum["SOCIAL_CONTACT_FIGHT"] = 7] = "SOCIAL_CONTACT_FIGHT";
    })(Protocol.SocialContactCategoryEnum || (Protocol.SocialContactCategoryEnum = {}));
    var SocialContactCategoryEnum = Protocol.SocialContactCategoryEnum;
    (function (SocialGroupCreationResultEnum) {
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_OK"] = 1] = "SOCIAL_GROUP_CREATE_OK";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_NAME_INVALID"] = 2] = "SOCIAL_GROUP_CREATE_ERROR_NAME_INVALID";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_ALREADY_IN_GROUP"] = 3] = "SOCIAL_GROUP_CREATE_ERROR_ALREADY_IN_GROUP";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_NAME_ALREADY_EXISTS"] = 4] = "SOCIAL_GROUP_CREATE_ERROR_NAME_ALREADY_EXISTS";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_EMBLEM_ALREADY_EXISTS"] = 5] = "SOCIAL_GROUP_CREATE_ERROR_EMBLEM_ALREADY_EXISTS";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_LEAVE"] = 6] = "SOCIAL_GROUP_CREATE_ERROR_LEAVE";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_CANCEL"] = 7] = "SOCIAL_GROUP_CREATE_ERROR_CANCEL";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_REQUIREMENT_UNMET"] = 8] = "SOCIAL_GROUP_CREATE_ERROR_REQUIREMENT_UNMET";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_EMBLEM_INVALID"] = 9] = "SOCIAL_GROUP_CREATE_ERROR_EMBLEM_INVALID";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_TAG_INVALID"] = 10] = "SOCIAL_GROUP_CREATE_ERROR_TAG_INVALID";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_TAG_ALREADY_EXISTS"] = 11] = "SOCIAL_GROUP_CREATE_ERROR_TAG_ALREADY_EXISTS";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_NEEDS_SUBGROUP"] = 12] = "SOCIAL_GROUP_CREATE_ERROR_NEEDS_SUBGROUP";
        SocialGroupCreationResultEnum[SocialGroupCreationResultEnum["SOCIAL_GROUP_CREATE_ERROR_UNKNOWN"] = 99] = "SOCIAL_GROUP_CREATE_ERROR_UNKNOWN";
    })(Protocol.SocialGroupCreationResultEnum || (Protocol.SocialGroupCreationResultEnum = {}));
    var SocialGroupCreationResultEnum = Protocol.SocialGroupCreationResultEnum;
    (function (SocialGroupInvitationStateEnum) {
        SocialGroupInvitationStateEnum[SocialGroupInvitationStateEnum["SOCIAL_GROUP_INVITATION_FAILED"] = 0] = "SOCIAL_GROUP_INVITATION_FAILED";
        SocialGroupInvitationStateEnum[SocialGroupInvitationStateEnum["SOCIAL_GROUP_INVITATION_SENT"] = 1] = "SOCIAL_GROUP_INVITATION_SENT";
        SocialGroupInvitationStateEnum[SocialGroupInvitationStateEnum["SOCIAL_GROUP_INVITATION_CANCELED"] = 2] = "SOCIAL_GROUP_INVITATION_CANCELED";
        SocialGroupInvitationStateEnum[SocialGroupInvitationStateEnum["SOCIAL_GROUP_INVITATION_OK"] = 3] = "SOCIAL_GROUP_INVITATION_OK";
    })(Protocol.SocialGroupInvitationStateEnum || (Protocol.SocialGroupInvitationStateEnum = {}));
    var SocialGroupInvitationStateEnum = Protocol.SocialGroupInvitationStateEnum;
    (function (StatisticTypeEnum) {
        StatisticTypeEnum[StatisticTypeEnum["STEP0000_CHOSE_NICKNAME"] = 78] = "STEP0000_CHOSE_NICKNAME";
        StatisticTypeEnum[StatisticTypeEnum["STEP0100_CHOSE_SERVER"] = 79] = "STEP0100_CHOSE_SERVER";
        StatisticTypeEnum[StatisticTypeEnum["STEP0200_CREATE_FIRST_CHARACTER"] = 80] = "STEP0200_CREATE_FIRST_CHARACTER";
        StatisticTypeEnum[StatisticTypeEnum["STEP0300_LOADING_SCREEN"] = 81] = "STEP0300_LOADING_SCREEN";
        StatisticTypeEnum[StatisticTypeEnum["STEP0400_DOFUS_TRAILER"] = 82] = "STEP0400_DOFUS_TRAILER";
        StatisticTypeEnum[StatisticTypeEnum["STEP0500_ARRIVES_ON_TUTORIAL"] = 83] = "STEP0500_ARRIVES_ON_TUTORIAL";
        StatisticTypeEnum[StatisticTypeEnum["STEP0550_QUITS_TUTORIAL"] = 84] = "STEP0550_QUITS_TUTORIAL";
        StatisticTypeEnum[StatisticTypeEnum["STEP0600_TUTO1_MOVE_MAP"] = 85] = "STEP0600_TUTO1_MOVE_MAP";
        StatisticTypeEnum[StatisticTypeEnum["STEP0700_TUTO2_TALK_TO_YAKASI"] = 86] = "STEP0700_TUTO2_TALK_TO_YAKASI";
        StatisticTypeEnum[StatisticTypeEnum["STEP0800_TUTO3_EQUIP_RING"] = 87] = "STEP0800_TUTO3_EQUIP_RING";
        StatisticTypeEnum[StatisticTypeEnum["STEP0820_CLIC_BAG"] = 88] = "STEP0820_CLIC_BAG";
        StatisticTypeEnum[StatisticTypeEnum["STEP0840_CLIC_RING"] = 89] = "STEP0840_CLIC_RING";
        StatisticTypeEnum[StatisticTypeEnum["STEP0860_EQUIP_RING"] = 90] = "STEP0860_EQUIP_RING";
        StatisticTypeEnum[StatisticTypeEnum["STEP0860_EXIT_BAG"] = 91] = "STEP0860_EXIT_BAG";
        StatisticTypeEnum[StatisticTypeEnum["STEP0900_TUTO4_CHANGE_MAP"] = 92] = "STEP0900_TUTO4_CHANGE_MAP";
        StatisticTypeEnum[StatisticTypeEnum["STEP1000_TUTO5_START_FIRST_FIGHT"] = 93] = "STEP1000_TUTO5_START_FIRST_FIGHT";
        StatisticTypeEnum[StatisticTypeEnum["STEP1100_TUTO6_CHOSE_START_POSITION"] = 94] = "STEP1100_TUTO6_CHOSE_START_POSITION";
        StatisticTypeEnum[StatisticTypeEnum["STEP1130_CHOSE_POSITION"] = 95] = "STEP1130_CHOSE_POSITION";
        StatisticTypeEnum[StatisticTypeEnum["STEP1160_CLIC_READY"] = 96] = "STEP1160_CLIC_READY";
        StatisticTypeEnum[StatisticTypeEnum["STEP1200_TUTO7_MOVE_IN_FIGHT"] = 97] = "STEP1200_TUTO7_MOVE_IN_FIGHT";
        StatisticTypeEnum[StatisticTypeEnum["STEP1900_TUTO8_USE_SPELL"] = 98] = "STEP1900_TUTO8_USE_SPELL";
        StatisticTypeEnum[StatisticTypeEnum["STEP1930_CHOSE_SPELL"] = 99] = "STEP1930_CHOSE_SPELL";
        StatisticTypeEnum[StatisticTypeEnum["STEP1960_USE_SPELL"] = 100] = "STEP1960_USE_SPELL";
        StatisticTypeEnum[StatisticTypeEnum["STEP2000_TUTO9_END_TURN"] = 101] = "STEP2000_TUTO9_END_TURN";
        StatisticTypeEnum[StatisticTypeEnum["STEP2100_TUTO10_WIN_FIGHT"] = 102] = "STEP2100_TUTO10_WIN_FIGHT";
        StatisticTypeEnum[StatisticTypeEnum["STEP2050_TUTO10_LOSE_FIGHT"] = 103] = "STEP2050_TUTO10_LOSE_FIGHT";
        StatisticTypeEnum[StatisticTypeEnum["STEP2200_TUTO11_START_FIRST_QUEST"] = 104] = "STEP2200_TUTO11_START_FIRST_QUEST";
        StatisticTypeEnum[StatisticTypeEnum["STEP2220_CLIC_YAKASI"] = 105] = "STEP2220_CLIC_YAKASI";
        StatisticTypeEnum[StatisticTypeEnum["STEP2240_TALK_YAKASI"] = 106] = "STEP2240_TALK_YAKASI";
        StatisticTypeEnum[StatisticTypeEnum["STEP2260_ACCEPT_MISSION"] = 107] = "STEP2260_ACCEPT_MISSION";
        StatisticTypeEnum[StatisticTypeEnum["STEP2300_TUTO12_EQUIP_SET"] = 108] = "STEP2300_TUTO12_EQUIP_SET";
        StatisticTypeEnum[StatisticTypeEnum["STEP2350_EXIT_BAG"] = 109] = "STEP2350_EXIT_BAG";
        StatisticTypeEnum[StatisticTypeEnum["STEP2400_TUTO13_LETS_KILL_MONSTER"] = 110] = "STEP2400_TUTO13_LETS_KILL_MONSTER";
        StatisticTypeEnum[StatisticTypeEnum["STEP2430_GO_TO_NEXT_MAP"] = 111] = "STEP2430_GO_TO_NEXT_MAP";
        StatisticTypeEnum[StatisticTypeEnum["STEP2460_CLIC_MONSTER"] = 112] = "STEP2460_CLIC_MONSTER";
        StatisticTypeEnum[StatisticTypeEnum["STEP2500_TUTO14_END_SECOND_FIGHT"] = 113] = "STEP2500_TUTO14_END_SECOND_FIGHT";
        StatisticTypeEnum[StatisticTypeEnum["STEP2600_TUTO15_END_TUTO"] = 114] = "STEP2600_TUTO15_END_TUTO";
        StatisticTypeEnum[StatisticTypeEnum["STEP2620_CLIC_YAKASI"] = 115] = "STEP2620_CLIC_YAKASI";
        StatisticTypeEnum[StatisticTypeEnum["STEP2640_END_DIALOG"] = 116] = "STEP2640_END_DIALOG";
        StatisticTypeEnum[StatisticTypeEnum["CLICK_ON_BUTTON"] = 151] = "CLICK_ON_BUTTON";
        StatisticTypeEnum[StatisticTypeEnum["DISPLAY_MENU"] = 152] = "DISPLAY_MENU";
    })(Protocol.StatisticTypeEnum || (Protocol.StatisticTypeEnum = {}));
    var StatisticTypeEnum = Protocol.StatisticTypeEnum;
    (function (StatsUpgradeResultEnum) {
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["NONE"] = -1] = "NONE";
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["SUCCESS"] = 0] = "SUCCESS";
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["RESTRICTED"] = 1] = "RESTRICTED";
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["GUEST"] = 2] = "GUEST";
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["IN_FIGHT"] = 3] = "IN_FIGHT";
        StatsUpgradeResultEnum[StatsUpgradeResultEnum["NOT_ENOUGH_POINT"] = 4] = "NOT_ENOUGH_POINT";
    })(Protocol.StatsUpgradeResultEnum || (Protocol.StatsUpgradeResultEnum = {}));
    var StatsUpgradeResultEnum = Protocol.StatsUpgradeResultEnum;
    (function (SubEntityBindingPointCategoryEnum) {
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_UNUSED"] = 0] = "HOOK_POINT_CATEGORY_UNUSED";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_PET"] = 1] = "HOOK_POINT_CATEGORY_PET";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_MOUNT_DRIVER"] = 2] = "HOOK_POINT_CATEGORY_MOUNT_DRIVER";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_LIFTED_ENTITY"] = 3] = "HOOK_POINT_CATEGORY_LIFTED_ENTITY";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_BASE_BACKGROUND"] = 4] = "HOOK_POINT_CATEGORY_BASE_BACKGROUND";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_MERCHANT_BAG"] = 5] = "HOOK_POINT_CATEGORY_MERCHANT_BAG";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_BASE_FOREGROUND"] = 6] = "HOOK_POINT_CATEGORY_BASE_FOREGROUND";
        SubEntityBindingPointCategoryEnum[SubEntityBindingPointCategoryEnum["HOOK_POINT_CATEGORY_PET_FOLLOWER"] = 7] = "HOOK_POINT_CATEGORY_PET_FOLLOWER";
    })(Protocol.SubEntityBindingPointCategoryEnum || (Protocol.SubEntityBindingPointCategoryEnum = {}));
    var SubEntityBindingPointCategoryEnum = Protocol.SubEntityBindingPointCategoryEnum;
    (function (SubscriptionRequiredEnum) {
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMITED_TO_SUBSCRIBER"] = 0] = "LIMITED_TO_SUBSCRIBER";
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMIT_ON_JOB_XP"] = 1] = "LIMIT_ON_JOB_XP";
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMIT_ON_JOB_USE"] = 2] = "LIMIT_ON_JOB_USE";
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMIT_ON_MAP"] = 3] = "LIMIT_ON_MAP";
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMIT_ON_ITEM"] = 4] = "LIMIT_ON_ITEM";
        SubscriptionRequiredEnum[SubscriptionRequiredEnum["LIMIT_ON_VENDOR"] = 5] = "LIMIT_ON_VENDOR";
    })(Protocol.SubscriptionRequiredEnum || (Protocol.SubscriptionRequiredEnum = {}));
    var SubscriptionRequiredEnum = Protocol.SubscriptionRequiredEnum;
    (function (TaxCollectorErrorReasonEnum) {
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_ERROR_UNKNOWN"] = 0] = "TAX_COLLECTOR_ERROR_UNKNOWN";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_NOT_FOUND"] = 1] = "TAX_COLLECTOR_NOT_FOUND";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_NOT_OWNED"] = 2] = "TAX_COLLECTOR_NOT_OWNED";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_NO_RIGHTS"] = 3] = "TAX_COLLECTOR_NO_RIGHTS";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_MAX_REACHED"] = 4] = "TAX_COLLECTOR_MAX_REACHED";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_ALREADY_ONE"] = 5] = "TAX_COLLECTOR_ALREADY_ONE";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_CANT_HIRE_YET"] = 6] = "TAX_COLLECTOR_CANT_HIRE_YET";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_CANT_HIRE_HERE"] = 7] = "TAX_COLLECTOR_CANT_HIRE_HERE";
        TaxCollectorErrorReasonEnum[TaxCollectorErrorReasonEnum["TAX_COLLECTOR_NOT_ENOUGH_KAMAS"] = 8] = "TAX_COLLECTOR_NOT_ENOUGH_KAMAS";
    })(Protocol.TaxCollectorErrorReasonEnum || (Protocol.TaxCollectorErrorReasonEnum = {}));
    var TaxCollectorErrorReasonEnum = Protocol.TaxCollectorErrorReasonEnum;
    (function (TaxCollectorStateEnum) {
        TaxCollectorStateEnum[TaxCollectorStateEnum["STATE_COLLECTING"] = 0] = "STATE_COLLECTING";
        TaxCollectorStateEnum[TaxCollectorStateEnum["STATE_WAITING_FOR_HELP"] = 1] = "STATE_WAITING_FOR_HELP";
        TaxCollectorStateEnum[TaxCollectorStateEnum["STATE_FIGHTING"] = 2] = "STATE_FIGHTING";
    })(Protocol.TaxCollectorStateEnum || (Protocol.TaxCollectorStateEnum = {}));
    var TaxCollectorStateEnum = Protocol.TaxCollectorStateEnum;
    (function (TeamEnum) {
        TeamEnum[TeamEnum["TEAM_CHALLENGER"] = 0] = "TEAM_CHALLENGER";
        TeamEnum[TeamEnum["TEAM_DEFENDER"] = 1] = "TEAM_DEFENDER";
        TeamEnum[TeamEnum["TEAM_SPECTATOR"] = 2] = "TEAM_SPECTATOR";
    })(Protocol.TeamEnum || (Protocol.TeamEnum = {}));
    var TeamEnum = Protocol.TeamEnum;
    (function (TeamTypeEnum) {
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_PLAYER"] = 0] = "TEAM_TYPE_PLAYER";
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_MONSTER"] = 1] = "TEAM_TYPE_MONSTER";
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_MUTANT"] = 2] = "TEAM_TYPE_MUTANT";
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_TAXCOLLECTOR"] = 3] = "TEAM_TYPE_TAXCOLLECTOR";
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_BAD_PLAYER"] = 4] = "TEAM_TYPE_BAD_PLAYER";
        TeamTypeEnum[TeamTypeEnum["TEAM_TYPE_PRISM"] = 5] = "TEAM_TYPE_PRISM";
    })(Protocol.TeamTypeEnum || (Protocol.TeamTypeEnum = {}));
    var TeamTypeEnum = Protocol.TeamTypeEnum;
    (function (TeleporterTypeEnum) {
        TeleporterTypeEnum[TeleporterTypeEnum["TELEPORTER_ZAAP"] = 0] = "TELEPORTER_ZAAP";
        TeleporterTypeEnum[TeleporterTypeEnum["TELEPORTER_SUBWAY"] = 1] = "TELEPORTER_SUBWAY";
        TeleporterTypeEnum[TeleporterTypeEnum["TELEPORTER_PRISM"] = 2] = "TELEPORTER_PRISM";
    })(Protocol.TeleporterTypeEnum || (Protocol.TeleporterTypeEnum = {}));
    var TeleporterTypeEnum = Protocol.TeleporterTypeEnum;
    (function (TextInformationTypeEnum) {
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_MESSAGE"] = 0] = "TEXT_INFORMATION_MESSAGE";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_ERROR"] = 1] = "TEXT_INFORMATION_ERROR";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_PVP"] = 2] = "TEXT_INFORMATION_PVP";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_FIGHT_LOG"] = 3] = "TEXT_INFORMATION_FIGHT_LOG";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_POPUP"] = 4] = "TEXT_INFORMATION_POPUP";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_LIVING_OBJECT"] = 5] = "TEXT_LIVING_OBJECT";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_ENTITY_TALK"] = 6] = "TEXT_ENTITY_TALK";
        TextInformationTypeEnum[TextInformationTypeEnum["TEXT_INFORMATION_FIGHT"] = 7] = "TEXT_INFORMATION_FIGHT";
    })(Protocol.TextInformationTypeEnum || (Protocol.TextInformationTypeEnum = {}));
    var TextInformationTypeEnum = Protocol.TextInformationTypeEnum;
    (function (TreasureHuntDigRequestEnum) {
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_ERROR_UNDEFINED"] = 0] = "TREASURE_HUNT_DIG_ERROR_UNDEFINED";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_NEW_HINT"] = 1] = "TREASURE_HUNT_DIG_NEW_HINT";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_FINISHED"] = 2] = "TREASURE_HUNT_DIG_FINISHED";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_WRONG"] = 3] = "TREASURE_HUNT_DIG_WRONG";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_LOST"] = 4] = "TREASURE_HUNT_DIG_LOST";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_ERROR_IMPOSSIBLE"] = 5] = "TREASURE_HUNT_DIG_ERROR_IMPOSSIBLE";
        TreasureHuntDigRequestEnum[TreasureHuntDigRequestEnum["TREASURE_HUNT_DIG_WRONG_AND_YOU_KNOW_IT"] = 6] = "TREASURE_HUNT_DIG_WRONG_AND_YOU_KNOW_IT";
    })(Protocol.TreasureHuntDigRequestEnum || (Protocol.TreasureHuntDigRequestEnum = {}));
    var TreasureHuntDigRequestEnum = Protocol.TreasureHuntDigRequestEnum;
    (function (TreasureHuntFlagRequestEnum) {
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_ERROR_UNDEFINED"] = 0] = "TREASURE_HUNT_FLAG_ERROR_UNDEFINED";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_OK"] = 1] = "TREASURE_HUNT_FLAG_OK";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_WRONG"] = 2] = "TREASURE_HUNT_FLAG_WRONG";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_TOO_MANY"] = 3] = "TREASURE_HUNT_FLAG_TOO_MANY";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_ERROR_IMPOSSIBLE"] = 4] = "TREASURE_HUNT_FLAG_ERROR_IMPOSSIBLE";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_WRONG_INDEX"] = 5] = "TREASURE_HUNT_FLAG_WRONG_INDEX";
        TreasureHuntFlagRequestEnum[TreasureHuntFlagRequestEnum["TREASURE_HUNT_FLAG_SAME_MAP"] = 6] = "TREASURE_HUNT_FLAG_SAME_MAP";
    })(Protocol.TreasureHuntFlagRequestEnum || (Protocol.TreasureHuntFlagRequestEnum = {}));
    var TreasureHuntFlagRequestEnum = Protocol.TreasureHuntFlagRequestEnum;
    (function (TreasureHuntFlagStateEnum) {
        TreasureHuntFlagStateEnum[TreasureHuntFlagStateEnum["TREASURE_HUNT_FLAG_STATE_UNKNOWN"] = 0] = "TREASURE_HUNT_FLAG_STATE_UNKNOWN";
        TreasureHuntFlagStateEnum[TreasureHuntFlagStateEnum["TREASURE_HUNT_FLAG_STATE_OK"] = 1] = "TREASURE_HUNT_FLAG_STATE_OK";
        TreasureHuntFlagStateEnum[TreasureHuntFlagStateEnum["TREASURE_HUNT_FLAG_STATE_WRONG"] = 2] = "TREASURE_HUNT_FLAG_STATE_WRONG";
    })(Protocol.TreasureHuntFlagStateEnum || (Protocol.TreasureHuntFlagStateEnum = {}));
    var TreasureHuntFlagStateEnum = Protocol.TreasureHuntFlagStateEnum;
    (function (TreasureHuntRequestEnum) {
        TreasureHuntRequestEnum[TreasureHuntRequestEnum["TREASURE_HUNT_ERROR_UNDEFINED"] = 0] = "TREASURE_HUNT_ERROR_UNDEFINED";
        TreasureHuntRequestEnum[TreasureHuntRequestEnum["TREASURE_HUNT_ERROR_NO_QUEST_FOUND"] = 2] = "TREASURE_HUNT_ERROR_NO_QUEST_FOUND";
        TreasureHuntRequestEnum[TreasureHuntRequestEnum["TREASURE_HUNT_ERROR_ALREADY_HAVE_QUEST"] = 3] = "TREASURE_HUNT_ERROR_ALREADY_HAVE_QUEST";
        TreasureHuntRequestEnum[TreasureHuntRequestEnum["TREASURE_HUNT_ERROR_NOT_AVAILABLE"] = 4] = "TREASURE_HUNT_ERROR_NOT_AVAILABLE";
        TreasureHuntRequestEnum[TreasureHuntRequestEnum["TREASURE_HUNT_OK"] = 1] = "TREASURE_HUNT_OK";
    })(Protocol.TreasureHuntRequestEnum || (Protocol.TreasureHuntRequestEnum = {}));
    var TreasureHuntRequestEnum = Protocol.TreasureHuntRequestEnum;
    (function (TreasureHuntTypeEnum) {
        TreasureHuntTypeEnum[TreasureHuntTypeEnum["TREASURE_HUNT_CLASSIC"] = 0] = "TREASURE_HUNT_CLASSIC";
        TreasureHuntTypeEnum[TreasureHuntTypeEnum["TREASURE_HUNT_PORTAL"] = 1] = "TREASURE_HUNT_PORTAL";
        TreasureHuntTypeEnum[TreasureHuntTypeEnum["TREASURE_HUNT_LEGENDARY"] = 2] = "TREASURE_HUNT_LEGENDARY";
    })(Protocol.TreasureHuntTypeEnum || (Protocol.TreasureHuntTypeEnum = {}));
    var TreasureHuntTypeEnum = Protocol.TreasureHuntTypeEnum;
    (function (UpdatableMountBoostEnum) {
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["STAMINA"] = 3] = "STAMINA";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["MATURITY"] = 5] = "MATURITY";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["ENERGY"] = 1] = "ENERGY";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["SERENITY"] = 2] = "SERENITY";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["LOVE"] = 4] = "LOVE";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["TIREDNESS"] = 6] = "TIREDNESS";
        UpdatableMountBoostEnum[UpdatableMountBoostEnum["RIDEABLE"] = 7] = "RIDEABLE";
    })(Protocol.UpdatableMountBoostEnum || (Protocol.UpdatableMountBoostEnum = {}));
    var UpdatableMountBoostEnum = Protocol.UpdatableMountBoostEnum;
    var AdminCommandMessage = (function (_super) {
        __extends(AdminCommandMessage, _super);
        function AdminCommandMessage() {
            this.content = '';
            _super.call(this);
        }
        AdminCommandMessage.prototype.getMessageId = function () {
            return AdminCommandMessage.ID;
        };
        AdminCommandMessage.prototype.reset = function () {
            this.content = '';
        };
        AdminCommandMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AdminCommandMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AdminCommandMessage.prototype.serialize = function (param1) {
            this.serializeAs_AdminCommandMessage(param1);
        };
        AdminCommandMessage.prototype.serializeAs_AdminCommandMessage = function (param1) {
            param1.writeUTF(this.content);
        };
        AdminCommandMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AdminCommandMessage(param1);
        };
        AdminCommandMessage.prototype.deserializeAs_AdminCommandMessage = function (param1) {
            this.content = param1.readUTF();
        };
        AdminCommandMessage.ID = 76;
        return AdminCommandMessage;
    })(NetworkMessage);
    Protocol.AdminCommandMessage = AdminCommandMessage;
    var AdminQuietCommandMessage = (function (_super) {
        __extends(AdminQuietCommandMessage, _super);
        function AdminQuietCommandMessage() {
            _super.call(this);
        }
        AdminQuietCommandMessage.prototype.getMessageId = function () {
            return AdminQuietCommandMessage.ID;
        };
        AdminQuietCommandMessage.prototype.reset = function () {
        };
        AdminQuietCommandMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AdminQuietCommandMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AdminQuietCommandMessage.prototype.serialize = function (param1) {
            this.serializeAs_AdminQuietCommandMessage(param1);
        };
        AdminQuietCommandMessage.prototype.serializeAs_AdminQuietCommandMessage = function (param1) {
            _super.prototype.serializeAs_AdminCommandMessage.call(this, param1);
        };
        AdminQuietCommandMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AdminQuietCommandMessage(param1);
        };
        AdminQuietCommandMessage.prototype.deserializeAs_AdminQuietCommandMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        AdminQuietCommandMessage.ID = 5662;
        return AdminQuietCommandMessage;
    })(AdminCommandMessage);
    Protocol.AdminQuietCommandMessage = AdminQuietCommandMessage;
    var ConsoleCommandsListMessage = (function (_super) {
        __extends(ConsoleCommandsListMessage, _super);
        function ConsoleCommandsListMessage() {
            this.aliases = [];
            this.args = [];
            this.descriptions = [];
            _super.call(this);
        }
        ConsoleCommandsListMessage.prototype.getMessageId = function () {
            return ConsoleCommandsListMessage.ID;
        };
        ConsoleCommandsListMessage.prototype.reset = function () {
            this.aliases = [];
            this.args = [];
            this.descriptions = [];
        };
        ConsoleCommandsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ConsoleCommandsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ConsoleCommandsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ConsoleCommandsListMessage(param1);
        };
        ConsoleCommandsListMessage.prototype.serializeAs_ConsoleCommandsListMessage = function (param1) {
            param1.writeShort(this.aliases.length);
            var _loc2_ = 0;
            while (_loc2_ < this.aliases.length) {
                param1.writeUTF(this.aliases[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.args.length);
            var _loc3_ = 0;
            while (_loc3_ < this.args.length) {
                param1.writeUTF(this.args[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.descriptions.length);
            var _loc4_ = 0;
            while (_loc4_ < this.descriptions.length) {
                param1.writeUTF(this.descriptions[_loc4_]);
                _loc4_++;
            }
        };
        ConsoleCommandsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ConsoleCommandsListMessage(param1);
        };
        ConsoleCommandsListMessage.prototype.deserializeAs_ConsoleCommandsListMessage = function (param1) {
            var _loc8_ = null;
            var _loc9_ = null;
            var _loc10_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc8_ = param1.readUTF();
                this.aliases.push(_loc8_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc9_ = param1.readUTF();
                this.args.push(_loc9_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc10_ = param1.readUTF();
                this.descriptions.push(_loc10_);
                _loc7_++;
            }
        };
        ConsoleCommandsListMessage.ID = 6127;
        return ConsoleCommandsListMessage;
    })(NetworkMessage);
    Protocol.ConsoleCommandsListMessage = ConsoleCommandsListMessage;
    var ConsoleMessage = (function (_super) {
        __extends(ConsoleMessage, _super);
        function ConsoleMessage() {
            this.type = 0;
            this.content = '';
            _super.call(this);
        }
        ConsoleMessage.prototype.getMessageId = function () {
            return ConsoleMessage.ID;
        };
        ConsoleMessage.prototype.reset = function () {
            this.type = 0;
            this.content = '';
        };
        ConsoleMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ConsoleMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ConsoleMessage.prototype.serialize = function (param1) {
            this.serializeAs_ConsoleMessage(param1);
        };
        ConsoleMessage.prototype.serializeAs_ConsoleMessage = function (param1) {
            param1.writeByte(this.type);
            param1.writeUTF(this.content);
        };
        ConsoleMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ConsoleMessage(param1);
        };
        ConsoleMessage.prototype.deserializeAs_ConsoleMessage = function (param1) {
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of ConsoleMessage.type.');
            }
            this.content = param1.readUTF();
        };
        ConsoleMessage.ID = 75;
        return ConsoleMessage;
    })(NetworkMessage);
    Protocol.ConsoleMessage = ConsoleMessage;
    var NetworkDataContainerMessage = (function (_super) {
        __extends(NetworkDataContainerMessage, _super);
        function NetworkDataContainerMessage() {
            this.content = new ByteArray();
            _super.call(this);
        }
        NetworkDataContainerMessage.prototype.getMessageId = function () {
            return NetworkDataContainerMessage.ID;
        };
        NetworkDataContainerMessage.prototype.reset = function () {
            this.content = new ByteArray();
        };
        NetworkDataContainerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NetworkDataContainerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NetworkDataContainerMessage.prototype.serialize = function (param1) {
            this.serializeAs_NetworkDataContainerMessage(param1);
        };
        NetworkDataContainerMessage.prototype.serializeAs_NetworkDataContainerMessage = function (param1) {
            param1.writeBytes(this.content);
            throw new Error('Not implemented');
        };
        NetworkDataContainerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NetworkDataContainerMessage(param1);
        };
        NetworkDataContainerMessage.prototype.deserializeAs_NetworkDataContainerMessage = function (param1) {
            var _loc2_ = param1.readVarInt();
            var _loc3_ = new ByteArray();
            param1.readBytes(_loc3_, 0, _loc2_);
            _loc3_.uncompress();
            this.content = _loc3_;
        };
        NetworkDataContainerMessage.ID = 2;
        return NetworkDataContainerMessage;
    })(NetworkMessage);
    Protocol.NetworkDataContainerMessage = NetworkDataContainerMessage;
    var BasicPingMessage = (function (_super) {
        __extends(BasicPingMessage, _super);
        function BasicPingMessage() {
            this.quiet = false;
            _super.call(this);
        }
        BasicPingMessage.prototype.getMessageId = function () {
            return BasicPingMessage.ID;
        };
        BasicPingMessage.prototype.reset = function () {
            this.quiet = false;
        };
        BasicPingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicPingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicPingMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicPingMessage(param1);
        };
        BasicPingMessage.prototype.serializeAs_BasicPingMessage = function (param1) {
            param1.writeBoolean(this.quiet);
        };
        BasicPingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicPingMessage(param1);
        };
        BasicPingMessage.prototype.deserializeAs_BasicPingMessage = function (param1) {
            this.quiet = param1.readBoolean();
        };
        BasicPingMessage.ID = 182;
        return BasicPingMessage;
    })(NetworkMessage);
    Protocol.BasicPingMessage = BasicPingMessage;
    var BasicPongMessage = (function (_super) {
        __extends(BasicPongMessage, _super);
        function BasicPongMessage() {
            this.quiet = false;
            _super.call(this);
        }
        BasicPongMessage.prototype.getMessageId = function () {
            return BasicPongMessage.ID;
        };
        BasicPongMessage.prototype.reset = function () {
            this.quiet = false;
        };
        BasicPongMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicPongMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicPongMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicPongMessage(param1);
        };
        BasicPongMessage.prototype.serializeAs_BasicPongMessage = function (param1) {
            param1.writeBoolean(this.quiet);
        };
        BasicPongMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicPongMessage(param1);
        };
        BasicPongMessage.prototype.deserializeAs_BasicPongMessage = function (param1) {
            this.quiet = param1.readBoolean();
        };
        BasicPongMessage.ID = 183;
        return BasicPongMessage;
    })(NetworkMessage);
    Protocol.BasicPongMessage = BasicPongMessage;
    var BasicStatMessage = (function (_super) {
        __extends(BasicStatMessage, _super);
        function BasicStatMessage() {
            this.statId = 0;
            _super.call(this);
        }
        BasicStatMessage.prototype.getMessageId = function () {
            return BasicStatMessage.ID;
        };
        BasicStatMessage.prototype.reset = function () {
            this.statId = 0;
        };
        BasicStatMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicStatMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicStatMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicStatMessage(param1);
        };
        BasicStatMessage.prototype.serializeAs_BasicStatMessage = function (param1) {
            param1.writeVarShort(this.statId);
        };
        BasicStatMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicStatMessage(param1);
        };
        BasicStatMessage.prototype.deserializeAs_BasicStatMessage = function (param1) {
            this.statId = param1.readVarUhShort();
            if (this.statId < 0) {
                throw new Error('Forbidden value (' + this.statId + ') on element of BasicStatMessage.statId.');
            }
        };
        BasicStatMessage.ID = 6530;
        return BasicStatMessage;
    })(NetworkMessage);
    Protocol.BasicStatMessage = BasicStatMessage;
    var CredentialsAcknowledgementMessage = (function (_super) {
        __extends(CredentialsAcknowledgementMessage, _super);
        function CredentialsAcknowledgementMessage() {
            _super.call(this);
        }
        CredentialsAcknowledgementMessage.prototype.getMessageId = function () {
            return CredentialsAcknowledgementMessage.ID;
        };
        CredentialsAcknowledgementMessage.prototype.reset = function () {
        };
        CredentialsAcknowledgementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CredentialsAcknowledgementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CredentialsAcknowledgementMessage.prototype.serialize = function (param1) {
            this.serializeAs_CredentialsAcknowledgementMessage(param1);
        };
        CredentialsAcknowledgementMessage.prototype.serializeAs_CredentialsAcknowledgementMessage = function (param1) {
        };
        CredentialsAcknowledgementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CredentialsAcknowledgementMessage(param1);
        };
        CredentialsAcknowledgementMessage.prototype.deserializeAs_CredentialsAcknowledgementMessage = function (param1) {
        };
        CredentialsAcknowledgementMessage.ID = 6314;
        return CredentialsAcknowledgementMessage;
    })(NetworkMessage);
    Protocol.CredentialsAcknowledgementMessage = CredentialsAcknowledgementMessage;
    var HelloConnectMessage = (function (_super) {
        __extends(HelloConnectMessage, _super);
        function HelloConnectMessage() {
            this.salt = '';
            this.key = [];
            _super.call(this);
        }
        HelloConnectMessage.prototype.getMessageId = function () {
            return HelloConnectMessage.ID;
        };
        HelloConnectMessage.prototype.reset = function () {
            this.salt = '';
            this.key = [];
        };
        HelloConnectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HelloConnectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HelloConnectMessage.prototype.serialize = function (param1) {
            this.serializeAs_HelloConnectMessage(param1);
        };
        HelloConnectMessage.prototype.serializeAs_HelloConnectMessage = function (param1) {
            param1.writeUTF(this.salt);
            param1.writeVarInt(this.key.length);
            var _loc2_ = 0;
            while (_loc2_ < this.key.length) {
                param1.writeByte(this.key[_loc2_]);
                _loc2_++;
            }
        };
        HelloConnectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HelloConnectMessage(param1);
        };
        HelloConnectMessage.prototype.deserializeAs_HelloConnectMessage = function (param1) {
            var _loc4_ = 0;
            this.salt = param1.readUTF();
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.key.push(_loc4_);
                _loc3_++;
            }
        };
        HelloConnectMessage.ID = 3;
        return HelloConnectMessage;
    })(NetworkMessage);
    Protocol.HelloConnectMessage = HelloConnectMessage;
    var IdentificationAccountForceMessage = (function (_super) {
        __extends(IdentificationAccountForceMessage, _super);
        function IdentificationAccountForceMessage() {
            this.forcedAccountLogin = '';
            _super.call(this);
        }
        IdentificationAccountForceMessage.prototype.getMessageId = function () {
            return IdentificationAccountForceMessage.ID;
        };
        IdentificationAccountForceMessage.prototype.reset = function () {
            this.forcedAccountLogin = '';
        };
        IdentificationAccountForceMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationAccountForceMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationAccountForceMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationAccountForceMessage(param1);
        };
        IdentificationAccountForceMessage.prototype.serializeAs_IdentificationAccountForceMessage = function (param1) {
            _super.prototype.serializeAs_IdentificationMessage.call(this, param1);
            param1.writeUTF(this.forcedAccountLogin);
        };
        IdentificationAccountForceMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationAccountForceMessage(param1);
        };
        IdentificationAccountForceMessage.prototype.deserializeAs_IdentificationAccountForceMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.forcedAccountLogin = param1.readUTF();
        };
        IdentificationAccountForceMessage.ID = 6119;
        return IdentificationAccountForceMessage;
    })(IdentificationMessage);
    Protocol.IdentificationAccountForceMessage = IdentificationAccountForceMessage;
    var IdentificationFailedBannedMessage = (function (_super) {
        __extends(IdentificationFailedBannedMessage, _super);
        function IdentificationFailedBannedMessage() {
            this.banEndDate = 0;
            _super.call(this);
        }
        IdentificationFailedBannedMessage.prototype.getMessageId = function () {
            return IdentificationFailedBannedMessage.ID;
        };
        IdentificationFailedBannedMessage.prototype.reset = function () {
            this.banEndDate = 0;
        };
        IdentificationFailedBannedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationFailedBannedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationFailedBannedMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationFailedBannedMessage(param1);
        };
        IdentificationFailedBannedMessage.prototype.serializeAs_IdentificationFailedBannedMessage = function (param1) {
            _super.prototype.serializeAs_IdentificationFailedMessage.call(this, param1);
            if (this.banEndDate < 0 || this.banEndDate > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.banEndDate + ') on element banEndDate.');
            }
            param1.writeDouble(this.banEndDate);
        };
        IdentificationFailedBannedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationFailedBannedMessage(param1);
        };
        IdentificationFailedBannedMessage.prototype.deserializeAs_IdentificationFailedBannedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.banEndDate = param1.readDouble();
            if (this.banEndDate < 0 || this.banEndDate > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.banEndDate + ') on element of IdentificationFailedBannedMessage.banEndDate.');
            }
        };
        IdentificationFailedBannedMessage.ID = 6174;
        return IdentificationFailedBannedMessage;
    })(IdentificationFailedMessage);
    Protocol.IdentificationFailedBannedMessage = IdentificationFailedBannedMessage;
    var IdentificationFailedForBadVersionMessage = (function (_super) {
        __extends(IdentificationFailedForBadVersionMessage, _super);
        function IdentificationFailedForBadVersionMessage() {
            this.requiredVersion = new Version();
            _super.call(this);
        }
        IdentificationFailedForBadVersionMessage.prototype.getMessageId = function () {
            return IdentificationFailedForBadVersionMessage.ID;
        };
        IdentificationFailedForBadVersionMessage.prototype.reset = function () {
            this.requiredVersion = new Version();
        };
        IdentificationFailedForBadVersionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationFailedForBadVersionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationFailedForBadVersionMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationFailedForBadVersionMessage(param1);
        };
        IdentificationFailedForBadVersionMessage.prototype.serializeAs_IdentificationFailedForBadVersionMessage = function (param1) {
            _super.prototype.serializeAs_IdentificationFailedMessage.call(this, param1);
            this.requiredVersion.serializeAs_Version(param1);
        };
        IdentificationFailedForBadVersionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationFailedForBadVersionMessage(param1);
        };
        IdentificationFailedForBadVersionMessage.prototype.deserializeAs_IdentificationFailedForBadVersionMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.requiredVersion = new Version();
            this.requiredVersion.deserialize(param1);
        };
        IdentificationFailedForBadVersionMessage.ID = 21;
        return IdentificationFailedForBadVersionMessage;
    })(IdentificationFailedMessage);
    Protocol.IdentificationFailedForBadVersionMessage = IdentificationFailedForBadVersionMessage;
    var IdentificationFailedMessage = (function (_super) {
        __extends(IdentificationFailedMessage, _super);
        function IdentificationFailedMessage() {
            this.reason = 99;
            _super.call(this);
        }
        IdentificationFailedMessage.prototype.getMessageId = function () {
            return IdentificationFailedMessage.ID;
        };
        IdentificationFailedMessage.prototype.reset = function () {
            this.reason = 99;
        };
        IdentificationFailedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationFailedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationFailedMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationFailedMessage(param1);
        };
        IdentificationFailedMessage.prototype.serializeAs_IdentificationFailedMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        IdentificationFailedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationFailedMessage(param1);
        };
        IdentificationFailedMessage.prototype.deserializeAs_IdentificationFailedMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of IdentificationFailedMessage.reason.');
            }
        };
        IdentificationFailedMessage.ID = 20;
        return IdentificationFailedMessage;
    })(NetworkMessage);
    Protocol.IdentificationFailedMessage = IdentificationFailedMessage;
    var IdentificationMessage = (function (_super) {
        __extends(IdentificationMessage, _super);
        function IdentificationMessage() {
            this.version = new VersionExtended();
            this.lang = '';
            this.credentials = [];
            this.serverId = 0;
            this.autoconnect = false;
            this.useCertificate = false;
            this.useLoginToken = false;
            this.sessionOptionalSalt = 0;
            this.failedAttempts = [];
            _super.call(this);
        }
        IdentificationMessage.prototype.getMessageId = function () {
            return IdentificationMessage.ID;
        };
        IdentificationMessage.prototype.reset = function () {
            this.version = new VersionExtended();
            this.lang = '';
            this.credentials = [];
            this.serverId = 0;
            this.autoconnect = false;
            this.useCertificate = false;
            this.useLoginToken = false;
            this.sessionOptionalSalt = 0;
            this.failedAttempts = [];
        };
        IdentificationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationMessage(param1);
        };
        IdentificationMessage.prototype.serializeAs_IdentificationMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.autoconnect);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.useCertificate);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.useLoginToken);
            param1.writeByte(_loc2_);
            this.version.serializeAs_VersionExtended(param1);
            param1.writeUTF(this.lang);
            param1.writeVarInt(this.credentials.length);
            var _loc3_ = 0;
            while (_loc3_ < this.credentials.length) {
                param1.writeByte(this.credentials[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.serverId);
            if (this.sessionOptionalSalt < -9.007199254740992E15 || this.sessionOptionalSalt > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.sessionOptionalSalt + ') on element sessionOptionalSalt.');
            }
            param1.writeVarLong(this.sessionOptionalSalt);
            param1.writeShort(this.failedAttempts.length);
            var _loc4_ = 0;
            while (_loc4_ < this.failedAttempts.length) {
                if (this.failedAttempts[_loc4_] < 0) {
                    throw new Error('Forbidden value (' + this.failedAttempts[_loc4_] + ') on element 9 (starting at 1) of failedAttempts.');
                }
                param1.writeVarShort(this.failedAttempts[_loc4_]);
                _loc4_++;
            }
        };
        IdentificationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationMessage(param1);
        };
        IdentificationMessage.prototype.deserializeAs_IdentificationMessage = function (param1) {
            var _loc7_ = 0;
            var _loc8_ = 0;
            var _loc2_ = param1.readByte();
            this.autoconnect = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.useCertificate = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.useLoginToken = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.version = new VersionExtended();
            this.version.deserialize(param1);
            this.lang = param1.readUTF();
            var _loc3_ = param1.readVarInt();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc7_ = param1.readByte();
                this.credentials.push(_loc7_);
                _loc4_++;
            }
            this.serverId = param1.readShort();
            this.sessionOptionalSalt = param1.readVarLong();
            if (this.sessionOptionalSalt < -9.007199254740992E15 || this.sessionOptionalSalt > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.sessionOptionalSalt + ') on element of IdentificationMessage.sessionOptionalSalt.');
            }
            var _loc5_ = param1.readUnsignedShort();
            var _loc6_ = 0;
            while (_loc6_ < _loc5_) {
                _loc8_ = param1.readVarUhShort();
                if (_loc8_ < 0) {
                    throw new Error('Forbidden value (' + _loc8_ + ') on elements of failedAttempts.');
                }
                this.failedAttempts.push(_loc8_);
                _loc6_++;
            }
        };
        IdentificationMessage.ID = 4;
        return IdentificationMessage;
    })(NetworkMessage);
    Protocol.IdentificationMessage = IdentificationMessage;
    var IdentificationSuccessMessage = (function (_super) {
        __extends(IdentificationSuccessMessage, _super);
        function IdentificationSuccessMessage() {
            this.login = '';
            this.nickname = '';
            this.accountId = 0;
            this.communityId = 0;
            this.hasRights = false;
            this.secretQuestion = '';
            this.accountCreation = 0;
            this.subscriptionElapsedDuration = 0;
            this.subscriptionEndDate = 0;
            this.wasAlreadyConnected = false;
            _super.call(this);
        }
        IdentificationSuccessMessage.prototype.getMessageId = function () {
            return IdentificationSuccessMessage.ID;
        };
        IdentificationSuccessMessage.prototype.reset = function () {
            this.login = '';
            this.nickname = '';
            this.accountId = 0;
            this.communityId = 0;
            this.hasRights = false;
            this.secretQuestion = '';
            this.accountCreation = 0;
            this.subscriptionElapsedDuration = 0;
            this.subscriptionEndDate = 0;
            this.wasAlreadyConnected = false;
        };
        IdentificationSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationSuccessMessage(param1);
        };
        IdentificationSuccessMessage.prototype.serializeAs_IdentificationSuccessMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.hasRights);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.wasAlreadyConnected);
            param1.writeByte(_loc2_);
            param1.writeUTF(this.login);
            param1.writeUTF(this.nickname);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            if (this.communityId < 0) {
                throw new Error('Forbidden value (' + this.communityId + ') on element communityId.');
            }
            param1.writeByte(this.communityId);
            param1.writeUTF(this.secretQuestion);
            if (this.accountCreation < 0 || this.accountCreation > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.accountCreation + ') on element accountCreation.');
            }
            param1.writeDouble(this.accountCreation);
            if (this.subscriptionElapsedDuration < 0 || this.subscriptionElapsedDuration > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.subscriptionElapsedDuration + ') on element subscriptionElapsedDuration.');
            }
            param1.writeDouble(this.subscriptionElapsedDuration);
            if (this.subscriptionEndDate < 0 || this.subscriptionEndDate > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.subscriptionEndDate + ') on element subscriptionEndDate.');
            }
            param1.writeDouble(this.subscriptionEndDate);
        };
        IdentificationSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationSuccessMessage(param1);
        };
        IdentificationSuccessMessage.prototype.deserializeAs_IdentificationSuccessMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.hasRights = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.wasAlreadyConnected = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.login = param1.readUTF();
            this.nickname = param1.readUTF();
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of IdentificationSuccessMessage.accountId.');
            }
            this.communityId = param1.readByte();
            if (this.communityId < 0) {
                throw new Error('Forbidden value (' + this.communityId + ') on element of IdentificationSuccessMessage.communityId.');
            }
            this.secretQuestion = param1.readUTF();
            this.accountCreation = param1.readDouble();
            if (this.accountCreation < 0 || this.accountCreation > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.accountCreation + ') on element of IdentificationSuccessMessage.accountCreation.');
            }
            this.subscriptionElapsedDuration = param1.readDouble();
            if (this.subscriptionElapsedDuration < 0 || this.subscriptionElapsedDuration > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.subscriptionElapsedDuration + ') on element of IdentificationSuccessMessage.subscriptionElapsedDuration.');
            }
            this.subscriptionEndDate = param1.readDouble();
            if (this.subscriptionEndDate < 0 || this.subscriptionEndDate > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.subscriptionEndDate + ') on element of IdentificationSuccessMessage.subscriptionEndDate.');
            }
        };
        IdentificationSuccessMessage.ID = 22;
        return IdentificationSuccessMessage;
    })(NetworkMessage);
    Protocol.IdentificationSuccessMessage = IdentificationSuccessMessage;
    var IdentificationSuccessWithLoginTokenMessage = (function (_super) {
        __extends(IdentificationSuccessWithLoginTokenMessage, _super);
        function IdentificationSuccessWithLoginTokenMessage() {
            this.loginToken = '';
            _super.call(this);
        }
        IdentificationSuccessWithLoginTokenMessage.prototype.getMessageId = function () {
            return IdentificationSuccessWithLoginTokenMessage.ID;
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.reset = function () {
            this.loginToken = '';
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdentificationSuccessWithLoginTokenMessage(param1);
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.serializeAs_IdentificationSuccessWithLoginTokenMessage = function (param1) {
            _super.prototype.serializeAs_IdentificationSuccessMessage.call(this, param1);
            param1.writeUTF(this.loginToken);
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentificationSuccessWithLoginTokenMessage(param1);
        };
        IdentificationSuccessWithLoginTokenMessage.prototype.deserializeAs_IdentificationSuccessWithLoginTokenMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.loginToken = param1.readUTF();
        };
        IdentificationSuccessWithLoginTokenMessage.ID = 6209;
        return IdentificationSuccessWithLoginTokenMessage;
    })(IdentificationSuccessMessage);
    Protocol.IdentificationSuccessWithLoginTokenMessage = IdentificationSuccessWithLoginTokenMessage;
    var SelectedServerDataExtendedMessage = (function (_super) {
        __extends(SelectedServerDataExtendedMessage, _super);
        function SelectedServerDataExtendedMessage() {
            this.serverIds = [];
            _super.call(this);
        }
        SelectedServerDataExtendedMessage.prototype.getMessageId = function () {
            return SelectedServerDataExtendedMessage.ID;
        };
        SelectedServerDataExtendedMessage.prototype.reset = function () {
            this.serverIds = [];
        };
        SelectedServerDataExtendedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SelectedServerDataExtendedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SelectedServerDataExtendedMessage.prototype.serialize = function (param1) {
            this.serializeAs_SelectedServerDataExtendedMessage(param1);
        };
        SelectedServerDataExtendedMessage.prototype.serializeAs_SelectedServerDataExtendedMessage = function (param1) {
            _super.prototype.serializeAs_SelectedServerDataMessage.call(this, param1);
            param1.writeShort(this.serverIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.serverIds.length) {
                if (this.serverIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.serverIds[_loc2_] + ') on element 1 (starting at 1) of serverIds.');
                }
                param1.writeVarShort(this.serverIds[_loc2_]);
                _loc2_++;
            }
        };
        SelectedServerDataExtendedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SelectedServerDataExtendedMessage(param1);
        };
        SelectedServerDataExtendedMessage.prototype.deserializeAs_SelectedServerDataExtendedMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of serverIds.');
                }
                this.serverIds.push(_loc4_);
                _loc3_++;
            }
        };
        SelectedServerDataExtendedMessage.ID = 6469;
        return SelectedServerDataExtendedMessage;
    })(SelectedServerDataMessage);
    Protocol.SelectedServerDataExtendedMessage = SelectedServerDataExtendedMessage;
    var SelectedServerDataMessage = (function (_super) {
        __extends(SelectedServerDataMessage, _super);
        function SelectedServerDataMessage() {
            this.serverId = 0;
            this.address = '';
            this.port = 0;
            this.canCreateNewCharacter = false;
            this.ticket = [];
            _super.call(this);
        }
        SelectedServerDataMessage.prototype.getMessageId = function () {
            return SelectedServerDataMessage.ID;
        };
        SelectedServerDataMessage.prototype.reset = function () {
            this.serverId = 0;
            this.address = '';
            this.port = 0;
            this.canCreateNewCharacter = false;
            this.ticket = [];
        };
        SelectedServerDataMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SelectedServerDataMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SelectedServerDataMessage.prototype.serialize = function (param1) {
            this.serializeAs_SelectedServerDataMessage(param1);
        };
        SelectedServerDataMessage.prototype.serializeAs_SelectedServerDataMessage = function (param1) {
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element serverId.');
            }
            param1.writeVarShort(this.serverId);
            param1.writeUTF(this.address);
            if (this.port < 0 || this.port > 65535) {
                throw new Error('Forbidden value (' + this.port + ') on element port.');
            }
            param1.writeShort(this.port);
            param1.writeBoolean(this.canCreateNewCharacter);
            param1.writeVarInt(this.ticket.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ticket.length) {
                param1.writeByte(this.ticket[_loc2_]);
                _loc2_++;
            }
        };
        SelectedServerDataMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SelectedServerDataMessage(param1);
        };
        SelectedServerDataMessage.prototype.deserializeAs_SelectedServerDataMessage = function (param1) {
            var _loc4_ = 0;
            this.serverId = param1.readVarUhShort();
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element of SelectedServerDataMessage.serverId.');
            }
            this.address = param1.readUTF();
            this.port = param1.readUnsignedShort();
            if (this.port < 0 || this.port > 65535) {
                throw new Error('Forbidden value (' + this.port + ') on element of SelectedServerDataMessage.port.');
            }
            this.canCreateNewCharacter = param1.readBoolean();
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.ticket.push(_loc4_);
                _loc3_++;
            }
        };
        SelectedServerDataMessage.ID = 42;
        return SelectedServerDataMessage;
    })(NetworkMessage);
    Protocol.SelectedServerDataMessage = SelectedServerDataMessage;
    var SelectedServerRefusedMessage = (function (_super) {
        __extends(SelectedServerRefusedMessage, _super);
        function SelectedServerRefusedMessage() {
            this.serverId = 0;
            this.error = 1;
            this.serverStatus = 1;
            _super.call(this);
        }
        SelectedServerRefusedMessage.prototype.getMessageId = function () {
            return SelectedServerRefusedMessage.ID;
        };
        SelectedServerRefusedMessage.prototype.reset = function () {
            this.serverId = 0;
            this.error = 1;
            this.serverStatus = 1;
        };
        SelectedServerRefusedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SelectedServerRefusedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SelectedServerRefusedMessage.prototype.serialize = function (param1) {
            this.serializeAs_SelectedServerRefusedMessage(param1);
        };
        SelectedServerRefusedMessage.prototype.serializeAs_SelectedServerRefusedMessage = function (param1) {
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element serverId.');
            }
            param1.writeVarShort(this.serverId);
            param1.writeByte(this.error);
            param1.writeByte(this.serverStatus);
        };
        SelectedServerRefusedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SelectedServerRefusedMessage(param1);
        };
        SelectedServerRefusedMessage.prototype.deserializeAs_SelectedServerRefusedMessage = function (param1) {
            this.serverId = param1.readVarUhShort();
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element of SelectedServerRefusedMessage.serverId.');
            }
            this.error = param1.readByte();
            if (this.error < 0) {
                throw new Error('Forbidden value (' + this.error + ') on element of SelectedServerRefusedMessage.error.');
            }
            this.serverStatus = param1.readByte();
            if (this.serverStatus < 0) {
                throw new Error('Forbidden value (' + this.serverStatus + ') on element of SelectedServerRefusedMessage.serverStatus.');
            }
        };
        SelectedServerRefusedMessage.ID = 41;
        return SelectedServerRefusedMessage;
    })(NetworkMessage);
    Protocol.SelectedServerRefusedMessage = SelectedServerRefusedMessage;
    var ServerSelectionMessage = (function (_super) {
        __extends(ServerSelectionMessage, _super);
        function ServerSelectionMessage() {
            this.serverId = 0;
            _super.call(this);
        }
        ServerSelectionMessage.prototype.getMessageId = function () {
            return ServerSelectionMessage.ID;
        };
        ServerSelectionMessage.prototype.reset = function () {
            this.serverId = 0;
        };
        ServerSelectionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerSelectionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerSelectionMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerSelectionMessage(param1);
        };
        ServerSelectionMessage.prototype.serializeAs_ServerSelectionMessage = function (param1) {
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element serverId.');
            }
            param1.writeVarShort(this.serverId);
        };
        ServerSelectionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSelectionMessage(param1);
        };
        ServerSelectionMessage.prototype.deserializeAs_ServerSelectionMessage = function (param1) {
            this.serverId = param1.readVarUhShort();
            if (this.serverId < 0) {
                throw new Error('Forbidden value (' + this.serverId + ') on element of ServerSelectionMessage.serverId.');
            }
        };
        ServerSelectionMessage.ID = 40;
        return ServerSelectionMessage;
    })(NetworkMessage);
    Protocol.ServerSelectionMessage = ServerSelectionMessage;
    var ServerStatusUpdateMessage = (function (_super) {
        __extends(ServerStatusUpdateMessage, _super);
        function ServerStatusUpdateMessage() {
            this.server = new GameServerInformations();
            _super.call(this);
        }
        ServerStatusUpdateMessage.prototype.getMessageId = function () {
            return ServerStatusUpdateMessage.ID;
        };
        ServerStatusUpdateMessage.prototype.reset = function () {
            this.server = new GameServerInformations();
        };
        ServerStatusUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerStatusUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerStatusUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerStatusUpdateMessage(param1);
        };
        ServerStatusUpdateMessage.prototype.serializeAs_ServerStatusUpdateMessage = function (param1) {
            this.server.serializeAs_GameServerInformations(param1);
        };
        ServerStatusUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerStatusUpdateMessage(param1);
        };
        ServerStatusUpdateMessage.prototype.deserializeAs_ServerStatusUpdateMessage = function (param1) {
            this.server = new GameServerInformations();
            this.server.deserialize(param1);
        };
        ServerStatusUpdateMessage.ID = 50;
        return ServerStatusUpdateMessage;
    })(NetworkMessage);
    Protocol.ServerStatusUpdateMessage = ServerStatusUpdateMessage;
    var ServersListMessage = (function (_super) {
        __extends(ServersListMessage, _super);
        function ServersListMessage() {
            this.servers = [];
            this.alreadyConnectedToServerId = 0;
            this.canCreateNewCharacter = false;
            _super.call(this);
        }
        ServersListMessage.prototype.getMessageId = function () {
            return ServersListMessage.ID;
        };
        ServersListMessage.prototype.reset = function () {
            this.servers = [];
            this.alreadyConnectedToServerId = 0;
            this.canCreateNewCharacter = false;
        };
        ServersListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServersListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServersListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServersListMessage(param1);
        };
        ServersListMessage.prototype.serializeAs_ServersListMessage = function (param1) {
            param1.writeShort(this.servers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.servers.length) {
                (this.servers[_loc2_]).serializeAs_GameServerInformations(param1);
                _loc2_++;
            }
            if (this.alreadyConnectedToServerId < 0) {
                throw new Error('Forbidden value (' + this.alreadyConnectedToServerId + ') on element alreadyConnectedToServerId.');
            }
            param1.writeVarShort(this.alreadyConnectedToServerId);
            param1.writeBoolean(this.canCreateNewCharacter);
        };
        ServersListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServersListMessage(param1);
        };
        ServersListMessage.prototype.deserializeAs_ServersListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GameServerInformations();
                _loc4_.deserialize(param1);
                this.servers.push(_loc4_);
                _loc3_++;
            }
            this.alreadyConnectedToServerId = param1.readVarUhShort();
            if (this.alreadyConnectedToServerId < 0) {
                throw new Error('Forbidden value (' + this.alreadyConnectedToServerId + ') on element of ServersListMessage.alreadyConnectedToServerId.');
            }
            this.canCreateNewCharacter = param1.readBoolean();
        };
        ServersListMessage.ID = 30;
        return ServersListMessage;
    })(NetworkMessage);
    Protocol.ServersListMessage = ServersListMessage;
    var AccountLinkRequiredMessage = (function (_super) {
        __extends(AccountLinkRequiredMessage, _super);
        function AccountLinkRequiredMessage() {
            _super.call(this);
        }
        AccountLinkRequiredMessage.prototype.getMessageId = function () {
            return AccountLinkRequiredMessage.ID;
        };
        AccountLinkRequiredMessage.prototype.reset = function () {
        };
        AccountLinkRequiredMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccountLinkRequiredMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccountLinkRequiredMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccountLinkRequiredMessage(param1);
        };
        AccountLinkRequiredMessage.prototype.serializeAs_AccountLinkRequiredMessage = function (param1) {
        };
        AccountLinkRequiredMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccountLinkRequiredMessage(param1);
        };
        AccountLinkRequiredMessage.prototype.deserializeAs_AccountLinkRequiredMessage = function (param1) {
        };
        AccountLinkRequiredMessage.ID = 6607;
        return AccountLinkRequiredMessage;
    })(NetworkMessage);
    Protocol.AccountLinkRequiredMessage = AccountLinkRequiredMessage;
    var NicknameAcceptedMessage = (function (_super) {
        __extends(NicknameAcceptedMessage, _super);
        function NicknameAcceptedMessage() {
            _super.call(this);
        }
        NicknameAcceptedMessage.prototype.getMessageId = function () {
            return NicknameAcceptedMessage.ID;
        };
        NicknameAcceptedMessage.prototype.reset = function () {
        };
        NicknameAcceptedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NicknameAcceptedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NicknameAcceptedMessage.prototype.serialize = function (param1) {
            this.serializeAs_NicknameAcceptedMessage(param1);
        };
        NicknameAcceptedMessage.prototype.serializeAs_NicknameAcceptedMessage = function (param1) {
        };
        NicknameAcceptedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NicknameAcceptedMessage(param1);
        };
        NicknameAcceptedMessage.prototype.deserializeAs_NicknameAcceptedMessage = function (param1) {
        };
        NicknameAcceptedMessage.ID = 5641;
        return NicknameAcceptedMessage;
    })(NetworkMessage);
    Protocol.NicknameAcceptedMessage = NicknameAcceptedMessage;
    var NicknameChoiceRequestMessage = (function (_super) {
        __extends(NicknameChoiceRequestMessage, _super);
        function NicknameChoiceRequestMessage() {
            this.nickname = '';
            _super.call(this);
        }
        NicknameChoiceRequestMessage.prototype.getMessageId = function () {
            return NicknameChoiceRequestMessage.ID;
        };
        NicknameChoiceRequestMessage.prototype.reset = function () {
            this.nickname = '';
        };
        NicknameChoiceRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NicknameChoiceRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NicknameChoiceRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_NicknameChoiceRequestMessage(param1);
        };
        NicknameChoiceRequestMessage.prototype.serializeAs_NicknameChoiceRequestMessage = function (param1) {
            param1.writeUTF(this.nickname);
        };
        NicknameChoiceRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NicknameChoiceRequestMessage(param1);
        };
        NicknameChoiceRequestMessage.prototype.deserializeAs_NicknameChoiceRequestMessage = function (param1) {
            this.nickname = param1.readUTF();
        };
        NicknameChoiceRequestMessage.ID = 5639;
        return NicknameChoiceRequestMessage;
    })(NetworkMessage);
    Protocol.NicknameChoiceRequestMessage = NicknameChoiceRequestMessage;
    var NicknameRefusedMessage = (function (_super) {
        __extends(NicknameRefusedMessage, _super);
        function NicknameRefusedMessage() {
            this.reason = 99;
            _super.call(this);
        }
        NicknameRefusedMessage.prototype.getMessageId = function () {
            return NicknameRefusedMessage.ID;
        };
        NicknameRefusedMessage.prototype.reset = function () {
            this.reason = 99;
        };
        NicknameRefusedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NicknameRefusedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NicknameRefusedMessage.prototype.serialize = function (param1) {
            this.serializeAs_NicknameRefusedMessage(param1);
        };
        NicknameRefusedMessage.prototype.serializeAs_NicknameRefusedMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        NicknameRefusedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NicknameRefusedMessage(param1);
        };
        NicknameRefusedMessage.prototype.deserializeAs_NicknameRefusedMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of NicknameRefusedMessage.reason.');
            }
        };
        NicknameRefusedMessage.ID = 5638;
        return NicknameRefusedMessage;
    })(NetworkMessage);
    Protocol.NicknameRefusedMessage = NicknameRefusedMessage;
    var NicknameRegistrationMessage = (function (_super) {
        __extends(NicknameRegistrationMessage, _super);
        function NicknameRegistrationMessage() {
            _super.call(this);
        }
        NicknameRegistrationMessage.prototype.getMessageId = function () {
            return NicknameRegistrationMessage.ID;
        };
        NicknameRegistrationMessage.prototype.reset = function () {
        };
        NicknameRegistrationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NicknameRegistrationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NicknameRegistrationMessage.prototype.serialize = function (param1) {
            this.serializeAs_NicknameRegistrationMessage(param1);
        };
        NicknameRegistrationMessage.prototype.serializeAs_NicknameRegistrationMessage = function (param1) {
        };
        NicknameRegistrationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NicknameRegistrationMessage(param1);
        };
        NicknameRegistrationMessage.prototype.deserializeAs_NicknameRegistrationMessage = function (param1) {
        };
        NicknameRegistrationMessage.ID = 5640;
        return NicknameRegistrationMessage;
    })(NetworkMessage);
    Protocol.NicknameRegistrationMessage = NicknameRegistrationMessage;
    var AcquaintanceSearchErrorMessage = (function (_super) {
        __extends(AcquaintanceSearchErrorMessage, _super);
        function AcquaintanceSearchErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        AcquaintanceSearchErrorMessage.prototype.getMessageId = function () {
            return AcquaintanceSearchErrorMessage.ID;
        };
        AcquaintanceSearchErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        AcquaintanceSearchErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AcquaintanceSearchErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AcquaintanceSearchErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_AcquaintanceSearchErrorMessage(param1);
        };
        AcquaintanceSearchErrorMessage.prototype.serializeAs_AcquaintanceSearchErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        AcquaintanceSearchErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AcquaintanceSearchErrorMessage(param1);
        };
        AcquaintanceSearchErrorMessage.prototype.deserializeAs_AcquaintanceSearchErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of AcquaintanceSearchErrorMessage.reason.');
            }
        };
        AcquaintanceSearchErrorMessage.ID = 6143;
        return AcquaintanceSearchErrorMessage;
    })(NetworkMessage);
    Protocol.AcquaintanceSearchErrorMessage = AcquaintanceSearchErrorMessage;
    var AcquaintanceSearchMessage = (function (_super) {
        __extends(AcquaintanceSearchMessage, _super);
        function AcquaintanceSearchMessage() {
            this.nickname = '';
            _super.call(this);
        }
        AcquaintanceSearchMessage.prototype.getMessageId = function () {
            return AcquaintanceSearchMessage.ID;
        };
        AcquaintanceSearchMessage.prototype.reset = function () {
            this.nickname = '';
        };
        AcquaintanceSearchMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AcquaintanceSearchMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AcquaintanceSearchMessage.prototype.serialize = function (param1) {
            this.serializeAs_AcquaintanceSearchMessage(param1);
        };
        AcquaintanceSearchMessage.prototype.serializeAs_AcquaintanceSearchMessage = function (param1) {
            param1.writeUTF(this.nickname);
        };
        AcquaintanceSearchMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AcquaintanceSearchMessage(param1);
        };
        AcquaintanceSearchMessage.prototype.deserializeAs_AcquaintanceSearchMessage = function (param1) {
            this.nickname = param1.readUTF();
        };
        AcquaintanceSearchMessage.ID = 6144;
        return AcquaintanceSearchMessage;
    })(NetworkMessage);
    Protocol.AcquaintanceSearchMessage = AcquaintanceSearchMessage;
    var AcquaintanceServerListMessage = (function (_super) {
        __extends(AcquaintanceServerListMessage, _super);
        function AcquaintanceServerListMessage() {
            this.servers = [];
            _super.call(this);
        }
        AcquaintanceServerListMessage.prototype.getMessageId = function () {
            return AcquaintanceServerListMessage.ID;
        };
        AcquaintanceServerListMessage.prototype.reset = function () {
            this.servers = [];
        };
        AcquaintanceServerListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AcquaintanceServerListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AcquaintanceServerListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AcquaintanceServerListMessage(param1);
        };
        AcquaintanceServerListMessage.prototype.serializeAs_AcquaintanceServerListMessage = function (param1) {
            param1.writeShort(this.servers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.servers.length) {
                if (this.servers[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.servers[_loc2_] + ') on element 1 (starting at 1) of servers.');
                }
                param1.writeVarShort(this.servers[_loc2_]);
                _loc2_++;
            }
        };
        AcquaintanceServerListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AcquaintanceServerListMessage(param1);
        };
        AcquaintanceServerListMessage.prototype.deserializeAs_AcquaintanceServerListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of servers.');
                }
                this.servers.push(_loc4_);
                _loc3_++;
            }
        };
        AcquaintanceServerListMessage.ID = 6142;
        return AcquaintanceServerListMessage;
    })(NetworkMessage);
    Protocol.AcquaintanceServerListMessage = AcquaintanceServerListMessage;
    var DebugClearHighlightCellsMessage = (function (_super) {
        __extends(DebugClearHighlightCellsMessage, _super);
        function DebugClearHighlightCellsMessage() {
            _super.call(this);
        }
        DebugClearHighlightCellsMessage.prototype.getMessageId = function () {
            return DebugClearHighlightCellsMessage.ID;
        };
        DebugClearHighlightCellsMessage.prototype.reset = function () {
        };
        DebugClearHighlightCellsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DebugClearHighlightCellsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DebugClearHighlightCellsMessage.prototype.serialize = function (param1) {
            this.serializeAs_DebugClearHighlightCellsMessage(param1);
        };
        DebugClearHighlightCellsMessage.prototype.serializeAs_DebugClearHighlightCellsMessage = function (param1) {
        };
        DebugClearHighlightCellsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DebugClearHighlightCellsMessage(param1);
        };
        DebugClearHighlightCellsMessage.prototype.deserializeAs_DebugClearHighlightCellsMessage = function (param1) {
        };
        DebugClearHighlightCellsMessage.ID = 2002;
        return DebugClearHighlightCellsMessage;
    })(NetworkMessage);
    Protocol.DebugClearHighlightCellsMessage = DebugClearHighlightCellsMessage;
    var DebugHighlightCellsMessage = (function (_super) {
        __extends(DebugHighlightCellsMessage, _super);
        function DebugHighlightCellsMessage() {
            this.color = 0;
            this.cells = [];
            _super.call(this);
        }
        DebugHighlightCellsMessage.prototype.getMessageId = function () {
            return DebugHighlightCellsMessage.ID;
        };
        DebugHighlightCellsMessage.prototype.reset = function () {
            this.color = 0;
            this.cells = [];
        };
        DebugHighlightCellsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DebugHighlightCellsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DebugHighlightCellsMessage.prototype.serialize = function (param1) {
            this.serializeAs_DebugHighlightCellsMessage(param1);
        };
        DebugHighlightCellsMessage.prototype.serializeAs_DebugHighlightCellsMessage = function (param1) {
            param1.writeInt(this.color);
            param1.writeShort(this.cells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.cells.length) {
                if (this.cells[_loc2_] < 0 || this.cells[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.cells[_loc2_] + ') on element 2 (starting at 1) of cells.');
                }
                param1.writeVarShort(this.cells[_loc2_]);
                _loc2_++;
            }
        };
        DebugHighlightCellsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DebugHighlightCellsMessage(param1);
        };
        DebugHighlightCellsMessage.prototype.deserializeAs_DebugHighlightCellsMessage = function (param1) {
            var _loc4_ = 0;
            this.color = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0 || _loc4_ > 559) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of cells.');
                }
                this.cells.push(_loc4_);
                _loc3_++;
            }
        };
        DebugHighlightCellsMessage.ID = 2001;
        return DebugHighlightCellsMessage;
    })(NetworkMessage);
    Protocol.DebugHighlightCellsMessage = DebugHighlightCellsMessage;
    var DebugInClientMessage = (function (_super) {
        __extends(DebugInClientMessage, _super);
        function DebugInClientMessage() {
            this.level = 0;
            this.message = '';
            _super.call(this);
        }
        DebugInClientMessage.prototype.getMessageId = function () {
            return DebugInClientMessage.ID;
        };
        DebugInClientMessage.prototype.reset = function () {
            this.level = 0;
            this.message = '';
        };
        DebugInClientMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DebugInClientMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DebugInClientMessage.prototype.serialize = function (param1) {
            this.serializeAs_DebugInClientMessage(param1);
        };
        DebugInClientMessage.prototype.serializeAs_DebugInClientMessage = function (param1) {
            param1.writeByte(this.level);
            param1.writeUTF(this.message);
        };
        DebugInClientMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DebugInClientMessage(param1);
        };
        DebugInClientMessage.prototype.deserializeAs_DebugInClientMessage = function (param1) {
            this.level = param1.readByte();
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element of DebugInClientMessage.level.');
            }
            this.message = param1.readUTF();
        };
        DebugInClientMessage.ID = 6028;
        return DebugInClientMessage;
    })(NetworkMessage);
    Protocol.DebugInClientMessage = DebugInClientMessage;
    var AchievementDetailedListMessage = (function (_super) {
        __extends(AchievementDetailedListMessage, _super);
        function AchievementDetailedListMessage() {
            this.startedAchievements = [];
            this.finishedAchievements = [];
            _super.call(this);
        }
        AchievementDetailedListMessage.prototype.getMessageId = function () {
            return AchievementDetailedListMessage.ID;
        };
        AchievementDetailedListMessage.prototype.reset = function () {
            this.startedAchievements = [];
            this.finishedAchievements = [];
        };
        AchievementDetailedListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementDetailedListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementDetailedListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementDetailedListMessage(param1);
        };
        AchievementDetailedListMessage.prototype.serializeAs_AchievementDetailedListMessage = function (param1) {
            param1.writeShort(this.startedAchievements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.startedAchievements.length) {
                (this.startedAchievements[_loc2_]).serializeAs_Achievement(param1);
                _loc2_++;
            }
            param1.writeShort(this.finishedAchievements.length);
            var _loc3_ = 0;
            while (_loc3_ < this.finishedAchievements.length) {
                (this.finishedAchievements[_loc3_]).serializeAs_Achievement(param1);
                _loc3_++;
            }
        };
        AchievementDetailedListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementDetailedListMessage(param1);
        };
        AchievementDetailedListMessage.prototype.deserializeAs_AchievementDetailedListMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new Achievement();
                _loc6_.deserialize(param1);
                this.startedAchievements.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = new Achievement();
                _loc7_.deserialize(param1);
                this.finishedAchievements.push(_loc7_);
                _loc5_++;
            }
        };
        AchievementDetailedListMessage.ID = 6358;
        return AchievementDetailedListMessage;
    })(NetworkMessage);
    Protocol.AchievementDetailedListMessage = AchievementDetailedListMessage;
    var AchievementDetailedListRequestMessage = (function (_super) {
        __extends(AchievementDetailedListRequestMessage, _super);
        function AchievementDetailedListRequestMessage() {
            this.categoryId = 0;
            _super.call(this);
        }
        AchievementDetailedListRequestMessage.prototype.getMessageId = function () {
            return AchievementDetailedListRequestMessage.ID;
        };
        AchievementDetailedListRequestMessage.prototype.reset = function () {
            this.categoryId = 0;
        };
        AchievementDetailedListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementDetailedListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementDetailedListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementDetailedListRequestMessage(param1);
        };
        AchievementDetailedListRequestMessage.prototype.serializeAs_AchievementDetailedListRequestMessage = function (param1) {
            if (this.categoryId < 0) {
                throw new Error('Forbidden value (' + this.categoryId + ') on element categoryId.');
            }
            param1.writeVarShort(this.categoryId);
        };
        AchievementDetailedListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementDetailedListRequestMessage(param1);
        };
        AchievementDetailedListRequestMessage.prototype.deserializeAs_AchievementDetailedListRequestMessage = function (param1) {
            this.categoryId = param1.readVarUhShort();
            if (this.categoryId < 0) {
                throw new Error('Forbidden value (' + this.categoryId + ') on element of AchievementDetailedListRequestMessage.categoryId.');
            }
        };
        AchievementDetailedListRequestMessage.ID = 6357;
        return AchievementDetailedListRequestMessage;
    })(NetworkMessage);
    Protocol.AchievementDetailedListRequestMessage = AchievementDetailedListRequestMessage;
    var AchievementDetailsMessage = (function (_super) {
        __extends(AchievementDetailsMessage, _super);
        function AchievementDetailsMessage() {
            this.achievement = new Achievement();
            _super.call(this);
        }
        AchievementDetailsMessage.prototype.getMessageId = function () {
            return AchievementDetailsMessage.ID;
        };
        AchievementDetailsMessage.prototype.reset = function () {
            this.achievement = new Achievement();
        };
        AchievementDetailsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementDetailsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementDetailsMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementDetailsMessage(param1);
        };
        AchievementDetailsMessage.prototype.serializeAs_AchievementDetailsMessage = function (param1) {
            this.achievement.serializeAs_Achievement(param1);
        };
        AchievementDetailsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementDetailsMessage(param1);
        };
        AchievementDetailsMessage.prototype.deserializeAs_AchievementDetailsMessage = function (param1) {
            this.achievement = new Achievement();
            this.achievement.deserialize(param1);
        };
        AchievementDetailsMessage.ID = 6378;
        return AchievementDetailsMessage;
    })(NetworkMessage);
    Protocol.AchievementDetailsMessage = AchievementDetailsMessage;
    var AchievementDetailsRequestMessage = (function (_super) {
        __extends(AchievementDetailsRequestMessage, _super);
        function AchievementDetailsRequestMessage() {
            this.achievementId = 0;
            _super.call(this);
        }
        AchievementDetailsRequestMessage.prototype.getMessageId = function () {
            return AchievementDetailsRequestMessage.ID;
        };
        AchievementDetailsRequestMessage.prototype.reset = function () {
            this.achievementId = 0;
        };
        AchievementDetailsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementDetailsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementDetailsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementDetailsRequestMessage(param1);
        };
        AchievementDetailsRequestMessage.prototype.serializeAs_AchievementDetailsRequestMessage = function (param1) {
            if (this.achievementId < 0) {
                throw new Error('Forbidden value (' + this.achievementId + ') on element achievementId.');
            }
            param1.writeVarShort(this.achievementId);
        };
        AchievementDetailsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementDetailsRequestMessage(param1);
        };
        AchievementDetailsRequestMessage.prototype.deserializeAs_AchievementDetailsRequestMessage = function (param1) {
            this.achievementId = param1.readVarUhShort();
            if (this.achievementId < 0) {
                throw new Error('Forbidden value (' + this.achievementId + ') on element of AchievementDetailsRequestMessage.achievementId.');
            }
        };
        AchievementDetailsRequestMessage.ID = 6380;
        return AchievementDetailsRequestMessage;
    })(NetworkMessage);
    Protocol.AchievementDetailsRequestMessage = AchievementDetailsRequestMessage;
    var AchievementFinishedInformationMessage = (function (_super) {
        __extends(AchievementFinishedInformationMessage, _super);
        function AchievementFinishedInformationMessage() {
            this.name = '';
            this.playerId = 0;
            _super.call(this);
        }
        AchievementFinishedInformationMessage.prototype.getMessageId = function () {
            return AchievementFinishedInformationMessage.ID;
        };
        AchievementFinishedInformationMessage.prototype.reset = function () {
            this.name = '';
            this.playerId = 0;
        };
        AchievementFinishedInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementFinishedInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementFinishedInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementFinishedInformationMessage(param1);
        };
        AchievementFinishedInformationMessage.prototype.serializeAs_AchievementFinishedInformationMessage = function (param1) {
            _super.prototype.serializeAs_AchievementFinishedMessage.call(this, param1);
            param1.writeUTF(this.name);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        AchievementFinishedInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementFinishedInformationMessage(param1);
        };
        AchievementFinishedInformationMessage.prototype.deserializeAs_AchievementFinishedInformationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of AchievementFinishedInformationMessage.playerId.');
            }
        };
        AchievementFinishedInformationMessage.ID = 6381;
        return AchievementFinishedInformationMessage;
    })(AchievementFinishedMessage);
    Protocol.AchievementFinishedInformationMessage = AchievementFinishedInformationMessage;
    var AchievementFinishedMessage = (function (_super) {
        __extends(AchievementFinishedMessage, _super);
        function AchievementFinishedMessage() {
            this.id = 0;
            this.finishedlevel = 0;
            _super.call(this);
        }
        AchievementFinishedMessage.prototype.getMessageId = function () {
            return AchievementFinishedMessage.ID;
        };
        AchievementFinishedMessage.prototype.reset = function () {
            this.id = 0;
            this.finishedlevel = 0;
        };
        AchievementFinishedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementFinishedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementFinishedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementFinishedMessage(param1);
        };
        AchievementFinishedMessage.prototype.serializeAs_AchievementFinishedMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            if (this.finishedlevel < 0 || this.finishedlevel > 200) {
                throw new Error('Forbidden value (' + this.finishedlevel + ') on element finishedlevel.');
            }
            param1.writeByte(this.finishedlevel);
        };
        AchievementFinishedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementFinishedMessage(param1);
        };
        AchievementFinishedMessage.prototype.deserializeAs_AchievementFinishedMessage = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of AchievementFinishedMessage.id.');
            }
            this.finishedlevel = param1.readUnsignedByte();
            if (this.finishedlevel < 0 || this.finishedlevel > 200) {
                throw new Error('Forbidden value (' + this.finishedlevel + ') on element of AchievementFinishedMessage.finishedlevel.');
            }
        };
        AchievementFinishedMessage.ID = 6208;
        return AchievementFinishedMessage;
    })(NetworkMessage);
    Protocol.AchievementFinishedMessage = AchievementFinishedMessage;
    var AchievementListMessage = (function (_super) {
        __extends(AchievementListMessage, _super);
        function AchievementListMessage() {
            this.finishedAchievementsIds = [];
            this.rewardableAchievements = [];
            _super.call(this);
        }
        AchievementListMessage.prototype.getMessageId = function () {
            return AchievementListMessage.ID;
        };
        AchievementListMessage.prototype.reset = function () {
            this.finishedAchievementsIds = [];
            this.rewardableAchievements = [];
        };
        AchievementListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementListMessage(param1);
        };
        AchievementListMessage.prototype.serializeAs_AchievementListMessage = function (param1) {
            param1.writeShort(this.finishedAchievementsIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.finishedAchievementsIds.length) {
                if (this.finishedAchievementsIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.finishedAchievementsIds[_loc2_] + ') on element 1 (starting at 1) of finishedAchievementsIds.');
                }
                param1.writeVarShort(this.finishedAchievementsIds[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.rewardableAchievements.length);
            var _loc3_ = 0;
            while (_loc3_ < this.rewardableAchievements.length) {
                (this.rewardableAchievements[_loc3_]).serializeAs_AchievementRewardable(param1);
                _loc3_++;
            }
        };
        AchievementListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementListMessage(param1);
        };
        AchievementListMessage.prototype.deserializeAs_AchievementListMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of finishedAchievementsIds.');
                }
                this.finishedAchievementsIds.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = new AchievementRewardable();
                _loc7_.deserialize(param1);
                this.rewardableAchievements.push(_loc7_);
                _loc5_++;
            }
        };
        AchievementListMessage.ID = 6205;
        return AchievementListMessage;
    })(NetworkMessage);
    Protocol.AchievementListMessage = AchievementListMessage;
    var AchievementRewardErrorMessage = (function (_super) {
        __extends(AchievementRewardErrorMessage, _super);
        function AchievementRewardErrorMessage() {
            this.achievementId = 0;
            _super.call(this);
        }
        AchievementRewardErrorMessage.prototype.getMessageId = function () {
            return AchievementRewardErrorMessage.ID;
        };
        AchievementRewardErrorMessage.prototype.reset = function () {
            this.achievementId = 0;
        };
        AchievementRewardErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementRewardErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementRewardErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementRewardErrorMessage(param1);
        };
        AchievementRewardErrorMessage.prototype.serializeAs_AchievementRewardErrorMessage = function (param1) {
            param1.writeShort(this.achievementId);
        };
        AchievementRewardErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementRewardErrorMessage(param1);
        };
        AchievementRewardErrorMessage.prototype.deserializeAs_AchievementRewardErrorMessage = function (param1) {
            this.achievementId = param1.readShort();
        };
        AchievementRewardErrorMessage.ID = 6375;
        return AchievementRewardErrorMessage;
    })(NetworkMessage);
    Protocol.AchievementRewardErrorMessage = AchievementRewardErrorMessage;
    var AchievementRewardRequestMessage = (function (_super) {
        __extends(AchievementRewardRequestMessage, _super);
        function AchievementRewardRequestMessage() {
            this.achievementId = 0;
            _super.call(this);
        }
        AchievementRewardRequestMessage.prototype.getMessageId = function () {
            return AchievementRewardRequestMessage.ID;
        };
        AchievementRewardRequestMessage.prototype.reset = function () {
            this.achievementId = 0;
        };
        AchievementRewardRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementRewardRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementRewardRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementRewardRequestMessage(param1);
        };
        AchievementRewardRequestMessage.prototype.serializeAs_AchievementRewardRequestMessage = function (param1) {
            param1.writeShort(this.achievementId);
        };
        AchievementRewardRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementRewardRequestMessage(param1);
        };
        AchievementRewardRequestMessage.prototype.deserializeAs_AchievementRewardRequestMessage = function (param1) {
            this.achievementId = param1.readShort();
        };
        AchievementRewardRequestMessage.ID = 6377;
        return AchievementRewardRequestMessage;
    })(NetworkMessage);
    Protocol.AchievementRewardRequestMessage = AchievementRewardRequestMessage;
    var AchievementRewardSuccessMessage = (function (_super) {
        __extends(AchievementRewardSuccessMessage, _super);
        function AchievementRewardSuccessMessage() {
            this.achievementId = 0;
            _super.call(this);
        }
        AchievementRewardSuccessMessage.prototype.getMessageId = function () {
            return AchievementRewardSuccessMessage.ID;
        };
        AchievementRewardSuccessMessage.prototype.reset = function () {
            this.achievementId = 0;
        };
        AchievementRewardSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AchievementRewardSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AchievementRewardSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_AchievementRewardSuccessMessage(param1);
        };
        AchievementRewardSuccessMessage.prototype.serializeAs_AchievementRewardSuccessMessage = function (param1) {
            param1.writeShort(this.achievementId);
        };
        AchievementRewardSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementRewardSuccessMessage(param1);
        };
        AchievementRewardSuccessMessage.prototype.deserializeAs_AchievementRewardSuccessMessage = function (param1) {
            this.achievementId = param1.readShort();
        };
        AchievementRewardSuccessMessage.ID = 6376;
        return AchievementRewardSuccessMessage;
    })(NetworkMessage);
    Protocol.AchievementRewardSuccessMessage = AchievementRewardSuccessMessage;
    var FriendGuildSetWarnOnAchievementCompleteMessage = (function (_super) {
        __extends(FriendGuildSetWarnOnAchievementCompleteMessage, _super);
        function FriendGuildSetWarnOnAchievementCompleteMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.getMessageId = function () {
            return FriendGuildSetWarnOnAchievementCompleteMessage.ID;
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendGuildSetWarnOnAchievementCompleteMessage(param1);
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.serializeAs_FriendGuildSetWarnOnAchievementCompleteMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendGuildSetWarnOnAchievementCompleteMessage(param1);
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.prototype.deserializeAs_FriendGuildSetWarnOnAchievementCompleteMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendGuildSetWarnOnAchievementCompleteMessage.ID = 6382;
        return FriendGuildSetWarnOnAchievementCompleteMessage;
    })(NetworkMessage);
    Protocol.FriendGuildSetWarnOnAchievementCompleteMessage = FriendGuildSetWarnOnAchievementCompleteMessage;
    var FriendGuildWarnOnAchievementCompleteStateMessage = (function (_super) {
        __extends(FriendGuildWarnOnAchievementCompleteStateMessage, _super);
        function FriendGuildWarnOnAchievementCompleteStateMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.getMessageId = function () {
            return FriendGuildWarnOnAchievementCompleteStateMessage.ID;
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendGuildWarnOnAchievementCompleteStateMessage(param1);
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.serializeAs_FriendGuildWarnOnAchievementCompleteStateMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendGuildWarnOnAchievementCompleteStateMessage(param1);
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.prototype.deserializeAs_FriendGuildWarnOnAchievementCompleteStateMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendGuildWarnOnAchievementCompleteStateMessage.ID = 6383;
        return FriendGuildWarnOnAchievementCompleteStateMessage;
    })(NetworkMessage);
    Protocol.FriendGuildWarnOnAchievementCompleteStateMessage = FriendGuildWarnOnAchievementCompleteStateMessage;
    var AbstractGameActionMessage = (function (_super) {
        __extends(AbstractGameActionMessage, _super);
        function AbstractGameActionMessage() {
            this.actionId = 0;
            this.sourceId = 0;
            _super.call(this);
        }
        AbstractGameActionMessage.prototype.getMessageId = function () {
            return AbstractGameActionMessage.ID;
        };
        AbstractGameActionMessage.prototype.reset = function () {
            this.actionId = 0;
            this.sourceId = 0;
        };
        AbstractGameActionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractGameActionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractGameActionMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractGameActionMessage(param1);
        };
        AbstractGameActionMessage.prototype.serializeAs_AbstractGameActionMessage = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeVarShort(this.actionId);
            param1.writeInt(this.sourceId);
        };
        AbstractGameActionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractGameActionMessage(param1);
        };
        AbstractGameActionMessage.prototype.deserializeAs_AbstractGameActionMessage = function (param1) {
            this.actionId = param1.readVarUhShort();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of AbstractGameActionMessage.actionId.');
            }
            this.sourceId = param1.readInt();
        };
        AbstractGameActionMessage.ID = 1000;
        return AbstractGameActionMessage;
    })(NetworkMessage);
    Protocol.AbstractGameActionMessage = AbstractGameActionMessage;
    var AbstractGameActionWithAckMessage = (function (_super) {
        __extends(AbstractGameActionWithAckMessage, _super);
        function AbstractGameActionWithAckMessage() {
            this.waitAckId = 0;
            _super.call(this);
        }
        AbstractGameActionWithAckMessage.prototype.getMessageId = function () {
            return AbstractGameActionWithAckMessage.ID;
        };
        AbstractGameActionWithAckMessage.prototype.reset = function () {
            this.waitAckId = 0;
        };
        AbstractGameActionWithAckMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractGameActionWithAckMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractGameActionWithAckMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractGameActionWithAckMessage(param1);
        };
        AbstractGameActionWithAckMessage.prototype.serializeAs_AbstractGameActionWithAckMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.waitAckId);
        };
        AbstractGameActionWithAckMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractGameActionWithAckMessage(param1);
        };
        AbstractGameActionWithAckMessage.prototype.deserializeAs_AbstractGameActionWithAckMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.waitAckId = param1.readShort();
        };
        AbstractGameActionWithAckMessage.ID = 1001;
        return AbstractGameActionWithAckMessage;
    })(AbstractGameActionMessage);
    Protocol.AbstractGameActionWithAckMessage = AbstractGameActionWithAckMessage;
    var GameActionAcknowledgementMessage = (function (_super) {
        __extends(GameActionAcknowledgementMessage, _super);
        function GameActionAcknowledgementMessage() {
            this.valid = false;
            this.actionId = 0;
            _super.call(this);
        }
        GameActionAcknowledgementMessage.prototype.getMessageId = function () {
            return GameActionAcknowledgementMessage.ID;
        };
        GameActionAcknowledgementMessage.prototype.reset = function () {
            this.valid = false;
            this.actionId = 0;
        };
        GameActionAcknowledgementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionAcknowledgementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionAcknowledgementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionAcknowledgementMessage(param1);
        };
        GameActionAcknowledgementMessage.prototype.serializeAs_GameActionAcknowledgementMessage = function (param1) {
            param1.writeBoolean(this.valid);
            param1.writeByte(this.actionId);
        };
        GameActionAcknowledgementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionAcknowledgementMessage(param1);
        };
        GameActionAcknowledgementMessage.prototype.deserializeAs_GameActionAcknowledgementMessage = function (param1) {
            this.valid = param1.readBoolean();
            this.actionId = param1.readByte();
        };
        GameActionAcknowledgementMessage.ID = 957;
        return GameActionAcknowledgementMessage;
    })(NetworkMessage);
    Protocol.GameActionAcknowledgementMessage = GameActionAcknowledgementMessage;
    var GameActionNoopMessage = (function (_super) {
        __extends(GameActionNoopMessage, _super);
        function GameActionNoopMessage() {
            _super.call(this);
        }
        GameActionNoopMessage.prototype.getMessageId = function () {
            return GameActionNoopMessage.ID;
        };
        GameActionNoopMessage.prototype.reset = function () {
        };
        GameActionNoopMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionNoopMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionNoopMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionNoopMessage(param1);
        };
        GameActionNoopMessage.prototype.serializeAs_GameActionNoopMessage = function (param1) {
        };
        GameActionNoopMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionNoopMessage(param1);
        };
        GameActionNoopMessage.prototype.deserializeAs_GameActionNoopMessage = function (param1) {
        };
        GameActionNoopMessage.ID = 1002;
        return GameActionNoopMessage;
    })(NetworkMessage);
    Protocol.GameActionNoopMessage = GameActionNoopMessage;
    var AbstractGameActionFightTargetedAbilityMessage = (function (_super) {
        __extends(AbstractGameActionFightTargetedAbilityMessage, _super);
        function AbstractGameActionFightTargetedAbilityMessage() {
            this.targetId = 0;
            this.destinationCellId = 0;
            this.critical = 1;
            this.silentCast = false;
            _super.call(this);
        }
        AbstractGameActionFightTargetedAbilityMessage.prototype.getMessageId = function () {
            return AbstractGameActionFightTargetedAbilityMessage.ID;
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.reset = function () {
            this.targetId = 0;
            this.destinationCellId = 0;
            this.critical = 1;
            this.silentCast = false;
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractGameActionFightTargetedAbilityMessage(param1);
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.serializeAs_AbstractGameActionFightTargetedAbilityMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.destinationCellId < -1 || this.destinationCellId > 559) {
                throw new Error('Forbidden value (' + this.destinationCellId + ') on element destinationCellId.');
            }
            param1.writeShort(this.destinationCellId);
            param1.writeByte(this.critical);
            param1.writeBoolean(this.silentCast);
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractGameActionFightTargetedAbilityMessage(param1);
        };
        AbstractGameActionFightTargetedAbilityMessage.prototype.deserializeAs_AbstractGameActionFightTargetedAbilityMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.destinationCellId = param1.readShort();
            if (this.destinationCellId < -1 || this.destinationCellId > 559) {
                throw new Error('Forbidden value (' + this.destinationCellId + ') on element of AbstractGameActionFightTargetedAbilityMessage.destinationCellId.');
            }
            this.critical = param1.readByte();
            if (this.critical < 0) {
                throw new Error('Forbidden value (' + this.critical + ') on element of AbstractGameActionFightTargetedAbilityMessage.critical.');
            }
            this.silentCast = param1.readBoolean();
        };
        AbstractGameActionFightTargetedAbilityMessage.ID = 6118;
        return AbstractGameActionFightTargetedAbilityMessage;
    })(AbstractGameActionMessage);
    Protocol.AbstractGameActionFightTargetedAbilityMessage = AbstractGameActionFightTargetedAbilityMessage;
    var GameActionFightActivateGlyphTrapMessage = (function (_super) {
        __extends(GameActionFightActivateGlyphTrapMessage, _super);
        function GameActionFightActivateGlyphTrapMessage() {
            this.markId = 0;
            this.active = false;
            _super.call(this);
        }
        GameActionFightActivateGlyphTrapMessage.prototype.getMessageId = function () {
            return GameActionFightActivateGlyphTrapMessage.ID;
        };
        GameActionFightActivateGlyphTrapMessage.prototype.reset = function () {
            this.markId = 0;
            this.active = false;
        };
        GameActionFightActivateGlyphTrapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightActivateGlyphTrapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightActivateGlyphTrapMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightActivateGlyphTrapMessage(param1);
        };
        GameActionFightActivateGlyphTrapMessage.prototype.serializeAs_GameActionFightActivateGlyphTrapMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.markId);
            param1.writeBoolean(this.active);
        };
        GameActionFightActivateGlyphTrapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightActivateGlyphTrapMessage(param1);
        };
        GameActionFightActivateGlyphTrapMessage.prototype.deserializeAs_GameActionFightActivateGlyphTrapMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.markId = param1.readShort();
            this.active = param1.readBoolean();
        };
        GameActionFightActivateGlyphTrapMessage.ID = 6545;
        return GameActionFightActivateGlyphTrapMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightActivateGlyphTrapMessage = GameActionFightActivateGlyphTrapMessage;
    var GameActionFightCarryCharacterMessage = (function (_super) {
        __extends(GameActionFightCarryCharacterMessage, _super);
        function GameActionFightCarryCharacterMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightCarryCharacterMessage.prototype.getMessageId = function () {
            return GameActionFightCarryCharacterMessage.ID;
        };
        GameActionFightCarryCharacterMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        GameActionFightCarryCharacterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightCarryCharacterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightCarryCharacterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightCarryCharacterMessage(param1);
        };
        GameActionFightCarryCharacterMessage.prototype.serializeAs_GameActionFightCarryCharacterMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightCarryCharacterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightCarryCharacterMessage(param1);
        };
        GameActionFightCarryCharacterMessage.prototype.deserializeAs_GameActionFightCarryCharacterMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightCarryCharacterMessage.cellId.');
            }
        };
        GameActionFightCarryCharacterMessage.ID = 5830;
        return GameActionFightCarryCharacterMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightCarryCharacterMessage = GameActionFightCarryCharacterMessage;
    var GameActionFightCastOnTargetRequestMessage = (function (_super) {
        __extends(GameActionFightCastOnTargetRequestMessage, _super);
        function GameActionFightCastOnTargetRequestMessage() {
            this.spellId = 0;
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightCastOnTargetRequestMessage.prototype.getMessageId = function () {
            return GameActionFightCastOnTargetRequestMessage.ID;
        };
        GameActionFightCastOnTargetRequestMessage.prototype.reset = function () {
            this.spellId = 0;
            this.targetId = 0;
        };
        GameActionFightCastOnTargetRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightCastOnTargetRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightCastOnTargetRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightCastOnTargetRequestMessage(param1);
        };
        GameActionFightCastOnTargetRequestMessage.prototype.serializeAs_GameActionFightCastOnTargetRequestMessage = function (param1) {
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            param1.writeInt(this.targetId);
        };
        GameActionFightCastOnTargetRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightCastOnTargetRequestMessage(param1);
        };
        GameActionFightCastOnTargetRequestMessage.prototype.deserializeAs_GameActionFightCastOnTargetRequestMessage = function (param1) {
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightCastOnTargetRequestMessage.spellId.');
            }
            this.targetId = param1.readInt();
        };
        GameActionFightCastOnTargetRequestMessage.ID = 6330;
        return GameActionFightCastOnTargetRequestMessage;
    })(NetworkMessage);
    Protocol.GameActionFightCastOnTargetRequestMessage = GameActionFightCastOnTargetRequestMessage;
    var GameActionFightCastRequestMessage = (function (_super) {
        __extends(GameActionFightCastRequestMessage, _super);
        function GameActionFightCastRequestMessage() {
            this.spellId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightCastRequestMessage.prototype.getMessageId = function () {
            return GameActionFightCastRequestMessage.ID;
        };
        GameActionFightCastRequestMessage.prototype.reset = function () {
            this.spellId = 0;
            this.cellId = 0;
        };
        GameActionFightCastRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightCastRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightCastRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightCastRequestMessage(param1);
        };
        GameActionFightCastRequestMessage.prototype.serializeAs_GameActionFightCastRequestMessage = function (param1) {
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightCastRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightCastRequestMessage(param1);
        };
        GameActionFightCastRequestMessage.prototype.deserializeAs_GameActionFightCastRequestMessage = function (param1) {
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightCastRequestMessage.spellId.');
            }
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightCastRequestMessage.cellId.');
            }
        };
        GameActionFightCastRequestMessage.ID = 1005;
        return GameActionFightCastRequestMessage;
    })(NetworkMessage);
    Protocol.GameActionFightCastRequestMessage = GameActionFightCastRequestMessage;
    var GameActionFightChangeLookMessage = (function (_super) {
        __extends(GameActionFightChangeLookMessage, _super);
        function GameActionFightChangeLookMessage() {
            this.targetId = 0;
            this.entityLook = new EntityLook();
            _super.call(this);
        }
        GameActionFightChangeLookMessage.prototype.getMessageId = function () {
            return GameActionFightChangeLookMessage.ID;
        };
        GameActionFightChangeLookMessage.prototype.reset = function () {
            this.targetId = 0;
            this.entityLook = new EntityLook();
        };
        GameActionFightChangeLookMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightChangeLookMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightChangeLookMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightChangeLookMessage(param1);
        };
        GameActionFightChangeLookMessage.prototype.serializeAs_GameActionFightChangeLookMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            this.entityLook.serializeAs_EntityLook(param1);
        };
        GameActionFightChangeLookMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightChangeLookMessage(param1);
        };
        GameActionFightChangeLookMessage.prototype.deserializeAs_GameActionFightChangeLookMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.entityLook = new EntityLook();
            this.entityLook.deserialize(param1);
        };
        GameActionFightChangeLookMessage.ID = 5532;
        return GameActionFightChangeLookMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightChangeLookMessage = GameActionFightChangeLookMessage;
    var GameActionFightCloseCombatMessage = (function (_super) {
        __extends(GameActionFightCloseCombatMessage, _super);
        function GameActionFightCloseCombatMessage() {
            this.weaponGenericId = 0;
            _super.call(this);
        }
        GameActionFightCloseCombatMessage.prototype.getMessageId = function () {
            return GameActionFightCloseCombatMessage.ID;
        };
        GameActionFightCloseCombatMessage.prototype.reset = function () {
            this.weaponGenericId = 0;
        };
        GameActionFightCloseCombatMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightCloseCombatMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightCloseCombatMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightCloseCombatMessage(param1);
        };
        GameActionFightCloseCombatMessage.prototype.serializeAs_GameActionFightCloseCombatMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionFightTargetedAbilityMessage.call(this, param1);
            if (this.weaponGenericId < 0) {
                throw new Error('Forbidden value (' + this.weaponGenericId + ') on element weaponGenericId.');
            }
            param1.writeVarShort(this.weaponGenericId);
        };
        GameActionFightCloseCombatMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightCloseCombatMessage(param1);
        };
        GameActionFightCloseCombatMessage.prototype.deserializeAs_GameActionFightCloseCombatMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.weaponGenericId = param1.readVarUhShort();
            if (this.weaponGenericId < 0) {
                throw new Error('Forbidden value (' + this.weaponGenericId + ') on element of GameActionFightCloseCombatMessage.weaponGenericId.');
            }
        };
        GameActionFightCloseCombatMessage.ID = 6116;
        return GameActionFightCloseCombatMessage;
    })(AbstractGameActionFightTargetedAbilityMessage);
    Protocol.GameActionFightCloseCombatMessage = GameActionFightCloseCombatMessage;
    var GameActionFightDeathMessage = (function (_super) {
        __extends(GameActionFightDeathMessage, _super);
        function GameActionFightDeathMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightDeathMessage.prototype.getMessageId = function () {
            return GameActionFightDeathMessage.ID;
        };
        GameActionFightDeathMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightDeathMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDeathMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDeathMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDeathMessage(param1);
        };
        GameActionFightDeathMessage.prototype.serializeAs_GameActionFightDeathMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightDeathMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDeathMessage(param1);
        };
        GameActionFightDeathMessage.prototype.deserializeAs_GameActionFightDeathMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightDeathMessage.ID = 1099;
        return GameActionFightDeathMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightDeathMessage = GameActionFightDeathMessage;
    var GameActionFightDispellEffectMessage = (function (_super) {
        __extends(GameActionFightDispellEffectMessage, _super);
        function GameActionFightDispellEffectMessage() {
            this.boostUID = 0;
            _super.call(this);
        }
        GameActionFightDispellEffectMessage.prototype.getMessageId = function () {
            return GameActionFightDispellEffectMessage.ID;
        };
        GameActionFightDispellEffectMessage.prototype.reset = function () {
            this.boostUID = 0;
        };
        GameActionFightDispellEffectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDispellEffectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDispellEffectMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDispellEffectMessage(param1);
        };
        GameActionFightDispellEffectMessage.prototype.serializeAs_GameActionFightDispellEffectMessage = function (param1) {
            _super.prototype.serializeAs_GameActionFightDispellMessage.call(this, param1);
            if (this.boostUID < 0) {
                throw new Error('Forbidden value (' + this.boostUID + ') on element boostUID.');
            }
            param1.writeInt(this.boostUID);
        };
        GameActionFightDispellEffectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDispellEffectMessage(param1);
        };
        GameActionFightDispellEffectMessage.prototype.deserializeAs_GameActionFightDispellEffectMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.boostUID = param1.readInt();
            if (this.boostUID < 0) {
                throw new Error('Forbidden value (' + this.boostUID + ') on element of GameActionFightDispellEffectMessage.boostUID.');
            }
        };
        GameActionFightDispellEffectMessage.ID = 6113;
        return GameActionFightDispellEffectMessage;
    })(GameActionFightDispellMessage);
    Protocol.GameActionFightDispellEffectMessage = GameActionFightDispellEffectMessage;
    var GameActionFightDispellMessage = (function (_super) {
        __extends(GameActionFightDispellMessage, _super);
        function GameActionFightDispellMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightDispellMessage.prototype.getMessageId = function () {
            return GameActionFightDispellMessage.ID;
        };
        GameActionFightDispellMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightDispellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDispellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDispellMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDispellMessage(param1);
        };
        GameActionFightDispellMessage.prototype.serializeAs_GameActionFightDispellMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightDispellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDispellMessage(param1);
        };
        GameActionFightDispellMessage.prototype.deserializeAs_GameActionFightDispellMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightDispellMessage.ID = 5533;
        return GameActionFightDispellMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightDispellMessage = GameActionFightDispellMessage;
    var GameActionFightDispellSpellMessage = (function (_super) {
        __extends(GameActionFightDispellSpellMessage, _super);
        function GameActionFightDispellSpellMessage() {
            this.spellId = 0;
            _super.call(this);
        }
        GameActionFightDispellSpellMessage.prototype.getMessageId = function () {
            return GameActionFightDispellSpellMessage.ID;
        };
        GameActionFightDispellSpellMessage.prototype.reset = function () {
            this.spellId = 0;
        };
        GameActionFightDispellSpellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDispellSpellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDispellSpellMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDispellSpellMessage(param1);
        };
        GameActionFightDispellSpellMessage.prototype.serializeAs_GameActionFightDispellSpellMessage = function (param1) {
            _super.prototype.serializeAs_GameActionFightDispellMessage.call(this, param1);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
        };
        GameActionFightDispellSpellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDispellSpellMessage(param1);
        };
        GameActionFightDispellSpellMessage.prototype.deserializeAs_GameActionFightDispellSpellMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightDispellSpellMessage.spellId.');
            }
        };
        GameActionFightDispellSpellMessage.ID = 6176;
        return GameActionFightDispellSpellMessage;
    })(GameActionFightDispellMessage);
    Protocol.GameActionFightDispellSpellMessage = GameActionFightDispellSpellMessage;
    var GameActionFightDispellableEffectMessage = (function (_super) {
        __extends(GameActionFightDispellableEffectMessage, _super);
        function GameActionFightDispellableEffectMessage() {
            this.effect = new AbstractFightDispellableEffect();
            _super.call(this);
        }
        GameActionFightDispellableEffectMessage.prototype.getMessageId = function () {
            return GameActionFightDispellableEffectMessage.ID;
        };
        GameActionFightDispellableEffectMessage.prototype.reset = function () {
            this.effect = new AbstractFightDispellableEffect();
        };
        GameActionFightDispellableEffectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDispellableEffectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDispellableEffectMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDispellableEffectMessage(param1);
        };
        GameActionFightDispellableEffectMessage.prototype.serializeAs_GameActionFightDispellableEffectMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.effect.getTypeId());
            this.effect.serialize(param1);
        };
        GameActionFightDispellableEffectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDispellableEffectMessage(param1);
        };
        GameActionFightDispellableEffectMessage.prototype.deserializeAs_GameActionFightDispellableEffectMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.effect = ProtocolTypeManager.getInstance(AbstractFightDispellableEffect, _loc2_);
            this.effect.deserialize(param1);
        };
        GameActionFightDispellableEffectMessage.ID = 6070;
        return GameActionFightDispellableEffectMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightDispellableEffectMessage = GameActionFightDispellableEffectMessage;
    var GameActionFightDodgePointLossMessage = (function (_super) {
        __extends(GameActionFightDodgePointLossMessage, _super);
        function GameActionFightDodgePointLossMessage() {
            this.targetId = 0;
            this.amount = 0;
            _super.call(this);
        }
        GameActionFightDodgePointLossMessage.prototype.getMessageId = function () {
            return GameActionFightDodgePointLossMessage.ID;
        };
        GameActionFightDodgePointLossMessage.prototype.reset = function () {
            this.targetId = 0;
            this.amount = 0;
        };
        GameActionFightDodgePointLossMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDodgePointLossMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDodgePointLossMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDodgePointLossMessage(param1);
        };
        GameActionFightDodgePointLossMessage.prototype.serializeAs_GameActionFightDodgePointLossMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element amount.');
            }
            param1.writeVarShort(this.amount);
        };
        GameActionFightDodgePointLossMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDodgePointLossMessage(param1);
        };
        GameActionFightDodgePointLossMessage.prototype.deserializeAs_GameActionFightDodgePointLossMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.amount = param1.readVarUhShort();
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element of GameActionFightDodgePointLossMessage.amount.');
            }
        };
        GameActionFightDodgePointLossMessage.ID = 5828;
        return GameActionFightDodgePointLossMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightDodgePointLossMessage = GameActionFightDodgePointLossMessage;
    var GameActionFightDropCharacterMessage = (function (_super) {
        __extends(GameActionFightDropCharacterMessage, _super);
        function GameActionFightDropCharacterMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightDropCharacterMessage.prototype.getMessageId = function () {
            return GameActionFightDropCharacterMessage.ID;
        };
        GameActionFightDropCharacterMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        GameActionFightDropCharacterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightDropCharacterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightDropCharacterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightDropCharacterMessage(param1);
        };
        GameActionFightDropCharacterMessage.prototype.serializeAs_GameActionFightDropCharacterMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightDropCharacterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightDropCharacterMessage(param1);
        };
        GameActionFightDropCharacterMessage.prototype.deserializeAs_GameActionFightDropCharacterMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightDropCharacterMessage.cellId.');
            }
        };
        GameActionFightDropCharacterMessage.ID = 5826;
        return GameActionFightDropCharacterMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightDropCharacterMessage = GameActionFightDropCharacterMessage;
    var GameActionFightExchangePositionsMessage = (function (_super) {
        __extends(GameActionFightExchangePositionsMessage, _super);
        function GameActionFightExchangePositionsMessage() {
            this.targetId = 0;
            this.casterCellId = 0;
            this.targetCellId = 0;
            _super.call(this);
        }
        GameActionFightExchangePositionsMessage.prototype.getMessageId = function () {
            return GameActionFightExchangePositionsMessage.ID;
        };
        GameActionFightExchangePositionsMessage.prototype.reset = function () {
            this.targetId = 0;
            this.casterCellId = 0;
            this.targetCellId = 0;
        };
        GameActionFightExchangePositionsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightExchangePositionsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightExchangePositionsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightExchangePositionsMessage(param1);
        };
        GameActionFightExchangePositionsMessage.prototype.serializeAs_GameActionFightExchangePositionsMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.casterCellId < -1 || this.casterCellId > 559) {
                throw new Error('Forbidden value (' + this.casterCellId + ') on element casterCellId.');
            }
            param1.writeShort(this.casterCellId);
            if (this.targetCellId < -1 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element targetCellId.');
            }
            param1.writeShort(this.targetCellId);
        };
        GameActionFightExchangePositionsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightExchangePositionsMessage(param1);
        };
        GameActionFightExchangePositionsMessage.prototype.deserializeAs_GameActionFightExchangePositionsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.casterCellId = param1.readShort();
            if (this.casterCellId < -1 || this.casterCellId > 559) {
                throw new Error('Forbidden value (' + this.casterCellId + ') on element of GameActionFightExchangePositionsMessage.casterCellId.');
            }
            this.targetCellId = param1.readShort();
            if (this.targetCellId < -1 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element of GameActionFightExchangePositionsMessage.targetCellId.');
            }
        };
        GameActionFightExchangePositionsMessage.ID = 5527;
        return GameActionFightExchangePositionsMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightExchangePositionsMessage = GameActionFightExchangePositionsMessage;
    var GameActionFightInvisibilityMessage = (function (_super) {
        __extends(GameActionFightInvisibilityMessage, _super);
        function GameActionFightInvisibilityMessage() {
            this.targetId = 0;
            this.state = 0;
            _super.call(this);
        }
        GameActionFightInvisibilityMessage.prototype.getMessageId = function () {
            return GameActionFightInvisibilityMessage.ID;
        };
        GameActionFightInvisibilityMessage.prototype.reset = function () {
            this.targetId = 0;
            this.state = 0;
        };
        GameActionFightInvisibilityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightInvisibilityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightInvisibilityMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightInvisibilityMessage(param1);
        };
        GameActionFightInvisibilityMessage.prototype.serializeAs_GameActionFightInvisibilityMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            param1.writeByte(this.state);
        };
        GameActionFightInvisibilityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightInvisibilityMessage(param1);
        };
        GameActionFightInvisibilityMessage.prototype.deserializeAs_GameActionFightInvisibilityMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of GameActionFightInvisibilityMessage.state.');
            }
        };
        GameActionFightInvisibilityMessage.ID = 5821;
        return GameActionFightInvisibilityMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightInvisibilityMessage = GameActionFightInvisibilityMessage;
    var GameActionFightInvisibleDetectedMessage = (function (_super) {
        __extends(GameActionFightInvisibleDetectedMessage, _super);
        function GameActionFightInvisibleDetectedMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightInvisibleDetectedMessage.prototype.getMessageId = function () {
            return GameActionFightInvisibleDetectedMessage.ID;
        };
        GameActionFightInvisibleDetectedMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        GameActionFightInvisibleDetectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightInvisibleDetectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightInvisibleDetectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightInvisibleDetectedMessage(param1);
        };
        GameActionFightInvisibleDetectedMessage.prototype.serializeAs_GameActionFightInvisibleDetectedMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightInvisibleDetectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightInvisibleDetectedMessage(param1);
        };
        GameActionFightInvisibleDetectedMessage.prototype.deserializeAs_GameActionFightInvisibleDetectedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightInvisibleDetectedMessage.cellId.');
            }
        };
        GameActionFightInvisibleDetectedMessage.ID = 6320;
        return GameActionFightInvisibleDetectedMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightInvisibleDetectedMessage = GameActionFightInvisibleDetectedMessage;
    var GameActionFightKillMessage = (function (_super) {
        __extends(GameActionFightKillMessage, _super);
        function GameActionFightKillMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightKillMessage.prototype.getMessageId = function () {
            return GameActionFightKillMessage.ID;
        };
        GameActionFightKillMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightKillMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightKillMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightKillMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightKillMessage(param1);
        };
        GameActionFightKillMessage.prototype.serializeAs_GameActionFightKillMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightKillMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightKillMessage(param1);
        };
        GameActionFightKillMessage.prototype.deserializeAs_GameActionFightKillMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightKillMessage.ID = 5571;
        return GameActionFightKillMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightKillMessage = GameActionFightKillMessage;
    var GameActionFightLifeAndShieldPointsLostMessage = (function (_super) {
        __extends(GameActionFightLifeAndShieldPointsLostMessage, _super);
        function GameActionFightLifeAndShieldPointsLostMessage() {
            this.shieldLoss = 0;
            _super.call(this);
        }
        GameActionFightLifeAndShieldPointsLostMessage.prototype.getMessageId = function () {
            return GameActionFightLifeAndShieldPointsLostMessage.ID;
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.reset = function () {
            this.shieldLoss = 0;
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightLifeAndShieldPointsLostMessage(param1);
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.serializeAs_GameActionFightLifeAndShieldPointsLostMessage = function (param1) {
            _super.prototype.serializeAs_GameActionFightLifePointsLostMessage.call(this, param1);
            if (this.shieldLoss < 0) {
                throw new Error('Forbidden value (' + this.shieldLoss + ') on element shieldLoss.');
            }
            param1.writeVarShort(this.shieldLoss);
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightLifeAndShieldPointsLostMessage(param1);
        };
        GameActionFightLifeAndShieldPointsLostMessage.prototype.deserializeAs_GameActionFightLifeAndShieldPointsLostMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.shieldLoss = param1.readVarUhShort();
            if (this.shieldLoss < 0) {
                throw new Error('Forbidden value (' + this.shieldLoss + ') on element of GameActionFightLifeAndShieldPointsLostMessage.shieldLoss.');
            }
        };
        GameActionFightLifeAndShieldPointsLostMessage.ID = 6310;
        return GameActionFightLifeAndShieldPointsLostMessage;
    })(GameActionFightLifePointsLostMessage);
    Protocol.GameActionFightLifeAndShieldPointsLostMessage = GameActionFightLifeAndShieldPointsLostMessage;
    var GameActionFightLifePointsGainMessage = (function (_super) {
        __extends(GameActionFightLifePointsGainMessage, _super);
        function GameActionFightLifePointsGainMessage() {
            this.targetId = 0;
            this.delta = 0;
            _super.call(this);
        }
        GameActionFightLifePointsGainMessage.prototype.getMessageId = function () {
            return GameActionFightLifePointsGainMessage.ID;
        };
        GameActionFightLifePointsGainMessage.prototype.reset = function () {
            this.targetId = 0;
            this.delta = 0;
        };
        GameActionFightLifePointsGainMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightLifePointsGainMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightLifePointsGainMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightLifePointsGainMessage(param1);
        };
        GameActionFightLifePointsGainMessage.prototype.serializeAs_GameActionFightLifePointsGainMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.delta < 0) {
                throw new Error('Forbidden value (' + this.delta + ') on element delta.');
            }
            param1.writeVarInt(this.delta);
        };
        GameActionFightLifePointsGainMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightLifePointsGainMessage(param1);
        };
        GameActionFightLifePointsGainMessage.prototype.deserializeAs_GameActionFightLifePointsGainMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.delta = param1.readVarUhInt();
            if (this.delta < 0) {
                throw new Error('Forbidden value (' + this.delta + ') on element of GameActionFightLifePointsGainMessage.delta.');
            }
        };
        GameActionFightLifePointsGainMessage.ID = 6311;
        return GameActionFightLifePointsGainMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightLifePointsGainMessage = GameActionFightLifePointsGainMessage;
    var GameActionFightLifePointsLostMessage = (function (_super) {
        __extends(GameActionFightLifePointsLostMessage, _super);
        function GameActionFightLifePointsLostMessage() {
            this.targetId = 0;
            this.loss = 0;
            this.permanentDamages = 0;
            _super.call(this);
        }
        GameActionFightLifePointsLostMessage.prototype.getMessageId = function () {
            return GameActionFightLifePointsLostMessage.ID;
        };
        GameActionFightLifePointsLostMessage.prototype.reset = function () {
            this.targetId = 0;
            this.loss = 0;
            this.permanentDamages = 0;
        };
        GameActionFightLifePointsLostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightLifePointsLostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightLifePointsLostMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightLifePointsLostMessage(param1);
        };
        GameActionFightLifePointsLostMessage.prototype.serializeAs_GameActionFightLifePointsLostMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.loss < 0) {
                throw new Error('Forbidden value (' + this.loss + ') on element loss.');
            }
            param1.writeVarShort(this.loss);
            if (this.permanentDamages < 0) {
                throw new Error('Forbidden value (' + this.permanentDamages + ') on element permanentDamages.');
            }
            param1.writeVarShort(this.permanentDamages);
        };
        GameActionFightLifePointsLostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightLifePointsLostMessage(param1);
        };
        GameActionFightLifePointsLostMessage.prototype.deserializeAs_GameActionFightLifePointsLostMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.loss = param1.readVarUhShort();
            if (this.loss < 0) {
                throw new Error('Forbidden value (' + this.loss + ') on element of GameActionFightLifePointsLostMessage.loss.');
            }
            this.permanentDamages = param1.readVarUhShort();
            if (this.permanentDamages < 0) {
                throw new Error('Forbidden value (' + this.permanentDamages + ') on element of GameActionFightLifePointsLostMessage.permanentDamages.');
            }
        };
        GameActionFightLifePointsLostMessage.ID = 6312;
        return GameActionFightLifePointsLostMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightLifePointsLostMessage = GameActionFightLifePointsLostMessage;
    var GameActionFightMarkCellsMessage = (function (_super) {
        __extends(GameActionFightMarkCellsMessage, _super);
        function GameActionFightMarkCellsMessage() {
            this.mark = new GameActionMark();
            _super.call(this);
        }
        GameActionFightMarkCellsMessage.prototype.getMessageId = function () {
            return GameActionFightMarkCellsMessage.ID;
        };
        GameActionFightMarkCellsMessage.prototype.reset = function () {
            this.mark = new GameActionMark();
        };
        GameActionFightMarkCellsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightMarkCellsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightMarkCellsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightMarkCellsMessage(param1);
        };
        GameActionFightMarkCellsMessage.prototype.serializeAs_GameActionFightMarkCellsMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            this.mark.serializeAs_GameActionMark(param1);
        };
        GameActionFightMarkCellsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightMarkCellsMessage(param1);
        };
        GameActionFightMarkCellsMessage.prototype.deserializeAs_GameActionFightMarkCellsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.mark = new GameActionMark();
            this.mark.deserialize(param1);
        };
        GameActionFightMarkCellsMessage.ID = 5540;
        return GameActionFightMarkCellsMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightMarkCellsMessage = GameActionFightMarkCellsMessage;
    var GameActionFightModifyEffectsDurationMessage = (function (_super) {
        __extends(GameActionFightModifyEffectsDurationMessage, _super);
        function GameActionFightModifyEffectsDurationMessage() {
            this.targetId = 0;
            this.delta = 0;
            _super.call(this);
        }
        GameActionFightModifyEffectsDurationMessage.prototype.getMessageId = function () {
            return GameActionFightModifyEffectsDurationMessage.ID;
        };
        GameActionFightModifyEffectsDurationMessage.prototype.reset = function () {
            this.targetId = 0;
            this.delta = 0;
        };
        GameActionFightModifyEffectsDurationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightModifyEffectsDurationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightModifyEffectsDurationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightModifyEffectsDurationMessage(param1);
        };
        GameActionFightModifyEffectsDurationMessage.prototype.serializeAs_GameActionFightModifyEffectsDurationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            param1.writeShort(this.delta);
        };
        GameActionFightModifyEffectsDurationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightModifyEffectsDurationMessage(param1);
        };
        GameActionFightModifyEffectsDurationMessage.prototype.deserializeAs_GameActionFightModifyEffectsDurationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.delta = param1.readShort();
        };
        GameActionFightModifyEffectsDurationMessage.ID = 6304;
        return GameActionFightModifyEffectsDurationMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightModifyEffectsDurationMessage = GameActionFightModifyEffectsDurationMessage;
    var GameActionFightNoSpellCastMessage = (function (_super) {
        __extends(GameActionFightNoSpellCastMessage, _super);
        function GameActionFightNoSpellCastMessage() {
            this.spellLevelId = 0;
            _super.call(this);
        }
        GameActionFightNoSpellCastMessage.prototype.getMessageId = function () {
            return GameActionFightNoSpellCastMessage.ID;
        };
        GameActionFightNoSpellCastMessage.prototype.reset = function () {
            this.spellLevelId = 0;
        };
        GameActionFightNoSpellCastMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightNoSpellCastMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightNoSpellCastMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightNoSpellCastMessage(param1);
        };
        GameActionFightNoSpellCastMessage.prototype.serializeAs_GameActionFightNoSpellCastMessage = function (param1) {
            if (this.spellLevelId < 0) {
                throw new Error('Forbidden value (' + this.spellLevelId + ') on element spellLevelId.');
            }
            param1.writeVarInt(this.spellLevelId);
        };
        GameActionFightNoSpellCastMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightNoSpellCastMessage(param1);
        };
        GameActionFightNoSpellCastMessage.prototype.deserializeAs_GameActionFightNoSpellCastMessage = function (param1) {
            this.spellLevelId = param1.readVarUhInt();
            if (this.spellLevelId < 0) {
                throw new Error('Forbidden value (' + this.spellLevelId + ') on element of GameActionFightNoSpellCastMessage.spellLevelId.');
            }
        };
        GameActionFightNoSpellCastMessage.ID = 6132;
        return GameActionFightNoSpellCastMessage;
    })(NetworkMessage);
    Protocol.GameActionFightNoSpellCastMessage = GameActionFightNoSpellCastMessage;
    var GameActionFightPointsVariationMessage = (function (_super) {
        __extends(GameActionFightPointsVariationMessage, _super);
        function GameActionFightPointsVariationMessage() {
            this.targetId = 0;
            this.delta = 0;
            _super.call(this);
        }
        GameActionFightPointsVariationMessage.prototype.getMessageId = function () {
            return GameActionFightPointsVariationMessage.ID;
        };
        GameActionFightPointsVariationMessage.prototype.reset = function () {
            this.targetId = 0;
            this.delta = 0;
        };
        GameActionFightPointsVariationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightPointsVariationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightPointsVariationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightPointsVariationMessage(param1);
        };
        GameActionFightPointsVariationMessage.prototype.serializeAs_GameActionFightPointsVariationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            param1.writeShort(this.delta);
        };
        GameActionFightPointsVariationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightPointsVariationMessage(param1);
        };
        GameActionFightPointsVariationMessage.prototype.deserializeAs_GameActionFightPointsVariationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.delta = param1.readShort();
        };
        GameActionFightPointsVariationMessage.ID = 1030;
        return GameActionFightPointsVariationMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightPointsVariationMessage = GameActionFightPointsVariationMessage;
    var GameActionFightReduceDamagesMessage = (function (_super) {
        __extends(GameActionFightReduceDamagesMessage, _super);
        function GameActionFightReduceDamagesMessage() {
            this.targetId = 0;
            this.amount = 0;
            _super.call(this);
        }
        GameActionFightReduceDamagesMessage.prototype.getMessageId = function () {
            return GameActionFightReduceDamagesMessage.ID;
        };
        GameActionFightReduceDamagesMessage.prototype.reset = function () {
            this.targetId = 0;
            this.amount = 0;
        };
        GameActionFightReduceDamagesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightReduceDamagesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightReduceDamagesMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightReduceDamagesMessage(param1);
        };
        GameActionFightReduceDamagesMessage.prototype.serializeAs_GameActionFightReduceDamagesMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element amount.');
            }
            param1.writeVarInt(this.amount);
        };
        GameActionFightReduceDamagesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightReduceDamagesMessage(param1);
        };
        GameActionFightReduceDamagesMessage.prototype.deserializeAs_GameActionFightReduceDamagesMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.amount = param1.readVarUhInt();
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element of GameActionFightReduceDamagesMessage.amount.');
            }
        };
        GameActionFightReduceDamagesMessage.ID = 5526;
        return GameActionFightReduceDamagesMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightReduceDamagesMessage = GameActionFightReduceDamagesMessage;
    var GameActionFightReflectDamagesMessage = (function (_super) {
        __extends(GameActionFightReflectDamagesMessage, _super);
        function GameActionFightReflectDamagesMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightReflectDamagesMessage.prototype.getMessageId = function () {
            return GameActionFightReflectDamagesMessage.ID;
        };
        GameActionFightReflectDamagesMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightReflectDamagesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightReflectDamagesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightReflectDamagesMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightReflectDamagesMessage(param1);
        };
        GameActionFightReflectDamagesMessage.prototype.serializeAs_GameActionFightReflectDamagesMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightReflectDamagesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightReflectDamagesMessage(param1);
        };
        GameActionFightReflectDamagesMessage.prototype.deserializeAs_GameActionFightReflectDamagesMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightReflectDamagesMessage.ID = 5530;
        return GameActionFightReflectDamagesMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightReflectDamagesMessage = GameActionFightReflectDamagesMessage;
    var GameActionFightReflectSpellMessage = (function (_super) {
        __extends(GameActionFightReflectSpellMessage, _super);
        function GameActionFightReflectSpellMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightReflectSpellMessage.prototype.getMessageId = function () {
            return GameActionFightReflectSpellMessage.ID;
        };
        GameActionFightReflectSpellMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightReflectSpellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightReflectSpellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightReflectSpellMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightReflectSpellMessage(param1);
        };
        GameActionFightReflectSpellMessage.prototype.serializeAs_GameActionFightReflectSpellMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightReflectSpellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightReflectSpellMessage(param1);
        };
        GameActionFightReflectSpellMessage.prototype.deserializeAs_GameActionFightReflectSpellMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightReflectSpellMessage.ID = 5531;
        return GameActionFightReflectSpellMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightReflectSpellMessage = GameActionFightReflectSpellMessage;
    var GameActionFightSlideMessage = (function (_super) {
        __extends(GameActionFightSlideMessage, _super);
        function GameActionFightSlideMessage() {
            this.targetId = 0;
            this.startCellId = 0;
            this.endCellId = 0;
            _super.call(this);
        }
        GameActionFightSlideMessage.prototype.getMessageId = function () {
            return GameActionFightSlideMessage.ID;
        };
        GameActionFightSlideMessage.prototype.reset = function () {
            this.targetId = 0;
            this.startCellId = 0;
            this.endCellId = 0;
        };
        GameActionFightSlideMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightSlideMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightSlideMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightSlideMessage(param1);
        };
        GameActionFightSlideMessage.prototype.serializeAs_GameActionFightSlideMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.startCellId < -1 || this.startCellId > 559) {
                throw new Error('Forbidden value (' + this.startCellId + ') on element startCellId.');
            }
            param1.writeShort(this.startCellId);
            if (this.endCellId < -1 || this.endCellId > 559) {
                throw new Error('Forbidden value (' + this.endCellId + ') on element endCellId.');
            }
            param1.writeShort(this.endCellId);
        };
        GameActionFightSlideMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightSlideMessage(param1);
        };
        GameActionFightSlideMessage.prototype.deserializeAs_GameActionFightSlideMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.startCellId = param1.readShort();
            if (this.startCellId < -1 || this.startCellId > 559) {
                throw new Error('Forbidden value (' + this.startCellId + ') on element of GameActionFightSlideMessage.startCellId.');
            }
            this.endCellId = param1.readShort();
            if (this.endCellId < -1 || this.endCellId > 559) {
                throw new Error('Forbidden value (' + this.endCellId + ') on element of GameActionFightSlideMessage.endCellId.');
            }
        };
        GameActionFightSlideMessage.ID = 5525;
        return GameActionFightSlideMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightSlideMessage = GameActionFightSlideMessage;
    var GameActionFightSpellCastMessage = (function (_super) {
        __extends(GameActionFightSpellCastMessage, _super);
        function GameActionFightSpellCastMessage() {
            this.spellId = 0;
            this.spellLevel = 0;
            this.portalsIds = [];
            _super.call(this);
        }
        GameActionFightSpellCastMessage.prototype.getMessageId = function () {
            return GameActionFightSpellCastMessage.ID;
        };
        GameActionFightSpellCastMessage.prototype.reset = function () {
            this.spellId = 0;
            this.spellLevel = 0;
            this.portalsIds = [];
        };
        GameActionFightSpellCastMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightSpellCastMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightSpellCastMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightSpellCastMessage(param1);
        };
        GameActionFightSpellCastMessage.prototype.serializeAs_GameActionFightSpellCastMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionFightTargetedAbilityMessage.call(this, param1);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element spellLevel.');
            }
            param1.writeByte(this.spellLevel);
            param1.writeShort(this.portalsIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.portalsIds.length) {
                param1.writeShort(this.portalsIds[_loc2_]);
                _loc2_++;
            }
        };
        GameActionFightSpellCastMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightSpellCastMessage(param1);
        };
        GameActionFightSpellCastMessage.prototype.deserializeAs_GameActionFightSpellCastMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightSpellCastMessage.spellId.');
            }
            this.spellLevel = param1.readByte();
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element of GameActionFightSpellCastMessage.spellLevel.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readShort();
                this.portalsIds.push(_loc4_);
                _loc3_++;
            }
        };
        GameActionFightSpellCastMessage.ID = 1010;
        return GameActionFightSpellCastMessage;
    })(AbstractGameActionFightTargetedAbilityMessage);
    Protocol.GameActionFightSpellCastMessage = GameActionFightSpellCastMessage;
    var GameActionFightSpellCooldownVariationMessage = (function (_super) {
        __extends(GameActionFightSpellCooldownVariationMessage, _super);
        function GameActionFightSpellCooldownVariationMessage() {
            this.targetId = 0;
            this.spellId = 0;
            this.value = 0;
            _super.call(this);
        }
        GameActionFightSpellCooldownVariationMessage.prototype.getMessageId = function () {
            return GameActionFightSpellCooldownVariationMessage.ID;
        };
        GameActionFightSpellCooldownVariationMessage.prototype.reset = function () {
            this.targetId = 0;
            this.spellId = 0;
            this.value = 0;
        };
        GameActionFightSpellCooldownVariationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightSpellCooldownVariationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightSpellCooldownVariationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightSpellCooldownVariationMessage(param1);
        };
        GameActionFightSpellCooldownVariationMessage.prototype.serializeAs_GameActionFightSpellCooldownVariationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            param1.writeVarShort(this.value);
        };
        GameActionFightSpellCooldownVariationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightSpellCooldownVariationMessage(param1);
        };
        GameActionFightSpellCooldownVariationMessage.prototype.deserializeAs_GameActionFightSpellCooldownVariationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightSpellCooldownVariationMessage.spellId.');
            }
            this.value = param1.readVarShort();
        };
        GameActionFightSpellCooldownVariationMessage.ID = 6219;
        return GameActionFightSpellCooldownVariationMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightSpellCooldownVariationMessage = GameActionFightSpellCooldownVariationMessage;
    var GameActionFightSpellImmunityMessage = (function (_super) {
        __extends(GameActionFightSpellImmunityMessage, _super);
        function GameActionFightSpellImmunityMessage() {
            this.targetId = 0;
            this.spellId = 0;
            _super.call(this);
        }
        GameActionFightSpellImmunityMessage.prototype.getMessageId = function () {
            return GameActionFightSpellImmunityMessage.ID;
        };
        GameActionFightSpellImmunityMessage.prototype.reset = function () {
            this.targetId = 0;
            this.spellId = 0;
        };
        GameActionFightSpellImmunityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightSpellImmunityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightSpellImmunityMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightSpellImmunityMessage(param1);
        };
        GameActionFightSpellImmunityMessage.prototype.serializeAs_GameActionFightSpellImmunityMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
        };
        GameActionFightSpellImmunityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightSpellImmunityMessage(param1);
        };
        GameActionFightSpellImmunityMessage.prototype.deserializeAs_GameActionFightSpellImmunityMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameActionFightSpellImmunityMessage.spellId.');
            }
        };
        GameActionFightSpellImmunityMessage.ID = 6221;
        return GameActionFightSpellImmunityMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightSpellImmunityMessage = GameActionFightSpellImmunityMessage;
    var GameActionFightStealKamaMessage = (function (_super) {
        __extends(GameActionFightStealKamaMessage, _super);
        function GameActionFightStealKamaMessage() {
            this.targetId = 0;
            this.amount = 0;
            _super.call(this);
        }
        GameActionFightStealKamaMessage.prototype.getMessageId = function () {
            return GameActionFightStealKamaMessage.ID;
        };
        GameActionFightStealKamaMessage.prototype.reset = function () {
            this.targetId = 0;
            this.amount = 0;
        };
        GameActionFightStealKamaMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightStealKamaMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightStealKamaMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightStealKamaMessage(param1);
        };
        GameActionFightStealKamaMessage.prototype.serializeAs_GameActionFightStealKamaMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element amount.');
            }
            param1.writeVarInt(this.amount);
        };
        GameActionFightStealKamaMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightStealKamaMessage(param1);
        };
        GameActionFightStealKamaMessage.prototype.deserializeAs_GameActionFightStealKamaMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.amount = param1.readVarUhInt();
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element of GameActionFightStealKamaMessage.amount.');
            }
        };
        GameActionFightStealKamaMessage.ID = 5535;
        return GameActionFightStealKamaMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightStealKamaMessage = GameActionFightStealKamaMessage;
    var GameActionFightSummonMessage = (function (_super) {
        __extends(GameActionFightSummonMessage, _super);
        function GameActionFightSummonMessage() {
            this.summon = new GameFightFighterInformations();
            _super.call(this);
        }
        GameActionFightSummonMessage.prototype.getMessageId = function () {
            return GameActionFightSummonMessage.ID;
        };
        GameActionFightSummonMessage.prototype.reset = function () {
            this.summon = new GameFightFighterInformations();
        };
        GameActionFightSummonMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightSummonMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightSummonMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightSummonMessage(param1);
        };
        GameActionFightSummonMessage.prototype.serializeAs_GameActionFightSummonMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.summon.getTypeId());
            this.summon.serialize(param1);
        };
        GameActionFightSummonMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightSummonMessage(param1);
        };
        GameActionFightSummonMessage.prototype.deserializeAs_GameActionFightSummonMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.summon = ProtocolTypeManager.getInstance(GameFightFighterInformations, _loc2_);
            this.summon.deserialize(param1);
        };
        GameActionFightSummonMessage.ID = 5825;
        return GameActionFightSummonMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightSummonMessage = GameActionFightSummonMessage;
    var GameActionFightTackledMessage = (function (_super) {
        __extends(GameActionFightTackledMessage, _super);
        function GameActionFightTackledMessage() {
            this.tacklersIds = [];
            _super.call(this);
        }
        GameActionFightTackledMessage.prototype.getMessageId = function () {
            return GameActionFightTackledMessage.ID;
        };
        GameActionFightTackledMessage.prototype.reset = function () {
            this.tacklersIds = [];
        };
        GameActionFightTackledMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightTackledMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightTackledMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightTackledMessage(param1);
        };
        GameActionFightTackledMessage.prototype.serializeAs_GameActionFightTackledMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.tacklersIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.tacklersIds.length) {
                param1.writeInt(this.tacklersIds[_loc2_]);
                _loc2_++;
            }
        };
        GameActionFightTackledMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightTackledMessage(param1);
        };
        GameActionFightTackledMessage.prototype.deserializeAs_GameActionFightTackledMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.tacklersIds.push(_loc4_);
                _loc3_++;
            }
        };
        GameActionFightTackledMessage.ID = 1004;
        return GameActionFightTackledMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightTackledMessage = GameActionFightTackledMessage;
    var GameActionFightTeleportOnSameMapMessage = (function (_super) {
        __extends(GameActionFightTeleportOnSameMapMessage, _super);
        function GameActionFightTeleportOnSameMapMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightTeleportOnSameMapMessage.prototype.getMessageId = function () {
            return GameActionFightTeleportOnSameMapMessage.ID;
        };
        GameActionFightTeleportOnSameMapMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        GameActionFightTeleportOnSameMapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightTeleportOnSameMapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightTeleportOnSameMapMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightTeleportOnSameMapMessage(param1);
        };
        GameActionFightTeleportOnSameMapMessage.prototype.serializeAs_GameActionFightTeleportOnSameMapMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightTeleportOnSameMapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightTeleportOnSameMapMessage(param1);
        };
        GameActionFightTeleportOnSameMapMessage.prototype.deserializeAs_GameActionFightTeleportOnSameMapMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightTeleportOnSameMapMessage.cellId.');
            }
        };
        GameActionFightTeleportOnSameMapMessage.ID = 5528;
        return GameActionFightTeleportOnSameMapMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightTeleportOnSameMapMessage = GameActionFightTeleportOnSameMapMessage;
    var GameActionFightThrowCharacterMessage = (function (_super) {
        __extends(GameActionFightThrowCharacterMessage, _super);
        function GameActionFightThrowCharacterMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        GameActionFightThrowCharacterMessage.prototype.getMessageId = function () {
            return GameActionFightThrowCharacterMessage.ID;
        };
        GameActionFightThrowCharacterMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        GameActionFightThrowCharacterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightThrowCharacterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightThrowCharacterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightThrowCharacterMessage(param1);
        };
        GameActionFightThrowCharacterMessage.prototype.serializeAs_GameActionFightThrowCharacterMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
        };
        GameActionFightThrowCharacterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightThrowCharacterMessage(param1);
        };
        GameActionFightThrowCharacterMessage.prototype.deserializeAs_GameActionFightThrowCharacterMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionFightThrowCharacterMessage.cellId.');
            }
        };
        GameActionFightThrowCharacterMessage.ID = 5829;
        return GameActionFightThrowCharacterMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightThrowCharacterMessage = GameActionFightThrowCharacterMessage;
    var GameActionFightTriggerEffectMessage = (function (_super) {
        __extends(GameActionFightTriggerEffectMessage, _super);
        function GameActionFightTriggerEffectMessage() {
            _super.call(this);
        }
        GameActionFightTriggerEffectMessage.prototype.getMessageId = function () {
            return GameActionFightTriggerEffectMessage.ID;
        };
        GameActionFightTriggerEffectMessage.prototype.reset = function () {
        };
        GameActionFightTriggerEffectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightTriggerEffectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightTriggerEffectMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightTriggerEffectMessage(param1);
        };
        GameActionFightTriggerEffectMessage.prototype.serializeAs_GameActionFightTriggerEffectMessage = function (param1) {
            _super.prototype.serializeAs_GameActionFightDispellEffectMessage.call(this, param1);
        };
        GameActionFightTriggerEffectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightTriggerEffectMessage(param1);
        };
        GameActionFightTriggerEffectMessage.prototype.deserializeAs_GameActionFightTriggerEffectMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameActionFightTriggerEffectMessage.ID = 6147;
        return GameActionFightTriggerEffectMessage;
    })(GameActionFightDispellEffectMessage);
    Protocol.GameActionFightTriggerEffectMessage = GameActionFightTriggerEffectMessage;
    var GameActionFightTriggerGlyphTrapMessage = (function (_super) {
        __extends(GameActionFightTriggerGlyphTrapMessage, _super);
        function GameActionFightTriggerGlyphTrapMessage() {
            this.markId = 0;
            this.triggeringCharacterId = 0;
            this.triggeredSpellId = 0;
            _super.call(this);
        }
        GameActionFightTriggerGlyphTrapMessage.prototype.getMessageId = function () {
            return GameActionFightTriggerGlyphTrapMessage.ID;
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.reset = function () {
            this.markId = 0;
            this.triggeringCharacterId = 0;
            this.triggeredSpellId = 0;
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightTriggerGlyphTrapMessage(param1);
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.serializeAs_GameActionFightTriggerGlyphTrapMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.markId);
            param1.writeInt(this.triggeringCharacterId);
            if (this.triggeredSpellId < 0) {
                throw new Error('Forbidden value (' + this.triggeredSpellId + ') on element triggeredSpellId.');
            }
            param1.writeVarShort(this.triggeredSpellId);
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightTriggerGlyphTrapMessage(param1);
        };
        GameActionFightTriggerGlyphTrapMessage.prototype.deserializeAs_GameActionFightTriggerGlyphTrapMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.markId = param1.readShort();
            this.triggeringCharacterId = param1.readInt();
            this.triggeredSpellId = param1.readVarUhShort();
            if (this.triggeredSpellId < 0) {
                throw new Error('Forbidden value (' + this.triggeredSpellId + ') on element of GameActionFightTriggerGlyphTrapMessage.triggeredSpellId.');
            }
        };
        GameActionFightTriggerGlyphTrapMessage.ID = 5741;
        return GameActionFightTriggerGlyphTrapMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightTriggerGlyphTrapMessage = GameActionFightTriggerGlyphTrapMessage;
    var GameActionFightUnmarkCellsMessage = (function (_super) {
        __extends(GameActionFightUnmarkCellsMessage, _super);
        function GameActionFightUnmarkCellsMessage() {
            this.markId = 0;
            _super.call(this);
        }
        GameActionFightUnmarkCellsMessage.prototype.getMessageId = function () {
            return GameActionFightUnmarkCellsMessage.ID;
        };
        GameActionFightUnmarkCellsMessage.prototype.reset = function () {
            this.markId = 0;
        };
        GameActionFightUnmarkCellsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightUnmarkCellsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightUnmarkCellsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightUnmarkCellsMessage(param1);
        };
        GameActionFightUnmarkCellsMessage.prototype.serializeAs_GameActionFightUnmarkCellsMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeShort(this.markId);
        };
        GameActionFightUnmarkCellsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightUnmarkCellsMessage(param1);
        };
        GameActionFightUnmarkCellsMessage.prototype.deserializeAs_GameActionFightUnmarkCellsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.markId = param1.readShort();
        };
        GameActionFightUnmarkCellsMessage.ID = 5570;
        return GameActionFightUnmarkCellsMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightUnmarkCellsMessage = GameActionFightUnmarkCellsMessage;
    var GameActionFightVanishMessage = (function (_super) {
        __extends(GameActionFightVanishMessage, _super);
        function GameActionFightVanishMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameActionFightVanishMessage.prototype.getMessageId = function () {
            return GameActionFightVanishMessage.ID;
        };
        GameActionFightVanishMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameActionFightVanishMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameActionFightVanishMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameActionFightVanishMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameActionFightVanishMessage(param1);
        };
        GameActionFightVanishMessage.prototype.serializeAs_GameActionFightVanishMessage = function (param1) {
            _super.prototype.serializeAs_AbstractGameActionMessage.call(this, param1);
            param1.writeInt(this.targetId);
        };
        GameActionFightVanishMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionFightVanishMessage(param1);
        };
        GameActionFightVanishMessage.prototype.deserializeAs_GameActionFightVanishMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.targetId = param1.readInt();
        };
        GameActionFightVanishMessage.ID = 6217;
        return GameActionFightVanishMessage;
    })(AbstractGameActionMessage);
    Protocol.GameActionFightVanishMessage = GameActionFightVanishMessage;
    var SequenceEndMessage = (function (_super) {
        __extends(SequenceEndMessage, _super);
        function SequenceEndMessage() {
            this.actionId = 0;
            this.authorId = 0;
            this.sequenceType = 0;
            _super.call(this);
        }
        SequenceEndMessage.prototype.getMessageId = function () {
            return SequenceEndMessage.ID;
        };
        SequenceEndMessage.prototype.reset = function () {
            this.actionId = 0;
            this.authorId = 0;
            this.sequenceType = 0;
        };
        SequenceEndMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SequenceEndMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SequenceEndMessage.prototype.serialize = function (param1) {
            this.serializeAs_SequenceEndMessage(param1);
        };
        SequenceEndMessage.prototype.serializeAs_SequenceEndMessage = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeVarShort(this.actionId);
            param1.writeInt(this.authorId);
            param1.writeByte(this.sequenceType);
        };
        SequenceEndMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SequenceEndMessage(param1);
        };
        SequenceEndMessage.prototype.deserializeAs_SequenceEndMessage = function (param1) {
            this.actionId = param1.readVarUhShort();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of SequenceEndMessage.actionId.');
            }
            this.authorId = param1.readInt();
            this.sequenceType = param1.readByte();
        };
        SequenceEndMessage.ID = 956;
        return SequenceEndMessage;
    })(NetworkMessage);
    Protocol.SequenceEndMessage = SequenceEndMessage;
    var SequenceStartMessage = (function (_super) {
        __extends(SequenceStartMessage, _super);
        function SequenceStartMessage() {
            this.sequenceType = 0;
            this.authorId = 0;
            _super.call(this);
        }
        SequenceStartMessage.prototype.getMessageId = function () {
            return SequenceStartMessage.ID;
        };
        SequenceStartMessage.prototype.reset = function () {
            this.sequenceType = 0;
            this.authorId = 0;
        };
        SequenceStartMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SequenceStartMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SequenceStartMessage.prototype.serialize = function (param1) {
            this.serializeAs_SequenceStartMessage(param1);
        };
        SequenceStartMessage.prototype.serializeAs_SequenceStartMessage = function (param1) {
            param1.writeByte(this.sequenceType);
            param1.writeInt(this.authorId);
        };
        SequenceStartMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SequenceStartMessage(param1);
        };
        SequenceStartMessage.prototype.deserializeAs_SequenceStartMessage = function (param1) {
            this.sequenceType = param1.readByte();
            this.authorId = param1.readInt();
        };
        SequenceStartMessage.ID = 955;
        return SequenceStartMessage;
    })(NetworkMessage);
    Protocol.SequenceStartMessage = SequenceStartMessage;
    var AllianceChangeGuildRightsMessage = (function (_super) {
        __extends(AllianceChangeGuildRightsMessage, _super);
        function AllianceChangeGuildRightsMessage() {
            this.guildId = 0;
            this.rights = 0;
            _super.call(this);
        }
        AllianceChangeGuildRightsMessage.prototype.getMessageId = function () {
            return AllianceChangeGuildRightsMessage.ID;
        };
        AllianceChangeGuildRightsMessage.prototype.reset = function () {
            this.guildId = 0;
            this.rights = 0;
        };
        AllianceChangeGuildRightsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceChangeGuildRightsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceChangeGuildRightsMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceChangeGuildRightsMessage(param1);
        };
        AllianceChangeGuildRightsMessage.prototype.serializeAs_AllianceChangeGuildRightsMessage = function (param1) {
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element rights.');
            }
            param1.writeByte(this.rights);
        };
        AllianceChangeGuildRightsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceChangeGuildRightsMessage(param1);
        };
        AllianceChangeGuildRightsMessage.prototype.deserializeAs_AllianceChangeGuildRightsMessage = function (param1) {
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of AllianceChangeGuildRightsMessage.guildId.');
            }
            this.rights = param1.readByte();
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element of AllianceChangeGuildRightsMessage.rights.');
            }
        };
        AllianceChangeGuildRightsMessage.ID = 6426;
        return AllianceChangeGuildRightsMessage;
    })(NetworkMessage);
    Protocol.AllianceChangeGuildRightsMessage = AllianceChangeGuildRightsMessage;
    var AllianceCreationResultMessage = (function (_super) {
        __extends(AllianceCreationResultMessage, _super);
        function AllianceCreationResultMessage() {
            this.result = 0;
            _super.call(this);
        }
        AllianceCreationResultMessage.prototype.getMessageId = function () {
            return AllianceCreationResultMessage.ID;
        };
        AllianceCreationResultMessage.prototype.reset = function () {
            this.result = 0;
        };
        AllianceCreationResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceCreationResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceCreationResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceCreationResultMessage(param1);
        };
        AllianceCreationResultMessage.prototype.serializeAs_AllianceCreationResultMessage = function (param1) {
            param1.writeByte(this.result);
        };
        AllianceCreationResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceCreationResultMessage(param1);
        };
        AllianceCreationResultMessage.prototype.deserializeAs_AllianceCreationResultMessage = function (param1) {
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of AllianceCreationResultMessage.result.');
            }
        };
        AllianceCreationResultMessage.ID = 6391;
        return AllianceCreationResultMessage;
    })(NetworkMessage);
    Protocol.AllianceCreationResultMessage = AllianceCreationResultMessage;
    var AllianceCreationStartedMessage = (function (_super) {
        __extends(AllianceCreationStartedMessage, _super);
        function AllianceCreationStartedMessage() {
            _super.call(this);
        }
        AllianceCreationStartedMessage.prototype.getMessageId = function () {
            return AllianceCreationStartedMessage.ID;
        };
        AllianceCreationStartedMessage.prototype.reset = function () {
        };
        AllianceCreationStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceCreationStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceCreationStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceCreationStartedMessage(param1);
        };
        AllianceCreationStartedMessage.prototype.serializeAs_AllianceCreationStartedMessage = function (param1) {
        };
        AllianceCreationStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceCreationStartedMessage(param1);
        };
        AllianceCreationStartedMessage.prototype.deserializeAs_AllianceCreationStartedMessage = function (param1) {
        };
        AllianceCreationStartedMessage.ID = 6394;
        return AllianceCreationStartedMessage;
    })(NetworkMessage);
    Protocol.AllianceCreationStartedMessage = AllianceCreationStartedMessage;
    var AllianceCreationValidMessage = (function (_super) {
        __extends(AllianceCreationValidMessage, _super);
        function AllianceCreationValidMessage() {
            this.allianceName = '';
            this.allianceTag = '';
            this.allianceEmblem = new GuildEmblem();
            _super.call(this);
        }
        AllianceCreationValidMessage.prototype.getMessageId = function () {
            return AllianceCreationValidMessage.ID;
        };
        AllianceCreationValidMessage.prototype.reset = function () {
            this.allianceName = '';
            this.allianceTag = '';
            this.allianceEmblem = new GuildEmblem();
        };
        AllianceCreationValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceCreationValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceCreationValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceCreationValidMessage(param1);
        };
        AllianceCreationValidMessage.prototype.serializeAs_AllianceCreationValidMessage = function (param1) {
            param1.writeUTF(this.allianceName);
            param1.writeUTF(this.allianceTag);
            this.allianceEmblem.serializeAs_GuildEmblem(param1);
        };
        AllianceCreationValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceCreationValidMessage(param1);
        };
        AllianceCreationValidMessage.prototype.deserializeAs_AllianceCreationValidMessage = function (param1) {
            this.allianceName = param1.readUTF();
            this.allianceTag = param1.readUTF();
            this.allianceEmblem = new GuildEmblem();
            this.allianceEmblem.deserialize(param1);
        };
        AllianceCreationValidMessage.ID = 6393;
        return AllianceCreationValidMessage;
    })(NetworkMessage);
    Protocol.AllianceCreationValidMessage = AllianceCreationValidMessage;
    var AllianceFactsErrorMessage = (function (_super) {
        __extends(AllianceFactsErrorMessage, _super);
        function AllianceFactsErrorMessage() {
            this.allianceId = 0;
            _super.call(this);
        }
        AllianceFactsErrorMessage.prototype.getMessageId = function () {
            return AllianceFactsErrorMessage.ID;
        };
        AllianceFactsErrorMessage.prototype.reset = function () {
            this.allianceId = 0;
        };
        AllianceFactsErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceFactsErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceFactsErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceFactsErrorMessage(param1);
        };
        AllianceFactsErrorMessage.prototype.serializeAs_AllianceFactsErrorMessage = function (param1) {
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
        };
        AllianceFactsErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceFactsErrorMessage(param1);
        };
        AllianceFactsErrorMessage.prototype.deserializeAs_AllianceFactsErrorMessage = function (param1) {
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of AllianceFactsErrorMessage.allianceId.');
            }
        };
        AllianceFactsErrorMessage.ID = 6423;
        return AllianceFactsErrorMessage;
    })(NetworkMessage);
    Protocol.AllianceFactsErrorMessage = AllianceFactsErrorMessage;
    var AllianceFactsMessage = (function (_super) {
        __extends(AllianceFactsMessage, _super);
        function AllianceFactsMessage() {
            this.infos = new AllianceFactSheetInformations();
            this.guilds = [];
            this.controlledSubareaIds = [];
            this.leaderCharacterId = 0;
            this.leaderCharacterName = '';
            _super.call(this);
        }
        AllianceFactsMessage.prototype.getMessageId = function () {
            return AllianceFactsMessage.ID;
        };
        AllianceFactsMessage.prototype.reset = function () {
            this.infos = new AllianceFactSheetInformations();
            this.guilds = [];
            this.controlledSubareaIds = [];
            this.leaderCharacterId = 0;
            this.leaderCharacterName = '';
        };
        AllianceFactsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceFactsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceFactsMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceFactsMessage(param1);
        };
        AllianceFactsMessage.prototype.serializeAs_AllianceFactsMessage = function (param1) {
            param1.writeShort(this.infos.getTypeId());
            this.infos.serialize(param1);
            param1.writeShort(this.guilds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.guilds.length) {
                (this.guilds[_loc2_]).serializeAs_GuildInAllianceInformations(param1);
                _loc2_++;
            }
            param1.writeShort(this.controlledSubareaIds.length);
            var _loc3_ = 0;
            while (_loc3_ < this.controlledSubareaIds.length) {
                if (this.controlledSubareaIds[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.controlledSubareaIds[_loc3_] + ') on element 3 (starting at 1) of controlledSubareaIds.');
                }
                param1.writeVarShort(this.controlledSubareaIds[_loc3_]);
                _loc3_++;
            }
            if (this.leaderCharacterId < 0) {
                throw new Error('Forbidden value (' + this.leaderCharacterId + ') on element leaderCharacterId.');
            }
            param1.writeVarInt(this.leaderCharacterId);
            param1.writeUTF(this.leaderCharacterName);
        };
        AllianceFactsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceFactsMessage(param1);
        };
        AllianceFactsMessage.prototype.deserializeAs_AllianceFactsMessage = function (param1) {
            var _loc7_ = null;
            var _loc8_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            this.infos = ProtocolTypeManager.getInstance(AllianceFactSheetInformations, _loc2_);
            this.infos.deserialize(param1);
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc7_ = new GuildInAllianceInformations();
                _loc7_.deserialize(param1);
                this.guilds.push(_loc7_);
                _loc4_++;
            }
            var _loc5_ = param1.readUnsignedShort();
            var _loc6_ = 0;
            while (_loc6_ < _loc5_) {
                _loc8_ = param1.readVarUhShort();
                if (_loc8_ < 0) {
                    throw new Error('Forbidden value (' + _loc8_ + ') on elements of controlledSubareaIds.');
                }
                this.controlledSubareaIds.push(_loc8_);
                _loc6_++;
            }
            this.leaderCharacterId = param1.readVarUhInt();
            if (this.leaderCharacterId < 0) {
                throw new Error('Forbidden value (' + this.leaderCharacterId + ') on element of AllianceFactsMessage.leaderCharacterId.');
            }
            this.leaderCharacterName = param1.readUTF();
        };
        AllianceFactsMessage.ID = 6414;
        return AllianceFactsMessage;
    })(NetworkMessage);
    Protocol.AllianceFactsMessage = AllianceFactsMessage;
    var AllianceFactsRequestMessage = (function (_super) {
        __extends(AllianceFactsRequestMessage, _super);
        function AllianceFactsRequestMessage() {
            this.allianceId = 0;
            _super.call(this);
        }
        AllianceFactsRequestMessage.prototype.getMessageId = function () {
            return AllianceFactsRequestMessage.ID;
        };
        AllianceFactsRequestMessage.prototype.reset = function () {
            this.allianceId = 0;
        };
        AllianceFactsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceFactsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceFactsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceFactsRequestMessage(param1);
        };
        AllianceFactsRequestMessage.prototype.serializeAs_AllianceFactsRequestMessage = function (param1) {
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
        };
        AllianceFactsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceFactsRequestMessage(param1);
        };
        AllianceFactsRequestMessage.prototype.deserializeAs_AllianceFactsRequestMessage = function (param1) {
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of AllianceFactsRequestMessage.allianceId.');
            }
        };
        AllianceFactsRequestMessage.ID = 6409;
        return AllianceFactsRequestMessage;
    })(NetworkMessage);
    Protocol.AllianceFactsRequestMessage = AllianceFactsRequestMessage;
    var AllianceGuildLeavingMessage = (function (_super) {
        __extends(AllianceGuildLeavingMessage, _super);
        function AllianceGuildLeavingMessage() {
            this.kicked = false;
            this.guildId = 0;
            _super.call(this);
        }
        AllianceGuildLeavingMessage.prototype.getMessageId = function () {
            return AllianceGuildLeavingMessage.ID;
        };
        AllianceGuildLeavingMessage.prototype.reset = function () {
            this.kicked = false;
            this.guildId = 0;
        };
        AllianceGuildLeavingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceGuildLeavingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceGuildLeavingMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceGuildLeavingMessage(param1);
        };
        AllianceGuildLeavingMessage.prototype.serializeAs_AllianceGuildLeavingMessage = function (param1) {
            param1.writeBoolean(this.kicked);
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
        };
        AllianceGuildLeavingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceGuildLeavingMessage(param1);
        };
        AllianceGuildLeavingMessage.prototype.deserializeAs_AllianceGuildLeavingMessage = function (param1) {
            this.kicked = param1.readBoolean();
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of AllianceGuildLeavingMessage.guildId.');
            }
        };
        AllianceGuildLeavingMessage.ID = 6399;
        return AllianceGuildLeavingMessage;
    })(NetworkMessage);
    Protocol.AllianceGuildLeavingMessage = AllianceGuildLeavingMessage;
    var AllianceInsiderInfoMessage = (function (_super) {
        __extends(AllianceInsiderInfoMessage, _super);
        function AllianceInsiderInfoMessage() {
            this.allianceInfos = new AllianceFactSheetInformations();
            this.guilds = [];
            this.prisms = [];
            _super.call(this);
        }
        AllianceInsiderInfoMessage.prototype.getMessageId = function () {
            return AllianceInsiderInfoMessage.ID;
        };
        AllianceInsiderInfoMessage.prototype.reset = function () {
            this.allianceInfos = new AllianceFactSheetInformations();
            this.guilds = [];
            this.prisms = [];
        };
        AllianceInsiderInfoMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInsiderInfoMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInsiderInfoMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInsiderInfoMessage(param1);
        };
        AllianceInsiderInfoMessage.prototype.serializeAs_AllianceInsiderInfoMessage = function (param1) {
            this.allianceInfos.serializeAs_AllianceFactSheetInformations(param1);
            param1.writeShort(this.guilds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.guilds.length) {
                (this.guilds[_loc2_]).serializeAs_GuildInsiderFactSheetInformations(param1);
                _loc2_++;
            }
            param1.writeShort(this.prisms.length);
            var _loc3_ = 0;
            while (_loc3_ < this.prisms.length) {
                param1.writeShort((this.prisms[_loc3_]).getTypeId());
                (this.prisms[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        AllianceInsiderInfoMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInsiderInfoMessage(param1);
        };
        AllianceInsiderInfoMessage.prototype.deserializeAs_AllianceInsiderInfoMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = 0;
            var _loc8_ = null;
            this.allianceInfos = new AllianceFactSheetInformations();
            this.allianceInfos.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new GuildInsiderFactSheetInformations();
                _loc6_.deserialize(param1);
                this.guilds.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readUnsignedShort();
                _loc8_ = ProtocolTypeManager.getInstance(PrismSubareaEmptyInfo, _loc7_);
                _loc8_.deserialize(param1);
                this.prisms.push(_loc8_);
                _loc5_++;
            }
        };
        AllianceInsiderInfoMessage.ID = 6403;
        return AllianceInsiderInfoMessage;
    })(NetworkMessage);
    Protocol.AllianceInsiderInfoMessage = AllianceInsiderInfoMessage;
    var AllianceInsiderInfoRequestMessage = (function (_super) {
        __extends(AllianceInsiderInfoRequestMessage, _super);
        function AllianceInsiderInfoRequestMessage() {
            _super.call(this);
        }
        AllianceInsiderInfoRequestMessage.prototype.getMessageId = function () {
            return AllianceInsiderInfoRequestMessage.ID;
        };
        AllianceInsiderInfoRequestMessage.prototype.reset = function () {
        };
        AllianceInsiderInfoRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInsiderInfoRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInsiderInfoRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInsiderInfoRequestMessage(param1);
        };
        AllianceInsiderInfoRequestMessage.prototype.serializeAs_AllianceInsiderInfoRequestMessage = function (param1) {
        };
        AllianceInsiderInfoRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInsiderInfoRequestMessage(param1);
        };
        AllianceInsiderInfoRequestMessage.prototype.deserializeAs_AllianceInsiderInfoRequestMessage = function (param1) {
        };
        AllianceInsiderInfoRequestMessage.ID = 6417;
        return AllianceInsiderInfoRequestMessage;
    })(NetworkMessage);
    Protocol.AllianceInsiderInfoRequestMessage = AllianceInsiderInfoRequestMessage;
    var AllianceInvitationAnswerMessage = (function (_super) {
        __extends(AllianceInvitationAnswerMessage, _super);
        function AllianceInvitationAnswerMessage() {
            this.accept = false;
            _super.call(this);
        }
        AllianceInvitationAnswerMessage.prototype.getMessageId = function () {
            return AllianceInvitationAnswerMessage.ID;
        };
        AllianceInvitationAnswerMessage.prototype.reset = function () {
            this.accept = false;
        };
        AllianceInvitationAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInvitationAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInvitationAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInvitationAnswerMessage(param1);
        };
        AllianceInvitationAnswerMessage.prototype.serializeAs_AllianceInvitationAnswerMessage = function (param1) {
            param1.writeBoolean(this.accept);
        };
        AllianceInvitationAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInvitationAnswerMessage(param1);
        };
        AllianceInvitationAnswerMessage.prototype.deserializeAs_AllianceInvitationAnswerMessage = function (param1) {
            this.accept = param1.readBoolean();
        };
        AllianceInvitationAnswerMessage.ID = 6401;
        return AllianceInvitationAnswerMessage;
    })(NetworkMessage);
    Protocol.AllianceInvitationAnswerMessage = AllianceInvitationAnswerMessage;
    var AllianceInvitationMessage = (function (_super) {
        __extends(AllianceInvitationMessage, _super);
        function AllianceInvitationMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        AllianceInvitationMessage.prototype.getMessageId = function () {
            return AllianceInvitationMessage.ID;
        };
        AllianceInvitationMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        AllianceInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInvitationMessage(param1);
        };
        AllianceInvitationMessage.prototype.serializeAs_AllianceInvitationMessage = function (param1) {
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
        };
        AllianceInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInvitationMessage(param1);
        };
        AllianceInvitationMessage.prototype.deserializeAs_AllianceInvitationMessage = function (param1) {
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of AllianceInvitationMessage.targetId.');
            }
        };
        AllianceInvitationMessage.ID = 6395;
        return AllianceInvitationMessage;
    })(NetworkMessage);
    Protocol.AllianceInvitationMessage = AllianceInvitationMessage;
    var AllianceInvitationStateRecrutedMessage = (function (_super) {
        __extends(AllianceInvitationStateRecrutedMessage, _super);
        function AllianceInvitationStateRecrutedMessage() {
            this.invitationState = 0;
            _super.call(this);
        }
        AllianceInvitationStateRecrutedMessage.prototype.getMessageId = function () {
            return AllianceInvitationStateRecrutedMessage.ID;
        };
        AllianceInvitationStateRecrutedMessage.prototype.reset = function () {
            this.invitationState = 0;
        };
        AllianceInvitationStateRecrutedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInvitationStateRecrutedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInvitationStateRecrutedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInvitationStateRecrutedMessage(param1);
        };
        AllianceInvitationStateRecrutedMessage.prototype.serializeAs_AllianceInvitationStateRecrutedMessage = function (param1) {
            param1.writeByte(this.invitationState);
        };
        AllianceInvitationStateRecrutedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInvitationStateRecrutedMessage(param1);
        };
        AllianceInvitationStateRecrutedMessage.prototype.deserializeAs_AllianceInvitationStateRecrutedMessage = function (param1) {
            this.invitationState = param1.readByte();
            if (this.invitationState < 0) {
                throw new Error('Forbidden value (' + this.invitationState + ') on element of AllianceInvitationStateRecrutedMessage.invitationState.');
            }
        };
        AllianceInvitationStateRecrutedMessage.ID = 6392;
        return AllianceInvitationStateRecrutedMessage;
    })(NetworkMessage);
    Protocol.AllianceInvitationStateRecrutedMessage = AllianceInvitationStateRecrutedMessage;
    var AllianceInvitationStateRecruterMessage = (function (_super) {
        __extends(AllianceInvitationStateRecruterMessage, _super);
        function AllianceInvitationStateRecruterMessage() {
            this.recrutedName = '';
            this.invitationState = 0;
            _super.call(this);
        }
        AllianceInvitationStateRecruterMessage.prototype.getMessageId = function () {
            return AllianceInvitationStateRecruterMessage.ID;
        };
        AllianceInvitationStateRecruterMessage.prototype.reset = function () {
            this.recrutedName = '';
            this.invitationState = 0;
        };
        AllianceInvitationStateRecruterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInvitationStateRecruterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInvitationStateRecruterMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInvitationStateRecruterMessage(param1);
        };
        AllianceInvitationStateRecruterMessage.prototype.serializeAs_AllianceInvitationStateRecruterMessage = function (param1) {
            param1.writeUTF(this.recrutedName);
            param1.writeByte(this.invitationState);
        };
        AllianceInvitationStateRecruterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInvitationStateRecruterMessage(param1);
        };
        AllianceInvitationStateRecruterMessage.prototype.deserializeAs_AllianceInvitationStateRecruterMessage = function (param1) {
            this.recrutedName = param1.readUTF();
            this.invitationState = param1.readByte();
            if (this.invitationState < 0) {
                throw new Error('Forbidden value (' + this.invitationState + ') on element of AllianceInvitationStateRecruterMessage.invitationState.');
            }
        };
        AllianceInvitationStateRecruterMessage.ID = 6396;
        return AllianceInvitationStateRecruterMessage;
    })(NetworkMessage);
    Protocol.AllianceInvitationStateRecruterMessage = AllianceInvitationStateRecruterMessage;
    var AllianceInvitedMessage = (function (_super) {
        __extends(AllianceInvitedMessage, _super);
        function AllianceInvitedMessage() {
            this.recruterId = 0;
            this.recruterName = '';
            this.allianceInfo = new BasicNamedAllianceInformations();
            _super.call(this);
        }
        AllianceInvitedMessage.prototype.getMessageId = function () {
            return AllianceInvitedMessage.ID;
        };
        AllianceInvitedMessage.prototype.reset = function () {
            this.recruterId = 0;
            this.recruterName = '';
            this.allianceInfo = new BasicNamedAllianceInformations();
        };
        AllianceInvitedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceInvitedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceInvitedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInvitedMessage(param1);
        };
        AllianceInvitedMessage.prototype.serializeAs_AllianceInvitedMessage = function (param1) {
            if (this.recruterId < 0) {
                throw new Error('Forbidden value (' + this.recruterId + ') on element recruterId.');
            }
            param1.writeVarInt(this.recruterId);
            param1.writeUTF(this.recruterName);
            this.allianceInfo.serializeAs_BasicNamedAllianceInformations(param1);
        };
        AllianceInvitedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInvitedMessage(param1);
        };
        AllianceInvitedMessage.prototype.deserializeAs_AllianceInvitedMessage = function (param1) {
            this.recruterId = param1.readVarUhInt();
            if (this.recruterId < 0) {
                throw new Error('Forbidden value (' + this.recruterId + ') on element of AllianceInvitedMessage.recruterId.');
            }
            this.recruterName = param1.readUTF();
            this.allianceInfo = new BasicNamedAllianceInformations();
            this.allianceInfo.deserialize(param1);
        };
        AllianceInvitedMessage.ID = 6397;
        return AllianceInvitedMessage;
    })(NetworkMessage);
    Protocol.AllianceInvitedMessage = AllianceInvitedMessage;
    var AllianceJoinedMessage = (function (_super) {
        __extends(AllianceJoinedMessage, _super);
        function AllianceJoinedMessage() {
            this.allianceInfo = new AllianceInformations();
            this.enabled = false;
            _super.call(this);
        }
        AllianceJoinedMessage.prototype.getMessageId = function () {
            return AllianceJoinedMessage.ID;
        };
        AllianceJoinedMessage.prototype.reset = function () {
            this.allianceInfo = new AllianceInformations();
            this.enabled = false;
        };
        AllianceJoinedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceJoinedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceJoinedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceJoinedMessage(param1);
        };
        AllianceJoinedMessage.prototype.serializeAs_AllianceJoinedMessage = function (param1) {
            this.allianceInfo.serializeAs_AllianceInformations(param1);
            param1.writeBoolean(this.enabled);
        };
        AllianceJoinedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceJoinedMessage(param1);
        };
        AllianceJoinedMessage.prototype.deserializeAs_AllianceJoinedMessage = function (param1) {
            this.allianceInfo = new AllianceInformations();
            this.allianceInfo.deserialize(param1);
            this.enabled = param1.readBoolean();
        };
        AllianceJoinedMessage.ID = 6402;
        return AllianceJoinedMessage;
    })(NetworkMessage);
    Protocol.AllianceJoinedMessage = AllianceJoinedMessage;
    var AllianceKickRequestMessage = (function (_super) {
        __extends(AllianceKickRequestMessage, _super);
        function AllianceKickRequestMessage() {
            this.kickedId = 0;
            _super.call(this);
        }
        AllianceKickRequestMessage.prototype.getMessageId = function () {
            return AllianceKickRequestMessage.ID;
        };
        AllianceKickRequestMessage.prototype.reset = function () {
            this.kickedId = 0;
        };
        AllianceKickRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceKickRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceKickRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceKickRequestMessage(param1);
        };
        AllianceKickRequestMessage.prototype.serializeAs_AllianceKickRequestMessage = function (param1) {
            if (this.kickedId < 0) {
                throw new Error('Forbidden value (' + this.kickedId + ') on element kickedId.');
            }
            param1.writeVarInt(this.kickedId);
        };
        AllianceKickRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceKickRequestMessage(param1);
        };
        AllianceKickRequestMessage.prototype.deserializeAs_AllianceKickRequestMessage = function (param1) {
            this.kickedId = param1.readVarUhInt();
            if (this.kickedId < 0) {
                throw new Error('Forbidden value (' + this.kickedId + ') on element of AllianceKickRequestMessage.kickedId.');
            }
        };
        AllianceKickRequestMessage.ID = 6400;
        return AllianceKickRequestMessage;
    })(NetworkMessage);
    Protocol.AllianceKickRequestMessage = AllianceKickRequestMessage;
    var AllianceLeftMessage = (function (_super) {
        __extends(AllianceLeftMessage, _super);
        function AllianceLeftMessage() {
            _super.call(this);
        }
        AllianceLeftMessage.prototype.getMessageId = function () {
            return AllianceLeftMessage.ID;
        };
        AllianceLeftMessage.prototype.reset = function () {
        };
        AllianceLeftMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceLeftMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceLeftMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceLeftMessage(param1);
        };
        AllianceLeftMessage.prototype.serializeAs_AllianceLeftMessage = function (param1) {
        };
        AllianceLeftMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceLeftMessage(param1);
        };
        AllianceLeftMessage.prototype.deserializeAs_AllianceLeftMessage = function (param1) {
        };
        AllianceLeftMessage.ID = 6398;
        return AllianceLeftMessage;
    })(NetworkMessage);
    Protocol.AllianceLeftMessage = AllianceLeftMessage;
    var AllianceListMessage = (function (_super) {
        __extends(AllianceListMessage, _super);
        function AllianceListMessage() {
            this.alliances = [];
            _super.call(this);
        }
        AllianceListMessage.prototype.getMessageId = function () {
            return AllianceListMessage.ID;
        };
        AllianceListMessage.prototype.reset = function () {
            this.alliances = [];
        };
        AllianceListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceListMessage(param1);
        };
        AllianceListMessage.prototype.serializeAs_AllianceListMessage = function (param1) {
            param1.writeShort(this.alliances.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alliances.length) {
                (this.alliances[_loc2_]).serializeAs_AllianceFactSheetInformations(param1);
                _loc2_++;
            }
        };
        AllianceListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceListMessage(param1);
        };
        AllianceListMessage.prototype.deserializeAs_AllianceListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new AllianceFactSheetInformations();
                _loc4_.deserialize(param1);
                this.alliances.push(_loc4_);
                _loc3_++;
            }
        };
        AllianceListMessage.ID = 6408;
        return AllianceListMessage;
    })(NetworkMessage);
    Protocol.AllianceListMessage = AllianceListMessage;
    var AllianceMembershipMessage = (function (_super) {
        __extends(AllianceMembershipMessage, _super);
        function AllianceMembershipMessage() {
            _super.call(this);
        }
        AllianceMembershipMessage.prototype.getMessageId = function () {
            return AllianceMembershipMessage.ID;
        };
        AllianceMembershipMessage.prototype.reset = function () {
        };
        AllianceMembershipMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceMembershipMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceMembershipMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceMembershipMessage(param1);
        };
        AllianceMembershipMessage.prototype.serializeAs_AllianceMembershipMessage = function (param1) {
            _super.prototype.serializeAs_AllianceJoinedMessage.call(this, param1);
        };
        AllianceMembershipMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceMembershipMessage(param1);
        };
        AllianceMembershipMessage.prototype.deserializeAs_AllianceMembershipMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        AllianceMembershipMessage.ID = 6390;
        return AllianceMembershipMessage;
    })(AllianceJoinedMessage);
    Protocol.AllianceMembershipMessage = AllianceMembershipMessage;
    var AllianceModificationEmblemValidMessage = (function (_super) {
        __extends(AllianceModificationEmblemValidMessage, _super);
        function AllianceModificationEmblemValidMessage() {
            this.Alliancemblem = new GuildEmblem();
            _super.call(this);
        }
        AllianceModificationEmblemValidMessage.prototype.getMessageId = function () {
            return AllianceModificationEmblemValidMessage.ID;
        };
        AllianceModificationEmblemValidMessage.prototype.reset = function () {
            this.Alliancemblem = new GuildEmblem();
        };
        AllianceModificationEmblemValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceModificationEmblemValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceModificationEmblemValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceModificationEmblemValidMessage(param1);
        };
        AllianceModificationEmblemValidMessage.prototype.serializeAs_AllianceModificationEmblemValidMessage = function (param1) {
            this.Alliancemblem.serializeAs_GuildEmblem(param1);
        };
        AllianceModificationEmblemValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceModificationEmblemValidMessage(param1);
        };
        AllianceModificationEmblemValidMessage.prototype.deserializeAs_AllianceModificationEmblemValidMessage = function (param1) {
            this.Alliancemblem = new GuildEmblem();
            this.Alliancemblem.deserialize(param1);
        };
        AllianceModificationEmblemValidMessage.ID = 6447;
        return AllianceModificationEmblemValidMessage;
    })(NetworkMessage);
    Protocol.AllianceModificationEmblemValidMessage = AllianceModificationEmblemValidMessage;
    var AllianceModificationNameAndTagValidMessage = (function (_super) {
        __extends(AllianceModificationNameAndTagValidMessage, _super);
        function AllianceModificationNameAndTagValidMessage() {
            this.allianceName = '';
            this.allianceTag = '';
            _super.call(this);
        }
        AllianceModificationNameAndTagValidMessage.prototype.getMessageId = function () {
            return AllianceModificationNameAndTagValidMessage.ID;
        };
        AllianceModificationNameAndTagValidMessage.prototype.reset = function () {
            this.allianceName = '';
            this.allianceTag = '';
        };
        AllianceModificationNameAndTagValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceModificationNameAndTagValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceModificationNameAndTagValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceModificationNameAndTagValidMessage(param1);
        };
        AllianceModificationNameAndTagValidMessage.prototype.serializeAs_AllianceModificationNameAndTagValidMessage = function (param1) {
            param1.writeUTF(this.allianceName);
            param1.writeUTF(this.allianceTag);
        };
        AllianceModificationNameAndTagValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceModificationNameAndTagValidMessage(param1);
        };
        AllianceModificationNameAndTagValidMessage.prototype.deserializeAs_AllianceModificationNameAndTagValidMessage = function (param1) {
            this.allianceName = param1.readUTF();
            this.allianceTag = param1.readUTF();
        };
        AllianceModificationNameAndTagValidMessage.ID = 6449;
        return AllianceModificationNameAndTagValidMessage;
    })(NetworkMessage);
    Protocol.AllianceModificationNameAndTagValidMessage = AllianceModificationNameAndTagValidMessage;
    var AllianceModificationStartedMessage = (function (_super) {
        __extends(AllianceModificationStartedMessage, _super);
        function AllianceModificationStartedMessage() {
            this.canChangeName = false;
            this.canChangeTag = false;
            this.canChangeEmblem = false;
            _super.call(this);
        }
        AllianceModificationStartedMessage.prototype.getMessageId = function () {
            return AllianceModificationStartedMessage.ID;
        };
        AllianceModificationStartedMessage.prototype.reset = function () {
            this.canChangeName = false;
            this.canChangeTag = false;
            this.canChangeEmblem = false;
        };
        AllianceModificationStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceModificationStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceModificationStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceModificationStartedMessage(param1);
        };
        AllianceModificationStartedMessage.prototype.serializeAs_AllianceModificationStartedMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.canChangeName);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.canChangeTag);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.canChangeEmblem);
            param1.writeByte(_loc2_);
        };
        AllianceModificationStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceModificationStartedMessage(param1);
        };
        AllianceModificationStartedMessage.prototype.deserializeAs_AllianceModificationStartedMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.canChangeName = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.canChangeTag = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.canChangeEmblem = BooleanByteWrapper.getFlag(_loc2_, 2);
        };
        AllianceModificationStartedMessage.ID = 6444;
        return AllianceModificationStartedMessage;
    })(NetworkMessage);
    Protocol.AllianceModificationStartedMessage = AllianceModificationStartedMessage;
    var AllianceModificationValidMessage = (function (_super) {
        __extends(AllianceModificationValidMessage, _super);
        function AllianceModificationValidMessage() {
            this.allianceName = '';
            this.allianceTag = '';
            this.Alliancemblem = new GuildEmblem();
            _super.call(this);
        }
        AllianceModificationValidMessage.prototype.getMessageId = function () {
            return AllianceModificationValidMessage.ID;
        };
        AllianceModificationValidMessage.prototype.reset = function () {
            this.allianceName = '';
            this.allianceTag = '';
            this.Alliancemblem = new GuildEmblem();
        };
        AllianceModificationValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceModificationValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceModificationValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceModificationValidMessage(param1);
        };
        AllianceModificationValidMessage.prototype.serializeAs_AllianceModificationValidMessage = function (param1) {
            param1.writeUTF(this.allianceName);
            param1.writeUTF(this.allianceTag);
            this.Alliancemblem.serializeAs_GuildEmblem(param1);
        };
        AllianceModificationValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceModificationValidMessage(param1);
        };
        AllianceModificationValidMessage.prototype.deserializeAs_AllianceModificationValidMessage = function (param1) {
            this.allianceName = param1.readUTF();
            this.allianceTag = param1.readUTF();
            this.Alliancemblem = new GuildEmblem();
            this.Alliancemblem.deserialize(param1);
        };
        AllianceModificationValidMessage.ID = 6450;
        return AllianceModificationValidMessage;
    })(NetworkMessage);
    Protocol.AllianceModificationValidMessage = AllianceModificationValidMessage;
    var AlliancePartialListMessage = (function (_super) {
        __extends(AlliancePartialListMessage, _super);
        function AlliancePartialListMessage() {
            _super.call(this);
        }
        AlliancePartialListMessage.prototype.getMessageId = function () {
            return AlliancePartialListMessage.ID;
        };
        AlliancePartialListMessage.prototype.reset = function () {
        };
        AlliancePartialListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AlliancePartialListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AlliancePartialListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AlliancePartialListMessage(param1);
        };
        AlliancePartialListMessage.prototype.serializeAs_AlliancePartialListMessage = function (param1) {
            _super.prototype.serializeAs_AllianceListMessage.call(this, param1);
        };
        AlliancePartialListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AlliancePartialListMessage(param1);
        };
        AlliancePartialListMessage.prototype.deserializeAs_AlliancePartialListMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        AlliancePartialListMessage.ID = 6427;
        return AlliancePartialListMessage;
    })(AllianceListMessage);
    Protocol.AlliancePartialListMessage = AlliancePartialListMessage;
    var AllianceVersatileInfoListMessage = (function (_super) {
        __extends(AllianceVersatileInfoListMessage, _super);
        function AllianceVersatileInfoListMessage() {
            this.alliances = [];
            _super.call(this);
        }
        AllianceVersatileInfoListMessage.prototype.getMessageId = function () {
            return AllianceVersatileInfoListMessage.ID;
        };
        AllianceVersatileInfoListMessage.prototype.reset = function () {
            this.alliances = [];
        };
        AllianceVersatileInfoListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceVersatileInfoListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceVersatileInfoListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceVersatileInfoListMessage(param1);
        };
        AllianceVersatileInfoListMessage.prototype.serializeAs_AllianceVersatileInfoListMessage = function (param1) {
            param1.writeShort(this.alliances.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alliances.length) {
                (this.alliances[_loc2_]).serializeAs_AllianceVersatileInformations(param1);
                _loc2_++;
            }
        };
        AllianceVersatileInfoListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceVersatileInfoListMessage(param1);
        };
        AllianceVersatileInfoListMessage.prototype.deserializeAs_AllianceVersatileInfoListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new AllianceVersatileInformations();
                _loc4_.deserialize(param1);
                this.alliances.push(_loc4_);
                _loc3_++;
            }
        };
        AllianceVersatileInfoListMessage.ID = 6436;
        return AllianceVersatileInfoListMessage;
    })(NetworkMessage);
    Protocol.AllianceVersatileInfoListMessage = AllianceVersatileInfoListMessage;
    var KohUpdateMessage = (function (_super) {
        __extends(KohUpdateMessage, _super);
        function KohUpdateMessage() {
            this.alliances = [];
            this.allianceNbMembers = [];
            this.allianceRoundWeigth = [];
            this.allianceMatchScore = [];
            this.allianceMapWinner = new BasicAllianceInformations();
            this.allianceMapWinnerScore = 0;
            this.allianceMapMyAllianceScore = 0;
            this.nextTickTime = 0;
            _super.call(this);
        }
        KohUpdateMessage.prototype.getMessageId = function () {
            return KohUpdateMessage.ID;
        };
        KohUpdateMessage.prototype.reset = function () {
            this.alliances = [];
            this.allianceNbMembers = [];
            this.allianceRoundWeigth = [];
            this.allianceMatchScore = [];
            this.allianceMapWinner = new BasicAllianceInformations();
            this.allianceMapWinnerScore = 0;
            this.allianceMapMyAllianceScore = 0;
            this.nextTickTime = 0;
        };
        KohUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KohUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KohUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_KohUpdateMessage(param1);
        };
        KohUpdateMessage.prototype.serializeAs_KohUpdateMessage = function (param1) {
            param1.writeShort(this.alliances.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alliances.length) {
                (this.alliances[_loc2_]).serializeAs_AllianceInformations(param1);
                _loc2_++;
            }
            param1.writeShort(this.allianceNbMembers.length);
            var _loc3_ = 0;
            while (_loc3_ < this.allianceNbMembers.length) {
                if (this.allianceNbMembers[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.allianceNbMembers[_loc3_] + ') on element 2 (starting at 1) of allianceNbMembers.');
                }
                param1.writeVarShort(this.allianceNbMembers[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.allianceRoundWeigth.length);
            var _loc4_ = 0;
            while (_loc4_ < this.allianceRoundWeigth.length) {
                if (this.allianceRoundWeigth[_loc4_] < 0) {
                    throw new Error('Forbidden value (' + this.allianceRoundWeigth[_loc4_] + ') on element 3 (starting at 1) of allianceRoundWeigth.');
                }
                param1.writeVarInt(this.allianceRoundWeigth[_loc4_]);
                _loc4_++;
            }
            param1.writeShort(this.allianceMatchScore.length);
            var _loc5_ = 0;
            while (_loc5_ < this.allianceMatchScore.length) {
                if (this.allianceMatchScore[_loc5_] < 0) {
                    throw new Error('Forbidden value (' + this.allianceMatchScore[_loc5_] + ') on element 4 (starting at 1) of allianceMatchScore.');
                }
                param1.writeByte(this.allianceMatchScore[_loc5_]);
                _loc5_++;
            }
            this.allianceMapWinner.serializeAs_BasicAllianceInformations(param1);
            if (this.allianceMapWinnerScore < 0) {
                throw new Error('Forbidden value (' + this.allianceMapWinnerScore + ') on element allianceMapWinnerScore.');
            }
            param1.writeVarInt(this.allianceMapWinnerScore);
            if (this.allianceMapMyAllianceScore < 0) {
                throw new Error('Forbidden value (' + this.allianceMapMyAllianceScore + ') on element allianceMapMyAllianceScore.');
            }
            param1.writeVarInt(this.allianceMapMyAllianceScore);
            if (this.nextTickTime < 0 || this.nextTickTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.nextTickTime + ') on element nextTickTime.');
            }
            param1.writeDouble(this.nextTickTime);
        };
        KohUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KohUpdateMessage(param1);
        };
        KohUpdateMessage.prototype.deserializeAs_KohUpdateMessage = function (param1) {
            var _loc10_ = null;
            var _loc11_ = 0;
            var _loc12_ = 0;
            var _loc13_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc10_ = new AllianceInformations();
                _loc10_.deserialize(param1);
                this.alliances.push(_loc10_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc11_ = param1.readVarUhShort();
                if (_loc11_ < 0) {
                    throw new Error('Forbidden value (' + _loc11_ + ') on elements of allianceNbMembers.');
                }
                this.allianceNbMembers.push(_loc11_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc12_ = param1.readVarUhInt();
                if (_loc12_ < 0) {
                    throw new Error('Forbidden value (' + _loc12_ + ') on elements of allianceRoundWeigth.');
                }
                this.allianceRoundWeigth.push(_loc12_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc13_ = param1.readByte();
                if (_loc13_ < 0) {
                    throw new Error('Forbidden value (' + _loc13_ + ') on elements of allianceMatchScore.');
                }
                this.allianceMatchScore.push(_loc13_);
                _loc9_++;
            }
            this.allianceMapWinner = new BasicAllianceInformations();
            this.allianceMapWinner.deserialize(param1);
            this.allianceMapWinnerScore = param1.readVarUhInt();
            if (this.allianceMapWinnerScore < 0) {
                throw new Error('Forbidden value (' + this.allianceMapWinnerScore + ') on element of KohUpdateMessage.allianceMapWinnerScore.');
            }
            this.allianceMapMyAllianceScore = param1.readVarUhInt();
            if (this.allianceMapMyAllianceScore < 0) {
                throw new Error('Forbidden value (' + this.allianceMapMyAllianceScore + ') on element of KohUpdateMessage.allianceMapMyAllianceScore.');
            }
            this.nextTickTime = param1.readDouble();
            if (this.nextTickTime < 0 || this.nextTickTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.nextTickTime + ') on element of KohUpdateMessage.nextTickTime.');
            }
        };
        KohUpdateMessage.ID = 6439;
        return KohUpdateMessage;
    })(NetworkMessage);
    Protocol.KohUpdateMessage = KohUpdateMessage;
    var AlmanachCalendarDateMessage = (function (_super) {
        __extends(AlmanachCalendarDateMessage, _super);
        function AlmanachCalendarDateMessage() {
            this.date = 0;
            _super.call(this);
        }
        AlmanachCalendarDateMessage.prototype.getMessageId = function () {
            return AlmanachCalendarDateMessage.ID;
        };
        AlmanachCalendarDateMessage.prototype.reset = function () {
            this.date = 0;
        };
        AlmanachCalendarDateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AlmanachCalendarDateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AlmanachCalendarDateMessage.prototype.serialize = function (param1) {
            this.serializeAs_AlmanachCalendarDateMessage(param1);
        };
        AlmanachCalendarDateMessage.prototype.serializeAs_AlmanachCalendarDateMessage = function (param1) {
            param1.writeInt(this.date);
        };
        AlmanachCalendarDateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AlmanachCalendarDateMessage(param1);
        };
        AlmanachCalendarDateMessage.prototype.deserializeAs_AlmanachCalendarDateMessage = function (param1) {
            this.date = param1.readInt();
        };
        AlmanachCalendarDateMessage.ID = 6341;
        return AlmanachCalendarDateMessage;
    })(NetworkMessage);
    Protocol.AlmanachCalendarDateMessage = AlmanachCalendarDateMessage;
    var AccountCapabilitiesMessage = (function (_super) {
        __extends(AccountCapabilitiesMessage, _super);
        function AccountCapabilitiesMessage() {
            this.accountId = 0;
            this.tutorialAvailable = false;
            this.breedsVisible = 0;
            this.breedsAvailable = 0;
            this.status = -1;
            this.canCreateNewCharacter = false;
            _super.call(this);
        }
        AccountCapabilitiesMessage.prototype.getMessageId = function () {
            return AccountCapabilitiesMessage.ID;
        };
        AccountCapabilitiesMessage.prototype.reset = function () {
            this.accountId = 0;
            this.tutorialAvailable = false;
            this.breedsVisible = 0;
            this.breedsAvailable = 0;
            this.status = -1;
            this.canCreateNewCharacter = false;
        };
        AccountCapabilitiesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccountCapabilitiesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccountCapabilitiesMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccountCapabilitiesMessage(param1);
        };
        AccountCapabilitiesMessage.prototype.serializeAs_AccountCapabilitiesMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.tutorialAvailable);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.canCreateNewCharacter);
            param1.writeByte(_loc2_);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            if (this.breedsVisible < 0 || this.breedsVisible > 65535) {
                throw new Error('Forbidden value (' + this.breedsVisible + ') on element breedsVisible.');
            }
            param1.writeShort(this.breedsVisible);
            if (this.breedsAvailable < 0 || this.breedsAvailable > 65535) {
                throw new Error('Forbidden value (' + this.breedsAvailable + ') on element breedsAvailable.');
            }
            param1.writeShort(this.breedsAvailable);
            param1.writeByte(this.status);
        };
        AccountCapabilitiesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccountCapabilitiesMessage(param1);
        };
        AccountCapabilitiesMessage.prototype.deserializeAs_AccountCapabilitiesMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.tutorialAvailable = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.canCreateNewCharacter = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of AccountCapabilitiesMessage.accountId.');
            }
            this.breedsVisible = param1.readUnsignedShort();
            if (this.breedsVisible < 0 || this.breedsVisible > 65535) {
                throw new Error('Forbidden value (' + this.breedsVisible + ') on element of AccountCapabilitiesMessage.breedsVisible.');
            }
            this.breedsAvailable = param1.readUnsignedShort();
            if (this.breedsAvailable < 0 || this.breedsAvailable > 65535) {
                throw new Error('Forbidden value (' + this.breedsAvailable + ') on element of AccountCapabilitiesMessage.breedsAvailable.');
            }
            this.status = param1.readByte();
        };
        AccountCapabilitiesMessage.ID = 6216;
        return AccountCapabilitiesMessage;
    })(NetworkMessage);
    Protocol.AccountCapabilitiesMessage = AccountCapabilitiesMessage;
    var AccountLoggingKickedMessage = (function (_super) {
        __extends(AccountLoggingKickedMessage, _super);
        function AccountLoggingKickedMessage() {
            this.days = 0;
            this.hours = 0;
            this.minutes = 0;
            _super.call(this);
        }
        AccountLoggingKickedMessage.prototype.getMessageId = function () {
            return AccountLoggingKickedMessage.ID;
        };
        AccountLoggingKickedMessage.prototype.reset = function () {
            this.days = 0;
            this.hours = 0;
            this.minutes = 0;
        };
        AccountLoggingKickedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccountLoggingKickedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccountLoggingKickedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccountLoggingKickedMessage(param1);
        };
        AccountLoggingKickedMessage.prototype.serializeAs_AccountLoggingKickedMessage = function (param1) {
            if (this.days < 0) {
                throw new Error('Forbidden value (' + this.days + ') on element days.');
            }
            param1.writeVarShort(this.days);
            if (this.hours < 0) {
                throw new Error('Forbidden value (' + this.hours + ') on element hours.');
            }
            param1.writeByte(this.hours);
            if (this.minutes < 0) {
                throw new Error('Forbidden value (' + this.minutes + ') on element minutes.');
            }
            param1.writeByte(this.minutes);
        };
        AccountLoggingKickedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccountLoggingKickedMessage(param1);
        };
        AccountLoggingKickedMessage.prototype.deserializeAs_AccountLoggingKickedMessage = function (param1) {
            this.days = param1.readVarUhShort();
            if (this.days < 0) {
                throw new Error('Forbidden value (' + this.days + ') on element of AccountLoggingKickedMessage.days.');
            }
            this.hours = param1.readByte();
            if (this.hours < 0) {
                throw new Error('Forbidden value (' + this.hours + ') on element of AccountLoggingKickedMessage.hours.');
            }
            this.minutes = param1.readByte();
            if (this.minutes < 0) {
                throw new Error('Forbidden value (' + this.minutes + ') on element of AccountLoggingKickedMessage.minutes.');
            }
        };
        AccountLoggingKickedMessage.ID = 6029;
        return AccountLoggingKickedMessage;
    })(NetworkMessage);
    Protocol.AccountLoggingKickedMessage = AccountLoggingKickedMessage;
    var AlreadyConnectedMessage = (function (_super) {
        __extends(AlreadyConnectedMessage, _super);
        function AlreadyConnectedMessage() {
            _super.call(this);
        }
        AlreadyConnectedMessage.prototype.getMessageId = function () {
            return AlreadyConnectedMessage.ID;
        };
        AlreadyConnectedMessage.prototype.reset = function () {
        };
        AlreadyConnectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AlreadyConnectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AlreadyConnectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AlreadyConnectedMessage(param1);
        };
        AlreadyConnectedMessage.prototype.serializeAs_AlreadyConnectedMessage = function (param1) {
        };
        AlreadyConnectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AlreadyConnectedMessage(param1);
        };
        AlreadyConnectedMessage.prototype.deserializeAs_AlreadyConnectedMessage = function (param1) {
        };
        AlreadyConnectedMessage.ID = 109;
        return AlreadyConnectedMessage;
    })(NetworkMessage);
    Protocol.AlreadyConnectedMessage = AlreadyConnectedMessage;
    var AuthenticationTicketAcceptedMessage = (function (_super) {
        __extends(AuthenticationTicketAcceptedMessage, _super);
        function AuthenticationTicketAcceptedMessage() {
            _super.call(this);
        }
        AuthenticationTicketAcceptedMessage.prototype.getMessageId = function () {
            return AuthenticationTicketAcceptedMessage.ID;
        };
        AuthenticationTicketAcceptedMessage.prototype.reset = function () {
        };
        AuthenticationTicketAcceptedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AuthenticationTicketAcceptedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AuthenticationTicketAcceptedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AuthenticationTicketAcceptedMessage(param1);
        };
        AuthenticationTicketAcceptedMessage.prototype.serializeAs_AuthenticationTicketAcceptedMessage = function (param1) {
        };
        AuthenticationTicketAcceptedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AuthenticationTicketAcceptedMessage(param1);
        };
        AuthenticationTicketAcceptedMessage.prototype.deserializeAs_AuthenticationTicketAcceptedMessage = function (param1) {
        };
        AuthenticationTicketAcceptedMessage.ID = 111;
        return AuthenticationTicketAcceptedMessage;
    })(NetworkMessage);
    Protocol.AuthenticationTicketAcceptedMessage = AuthenticationTicketAcceptedMessage;
    var AuthenticationTicketMessage = (function (_super) {
        __extends(AuthenticationTicketMessage, _super);
        function AuthenticationTicketMessage() {
            this.lang = '';
            this.ticket = '';
            _super.call(this);
        }
        AuthenticationTicketMessage.prototype.getMessageId = function () {
            return AuthenticationTicketMessage.ID;
        };
        AuthenticationTicketMessage.prototype.reset = function () {
            this.lang = '';
            this.ticket = '';
        };
        AuthenticationTicketMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AuthenticationTicketMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AuthenticationTicketMessage.prototype.serialize = function (param1) {
            this.serializeAs_AuthenticationTicketMessage(param1);
        };
        AuthenticationTicketMessage.prototype.serializeAs_AuthenticationTicketMessage = function (param1) {
            param1.writeUTF(this.lang);
            param1.writeUTF(this.ticket);
        };
        AuthenticationTicketMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AuthenticationTicketMessage(param1);
        };
        AuthenticationTicketMessage.prototype.deserializeAs_AuthenticationTicketMessage = function (param1) {
            this.lang = param1.readUTF();
            this.ticket = param1.readUTF();
        };
        AuthenticationTicketMessage.ID = 110;
        return AuthenticationTicketMessage;
    })(NetworkMessage);
    Protocol.AuthenticationTicketMessage = AuthenticationTicketMessage;
    var AuthenticationTicketRefusedMessage = (function (_super) {
        __extends(AuthenticationTicketRefusedMessage, _super);
        function AuthenticationTicketRefusedMessage() {
            _super.call(this);
        }
        AuthenticationTicketRefusedMessage.prototype.getMessageId = function () {
            return AuthenticationTicketRefusedMessage.ID;
        };
        AuthenticationTicketRefusedMessage.prototype.reset = function () {
        };
        AuthenticationTicketRefusedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AuthenticationTicketRefusedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AuthenticationTicketRefusedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AuthenticationTicketRefusedMessage(param1);
        };
        AuthenticationTicketRefusedMessage.prototype.serializeAs_AuthenticationTicketRefusedMessage = function (param1) {
        };
        AuthenticationTicketRefusedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AuthenticationTicketRefusedMessage(param1);
        };
        AuthenticationTicketRefusedMessage.prototype.deserializeAs_AuthenticationTicketRefusedMessage = function (param1) {
        };
        AuthenticationTicketRefusedMessage.ID = 112;
        return AuthenticationTicketRefusedMessage;
    })(NetworkMessage);
    Protocol.AuthenticationTicketRefusedMessage = AuthenticationTicketRefusedMessage;
    var HelloGameMessage = (function (_super) {
        __extends(HelloGameMessage, _super);
        function HelloGameMessage() {
            _super.call(this);
        }
        HelloGameMessage.prototype.getMessageId = function () {
            return HelloGameMessage.ID;
        };
        HelloGameMessage.prototype.reset = function () {
        };
        HelloGameMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HelloGameMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HelloGameMessage.prototype.serialize = function (param1) {
            this.serializeAs_HelloGameMessage(param1);
        };
        HelloGameMessage.prototype.serializeAs_HelloGameMessage = function (param1) {
        };
        HelloGameMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HelloGameMessage(param1);
        };
        HelloGameMessage.prototype.deserializeAs_HelloGameMessage = function (param1) {
        };
        HelloGameMessage.ID = 101;
        return HelloGameMessage;
    })(NetworkMessage);
    Protocol.HelloGameMessage = HelloGameMessage;
    var ReloginTokenRequestMessage = (function (_super) {
        __extends(ReloginTokenRequestMessage, _super);
        function ReloginTokenRequestMessage() {
            _super.call(this);
        }
        ReloginTokenRequestMessage.prototype.getMessageId = function () {
            return ReloginTokenRequestMessage.ID;
        };
        ReloginTokenRequestMessage.prototype.reset = function () {
        };
        ReloginTokenRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ReloginTokenRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ReloginTokenRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ReloginTokenRequestMessage(param1);
        };
        ReloginTokenRequestMessage.prototype.serializeAs_ReloginTokenRequestMessage = function (param1) {
        };
        ReloginTokenRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ReloginTokenRequestMessage(param1);
        };
        ReloginTokenRequestMessage.prototype.deserializeAs_ReloginTokenRequestMessage = function (param1) {
        };
        ReloginTokenRequestMessage.ID = 6540;
        return ReloginTokenRequestMessage;
    })(NetworkMessage);
    Protocol.ReloginTokenRequestMessage = ReloginTokenRequestMessage;
    var ReloginTokenStatusMessage = (function (_super) {
        __extends(ReloginTokenStatusMessage, _super);
        function ReloginTokenStatusMessage() {
            this.validToken = false;
            this.ticket = [];
            _super.call(this);
        }
        ReloginTokenStatusMessage.prototype.getMessageId = function () {
            return ReloginTokenStatusMessage.ID;
        };
        ReloginTokenStatusMessage.prototype.reset = function () {
            this.validToken = false;
            this.ticket = [];
        };
        ReloginTokenStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ReloginTokenStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ReloginTokenStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_ReloginTokenStatusMessage(param1);
        };
        ReloginTokenStatusMessage.prototype.serializeAs_ReloginTokenStatusMessage = function (param1) {
            param1.writeBoolean(this.validToken);
            param1.writeVarInt(this.ticket.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ticket.length) {
                param1.writeByte(this.ticket[_loc2_]);
                _loc2_++;
            }
        };
        ReloginTokenStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ReloginTokenStatusMessage(param1);
        };
        ReloginTokenStatusMessage.prototype.deserializeAs_ReloginTokenStatusMessage = function (param1) {
            var _loc4_ = 0;
            this.validToken = param1.readBoolean();
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.ticket.push(_loc4_);
                _loc3_++;
            }
        };
        ReloginTokenStatusMessage.ID = 6539;
        return ReloginTokenStatusMessage;
    })(NetworkMessage);
    Protocol.ReloginTokenStatusMessage = ReloginTokenStatusMessage;
    var ServerOptionalFeaturesMessage = (function (_super) {
        __extends(ServerOptionalFeaturesMessage, _super);
        function ServerOptionalFeaturesMessage() {
            this.features = [];
            _super.call(this);
        }
        ServerOptionalFeaturesMessage.prototype.getMessageId = function () {
            return ServerOptionalFeaturesMessage.ID;
        };
        ServerOptionalFeaturesMessage.prototype.reset = function () {
            this.features = [];
        };
        ServerOptionalFeaturesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerOptionalFeaturesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerOptionalFeaturesMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerOptionalFeaturesMessage(param1);
        };
        ServerOptionalFeaturesMessage.prototype.serializeAs_ServerOptionalFeaturesMessage = function (param1) {
            param1.writeShort(this.features.length);
            var _loc2_ = 0;
            while (_loc2_ < this.features.length) {
                if (this.features[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.features[_loc2_] + ') on element 1 (starting at 1) of features.');
                }
                param1.writeByte(this.features[_loc2_]);
                _loc2_++;
            }
        };
        ServerOptionalFeaturesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerOptionalFeaturesMessage(param1);
        };
        ServerOptionalFeaturesMessage.prototype.deserializeAs_ServerOptionalFeaturesMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of features.');
                }
                this.features.push(_loc4_);
                _loc3_++;
            }
        };
        ServerOptionalFeaturesMessage.ID = 6305;
        return ServerOptionalFeaturesMessage;
    })(NetworkMessage);
    Protocol.ServerOptionalFeaturesMessage = ServerOptionalFeaturesMessage;
    var ServerSessionConstantsMessage = (function (_super) {
        __extends(ServerSessionConstantsMessage, _super);
        function ServerSessionConstantsMessage() {
            this.variables = [];
            _super.call(this);
        }
        ServerSessionConstantsMessage.prototype.getMessageId = function () {
            return ServerSessionConstantsMessage.ID;
        };
        ServerSessionConstantsMessage.prototype.reset = function () {
            this.variables = [];
        };
        ServerSessionConstantsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerSessionConstantsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerSessionConstantsMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerSessionConstantsMessage(param1);
        };
        ServerSessionConstantsMessage.prototype.serializeAs_ServerSessionConstantsMessage = function (param1) {
            param1.writeShort(this.variables.length);
            var _loc2_ = 0;
            while (_loc2_ < this.variables.length) {
                param1.writeShort((this.variables[_loc2_]).getTypeId());
                (this.variables[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        ServerSessionConstantsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSessionConstantsMessage(param1);
        };
        ServerSessionConstantsMessage.prototype.deserializeAs_ServerSessionConstantsMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ServerSessionConstant, _loc4_);
                _loc5_.deserialize(param1);
                this.variables.push(_loc5_);
                _loc3_++;
            }
        };
        ServerSessionConstantsMessage.ID = 6434;
        return ServerSessionConstantsMessage;
    })(NetworkMessage);
    Protocol.ServerSessionConstantsMessage = ServerSessionConstantsMessage;
    var ServerSettingsMessage = (function (_super) {
        __extends(ServerSettingsMessage, _super);
        function ServerSettingsMessage() {
            this.lang = '';
            this.community = 0;
            this.gameType = -1;
            _super.call(this);
        }
        ServerSettingsMessage.prototype.getMessageId = function () {
            return ServerSettingsMessage.ID;
        };
        ServerSettingsMessage.prototype.reset = function () {
            this.lang = '';
            this.community = 0;
            this.gameType = -1;
        };
        ServerSettingsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerSettingsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerSettingsMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerSettingsMessage(param1);
        };
        ServerSettingsMessage.prototype.serializeAs_ServerSettingsMessage = function (param1) {
            param1.writeUTF(this.lang);
            if (this.community < 0) {
                throw new Error('Forbidden value (' + this.community + ') on element community.');
            }
            param1.writeByte(this.community);
            param1.writeByte(this.gameType);
        };
        ServerSettingsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSettingsMessage(param1);
        };
        ServerSettingsMessage.prototype.deserializeAs_ServerSettingsMessage = function (param1) {
            this.lang = param1.readUTF();
            this.community = param1.readByte();
            if (this.community < 0) {
                throw new Error('Forbidden value (' + this.community + ') on element of ServerSettingsMessage.community.');
            }
            this.gameType = param1.readByte();
        };
        ServerSettingsMessage.ID = 6340;
        return ServerSettingsMessage;
    })(NetworkMessage);
    Protocol.ServerSettingsMessage = ServerSettingsMessage;
    var AtlasPointInformationsMessage = (function (_super) {
        __extends(AtlasPointInformationsMessage, _super);
        function AtlasPointInformationsMessage() {
            this.type = new AtlasPointsInformations();
            _super.call(this);
        }
        AtlasPointInformationsMessage.prototype.getMessageId = function () {
            return AtlasPointInformationsMessage.ID;
        };
        AtlasPointInformationsMessage.prototype.reset = function () {
            this.type = new AtlasPointsInformations();
        };
        AtlasPointInformationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AtlasPointInformationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AtlasPointInformationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_AtlasPointInformationsMessage(param1);
        };
        AtlasPointInformationsMessage.prototype.serializeAs_AtlasPointInformationsMessage = function (param1) {
            this.type.serializeAs_AtlasPointsInformations(param1);
        };
        AtlasPointInformationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AtlasPointInformationsMessage(param1);
        };
        AtlasPointInformationsMessage.prototype.deserializeAs_AtlasPointInformationsMessage = function (param1) {
            this.type = new AtlasPointsInformations();
            this.type.deserialize(param1);
        };
        AtlasPointInformationsMessage.ID = 5956;
        return AtlasPointInformationsMessage;
    })(NetworkMessage);
    Protocol.AtlasPointInformationsMessage = AtlasPointInformationsMessage;
    var CompassResetMessage = (function (_super) {
        __extends(CompassResetMessage, _super);
        function CompassResetMessage() {
            this.type = 0;
            _super.call(this);
        }
        CompassResetMessage.prototype.getMessageId = function () {
            return CompassResetMessage.ID;
        };
        CompassResetMessage.prototype.reset = function () {
            this.type = 0;
        };
        CompassResetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CompassResetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CompassResetMessage.prototype.serialize = function (param1) {
            this.serializeAs_CompassResetMessage(param1);
        };
        CompassResetMessage.prototype.serializeAs_CompassResetMessage = function (param1) {
            param1.writeByte(this.type);
        };
        CompassResetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CompassResetMessage(param1);
        };
        CompassResetMessage.prototype.deserializeAs_CompassResetMessage = function (param1) {
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of CompassResetMessage.type.');
            }
        };
        CompassResetMessage.ID = 5584;
        return CompassResetMessage;
    })(NetworkMessage);
    Protocol.CompassResetMessage = CompassResetMessage;
    var CompassUpdateMessage = (function (_super) {
        __extends(CompassUpdateMessage, _super);
        function CompassUpdateMessage() {
            this.type = 0;
            this.coords = new MapCoordinates();
            _super.call(this);
        }
        CompassUpdateMessage.prototype.getMessageId = function () {
            return CompassUpdateMessage.ID;
        };
        CompassUpdateMessage.prototype.reset = function () {
            this.type = 0;
            this.coords = new MapCoordinates();
        };
        CompassUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CompassUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CompassUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_CompassUpdateMessage(param1);
        };
        CompassUpdateMessage.prototype.serializeAs_CompassUpdateMessage = function (param1) {
            param1.writeByte(this.type);
            param1.writeShort(this.coords.getTypeId());
            this.coords.serialize(param1);
        };
        CompassUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CompassUpdateMessage(param1);
        };
        CompassUpdateMessage.prototype.deserializeAs_CompassUpdateMessage = function (param1) {
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of CompassUpdateMessage.type.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.coords = ProtocolTypeManager.getInstance(MapCoordinates, _loc2_);
            this.coords.deserialize(param1);
        };
        CompassUpdateMessage.ID = 5591;
        return CompassUpdateMessage;
    })(NetworkMessage);
    Protocol.CompassUpdateMessage = CompassUpdateMessage;
    var CompassUpdatePartyMemberMessage = (function (_super) {
        __extends(CompassUpdatePartyMemberMessage, _super);
        function CompassUpdatePartyMemberMessage() {
            this.memberId = 0;
            _super.call(this);
        }
        CompassUpdatePartyMemberMessage.prototype.getMessageId = function () {
            return CompassUpdatePartyMemberMessage.ID;
        };
        CompassUpdatePartyMemberMessage.prototype.reset = function () {
            this.memberId = 0;
        };
        CompassUpdatePartyMemberMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CompassUpdatePartyMemberMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CompassUpdatePartyMemberMessage.prototype.serialize = function (param1) {
            this.serializeAs_CompassUpdatePartyMemberMessage(param1);
        };
        CompassUpdatePartyMemberMessage.prototype.serializeAs_CompassUpdatePartyMemberMessage = function (param1) {
            _super.prototype.serializeAs_CompassUpdateMessage.call(this, param1);
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeVarInt(this.memberId);
        };
        CompassUpdatePartyMemberMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CompassUpdatePartyMemberMessage(param1);
        };
        CompassUpdatePartyMemberMessage.prototype.deserializeAs_CompassUpdatePartyMemberMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.memberId = param1.readVarUhInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of CompassUpdatePartyMemberMessage.memberId.');
            }
        };
        CompassUpdatePartyMemberMessage.ID = 5589;
        return CompassUpdatePartyMemberMessage;
    })(CompassUpdateMessage);
    Protocol.CompassUpdatePartyMemberMessage = CompassUpdatePartyMemberMessage;
    var CompassUpdatePvpSeekMessage = (function (_super) {
        __extends(CompassUpdatePvpSeekMessage, _super);
        function CompassUpdatePvpSeekMessage() {
            this.memberId = 0;
            this.memberName = '';
            _super.call(this);
        }
        CompassUpdatePvpSeekMessage.prototype.getMessageId = function () {
            return CompassUpdatePvpSeekMessage.ID;
        };
        CompassUpdatePvpSeekMessage.prototype.reset = function () {
            this.memberId = 0;
            this.memberName = '';
        };
        CompassUpdatePvpSeekMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CompassUpdatePvpSeekMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CompassUpdatePvpSeekMessage.prototype.serialize = function (param1) {
            this.serializeAs_CompassUpdatePvpSeekMessage(param1);
        };
        CompassUpdatePvpSeekMessage.prototype.serializeAs_CompassUpdatePvpSeekMessage = function (param1) {
            _super.prototype.serializeAs_CompassUpdateMessage.call(this, param1);
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeVarInt(this.memberId);
            param1.writeUTF(this.memberName);
        };
        CompassUpdatePvpSeekMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CompassUpdatePvpSeekMessage(param1);
        };
        CompassUpdatePvpSeekMessage.prototype.deserializeAs_CompassUpdatePvpSeekMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.memberId = param1.readVarUhInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of CompassUpdatePvpSeekMessage.memberId.');
            }
            this.memberName = param1.readUTF();
        };
        CompassUpdatePvpSeekMessage.ID = 6013;
        return CompassUpdatePvpSeekMessage;
    })(CompassUpdateMessage);
    Protocol.CompassUpdatePvpSeekMessage = CompassUpdatePvpSeekMessage;
    var BasicAckMessage = (function (_super) {
        __extends(BasicAckMessage, _super);
        function BasicAckMessage() {
            this.seq = 0;
            this.lastPacketId = 0;
            _super.call(this);
        }
        BasicAckMessage.prototype.getMessageId = function () {
            return BasicAckMessage.ID;
        };
        BasicAckMessage.prototype.reset = function () {
            this.seq = 0;
            this.lastPacketId = 0;
        };
        BasicAckMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicAckMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicAckMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicAckMessage(param1);
        };
        BasicAckMessage.prototype.serializeAs_BasicAckMessage = function (param1) {
            if (this.seq < 0) {
                throw new Error('Forbidden value (' + this.seq + ') on element seq.');
            }
            param1.writeVarInt(this.seq);
            if (this.lastPacketId < 0) {
                throw new Error('Forbidden value (' + this.lastPacketId + ') on element lastPacketId.');
            }
            param1.writeVarShort(this.lastPacketId);
        };
        BasicAckMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicAckMessage(param1);
        };
        BasicAckMessage.prototype.deserializeAs_BasicAckMessage = function (param1) {
            this.seq = param1.readVarUhInt();
            if (this.seq < 0) {
                throw new Error('Forbidden value (' + this.seq + ') on element of BasicAckMessage.seq.');
            }
            this.lastPacketId = param1.readVarUhShort();
            if (this.lastPacketId < 0) {
                throw new Error('Forbidden value (' + this.lastPacketId + ') on element of BasicAckMessage.lastPacketId.');
            }
        };
        BasicAckMessage.ID = 6362;
        return BasicAckMessage;
    })(NetworkMessage);
    Protocol.BasicAckMessage = BasicAckMessage;
    var BasicDateMessage = (function (_super) {
        __extends(BasicDateMessage, _super);
        function BasicDateMessage() {
            this.day = 0;
            this.month = 0;
            this.year = 0;
            _super.call(this);
        }
        BasicDateMessage.prototype.getMessageId = function () {
            return BasicDateMessage.ID;
        };
        BasicDateMessage.prototype.reset = function () {
            this.day = 0;
            this.month = 0;
            this.year = 0;
        };
        BasicDateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicDateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicDateMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicDateMessage(param1);
        };
        BasicDateMessage.prototype.serializeAs_BasicDateMessage = function (param1) {
            if (this.day < 0) {
                throw new Error('Forbidden value (' + this.day + ') on element day.');
            }
            param1.writeByte(this.day);
            if (this.month < 0) {
                throw new Error('Forbidden value (' + this.month + ') on element month.');
            }
            param1.writeByte(this.month);
            if (this.year < 0) {
                throw new Error('Forbidden value (' + this.year + ') on element year.');
            }
            param1.writeShort(this.year);
        };
        BasicDateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicDateMessage(param1);
        };
        BasicDateMessage.prototype.deserializeAs_BasicDateMessage = function (param1) {
            this.day = param1.readByte();
            if (this.day < 0) {
                throw new Error('Forbidden value (' + this.day + ') on element of BasicDateMessage.day.');
            }
            this.month = param1.readByte();
            if (this.month < 0) {
                throw new Error('Forbidden value (' + this.month + ') on element of BasicDateMessage.month.');
            }
            this.year = param1.readShort();
            if (this.year < 0) {
                throw new Error('Forbidden value (' + this.year + ') on element of BasicDateMessage.year.');
            }
        };
        BasicDateMessage.ID = 177;
        return BasicDateMessage;
    })(NetworkMessage);
    Protocol.BasicDateMessage = BasicDateMessage;
    var BasicLatencyStatsMessage = (function (_super) {
        __extends(BasicLatencyStatsMessage, _super);
        function BasicLatencyStatsMessage() {
            this.latency = 0;
            this.sampleCount = 0;
            this.max = 0;
            _super.call(this);
        }
        BasicLatencyStatsMessage.prototype.getMessageId = function () {
            return BasicLatencyStatsMessage.ID;
        };
        BasicLatencyStatsMessage.prototype.reset = function () {
            this.latency = 0;
            this.sampleCount = 0;
            this.max = 0;
        };
        BasicLatencyStatsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicLatencyStatsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicLatencyStatsMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicLatencyStatsMessage(param1);
        };
        BasicLatencyStatsMessage.prototype.serializeAs_BasicLatencyStatsMessage = function (param1) {
            if (this.latency < 0 || this.latency > 65535) {
                throw new Error('Forbidden value (' + this.latency + ') on element latency.');
            }
            param1.writeShort(this.latency);
            if (this.sampleCount < 0) {
                throw new Error('Forbidden value (' + this.sampleCount + ') on element sampleCount.');
            }
            param1.writeVarShort(this.sampleCount);
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element max.');
            }
            param1.writeVarShort(this.max);
        };
        BasicLatencyStatsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicLatencyStatsMessage(param1);
        };
        BasicLatencyStatsMessage.prototype.deserializeAs_BasicLatencyStatsMessage = function (param1) {
            this.latency = param1.readUnsignedShort();
            if (this.latency < 0 || this.latency > 65535) {
                throw new Error('Forbidden value (' + this.latency + ') on element of BasicLatencyStatsMessage.latency.');
            }
            this.sampleCount = param1.readVarUhShort();
            if (this.sampleCount < 0) {
                throw new Error('Forbidden value (' + this.sampleCount + ') on element of BasicLatencyStatsMessage.sampleCount.');
            }
            this.max = param1.readVarUhShort();
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element of BasicLatencyStatsMessage.max.');
            }
        };
        BasicLatencyStatsMessage.ID = 5663;
        return BasicLatencyStatsMessage;
    })(NetworkMessage);
    Protocol.BasicLatencyStatsMessage = BasicLatencyStatsMessage;
    var BasicLatencyStatsRequestMessage = (function (_super) {
        __extends(BasicLatencyStatsRequestMessage, _super);
        function BasicLatencyStatsRequestMessage() {
            _super.call(this);
        }
        BasicLatencyStatsRequestMessage.prototype.getMessageId = function () {
            return BasicLatencyStatsRequestMessage.ID;
        };
        BasicLatencyStatsRequestMessage.prototype.reset = function () {
        };
        BasicLatencyStatsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicLatencyStatsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicLatencyStatsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicLatencyStatsRequestMessage(param1);
        };
        BasicLatencyStatsRequestMessage.prototype.serializeAs_BasicLatencyStatsRequestMessage = function (param1) {
        };
        BasicLatencyStatsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicLatencyStatsRequestMessage(param1);
        };
        BasicLatencyStatsRequestMessage.prototype.deserializeAs_BasicLatencyStatsRequestMessage = function (param1) {
        };
        BasicLatencyStatsRequestMessage.ID = 5816;
        return BasicLatencyStatsRequestMessage;
    })(NetworkMessage);
    Protocol.BasicLatencyStatsRequestMessage = BasicLatencyStatsRequestMessage;
    var BasicNoOperationMessage = (function (_super) {
        __extends(BasicNoOperationMessage, _super);
        function BasicNoOperationMessage() {
            _super.call(this);
        }
        BasicNoOperationMessage.prototype.getMessageId = function () {
            return BasicNoOperationMessage.ID;
        };
        BasicNoOperationMessage.prototype.reset = function () {
        };
        BasicNoOperationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicNoOperationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicNoOperationMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicNoOperationMessage(param1);
        };
        BasicNoOperationMessage.prototype.serializeAs_BasicNoOperationMessage = function (param1) {
        };
        BasicNoOperationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicNoOperationMessage(param1);
        };
        BasicNoOperationMessage.prototype.deserializeAs_BasicNoOperationMessage = function (param1) {
        };
        BasicNoOperationMessage.ID = 176;
        return BasicNoOperationMessage;
    })(NetworkMessage);
    Protocol.BasicNoOperationMessage = BasicNoOperationMessage;
    var BasicTimeMessage = (function (_super) {
        __extends(BasicTimeMessage, _super);
        function BasicTimeMessage() {
            this.timestamp = 0;
            this.timezoneOffset = 0;
            _super.call(this);
        }
        BasicTimeMessage.prototype.getMessageId = function () {
            return BasicTimeMessage.ID;
        };
        BasicTimeMessage.prototype.reset = function () {
            this.timestamp = 0;
            this.timezoneOffset = 0;
        };
        BasicTimeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicTimeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicTimeMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicTimeMessage(param1);
        };
        BasicTimeMessage.prototype.serializeAs_BasicTimeMessage = function (param1) {
            if (this.timestamp < 0 || this.timestamp > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element timestamp.');
            }
            param1.writeDouble(this.timestamp);
            param1.writeShort(this.timezoneOffset);
        };
        BasicTimeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicTimeMessage(param1);
        };
        BasicTimeMessage.prototype.deserializeAs_BasicTimeMessage = function (param1) {
            this.timestamp = param1.readDouble();
            if (this.timestamp < 0 || this.timestamp > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element of BasicTimeMessage.timestamp.');
            }
            this.timezoneOffset = param1.readShort();
        };
        BasicTimeMessage.ID = 175;
        return BasicTimeMessage;
    })(NetworkMessage);
    Protocol.BasicTimeMessage = BasicTimeMessage;
    var BasicWhoAmIRequestMessage = (function (_super) {
        __extends(BasicWhoAmIRequestMessage, _super);
        function BasicWhoAmIRequestMessage() {
            this.verbose = false;
            _super.call(this);
        }
        BasicWhoAmIRequestMessage.prototype.getMessageId = function () {
            return BasicWhoAmIRequestMessage.ID;
        };
        BasicWhoAmIRequestMessage.prototype.reset = function () {
            this.verbose = false;
        };
        BasicWhoAmIRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicWhoAmIRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicWhoAmIRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicWhoAmIRequestMessage(param1);
        };
        BasicWhoAmIRequestMessage.prototype.serializeAs_BasicWhoAmIRequestMessage = function (param1) {
            param1.writeBoolean(this.verbose);
        };
        BasicWhoAmIRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicWhoAmIRequestMessage(param1);
        };
        BasicWhoAmIRequestMessage.prototype.deserializeAs_BasicWhoAmIRequestMessage = function (param1) {
            this.verbose = param1.readBoolean();
        };
        BasicWhoAmIRequestMessage.ID = 5664;
        return BasicWhoAmIRequestMessage;
    })(NetworkMessage);
    Protocol.BasicWhoAmIRequestMessage = BasicWhoAmIRequestMessage;
    var BasicWhoIsMessage = (function (_super) {
        __extends(BasicWhoIsMessage, _super);
        function BasicWhoIsMessage() {
            this.self = false;
            this.position = -1;
            this.accountNickname = '';
            this.accountId = 0;
            this.playerName = '';
            this.playerId = 0;
            this.areaId = 0;
            this.socialGroups = [];
            this.verbose = false;
            this.playerState = 99;
            _super.call(this);
        }
        BasicWhoIsMessage.prototype.getMessageId = function () {
            return BasicWhoIsMessage.ID;
        };
        BasicWhoIsMessage.prototype.reset = function () {
            this.self = false;
            this.position = -1;
            this.accountNickname = '';
            this.accountId = 0;
            this.playerName = '';
            this.playerId = 0;
            this.areaId = 0;
            this.socialGroups = [];
            this.verbose = false;
            this.playerState = 99;
        };
        BasicWhoIsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicWhoIsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicWhoIsMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicWhoIsMessage(param1);
        };
        BasicWhoIsMessage.prototype.serializeAs_BasicWhoIsMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.self);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.verbose);
            param1.writeByte(_loc2_);
            param1.writeByte(this.position);
            param1.writeUTF(this.accountNickname);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            param1.writeUTF(this.playerName);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeShort(this.areaId);
            param1.writeShort(this.socialGroups.length);
            var _loc3_ = 0;
            while (_loc3_ < this.socialGroups.length) {
                param1.writeShort((this.socialGroups[_loc3_]).getTypeId());
                (this.socialGroups[_loc3_]).serialize(param1);
                _loc3_++;
            }
            param1.writeByte(this.playerState);
        };
        BasicWhoIsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicWhoIsMessage(param1);
        };
        BasicWhoIsMessage.prototype.deserializeAs_BasicWhoIsMessage = function (param1) {
            var _loc5_ = 0;
            var _loc6_ = null;
            var _loc2_ = param1.readByte();
            this.self = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.verbose = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.position = param1.readByte();
            this.accountNickname = param1.readUTF();
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of BasicWhoIsMessage.accountId.');
            }
            this.playerName = param1.readUTF();
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of BasicWhoIsMessage.playerId.');
            }
            this.areaId = param1.readShort();
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = param1.readUnsignedShort();
                _loc6_ = ProtocolTypeManager.getInstance(AbstractSocialGroupInfos, _loc5_);
                _loc6_.deserialize(param1);
                this.socialGroups.push(_loc6_);
                _loc4_++;
            }
            this.playerState = param1.readByte();
            if (this.playerState < 0) {
                throw new Error('Forbidden value (' + this.playerState + ') on element of BasicWhoIsMessage.playerState.');
            }
        };
        BasicWhoIsMessage.ID = 180;
        return BasicWhoIsMessage;
    })(NetworkMessage);
    Protocol.BasicWhoIsMessage = BasicWhoIsMessage;
    var BasicWhoIsNoMatchMessage = (function (_super) {
        __extends(BasicWhoIsNoMatchMessage, _super);
        function BasicWhoIsNoMatchMessage() {
            this.search = '';
            _super.call(this);
        }
        BasicWhoIsNoMatchMessage.prototype.getMessageId = function () {
            return BasicWhoIsNoMatchMessage.ID;
        };
        BasicWhoIsNoMatchMessage.prototype.reset = function () {
            this.search = '';
        };
        BasicWhoIsNoMatchMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicWhoIsNoMatchMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicWhoIsNoMatchMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicWhoIsNoMatchMessage(param1);
        };
        BasicWhoIsNoMatchMessage.prototype.serializeAs_BasicWhoIsNoMatchMessage = function (param1) {
            param1.writeUTF(this.search);
        };
        BasicWhoIsNoMatchMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicWhoIsNoMatchMessage(param1);
        };
        BasicWhoIsNoMatchMessage.prototype.deserializeAs_BasicWhoIsNoMatchMessage = function (param1) {
            this.search = param1.readUTF();
        };
        BasicWhoIsNoMatchMessage.ID = 179;
        return BasicWhoIsNoMatchMessage;
    })(NetworkMessage);
    Protocol.BasicWhoIsNoMatchMessage = BasicWhoIsNoMatchMessage;
    var BasicWhoIsRequestMessage = (function (_super) {
        __extends(BasicWhoIsRequestMessage, _super);
        function BasicWhoIsRequestMessage() {
            this.verbose = false;
            this.search = '';
            _super.call(this);
        }
        BasicWhoIsRequestMessage.prototype.getMessageId = function () {
            return BasicWhoIsRequestMessage.ID;
        };
        BasicWhoIsRequestMessage.prototype.reset = function () {
            this.verbose = false;
            this.search = '';
        };
        BasicWhoIsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicWhoIsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicWhoIsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicWhoIsRequestMessage(param1);
        };
        BasicWhoIsRequestMessage.prototype.serializeAs_BasicWhoIsRequestMessage = function (param1) {
            param1.writeBoolean(this.verbose);
            param1.writeUTF(this.search);
        };
        BasicWhoIsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicWhoIsRequestMessage(param1);
        };
        BasicWhoIsRequestMessage.prototype.deserializeAs_BasicWhoIsRequestMessage = function (param1) {
            this.verbose = param1.readBoolean();
            this.search = param1.readUTF();
        };
        BasicWhoIsRequestMessage.ID = 181;
        return BasicWhoIsRequestMessage;
    })(NetworkMessage);
    Protocol.BasicWhoIsRequestMessage = BasicWhoIsRequestMessage;
    var CurrentServerStatusUpdateMessage = (function (_super) {
        __extends(CurrentServerStatusUpdateMessage, _super);
        function CurrentServerStatusUpdateMessage() {
            this.status = 1;
            _super.call(this);
        }
        CurrentServerStatusUpdateMessage.prototype.getMessageId = function () {
            return CurrentServerStatusUpdateMessage.ID;
        };
        CurrentServerStatusUpdateMessage.prototype.reset = function () {
            this.status = 1;
        };
        CurrentServerStatusUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CurrentServerStatusUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CurrentServerStatusUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_CurrentServerStatusUpdateMessage(param1);
        };
        CurrentServerStatusUpdateMessage.prototype.serializeAs_CurrentServerStatusUpdateMessage = function (param1) {
            param1.writeByte(this.status);
        };
        CurrentServerStatusUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CurrentServerStatusUpdateMessage(param1);
        };
        CurrentServerStatusUpdateMessage.prototype.deserializeAs_CurrentServerStatusUpdateMessage = function (param1) {
            this.status = param1.readByte();
            if (this.status < 0) {
                throw new Error('Forbidden value (' + this.status + ') on element of CurrentServerStatusUpdateMessage.status.');
            }
        };
        CurrentServerStatusUpdateMessage.ID = 6525;
        return CurrentServerStatusUpdateMessage;
    })(NetworkMessage);
    Protocol.CurrentServerStatusUpdateMessage = CurrentServerStatusUpdateMessage;
    var NumericWhoIsMessage = (function (_super) {
        __extends(NumericWhoIsMessage, _super);
        function NumericWhoIsMessage() {
            this.playerId = 0;
            this.accountId = 0;
            _super.call(this);
        }
        NumericWhoIsMessage.prototype.getMessageId = function () {
            return NumericWhoIsMessage.ID;
        };
        NumericWhoIsMessage.prototype.reset = function () {
            this.playerId = 0;
            this.accountId = 0;
        };
        NumericWhoIsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NumericWhoIsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NumericWhoIsMessage.prototype.serialize = function (param1) {
            this.serializeAs_NumericWhoIsMessage(param1);
        };
        NumericWhoIsMessage.prototype.serializeAs_NumericWhoIsMessage = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
        };
        NumericWhoIsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NumericWhoIsMessage(param1);
        };
        NumericWhoIsMessage.prototype.deserializeAs_NumericWhoIsMessage = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of NumericWhoIsMessage.playerId.');
            }
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of NumericWhoIsMessage.accountId.');
            }
        };
        NumericWhoIsMessage.ID = 6297;
        return NumericWhoIsMessage;
    })(NetworkMessage);
    Protocol.NumericWhoIsMessage = NumericWhoIsMessage;
    var NumericWhoIsRequestMessage = (function (_super) {
        __extends(NumericWhoIsRequestMessage, _super);
        function NumericWhoIsRequestMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        NumericWhoIsRequestMessage.prototype.getMessageId = function () {
            return NumericWhoIsRequestMessage.ID;
        };
        NumericWhoIsRequestMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        NumericWhoIsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NumericWhoIsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NumericWhoIsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_NumericWhoIsRequestMessage(param1);
        };
        NumericWhoIsRequestMessage.prototype.serializeAs_NumericWhoIsRequestMessage = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        NumericWhoIsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NumericWhoIsRequestMessage(param1);
        };
        NumericWhoIsRequestMessage.prototype.deserializeAs_NumericWhoIsRequestMessage = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of NumericWhoIsRequestMessage.playerId.');
            }
        };
        NumericWhoIsRequestMessage.ID = 6298;
        return NumericWhoIsRequestMessage;
    })(NetworkMessage);
    Protocol.NumericWhoIsRequestMessage = NumericWhoIsRequestMessage;
    var SequenceNumberMessage = (function (_super) {
        __extends(SequenceNumberMessage, _super);
        function SequenceNumberMessage() {
            this.number = 0;
            _super.call(this);
        }
        SequenceNumberMessage.prototype.getMessageId = function () {
            return SequenceNumberMessage.ID;
        };
        SequenceNumberMessage.prototype.reset = function () {
            this.number = 0;
        };
        SequenceNumberMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SequenceNumberMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SequenceNumberMessage.prototype.serialize = function (param1) {
            this.serializeAs_SequenceNumberMessage(param1);
        };
        SequenceNumberMessage.prototype.serializeAs_SequenceNumberMessage = function (param1) {
            if (this.number < 0 || this.number > 65535) {
                throw new Error('Forbidden value (' + this.number + ') on element number.');
            }
            param1.writeShort(this.number);
        };
        SequenceNumberMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SequenceNumberMessage(param1);
        };
        SequenceNumberMessage.prototype.deserializeAs_SequenceNumberMessage = function (param1) {
            this.number = param1.readUnsignedShort();
            if (this.number < 0 || this.number > 65535) {
                throw new Error('Forbidden value (' + this.number + ') on element of SequenceNumberMessage.number.');
            }
        };
        SequenceNumberMessage.ID = 6317;
        return SequenceNumberMessage;
    })(NetworkMessage);
    Protocol.SequenceNumberMessage = SequenceNumberMessage;
    var SequenceNumberRequestMessage = (function (_super) {
        __extends(SequenceNumberRequestMessage, _super);
        function SequenceNumberRequestMessage() {
            _super.call(this);
        }
        SequenceNumberRequestMessage.prototype.getMessageId = function () {
            return SequenceNumberRequestMessage.ID;
        };
        SequenceNumberRequestMessage.prototype.reset = function () {
        };
        SequenceNumberRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SequenceNumberRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SequenceNumberRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_SequenceNumberRequestMessage(param1);
        };
        SequenceNumberRequestMessage.prototype.serializeAs_SequenceNumberRequestMessage = function (param1) {
        };
        SequenceNumberRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SequenceNumberRequestMessage(param1);
        };
        SequenceNumberRequestMessage.prototype.deserializeAs_SequenceNumberRequestMessage = function (param1) {
        };
        SequenceNumberRequestMessage.ID = 6316;
        return SequenceNumberRequestMessage;
    })(NetworkMessage);
    Protocol.SequenceNumberRequestMessage = SequenceNumberRequestMessage;
    var TextInformationMessage = (function (_super) {
        __extends(TextInformationMessage, _super);
        function TextInformationMessage() {
            this.msgType = 0;
            this.msgId = 0;
            this.parameters = [];
            _super.call(this);
        }
        TextInformationMessage.prototype.getMessageId = function () {
            return TextInformationMessage.ID;
        };
        TextInformationMessage.prototype.reset = function () {
            this.msgType = 0;
            this.msgId = 0;
            this.parameters = [];
        };
        TextInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TextInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TextInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_TextInformationMessage(param1);
        };
        TextInformationMessage.prototype.serializeAs_TextInformationMessage = function (param1) {
            param1.writeByte(this.msgType);
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element msgId.');
            }
            param1.writeVarShort(this.msgId);
            param1.writeShort(this.parameters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parameters.length) {
                param1.writeUTF(this.parameters[_loc2_]);
                _loc2_++;
            }
        };
        TextInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TextInformationMessage(param1);
        };
        TextInformationMessage.prototype.deserializeAs_TextInformationMessage = function (param1) {
            var _loc4_ = null;
            this.msgType = param1.readByte();
            if (this.msgType < 0) {
                throw new Error('Forbidden value (' + this.msgType + ') on element of TextInformationMessage.msgType.');
            }
            this.msgId = param1.readVarUhShort();
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element of TextInformationMessage.msgId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.parameters.push(_loc4_);
                _loc3_++;
            }
        };
        TextInformationMessage.ID = 780;
        return TextInformationMessage;
    })(NetworkMessage);
    Protocol.TextInformationMessage = TextInformationMessage;
    var BasicCharactersListMessage = (function (_super) {
        __extends(BasicCharactersListMessage, _super);
        function BasicCharactersListMessage() {
            this.characters = [];
            _super.call(this);
        }
        BasicCharactersListMessage.prototype.getMessageId = function () {
            return BasicCharactersListMessage.ID;
        };
        BasicCharactersListMessage.prototype.reset = function () {
            this.characters = [];
        };
        BasicCharactersListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        BasicCharactersListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        BasicCharactersListMessage.prototype.serialize = function (param1) {
            this.serializeAs_BasicCharactersListMessage(param1);
        };
        BasicCharactersListMessage.prototype.serializeAs_BasicCharactersListMessage = function (param1) {
            param1.writeShort(this.characters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.characters.length) {
                param1.writeShort((this.characters[_loc2_]).getTypeId());
                (this.characters[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        BasicCharactersListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicCharactersListMessage(param1);
        };
        BasicCharactersListMessage.prototype.deserializeAs_BasicCharactersListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(CharacterBaseInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.characters.push(_loc5_);
                _loc3_++;
            }
        };
        BasicCharactersListMessage.ID = 6475;
        return BasicCharactersListMessage;
    })(NetworkMessage);
    Protocol.BasicCharactersListMessage = BasicCharactersListMessage;
    var CharacterFirstSelectionMessage = (function (_super) {
        __extends(CharacterFirstSelectionMessage, _super);
        function CharacterFirstSelectionMessage() {
            this.doTutorial = false;
            _super.call(this);
        }
        CharacterFirstSelectionMessage.prototype.getMessageId = function () {
            return CharacterFirstSelectionMessage.ID;
        };
        CharacterFirstSelectionMessage.prototype.reset = function () {
            this.doTutorial = false;
        };
        CharacterFirstSelectionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterFirstSelectionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterFirstSelectionMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterFirstSelectionMessage(param1);
        };
        CharacterFirstSelectionMessage.prototype.serializeAs_CharacterFirstSelectionMessage = function (param1) {
            _super.prototype.serializeAs_CharacterSelectionMessage.call(this, param1);
            param1.writeBoolean(this.doTutorial);
        };
        CharacterFirstSelectionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterFirstSelectionMessage(param1);
        };
        CharacterFirstSelectionMessage.prototype.deserializeAs_CharacterFirstSelectionMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.doTutorial = param1.readBoolean();
        };
        CharacterFirstSelectionMessage.ID = 6084;
        return CharacterFirstSelectionMessage;
    })(CharacterSelectionMessage);
    Protocol.CharacterFirstSelectionMessage = CharacterFirstSelectionMessage;
    var CharacterReplayWithRemodelRequestMessage = (function (_super) {
        __extends(CharacterReplayWithRemodelRequestMessage, _super);
        function CharacterReplayWithRemodelRequestMessage() {
            this.remodel = new RemodelingInformation();
            _super.call(this);
        }
        CharacterReplayWithRemodelRequestMessage.prototype.getMessageId = function () {
            return CharacterReplayWithRemodelRequestMessage.ID;
        };
        CharacterReplayWithRemodelRequestMessage.prototype.reset = function () {
            this.remodel = new RemodelingInformation();
        };
        CharacterReplayWithRemodelRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterReplayWithRemodelRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterReplayWithRemodelRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterReplayWithRemodelRequestMessage(param1);
        };
        CharacterReplayWithRemodelRequestMessage.prototype.serializeAs_CharacterReplayWithRemodelRequestMessage = function (param1) {
            _super.prototype.serializeAs_CharacterReplayRequestMessage.call(this, param1);
            this.remodel.serializeAs_RemodelingInformation(param1);
        };
        CharacterReplayWithRemodelRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterReplayWithRemodelRequestMessage(param1);
        };
        CharacterReplayWithRemodelRequestMessage.prototype.deserializeAs_CharacterReplayWithRemodelRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.remodel = new RemodelingInformation();
            this.remodel.deserialize(param1);
        };
        CharacterReplayWithRemodelRequestMessage.ID = 6551;
        return CharacterReplayWithRemodelRequestMessage;
    })(CharacterReplayRequestMessage);
    Protocol.CharacterReplayWithRemodelRequestMessage = CharacterReplayWithRemodelRequestMessage;
    var CharacterSelectedErrorMessage = (function (_super) {
        __extends(CharacterSelectedErrorMessage, _super);
        function CharacterSelectedErrorMessage() {
            _super.call(this);
        }
        CharacterSelectedErrorMessage.prototype.getMessageId = function () {
            return CharacterSelectedErrorMessage.ID;
        };
        CharacterSelectedErrorMessage.prototype.reset = function () {
        };
        CharacterSelectedErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectedErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectedErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectedErrorMessage(param1);
        };
        CharacterSelectedErrorMessage.prototype.serializeAs_CharacterSelectedErrorMessage = function (param1) {
        };
        CharacterSelectedErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectedErrorMessage(param1);
        };
        CharacterSelectedErrorMessage.prototype.deserializeAs_CharacterSelectedErrorMessage = function (param1) {
        };
        CharacterSelectedErrorMessage.ID = 5836;
        return CharacterSelectedErrorMessage;
    })(NetworkMessage);
    Protocol.CharacterSelectedErrorMessage = CharacterSelectedErrorMessage;
    var CharacterSelectedForceMessage = (function (_super) {
        __extends(CharacterSelectedForceMessage, _super);
        function CharacterSelectedForceMessage() {
            this.id = 0;
            _super.call(this);
        }
        CharacterSelectedForceMessage.prototype.getMessageId = function () {
            return CharacterSelectedForceMessage.ID;
        };
        CharacterSelectedForceMessage.prototype.reset = function () {
            this.id = 0;
        };
        CharacterSelectedForceMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectedForceMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectedForceMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectedForceMessage(param1);
        };
        CharacterSelectedForceMessage.prototype.serializeAs_CharacterSelectedForceMessage = function (param1) {
            if (this.id < 1 || this.id > 2147483647) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeInt(this.id);
        };
        CharacterSelectedForceMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectedForceMessage(param1);
        };
        CharacterSelectedForceMessage.prototype.deserializeAs_CharacterSelectedForceMessage = function (param1) {
            this.id = param1.readInt();
            if (this.id < 1 || this.id > 2147483647) {
                throw new Error('Forbidden value (' + this.id + ') on element of CharacterSelectedForceMessage.id.');
            }
        };
        CharacterSelectedForceMessage.ID = 6068;
        return CharacterSelectedForceMessage;
    })(NetworkMessage);
    Protocol.CharacterSelectedForceMessage = CharacterSelectedForceMessage;
    var CharacterSelectedForceReadyMessage = (function (_super) {
        __extends(CharacterSelectedForceReadyMessage, _super);
        function CharacterSelectedForceReadyMessage() {
            _super.call(this);
        }
        CharacterSelectedForceReadyMessage.prototype.getMessageId = function () {
            return CharacterSelectedForceReadyMessage.ID;
        };
        CharacterSelectedForceReadyMessage.prototype.reset = function () {
        };
        CharacterSelectedForceReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectedForceReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectedForceReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectedForceReadyMessage(param1);
        };
        CharacterSelectedForceReadyMessage.prototype.serializeAs_CharacterSelectedForceReadyMessage = function (param1) {
        };
        CharacterSelectedForceReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectedForceReadyMessage(param1);
        };
        CharacterSelectedForceReadyMessage.prototype.deserializeAs_CharacterSelectedForceReadyMessage = function (param1) {
        };
        CharacterSelectedForceReadyMessage.ID = 6072;
        return CharacterSelectedForceReadyMessage;
    })(NetworkMessage);
    Protocol.CharacterSelectedForceReadyMessage = CharacterSelectedForceReadyMessage;
    var CharacterSelectedSuccessMessage = (function (_super) {
        __extends(CharacterSelectedSuccessMessage, _super);
        function CharacterSelectedSuccessMessage() {
            this.infos = new CharacterBaseInformations();
            this.isCollectingStats = false;
            _super.call(this);
        }
        CharacterSelectedSuccessMessage.prototype.getMessageId = function () {
            return CharacterSelectedSuccessMessage.ID;
        };
        CharacterSelectedSuccessMessage.prototype.reset = function () {
            this.infos = new CharacterBaseInformations();
            this.isCollectingStats = false;
        };
        CharacterSelectedSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectedSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectedSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectedSuccessMessage(param1);
        };
        CharacterSelectedSuccessMessage.prototype.serializeAs_CharacterSelectedSuccessMessage = function (param1) {
            this.infos.serializeAs_CharacterBaseInformations(param1);
            param1.writeBoolean(this.isCollectingStats);
        };
        CharacterSelectedSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectedSuccessMessage(param1);
        };
        CharacterSelectedSuccessMessage.prototype.deserializeAs_CharacterSelectedSuccessMessage = function (param1) {
            this.infos = new CharacterBaseInformations();
            this.infos.deserialize(param1);
            this.isCollectingStats = param1.readBoolean();
        };
        CharacterSelectedSuccessMessage.ID = 153;
        return CharacterSelectedSuccessMessage;
    })(NetworkMessage);
    Protocol.CharacterSelectedSuccessMessage = CharacterSelectedSuccessMessage;
    var CharacterSelectionMessage = (function (_super) {
        __extends(CharacterSelectionMessage, _super);
        function CharacterSelectionMessage() {
            this.id = 0;
            _super.call(this);
        }
        CharacterSelectionMessage.prototype.getMessageId = function () {
            return CharacterSelectionMessage.ID;
        };
        CharacterSelectionMessage.prototype.reset = function () {
            this.id = 0;
        };
        CharacterSelectionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectionMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectionMessage(param1);
        };
        CharacterSelectionMessage.prototype.serializeAs_CharacterSelectionMessage = function (param1) {
            if (this.id < 1 || this.id > 2147483647) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeInt(this.id);
        };
        CharacterSelectionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectionMessage(param1);
        };
        CharacterSelectionMessage.prototype.deserializeAs_CharacterSelectionMessage = function (param1) {
            this.id = param1.readInt();
            if (this.id < 1 || this.id > 2147483647) {
                throw new Error('Forbidden value (' + this.id + ') on element of CharacterSelectionMessage.id.');
            }
        };
        CharacterSelectionMessage.ID = 152;
        return CharacterSelectionMessage;
    })(NetworkMessage);
    Protocol.CharacterSelectionMessage = CharacterSelectionMessage;
    var CharacterSelectionWithRemodelMessage = (function (_super) {
        __extends(CharacterSelectionWithRemodelMessage, _super);
        function CharacterSelectionWithRemodelMessage() {
            this.remodel = new RemodelingInformation();
            _super.call(this);
        }
        CharacterSelectionWithRemodelMessage.prototype.getMessageId = function () {
            return CharacterSelectionWithRemodelMessage.ID;
        };
        CharacterSelectionWithRemodelMessage.prototype.reset = function () {
            this.remodel = new RemodelingInformation();
        };
        CharacterSelectionWithRemodelMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterSelectionWithRemodelMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterSelectionWithRemodelMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSelectionWithRemodelMessage(param1);
        };
        CharacterSelectionWithRemodelMessage.prototype.serializeAs_CharacterSelectionWithRemodelMessage = function (param1) {
            _super.prototype.serializeAs_CharacterSelectionMessage.call(this, param1);
            this.remodel.serializeAs_RemodelingInformation(param1);
        };
        CharacterSelectionWithRemodelMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSelectionWithRemodelMessage(param1);
        };
        CharacterSelectionWithRemodelMessage.prototype.deserializeAs_CharacterSelectionWithRemodelMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.remodel = new RemodelingInformation();
            this.remodel.deserialize(param1);
        };
        CharacterSelectionWithRemodelMessage.ID = 6549;
        return CharacterSelectionWithRemodelMessage;
    })(CharacterSelectionMessage);
    Protocol.CharacterSelectionWithRemodelMessage = CharacterSelectionWithRemodelMessage;
    var CharactersListErrorMessage = (function (_super) {
        __extends(CharactersListErrorMessage, _super);
        function CharactersListErrorMessage() {
            _super.call(this);
        }
        CharactersListErrorMessage.prototype.getMessageId = function () {
            return CharactersListErrorMessage.ID;
        };
        CharactersListErrorMessage.prototype.reset = function () {
        };
        CharactersListErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharactersListErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharactersListErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharactersListErrorMessage(param1);
        };
        CharactersListErrorMessage.prototype.serializeAs_CharactersListErrorMessage = function (param1) {
        };
        CharactersListErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharactersListErrorMessage(param1);
        };
        CharactersListErrorMessage.prototype.deserializeAs_CharactersListErrorMessage = function (param1) {
        };
        CharactersListErrorMessage.ID = 5545;
        return CharactersListErrorMessage;
    })(NetworkMessage);
    Protocol.CharactersListErrorMessage = CharactersListErrorMessage;
    var CharactersListMessage = (function (_super) {
        __extends(CharactersListMessage, _super);
        function CharactersListMessage() {
            this.hasStartupActions = false;
            _super.call(this);
        }
        CharactersListMessage.prototype.getMessageId = function () {
            return CharactersListMessage.ID;
        };
        CharactersListMessage.prototype.reset = function () {
            this.hasStartupActions = false;
        };
        CharactersListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharactersListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharactersListMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharactersListMessage(param1);
        };
        CharactersListMessage.prototype.serializeAs_CharactersListMessage = function (param1) {
            _super.prototype.serializeAs_BasicCharactersListMessage.call(this, param1);
            param1.writeBoolean(this.hasStartupActions);
        };
        CharactersListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharactersListMessage(param1);
        };
        CharactersListMessage.prototype.deserializeAs_CharactersListMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.hasStartupActions = param1.readBoolean();
        };
        CharactersListMessage.ID = 151;
        return CharactersListMessage;
    })(BasicCharactersListMessage);
    Protocol.CharactersListMessage = CharactersListMessage;
    var CharactersListRequestMessage = (function (_super) {
        __extends(CharactersListRequestMessage, _super);
        function CharactersListRequestMessage() {
            _super.call(this);
        }
        CharactersListRequestMessage.prototype.getMessageId = function () {
            return CharactersListRequestMessage.ID;
        };
        CharactersListRequestMessage.prototype.reset = function () {
        };
        CharactersListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharactersListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharactersListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharactersListRequestMessage(param1);
        };
        CharactersListRequestMessage.prototype.serializeAs_CharactersListRequestMessage = function (param1) {
        };
        CharactersListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharactersListRequestMessage(param1);
        };
        CharactersListRequestMessage.prototype.deserializeAs_CharactersListRequestMessage = function (param1) {
        };
        CharactersListRequestMessage.ID = 150;
        return CharactersListRequestMessage;
    })(NetworkMessage);
    Protocol.CharactersListRequestMessage = CharactersListRequestMessage;
    var CharactersListWithModificationsMessage = (function (_super) {
        __extends(CharactersListWithModificationsMessage, _super);
        function CharactersListWithModificationsMessage() {
            this.charactersToRecolor = [];
            this.charactersToRename = [];
            this.unusableCharacters = [];
            this.charactersToRelook = [];
            _super.call(this);
        }
        CharactersListWithModificationsMessage.prototype.getMessageId = function () {
            return CharactersListWithModificationsMessage.ID;
        };
        CharactersListWithModificationsMessage.prototype.reset = function () {
            this.charactersToRecolor = [];
            this.charactersToRename = [];
            this.unusableCharacters = [];
            this.charactersToRelook = [];
        };
        CharactersListWithModificationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharactersListWithModificationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharactersListWithModificationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharactersListWithModificationsMessage(param1);
        };
        CharactersListWithModificationsMessage.prototype.serializeAs_CharactersListWithModificationsMessage = function (param1) {
            _super.prototype.serializeAs_CharactersListMessage.call(this, param1);
            param1.writeShort(this.charactersToRecolor.length);
            var _loc2_ = 0;
            while (_loc2_ < this.charactersToRecolor.length) {
                (this.charactersToRecolor[_loc2_]).serializeAs_CharacterToRecolorInformation(param1);
                _loc2_++;
            }
            param1.writeShort(this.charactersToRename.length);
            var _loc3_ = 0;
            while (_loc3_ < this.charactersToRename.length) {
                param1.writeInt(this.charactersToRename[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.unusableCharacters.length);
            var _loc4_ = 0;
            while (_loc4_ < this.unusableCharacters.length) {
                param1.writeInt(this.unusableCharacters[_loc4_]);
                _loc4_++;
            }
            param1.writeShort(this.charactersToRelook.length);
            var _loc5_ = 0;
            while (_loc5_ < this.charactersToRelook.length) {
                (this.charactersToRelook[_loc5_]).serializeAs_CharacterToRelookInformation(param1);
                _loc5_++;
            }
        };
        CharactersListWithModificationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharactersListWithModificationsMessage(param1);
        };
        CharactersListWithModificationsMessage.prototype.deserializeAs_CharactersListWithModificationsMessage = function (param1) {
            var _loc10_ = null;
            var _loc11_ = 0;
            var _loc12_ = 0;
            var _loc13_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc10_ = new CharacterToRecolorInformation();
                _loc10_.deserialize(param1);
                this.charactersToRecolor.push(_loc10_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc11_ = param1.readInt();
                this.charactersToRename.push(_loc11_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc12_ = param1.readInt();
                this.unusableCharacters.push(_loc12_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc13_ = new CharacterToRelookInformation();
                _loc13_.deserialize(param1);
                this.charactersToRelook.push(_loc13_);
                _loc9_++;
            }
        };
        CharactersListWithModificationsMessage.ID = 6120;
        return CharactersListWithModificationsMessage;
    })(CharactersListMessage);
    Protocol.CharactersListWithModificationsMessage = CharactersListWithModificationsMessage;
    var CharactersListWithRemodelingMessage = (function (_super) {
        __extends(CharactersListWithRemodelingMessage, _super);
        function CharactersListWithRemodelingMessage() {
            this.charactersToRemodel = [];
            _super.call(this);
        }
        CharactersListWithRemodelingMessage.prototype.getMessageId = function () {
            return CharactersListWithRemodelingMessage.ID;
        };
        CharactersListWithRemodelingMessage.prototype.reset = function () {
            this.charactersToRemodel = [];
        };
        CharactersListWithRemodelingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharactersListWithRemodelingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharactersListWithRemodelingMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharactersListWithRemodelingMessage(param1);
        };
        CharactersListWithRemodelingMessage.prototype.serializeAs_CharactersListWithRemodelingMessage = function (param1) {
            _super.prototype.serializeAs_CharactersListMessage.call(this, param1);
            param1.writeShort(this.charactersToRemodel.length);
            var _loc2_ = 0;
            while (_loc2_ < this.charactersToRemodel.length) {
                (this.charactersToRemodel[_loc2_]).serializeAs_CharacterToRemodelInformations(param1);
                _loc2_++;
            }
        };
        CharactersListWithRemodelingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharactersListWithRemodelingMessage(param1);
        };
        CharactersListWithRemodelingMessage.prototype.deserializeAs_CharactersListWithRemodelingMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new CharacterToRemodelInformations();
                _loc4_.deserialize(param1);
                this.charactersToRemodel.push(_loc4_);
                _loc3_++;
            }
        };
        CharactersListWithRemodelingMessage.ID = 6550;
        return CharactersListWithRemodelingMessage;
    })(CharactersListMessage);
    Protocol.CharactersListWithRemodelingMessage = CharactersListWithRemodelingMessage;
    var CharacterCreationRequestMessage = (function (_super) {
        __extends(CharacterCreationRequestMessage, _super);
        function CharacterCreationRequestMessage() {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.colors = [];
            this.cosmeticId = 0;
            _super.call(this);
        }
        CharacterCreationRequestMessage.prototype.getMessageId = function () {
            return CharacterCreationRequestMessage.ID;
        };
        CharacterCreationRequestMessage.prototype.reset = function () {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.colors = [];
            this.cosmeticId = 0;
        };
        CharacterCreationRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterCreationRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterCreationRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterCreationRequestMessage(param1);
        };
        CharacterCreationRequestMessage.prototype.serializeAs_CharacterCreationRequestMessage = function (param1) {
            param1.writeUTF(this.name);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            var _loc2_ = 0;
            while (_loc2_ < 5) {
                param1.writeInt(this.colors[_loc2_]);
                _loc2_++;
            }
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element cosmeticId.');
            }
            param1.writeVarShort(this.cosmeticId);
        };
        CharacterCreationRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterCreationRequestMessage(param1);
        };
        CharacterCreationRequestMessage.prototype.deserializeAs_CharacterCreationRequestMessage = function (param1) {
            this.name = param1.readUTF();
            this.breed = param1.readByte();
            if (this.breed < PlayableBreedEnum.Feca || this.breed > PlayableBreedEnum.Eliotrope) {
                throw new Error('Forbidden value (' + this.breed + ') on element of CharacterCreationRequestMessage.breed.');
            }
            this.sex = param1.readBoolean();
            var _loc2_ = 0;
            while (_loc2_ < 5) {
                this.colors[_loc2_] = param1.readInt();
                _loc2_++;
            }
            this.cosmeticId = param1.readVarUhShort();
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element of CharacterCreationRequestMessage.cosmeticId.');
            }
        };
        CharacterCreationRequestMessage.ID = 160;
        return CharacterCreationRequestMessage;
    })(NetworkMessage);
    Protocol.CharacterCreationRequestMessage = CharacterCreationRequestMessage;
    var CharacterCreationResultMessage = (function (_super) {
        __extends(CharacterCreationResultMessage, _super);
        function CharacterCreationResultMessage() {
            this.result = 1;
            _super.call(this);
        }
        CharacterCreationResultMessage.prototype.getMessageId = function () {
            return CharacterCreationResultMessage.ID;
        };
        CharacterCreationResultMessage.prototype.reset = function () {
            this.result = 1;
        };
        CharacterCreationResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterCreationResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterCreationResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterCreationResultMessage(param1);
        };
        CharacterCreationResultMessage.prototype.serializeAs_CharacterCreationResultMessage = function (param1) {
            param1.writeByte(this.result);
        };
        CharacterCreationResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterCreationResultMessage(param1);
        };
        CharacterCreationResultMessage.prototype.deserializeAs_CharacterCreationResultMessage = function (param1) {
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of CharacterCreationResultMessage.result.');
            }
        };
        CharacterCreationResultMessage.ID = 161;
        return CharacterCreationResultMessage;
    })(NetworkMessage);
    Protocol.CharacterCreationResultMessage = CharacterCreationResultMessage;
    var CharacterNameSuggestionFailureMessage = (function (_super) {
        __extends(CharacterNameSuggestionFailureMessage, _super);
        function CharacterNameSuggestionFailureMessage() {
            this.reason = 1;
            _super.call(this);
        }
        CharacterNameSuggestionFailureMessage.prototype.getMessageId = function () {
            return CharacterNameSuggestionFailureMessage.ID;
        };
        CharacterNameSuggestionFailureMessage.prototype.reset = function () {
            this.reason = 1;
        };
        CharacterNameSuggestionFailureMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterNameSuggestionFailureMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterNameSuggestionFailureMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterNameSuggestionFailureMessage(param1);
        };
        CharacterNameSuggestionFailureMessage.prototype.serializeAs_CharacterNameSuggestionFailureMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        CharacterNameSuggestionFailureMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterNameSuggestionFailureMessage(param1);
        };
        CharacterNameSuggestionFailureMessage.prototype.deserializeAs_CharacterNameSuggestionFailureMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of CharacterNameSuggestionFailureMessage.reason.');
            }
        };
        CharacterNameSuggestionFailureMessage.ID = 164;
        return CharacterNameSuggestionFailureMessage;
    })(NetworkMessage);
    Protocol.CharacterNameSuggestionFailureMessage = CharacterNameSuggestionFailureMessage;
    var CharacterNameSuggestionRequestMessage = (function (_super) {
        __extends(CharacterNameSuggestionRequestMessage, _super);
        function CharacterNameSuggestionRequestMessage() {
            _super.call(this);
        }
        CharacterNameSuggestionRequestMessage.prototype.getMessageId = function () {
            return CharacterNameSuggestionRequestMessage.ID;
        };
        CharacterNameSuggestionRequestMessage.prototype.reset = function () {
        };
        CharacterNameSuggestionRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterNameSuggestionRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterNameSuggestionRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterNameSuggestionRequestMessage(param1);
        };
        CharacterNameSuggestionRequestMessage.prototype.serializeAs_CharacterNameSuggestionRequestMessage = function (param1) {
        };
        CharacterNameSuggestionRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterNameSuggestionRequestMessage(param1);
        };
        CharacterNameSuggestionRequestMessage.prototype.deserializeAs_CharacterNameSuggestionRequestMessage = function (param1) {
        };
        CharacterNameSuggestionRequestMessage.ID = 162;
        return CharacterNameSuggestionRequestMessage;
    })(NetworkMessage);
    Protocol.CharacterNameSuggestionRequestMessage = CharacterNameSuggestionRequestMessage;
    var CharacterNameSuggestionSuccessMessage = (function (_super) {
        __extends(CharacterNameSuggestionSuccessMessage, _super);
        function CharacterNameSuggestionSuccessMessage() {
            this.suggestion = '';
            _super.call(this);
        }
        CharacterNameSuggestionSuccessMessage.prototype.getMessageId = function () {
            return CharacterNameSuggestionSuccessMessage.ID;
        };
        CharacterNameSuggestionSuccessMessage.prototype.reset = function () {
            this.suggestion = '';
        };
        CharacterNameSuggestionSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterNameSuggestionSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterNameSuggestionSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterNameSuggestionSuccessMessage(param1);
        };
        CharacterNameSuggestionSuccessMessage.prototype.serializeAs_CharacterNameSuggestionSuccessMessage = function (param1) {
            param1.writeUTF(this.suggestion);
        };
        CharacterNameSuggestionSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterNameSuggestionSuccessMessage(param1);
        };
        CharacterNameSuggestionSuccessMessage.prototype.deserializeAs_CharacterNameSuggestionSuccessMessage = function (param1) {
            this.suggestion = param1.readUTF();
        };
        CharacterNameSuggestionSuccessMessage.ID = 5544;
        return CharacterNameSuggestionSuccessMessage;
    })(NetworkMessage);
    Protocol.CharacterNameSuggestionSuccessMessage = CharacterNameSuggestionSuccessMessage;
    var CharacterDeletionErrorMessage = (function (_super) {
        __extends(CharacterDeletionErrorMessage, _super);
        function CharacterDeletionErrorMessage() {
            this.reason = 1;
            _super.call(this);
        }
        CharacterDeletionErrorMessage.prototype.getMessageId = function () {
            return CharacterDeletionErrorMessage.ID;
        };
        CharacterDeletionErrorMessage.prototype.reset = function () {
            this.reason = 1;
        };
        CharacterDeletionErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterDeletionErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterDeletionErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterDeletionErrorMessage(param1);
        };
        CharacterDeletionErrorMessage.prototype.serializeAs_CharacterDeletionErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        CharacterDeletionErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterDeletionErrorMessage(param1);
        };
        CharacterDeletionErrorMessage.prototype.deserializeAs_CharacterDeletionErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of CharacterDeletionErrorMessage.reason.');
            }
        };
        CharacterDeletionErrorMessage.ID = 166;
        return CharacterDeletionErrorMessage;
    })(NetworkMessage);
    Protocol.CharacterDeletionErrorMessage = CharacterDeletionErrorMessage;
    var CharacterDeletionRequestMessage = (function (_super) {
        __extends(CharacterDeletionRequestMessage, _super);
        function CharacterDeletionRequestMessage() {
            this.characterId = 0;
            this.secretAnswerHash = '';
            _super.call(this);
        }
        CharacterDeletionRequestMessage.prototype.getMessageId = function () {
            return CharacterDeletionRequestMessage.ID;
        };
        CharacterDeletionRequestMessage.prototype.reset = function () {
            this.characterId = 0;
            this.secretAnswerHash = '';
        };
        CharacterDeletionRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterDeletionRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterDeletionRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterDeletionRequestMessage(param1);
        };
        CharacterDeletionRequestMessage.prototype.serializeAs_CharacterDeletionRequestMessage = function (param1) {
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeInt(this.characterId);
            param1.writeUTF(this.secretAnswerHash);
        };
        CharacterDeletionRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterDeletionRequestMessage(param1);
        };
        CharacterDeletionRequestMessage.prototype.deserializeAs_CharacterDeletionRequestMessage = function (param1) {
            this.characterId = param1.readInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of CharacterDeletionRequestMessage.characterId.');
            }
            this.secretAnswerHash = param1.readUTF();
        };
        CharacterDeletionRequestMessage.ID = 165;
        return CharacterDeletionRequestMessage;
    })(NetworkMessage);
    Protocol.CharacterDeletionRequestMessage = CharacterDeletionRequestMessage;
    var CharacterReplayRequestMessage = (function (_super) {
        __extends(CharacterReplayRequestMessage, _super);
        function CharacterReplayRequestMessage() {
            this.characterId = 0;
            _super.call(this);
        }
        CharacterReplayRequestMessage.prototype.getMessageId = function () {
            return CharacterReplayRequestMessage.ID;
        };
        CharacterReplayRequestMessage.prototype.reset = function () {
            this.characterId = 0;
        };
        CharacterReplayRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterReplayRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterReplayRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterReplayRequestMessage(param1);
        };
        CharacterReplayRequestMessage.prototype.serializeAs_CharacterReplayRequestMessage = function (param1) {
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeInt(this.characterId);
        };
        CharacterReplayRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterReplayRequestMessage(param1);
        };
        CharacterReplayRequestMessage.prototype.deserializeAs_CharacterReplayRequestMessage = function (param1) {
            this.characterId = param1.readInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of CharacterReplayRequestMessage.characterId.');
            }
        };
        CharacterReplayRequestMessage.ID = 167;
        return CharacterReplayRequestMessage;
    })(NetworkMessage);
    Protocol.CharacterReplayRequestMessage = CharacterReplayRequestMessage;
    var CharacterExperienceGainMessage = (function (_super) {
        __extends(CharacterExperienceGainMessage, _super);
        function CharacterExperienceGainMessage() {
            this.experienceCharacter = 0;
            this.experienceMount = 0;
            this.experienceGuild = 0;
            this.experienceIncarnation = 0;
            _super.call(this);
        }
        CharacterExperienceGainMessage.prototype.getMessageId = function () {
            return CharacterExperienceGainMessage.ID;
        };
        CharacterExperienceGainMessage.prototype.reset = function () {
            this.experienceCharacter = 0;
            this.experienceMount = 0;
            this.experienceGuild = 0;
            this.experienceIncarnation = 0;
        };
        CharacterExperienceGainMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterExperienceGainMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterExperienceGainMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterExperienceGainMessage(param1);
        };
        CharacterExperienceGainMessage.prototype.serializeAs_CharacterExperienceGainMessage = function (param1) {
            if (this.experienceCharacter < 0 || this.experienceCharacter > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceCharacter + ') on element experienceCharacter.');
            }
            param1.writeVarLong(this.experienceCharacter);
            if (this.experienceMount < 0 || this.experienceMount > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceMount + ') on element experienceMount.');
            }
            param1.writeVarLong(this.experienceMount);
            if (this.experienceGuild < 0 || this.experienceGuild > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceGuild + ') on element experienceGuild.');
            }
            param1.writeVarLong(this.experienceGuild);
            if (this.experienceIncarnation < 0 || this.experienceIncarnation > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceIncarnation + ') on element experienceIncarnation.');
            }
            param1.writeVarLong(this.experienceIncarnation);
        };
        CharacterExperienceGainMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterExperienceGainMessage(param1);
        };
        CharacterExperienceGainMessage.prototype.deserializeAs_CharacterExperienceGainMessage = function (param1) {
            this.experienceCharacter = param1.readVarUhLong();
            if (this.experienceCharacter < 0 || this.experienceCharacter > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceCharacter + ') on element of CharacterExperienceGainMessage.experienceCharacter.');
            }
            this.experienceMount = param1.readVarUhLong();
            if (this.experienceMount < 0 || this.experienceMount > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceMount + ') on element of CharacterExperienceGainMessage.experienceMount.');
            }
            this.experienceGuild = param1.readVarUhLong();
            if (this.experienceGuild < 0 || this.experienceGuild > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceGuild + ') on element of CharacterExperienceGainMessage.experienceGuild.');
            }
            this.experienceIncarnation = param1.readVarUhLong();
            if (this.experienceIncarnation < 0 || this.experienceIncarnation > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceIncarnation + ') on element of CharacterExperienceGainMessage.experienceIncarnation.');
            }
        };
        CharacterExperienceGainMessage.ID = 6321;
        return CharacterExperienceGainMessage;
    })(NetworkMessage);
    Protocol.CharacterExperienceGainMessage = CharacterExperienceGainMessage;
    var CharacterLevelUpInformationMessage = (function (_super) {
        __extends(CharacterLevelUpInformationMessage, _super);
        function CharacterLevelUpInformationMessage() {
            this.name = '';
            this.id = 0;
            _super.call(this);
        }
        CharacterLevelUpInformationMessage.prototype.getMessageId = function () {
            return CharacterLevelUpInformationMessage.ID;
        };
        CharacterLevelUpInformationMessage.prototype.reset = function () {
            this.name = '';
            this.id = 0;
        };
        CharacterLevelUpInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterLevelUpInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterLevelUpInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterLevelUpInformationMessage(param1);
        };
        CharacterLevelUpInformationMessage.prototype.serializeAs_CharacterLevelUpInformationMessage = function (param1) {
            _super.prototype.serializeAs_CharacterLevelUpMessage.call(this, param1);
            param1.writeUTF(this.name);
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
        };
        CharacterLevelUpInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterLevelUpInformationMessage(param1);
        };
        CharacterLevelUpInformationMessage.prototype.deserializeAs_CharacterLevelUpInformationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of CharacterLevelUpInformationMessage.id.');
            }
        };
        CharacterLevelUpInformationMessage.ID = 6076;
        return CharacterLevelUpInformationMessage;
    })(CharacterLevelUpMessage);
    Protocol.CharacterLevelUpInformationMessage = CharacterLevelUpInformationMessage;
    var CharacterLevelUpMessage = (function (_super) {
        __extends(CharacterLevelUpMessage, _super);
        function CharacterLevelUpMessage() {
            this.newLevel = 0;
            _super.call(this);
        }
        CharacterLevelUpMessage.prototype.getMessageId = function () {
            return CharacterLevelUpMessage.ID;
        };
        CharacterLevelUpMessage.prototype.reset = function () {
            this.newLevel = 0;
        };
        CharacterLevelUpMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterLevelUpMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterLevelUpMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterLevelUpMessage(param1);
        };
        CharacterLevelUpMessage.prototype.serializeAs_CharacterLevelUpMessage = function (param1) {
            if (this.newLevel < 2 || this.newLevel > 200) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element newLevel.');
            }
            param1.writeByte(this.newLevel);
        };
        CharacterLevelUpMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterLevelUpMessage(param1);
        };
        CharacterLevelUpMessage.prototype.deserializeAs_CharacterLevelUpMessage = function (param1) {
            this.newLevel = param1.readUnsignedByte();
            if (this.newLevel < 2 || this.newLevel > 200) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element of CharacterLevelUpMessage.newLevel.');
            }
        };
        CharacterLevelUpMessage.ID = 5670;
        return CharacterLevelUpMessage;
    })(NetworkMessage);
    Protocol.CharacterLevelUpMessage = CharacterLevelUpMessage;
    var CharacterStatsListMessage = (function (_super) {
        __extends(CharacterStatsListMessage, _super);
        function CharacterStatsListMessage() {
            this.stats = new CharacterCharacteristicsInformations();
            _super.call(this);
        }
        CharacterStatsListMessage.prototype.getMessageId = function () {
            return CharacterStatsListMessage.ID;
        };
        CharacterStatsListMessage.prototype.reset = function () {
            this.stats = new CharacterCharacteristicsInformations();
        };
        CharacterStatsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterStatsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterStatsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterStatsListMessage(param1);
        };
        CharacterStatsListMessage.prototype.serializeAs_CharacterStatsListMessage = function (param1) {
            this.stats.serializeAs_CharacterCharacteristicsInformations(param1);
        };
        CharacterStatsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterStatsListMessage(param1);
        };
        CharacterStatsListMessage.prototype.deserializeAs_CharacterStatsListMessage = function (param1) {
            this.stats = new CharacterCharacteristicsInformations();
            this.stats.deserialize(param1);
        };
        CharacterStatsListMessage.ID = 500;
        return CharacterStatsListMessage;
    })(NetworkMessage);
    Protocol.CharacterStatsListMessage = CharacterStatsListMessage;
    var FighterStatsListMessage = (function (_super) {
        __extends(FighterStatsListMessage, _super);
        function FighterStatsListMessage() {
            this.stats = new CharacterCharacteristicsInformations();
            _super.call(this);
        }
        FighterStatsListMessage.prototype.getMessageId = function () {
            return FighterStatsListMessage.ID;
        };
        FighterStatsListMessage.prototype.reset = function () {
            this.stats = new CharacterCharacteristicsInformations();
        };
        FighterStatsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FighterStatsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FighterStatsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_FighterStatsListMessage(param1);
        };
        FighterStatsListMessage.prototype.serializeAs_FighterStatsListMessage = function (param1) {
            this.stats.serializeAs_CharacterCharacteristicsInformations(param1);
        };
        FighterStatsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FighterStatsListMessage(param1);
        };
        FighterStatsListMessage.prototype.deserializeAs_FighterStatsListMessage = function (param1) {
            this.stats = new CharacterCharacteristicsInformations();
            this.stats.deserialize(param1);
        };
        FighterStatsListMessage.ID = 6322;
        return FighterStatsListMessage;
    })(NetworkMessage);
    Protocol.FighterStatsListMessage = FighterStatsListMessage;
    var LifePointsRegenBeginMessage = (function (_super) {
        __extends(LifePointsRegenBeginMessage, _super);
        function LifePointsRegenBeginMessage() {
            this.regenRate = 0;
            _super.call(this);
        }
        LifePointsRegenBeginMessage.prototype.getMessageId = function () {
            return LifePointsRegenBeginMessage.ID;
        };
        LifePointsRegenBeginMessage.prototype.reset = function () {
            this.regenRate = 0;
        };
        LifePointsRegenBeginMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LifePointsRegenBeginMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LifePointsRegenBeginMessage.prototype.serialize = function (param1) {
            this.serializeAs_LifePointsRegenBeginMessage(param1);
        };
        LifePointsRegenBeginMessage.prototype.serializeAs_LifePointsRegenBeginMessage = function (param1) {
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element regenRate.');
            }
            param1.writeByte(this.regenRate);
        };
        LifePointsRegenBeginMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LifePointsRegenBeginMessage(param1);
        };
        LifePointsRegenBeginMessage.prototype.deserializeAs_LifePointsRegenBeginMessage = function (param1) {
            this.regenRate = param1.readUnsignedByte();
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element of LifePointsRegenBeginMessage.regenRate.');
            }
        };
        LifePointsRegenBeginMessage.ID = 5684;
        return LifePointsRegenBeginMessage;
    })(NetworkMessage);
    Protocol.LifePointsRegenBeginMessage = LifePointsRegenBeginMessage;
    var LifePointsRegenEndMessage = (function (_super) {
        __extends(LifePointsRegenEndMessage, _super);
        function LifePointsRegenEndMessage() {
            this.lifePointsGained = 0;
            _super.call(this);
        }
        LifePointsRegenEndMessage.prototype.getMessageId = function () {
            return LifePointsRegenEndMessage.ID;
        };
        LifePointsRegenEndMessage.prototype.reset = function () {
            this.lifePointsGained = 0;
        };
        LifePointsRegenEndMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LifePointsRegenEndMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LifePointsRegenEndMessage.prototype.serialize = function (param1) {
            this.serializeAs_LifePointsRegenEndMessage(param1);
        };
        LifePointsRegenEndMessage.prototype.serializeAs_LifePointsRegenEndMessage = function (param1) {
            _super.prototype.serializeAs_UpdateLifePointsMessage.call(this, param1);
            if (this.lifePointsGained < 0) {
                throw new Error('Forbidden value (' + this.lifePointsGained + ') on element lifePointsGained.');
            }
            param1.writeVarInt(this.lifePointsGained);
        };
        LifePointsRegenEndMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LifePointsRegenEndMessage(param1);
        };
        LifePointsRegenEndMessage.prototype.deserializeAs_LifePointsRegenEndMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.lifePointsGained = param1.readVarUhInt();
            if (this.lifePointsGained < 0) {
                throw new Error('Forbidden value (' + this.lifePointsGained + ') on element of LifePointsRegenEndMessage.lifePointsGained.');
            }
        };
        LifePointsRegenEndMessage.ID = 5686;
        return LifePointsRegenEndMessage;
    })(UpdateLifePointsMessage);
    Protocol.LifePointsRegenEndMessage = LifePointsRegenEndMessage;
    var UpdateLifePointsMessage = (function (_super) {
        __extends(UpdateLifePointsMessage, _super);
        function UpdateLifePointsMessage() {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            _super.call(this);
        }
        UpdateLifePointsMessage.prototype.getMessageId = function () {
            return UpdateLifePointsMessage.ID;
        };
        UpdateLifePointsMessage.prototype.reset = function () {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
        };
        UpdateLifePointsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        UpdateLifePointsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        UpdateLifePointsMessage.prototype.serialize = function (param1) {
            this.serializeAs_UpdateLifePointsMessage(param1);
        };
        UpdateLifePointsMessage.prototype.serializeAs_UpdateLifePointsMessage = function (param1) {
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
        };
        UpdateLifePointsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateLifePointsMessage(param1);
        };
        UpdateLifePointsMessage.prototype.deserializeAs_UpdateLifePointsMessage = function (param1) {
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of UpdateLifePointsMessage.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of UpdateLifePointsMessage.maxLifePoints.');
            }
        };
        UpdateLifePointsMessage.ID = 5658;
        return UpdateLifePointsMessage;
    })(NetworkMessage);
    Protocol.UpdateLifePointsMessage = UpdateLifePointsMessage;
    var PlayerStatusUpdateErrorMessage = (function (_super) {
        __extends(PlayerStatusUpdateErrorMessage, _super);
        function PlayerStatusUpdateErrorMessage() {
            _super.call(this);
        }
        PlayerStatusUpdateErrorMessage.prototype.getMessageId = function () {
            return PlayerStatusUpdateErrorMessage.ID;
        };
        PlayerStatusUpdateErrorMessage.prototype.reset = function () {
        };
        PlayerStatusUpdateErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PlayerStatusUpdateErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PlayerStatusUpdateErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_PlayerStatusUpdateErrorMessage(param1);
        };
        PlayerStatusUpdateErrorMessage.prototype.serializeAs_PlayerStatusUpdateErrorMessage = function (param1) {
        };
        PlayerStatusUpdateErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PlayerStatusUpdateErrorMessage(param1);
        };
        PlayerStatusUpdateErrorMessage.prototype.deserializeAs_PlayerStatusUpdateErrorMessage = function (param1) {
        };
        PlayerStatusUpdateErrorMessage.ID = 6385;
        return PlayerStatusUpdateErrorMessage;
    })(NetworkMessage);
    Protocol.PlayerStatusUpdateErrorMessage = PlayerStatusUpdateErrorMessage;
    var PlayerStatusUpdateMessage = (function (_super) {
        __extends(PlayerStatusUpdateMessage, _super);
        function PlayerStatusUpdateMessage() {
            this.accountId = 0;
            this.playerId = 0;
            this.status = new PlayerStatus();
            _super.call(this);
        }
        PlayerStatusUpdateMessage.prototype.getMessageId = function () {
            return PlayerStatusUpdateMessage.ID;
        };
        PlayerStatusUpdateMessage.prototype.reset = function () {
            this.accountId = 0;
            this.playerId = 0;
            this.status = new PlayerStatus();
        };
        PlayerStatusUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PlayerStatusUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PlayerStatusUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PlayerStatusUpdateMessage(param1);
        };
        PlayerStatusUpdateMessage.prototype.serializeAs_PlayerStatusUpdateMessage = function (param1) {
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
        };
        PlayerStatusUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PlayerStatusUpdateMessage(param1);
        };
        PlayerStatusUpdateMessage.prototype.deserializeAs_PlayerStatusUpdateMessage = function (param1) {
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of PlayerStatusUpdateMessage.accountId.');
            }
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of PlayerStatusUpdateMessage.playerId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
        };
        PlayerStatusUpdateMessage.ID = 6386;
        return PlayerStatusUpdateMessage;
    })(NetworkMessage);
    Protocol.PlayerStatusUpdateMessage = PlayerStatusUpdateMessage;
    var PlayerStatusUpdateRequestMessage = (function (_super) {
        __extends(PlayerStatusUpdateRequestMessage, _super);
        function PlayerStatusUpdateRequestMessage() {
            this.status = new PlayerStatus();
            _super.call(this);
        }
        PlayerStatusUpdateRequestMessage.prototype.getMessageId = function () {
            return PlayerStatusUpdateRequestMessage.ID;
        };
        PlayerStatusUpdateRequestMessage.prototype.reset = function () {
            this.status = new PlayerStatus();
        };
        PlayerStatusUpdateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PlayerStatusUpdateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PlayerStatusUpdateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PlayerStatusUpdateRequestMessage(param1);
        };
        PlayerStatusUpdateRequestMessage.prototype.serializeAs_PlayerStatusUpdateRequestMessage = function (param1) {
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
        };
        PlayerStatusUpdateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PlayerStatusUpdateRequestMessage(param1);
        };
        PlayerStatusUpdateRequestMessage.prototype.deserializeAs_PlayerStatusUpdateRequestMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
        };
        PlayerStatusUpdateRequestMessage.ID = 6387;
        return PlayerStatusUpdateRequestMessage;
    })(NetworkMessage);
    Protocol.PlayerStatusUpdateRequestMessage = PlayerStatusUpdateRequestMessage;
    var ChatAbstractClientMessage = (function (_super) {
        __extends(ChatAbstractClientMessage, _super);
        function ChatAbstractClientMessage() {
            this.content = '';
            _super.call(this);
        }
        ChatAbstractClientMessage.prototype.getMessageId = function () {
            return ChatAbstractClientMessage.ID;
        };
        ChatAbstractClientMessage.prototype.reset = function () {
            this.content = '';
        };
        ChatAbstractClientMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatAbstractClientMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatAbstractClientMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatAbstractClientMessage(param1);
        };
        ChatAbstractClientMessage.prototype.serializeAs_ChatAbstractClientMessage = function (param1) {
            param1.writeUTF(this.content);
        };
        ChatAbstractClientMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatAbstractClientMessage(param1);
        };
        ChatAbstractClientMessage.prototype.deserializeAs_ChatAbstractClientMessage = function (param1) {
            this.content = param1.readUTF();
        };
        ChatAbstractClientMessage.ID = 850;
        return ChatAbstractClientMessage;
    })(NetworkMessage);
    Protocol.ChatAbstractClientMessage = ChatAbstractClientMessage;
    var ChatAbstractServerMessage = (function (_super) {
        __extends(ChatAbstractServerMessage, _super);
        function ChatAbstractServerMessage() {
            this.channel = 0;
            this.content = '';
            this.timestamp = 0;
            this.fingerprint = '';
            _super.call(this);
        }
        ChatAbstractServerMessage.prototype.getMessageId = function () {
            return ChatAbstractServerMessage.ID;
        };
        ChatAbstractServerMessage.prototype.reset = function () {
            this.channel = 0;
            this.content = '';
            this.timestamp = 0;
            this.fingerprint = '';
        };
        ChatAbstractServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatAbstractServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatAbstractServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatAbstractServerMessage(param1);
        };
        ChatAbstractServerMessage.prototype.serializeAs_ChatAbstractServerMessage = function (param1) {
            param1.writeByte(this.channel);
            param1.writeUTF(this.content);
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element timestamp.');
            }
            param1.writeInt(this.timestamp);
            param1.writeUTF(this.fingerprint);
        };
        ChatAbstractServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatAbstractServerMessage(param1);
        };
        ChatAbstractServerMessage.prototype.deserializeAs_ChatAbstractServerMessage = function (param1) {
            this.channel = param1.readByte();
            if (this.channel < 0) {
                throw new Error('Forbidden value (' + this.channel + ') on element of ChatAbstractServerMessage.channel.');
            }
            this.content = param1.readUTF();
            this.timestamp = param1.readInt();
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element of ChatAbstractServerMessage.timestamp.');
            }
            this.fingerprint = param1.readUTF();
        };
        ChatAbstractServerMessage.ID = 880;
        return ChatAbstractServerMessage;
    })(NetworkMessage);
    Protocol.ChatAbstractServerMessage = ChatAbstractServerMessage;
    var ChatAdminServerMessage = (function (_super) {
        __extends(ChatAdminServerMessage, _super);
        function ChatAdminServerMessage() {
            _super.call(this);
        }
        ChatAdminServerMessage.prototype.getMessageId = function () {
            return ChatAdminServerMessage.ID;
        };
        ChatAdminServerMessage.prototype.reset = function () {
        };
        ChatAdminServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatAdminServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatAdminServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatAdminServerMessage(param1);
        };
        ChatAdminServerMessage.prototype.serializeAs_ChatAdminServerMessage = function (param1) {
            _super.prototype.serializeAs_ChatServerMessage.call(this, param1);
        };
        ChatAdminServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatAdminServerMessage(param1);
        };
        ChatAdminServerMessage.prototype.deserializeAs_ChatAdminServerMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ChatAdminServerMessage.ID = 6135;
        return ChatAdminServerMessage;
    })(ChatServerMessage);
    Protocol.ChatAdminServerMessage = ChatAdminServerMessage;
    var ChatClientMultiMessage = (function (_super) {
        __extends(ChatClientMultiMessage, _super);
        function ChatClientMultiMessage() {
            this.channel = 0;
            _super.call(this);
        }
        ChatClientMultiMessage.prototype.getMessageId = function () {
            return ChatClientMultiMessage.ID;
        };
        ChatClientMultiMessage.prototype.reset = function () {
            this.channel = 0;
        };
        ChatClientMultiMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatClientMultiMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatClientMultiMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatClientMultiMessage(param1);
        };
        ChatClientMultiMessage.prototype.serializeAs_ChatClientMultiMessage = function (param1) {
            _super.prototype.serializeAs_ChatAbstractClientMessage.call(this, param1);
            param1.writeByte(this.channel);
        };
        ChatClientMultiMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatClientMultiMessage(param1);
        };
        ChatClientMultiMessage.prototype.deserializeAs_ChatClientMultiMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.channel = param1.readByte();
            if (this.channel < 0) {
                throw new Error('Forbidden value (' + this.channel + ') on element of ChatClientMultiMessage.channel.');
            }
        };
        ChatClientMultiMessage.ID = 861;
        return ChatClientMultiMessage;
    })(ChatAbstractClientMessage);
    Protocol.ChatClientMultiMessage = ChatClientMultiMessage;
    var ChatClientMultiWithObjectMessage = (function (_super) {
        __extends(ChatClientMultiWithObjectMessage, _super);
        function ChatClientMultiWithObjectMessage() {
            this.objects = [];
            _super.call(this);
        }
        ChatClientMultiWithObjectMessage.prototype.getMessageId = function () {
            return ChatClientMultiWithObjectMessage.ID;
        };
        ChatClientMultiWithObjectMessage.prototype.reset = function () {
            this.objects = [];
        };
        ChatClientMultiWithObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatClientMultiWithObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatClientMultiWithObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatClientMultiWithObjectMessage(param1);
        };
        ChatClientMultiWithObjectMessage.prototype.serializeAs_ChatClientMultiWithObjectMessage = function (param1) {
            _super.prototype.serializeAs_ChatClientMultiMessage.call(this, param1);
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ChatClientMultiWithObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatClientMultiWithObjectMessage(param1);
        };
        ChatClientMultiWithObjectMessage.prototype.deserializeAs_ChatClientMultiWithObjectMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
        };
        ChatClientMultiWithObjectMessage.ID = 862;
        return ChatClientMultiWithObjectMessage;
    })(ChatClientMultiMessage);
    Protocol.ChatClientMultiWithObjectMessage = ChatClientMultiWithObjectMessage;
    var ChatClientPrivateMessage = (function (_super) {
        __extends(ChatClientPrivateMessage, _super);
        function ChatClientPrivateMessage() {
            this.receiver = '';
            _super.call(this);
        }
        ChatClientPrivateMessage.prototype.getMessageId = function () {
            return ChatClientPrivateMessage.ID;
        };
        ChatClientPrivateMessage.prototype.reset = function () {
            this.receiver = '';
        };
        ChatClientPrivateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatClientPrivateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatClientPrivateMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatClientPrivateMessage(param1);
        };
        ChatClientPrivateMessage.prototype.serializeAs_ChatClientPrivateMessage = function (param1) {
            _super.prototype.serializeAs_ChatAbstractClientMessage.call(this, param1);
            param1.writeUTF(this.receiver);
        };
        ChatClientPrivateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatClientPrivateMessage(param1);
        };
        ChatClientPrivateMessage.prototype.deserializeAs_ChatClientPrivateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.receiver = param1.readUTF();
        };
        ChatClientPrivateMessage.ID = 851;
        return ChatClientPrivateMessage;
    })(ChatAbstractClientMessage);
    Protocol.ChatClientPrivateMessage = ChatClientPrivateMessage;
    var ChatClientPrivateWithObjectMessage = (function (_super) {
        __extends(ChatClientPrivateWithObjectMessage, _super);
        function ChatClientPrivateWithObjectMessage() {
            this.objects = [];
            _super.call(this);
        }
        ChatClientPrivateWithObjectMessage.prototype.getMessageId = function () {
            return ChatClientPrivateWithObjectMessage.ID;
        };
        ChatClientPrivateWithObjectMessage.prototype.reset = function () {
            this.objects = [];
        };
        ChatClientPrivateWithObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatClientPrivateWithObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatClientPrivateWithObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatClientPrivateWithObjectMessage(param1);
        };
        ChatClientPrivateWithObjectMessage.prototype.serializeAs_ChatClientPrivateWithObjectMessage = function (param1) {
            _super.prototype.serializeAs_ChatClientPrivateMessage.call(this, param1);
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ChatClientPrivateWithObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatClientPrivateWithObjectMessage(param1);
        };
        ChatClientPrivateWithObjectMessage.prototype.deserializeAs_ChatClientPrivateWithObjectMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
        };
        ChatClientPrivateWithObjectMessage.ID = 852;
        return ChatClientPrivateWithObjectMessage;
    })(ChatClientPrivateMessage);
    Protocol.ChatClientPrivateWithObjectMessage = ChatClientPrivateWithObjectMessage;
    var ChatErrorMessage = (function (_super) {
        __extends(ChatErrorMessage, _super);
        function ChatErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        ChatErrorMessage.prototype.getMessageId = function () {
            return ChatErrorMessage.ID;
        };
        ChatErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        ChatErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatErrorMessage(param1);
        };
        ChatErrorMessage.prototype.serializeAs_ChatErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        ChatErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatErrorMessage(param1);
        };
        ChatErrorMessage.prototype.deserializeAs_ChatErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of ChatErrorMessage.reason.');
            }
        };
        ChatErrorMessage.ID = 870;
        return ChatErrorMessage;
    })(NetworkMessage);
    Protocol.ChatErrorMessage = ChatErrorMessage;
    var ChatServerCopyMessage = (function (_super) {
        __extends(ChatServerCopyMessage, _super);
        function ChatServerCopyMessage() {
            this.receiverId = 0;
            this.receiverName = '';
            _super.call(this);
        }
        ChatServerCopyMessage.prototype.getMessageId = function () {
            return ChatServerCopyMessage.ID;
        };
        ChatServerCopyMessage.prototype.reset = function () {
            this.receiverId = 0;
            this.receiverName = '';
        };
        ChatServerCopyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatServerCopyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatServerCopyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatServerCopyMessage(param1);
        };
        ChatServerCopyMessage.prototype.serializeAs_ChatServerCopyMessage = function (param1) {
            _super.prototype.serializeAs_ChatAbstractServerMessage.call(this, param1);
            if (this.receiverId < 0) {
                throw new Error('Forbidden value (' + this.receiverId + ') on element receiverId.');
            }
            param1.writeVarInt(this.receiverId);
            param1.writeUTF(this.receiverName);
        };
        ChatServerCopyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatServerCopyMessage(param1);
        };
        ChatServerCopyMessage.prototype.deserializeAs_ChatServerCopyMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.receiverId = param1.readVarUhInt();
            if (this.receiverId < 0) {
                throw new Error('Forbidden value (' + this.receiverId + ') on element of ChatServerCopyMessage.receiverId.');
            }
            this.receiverName = param1.readUTF();
        };
        ChatServerCopyMessage.ID = 882;
        return ChatServerCopyMessage;
    })(ChatAbstractServerMessage);
    Protocol.ChatServerCopyMessage = ChatServerCopyMessage;
    var ChatServerCopyWithObjectMessage = (function (_super) {
        __extends(ChatServerCopyWithObjectMessage, _super);
        function ChatServerCopyWithObjectMessage() {
            this.objects = [];
            _super.call(this);
        }
        ChatServerCopyWithObjectMessage.prototype.getMessageId = function () {
            return ChatServerCopyWithObjectMessage.ID;
        };
        ChatServerCopyWithObjectMessage.prototype.reset = function () {
            this.objects = [];
        };
        ChatServerCopyWithObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatServerCopyWithObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatServerCopyWithObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatServerCopyWithObjectMessage(param1);
        };
        ChatServerCopyWithObjectMessage.prototype.serializeAs_ChatServerCopyWithObjectMessage = function (param1) {
            _super.prototype.serializeAs_ChatServerCopyMessage.call(this, param1);
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ChatServerCopyWithObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatServerCopyWithObjectMessage(param1);
        };
        ChatServerCopyWithObjectMessage.prototype.deserializeAs_ChatServerCopyWithObjectMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
        };
        ChatServerCopyWithObjectMessage.ID = 884;
        return ChatServerCopyWithObjectMessage;
    })(ChatServerCopyMessage);
    Protocol.ChatServerCopyWithObjectMessage = ChatServerCopyWithObjectMessage;
    var ChatServerMessage = (function (_super) {
        __extends(ChatServerMessage, _super);
        function ChatServerMessage() {
            this.senderId = 0;
            this.senderName = '';
            this.senderAccountId = 0;
            _super.call(this);
        }
        ChatServerMessage.prototype.getMessageId = function () {
            return ChatServerMessage.ID;
        };
        ChatServerMessage.prototype.reset = function () {
            this.senderId = 0;
            this.senderName = '';
            this.senderAccountId = 0;
        };
        ChatServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatServerMessage(param1);
        };
        ChatServerMessage.prototype.serializeAs_ChatServerMessage = function (param1) {
            _super.prototype.serializeAs_ChatAbstractServerMessage.call(this, param1);
            param1.writeInt(this.senderId);
            param1.writeUTF(this.senderName);
            if (this.senderAccountId < 0) {
                throw new Error('Forbidden value (' + this.senderAccountId + ') on element senderAccountId.');
            }
            param1.writeInt(this.senderAccountId);
        };
        ChatServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatServerMessage(param1);
        };
        ChatServerMessage.prototype.deserializeAs_ChatServerMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.senderId = param1.readInt();
            this.senderName = param1.readUTF();
            this.senderAccountId = param1.readInt();
            if (this.senderAccountId < 0) {
                throw new Error('Forbidden value (' + this.senderAccountId + ') on element of ChatServerMessage.senderAccountId.');
            }
        };
        ChatServerMessage.ID = 881;
        return ChatServerMessage;
    })(ChatAbstractServerMessage);
    Protocol.ChatServerMessage = ChatServerMessage;
    var ChatServerWithObjectMessage = (function (_super) {
        __extends(ChatServerWithObjectMessage, _super);
        function ChatServerWithObjectMessage() {
            this.objects = [];
            _super.call(this);
        }
        ChatServerWithObjectMessage.prototype.getMessageId = function () {
            return ChatServerWithObjectMessage.ID;
        };
        ChatServerWithObjectMessage.prototype.reset = function () {
            this.objects = [];
        };
        ChatServerWithObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatServerWithObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatServerWithObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatServerWithObjectMessage(param1);
        };
        ChatServerWithObjectMessage.prototype.serializeAs_ChatServerWithObjectMessage = function (param1) {
            _super.prototype.serializeAs_ChatServerMessage.call(this, param1);
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ChatServerWithObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatServerWithObjectMessage(param1);
        };
        ChatServerWithObjectMessage.prototype.deserializeAs_ChatServerWithObjectMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
        };
        ChatServerWithObjectMessage.ID = 883;
        return ChatServerWithObjectMessage;
    })(ChatServerMessage);
    Protocol.ChatServerWithObjectMessage = ChatServerWithObjectMessage;
    var ChannelEnablingChangeMessage = (function (_super) {
        __extends(ChannelEnablingChangeMessage, _super);
        function ChannelEnablingChangeMessage() {
            this.channel = 0;
            this.enable = false;
            _super.call(this);
        }
        ChannelEnablingChangeMessage.prototype.getMessageId = function () {
            return ChannelEnablingChangeMessage.ID;
        };
        ChannelEnablingChangeMessage.prototype.reset = function () {
            this.channel = 0;
            this.enable = false;
        };
        ChannelEnablingChangeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChannelEnablingChangeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChannelEnablingChangeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChannelEnablingChangeMessage(param1);
        };
        ChannelEnablingChangeMessage.prototype.serializeAs_ChannelEnablingChangeMessage = function (param1) {
            param1.writeByte(this.channel);
            param1.writeBoolean(this.enable);
        };
        ChannelEnablingChangeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChannelEnablingChangeMessage(param1);
        };
        ChannelEnablingChangeMessage.prototype.deserializeAs_ChannelEnablingChangeMessage = function (param1) {
            this.channel = param1.readByte();
            if (this.channel < 0) {
                throw new Error('Forbidden value (' + this.channel + ') on element of ChannelEnablingChangeMessage.channel.');
            }
            this.enable = param1.readBoolean();
        };
        ChannelEnablingChangeMessage.ID = 891;
        return ChannelEnablingChangeMessage;
    })(NetworkMessage);
    Protocol.ChannelEnablingChangeMessage = ChannelEnablingChangeMessage;
    var ChannelEnablingMessage = (function (_super) {
        __extends(ChannelEnablingMessage, _super);
        function ChannelEnablingMessage() {
            this.channel = 0;
            this.enable = false;
            _super.call(this);
        }
        ChannelEnablingMessage.prototype.getMessageId = function () {
            return ChannelEnablingMessage.ID;
        };
        ChannelEnablingMessage.prototype.reset = function () {
            this.channel = 0;
            this.enable = false;
        };
        ChannelEnablingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChannelEnablingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChannelEnablingMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChannelEnablingMessage(param1);
        };
        ChannelEnablingMessage.prototype.serializeAs_ChannelEnablingMessage = function (param1) {
            param1.writeByte(this.channel);
            param1.writeBoolean(this.enable);
        };
        ChannelEnablingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChannelEnablingMessage(param1);
        };
        ChannelEnablingMessage.prototype.deserializeAs_ChannelEnablingMessage = function (param1) {
            this.channel = param1.readByte();
            if (this.channel < 0) {
                throw new Error('Forbidden value (' + this.channel + ') on element of ChannelEnablingMessage.channel.');
            }
            this.enable = param1.readBoolean();
        };
        ChannelEnablingMessage.ID = 890;
        return ChannelEnablingMessage;
    })(NetworkMessage);
    Protocol.ChannelEnablingMessage = ChannelEnablingMessage;
    var EnabledChannelsMessage = (function (_super) {
        __extends(EnabledChannelsMessage, _super);
        function EnabledChannelsMessage() {
            this.channels = [];
            this.disallowed = [];
            _super.call(this);
        }
        EnabledChannelsMessage.prototype.getMessageId = function () {
            return EnabledChannelsMessage.ID;
        };
        EnabledChannelsMessage.prototype.reset = function () {
            this.channels = [];
            this.disallowed = [];
        };
        EnabledChannelsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EnabledChannelsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EnabledChannelsMessage.prototype.serialize = function (param1) {
            this.serializeAs_EnabledChannelsMessage(param1);
        };
        EnabledChannelsMessage.prototype.serializeAs_EnabledChannelsMessage = function (param1) {
            param1.writeShort(this.channels.length);
            var _loc2_ = 0;
            while (_loc2_ < this.channels.length) {
                param1.writeByte(this.channels[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.disallowed.length);
            var _loc3_ = 0;
            while (_loc3_ < this.disallowed.length) {
                param1.writeByte(this.disallowed[_loc3_]);
                _loc3_++;
            }
        };
        EnabledChannelsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EnabledChannelsMessage(param1);
        };
        EnabledChannelsMessage.prototype.deserializeAs_EnabledChannelsMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readByte();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of channels.');
                }
                this.channels.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readByte();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of disallowed.');
                }
                this.disallowed.push(_loc7_);
                _loc5_++;
            }
        };
        EnabledChannelsMessage.ID = 892;
        return EnabledChannelsMessage;
    })(NetworkMessage);
    Protocol.EnabledChannelsMessage = EnabledChannelsMessage;
    var ChatMessageReportMessage = (function (_super) {
        __extends(ChatMessageReportMessage, _super);
        function ChatMessageReportMessage() {
            this.senderName = '';
            this.content = '';
            this.timestamp = 0;
            this.channel = 0;
            this.fingerprint = '';
            this.reason = 0;
            _super.call(this);
        }
        ChatMessageReportMessage.prototype.getMessageId = function () {
            return ChatMessageReportMessage.ID;
        };
        ChatMessageReportMessage.prototype.reset = function () {
            this.senderName = '';
            this.content = '';
            this.timestamp = 0;
            this.channel = 0;
            this.fingerprint = '';
            this.reason = 0;
        };
        ChatMessageReportMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatMessageReportMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatMessageReportMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatMessageReportMessage(param1);
        };
        ChatMessageReportMessage.prototype.serializeAs_ChatMessageReportMessage = function (param1) {
            param1.writeUTF(this.senderName);
            param1.writeUTF(this.content);
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element timestamp.');
            }
            param1.writeInt(this.timestamp);
            param1.writeByte(this.channel);
            param1.writeUTF(this.fingerprint);
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element reason.');
            }
            param1.writeByte(this.reason);
        };
        ChatMessageReportMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatMessageReportMessage(param1);
        };
        ChatMessageReportMessage.prototype.deserializeAs_ChatMessageReportMessage = function (param1) {
            this.senderName = param1.readUTF();
            this.content = param1.readUTF();
            this.timestamp = param1.readInt();
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element of ChatMessageReportMessage.timestamp.');
            }
            this.channel = param1.readByte();
            if (this.channel < 0) {
                throw new Error('Forbidden value (' + this.channel + ') on element of ChatMessageReportMessage.channel.');
            }
            this.fingerprint = param1.readUTF();
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of ChatMessageReportMessage.reason.');
            }
        };
        ChatMessageReportMessage.ID = 821;
        return ChatMessageReportMessage;
    })(NetworkMessage);
    Protocol.ChatMessageReportMessage = ChatMessageReportMessage;
    var ChatSmileyExtraPackListMessage = (function (_super) {
        __extends(ChatSmileyExtraPackListMessage, _super);
        function ChatSmileyExtraPackListMessage() {
            this.packIds = [];
            _super.call(this);
        }
        ChatSmileyExtraPackListMessage.prototype.getMessageId = function () {
            return ChatSmileyExtraPackListMessage.ID;
        };
        ChatSmileyExtraPackListMessage.prototype.reset = function () {
            this.packIds = [];
        };
        ChatSmileyExtraPackListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatSmileyExtraPackListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatSmileyExtraPackListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatSmileyExtraPackListMessage(param1);
        };
        ChatSmileyExtraPackListMessage.prototype.serializeAs_ChatSmileyExtraPackListMessage = function (param1) {
            param1.writeShort(this.packIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.packIds.length) {
                if (this.packIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.packIds[_loc2_] + ') on element 1 (starting at 1) of packIds.');
                }
                param1.writeByte(this.packIds[_loc2_]);
                _loc2_++;
            }
        };
        ChatSmileyExtraPackListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatSmileyExtraPackListMessage(param1);
        };
        ChatSmileyExtraPackListMessage.prototype.deserializeAs_ChatSmileyExtraPackListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of packIds.');
                }
                this.packIds.push(_loc4_);
                _loc3_++;
            }
        };
        ChatSmileyExtraPackListMessage.ID = 6596;
        return ChatSmileyExtraPackListMessage;
    })(NetworkMessage);
    Protocol.ChatSmileyExtraPackListMessage = ChatSmileyExtraPackListMessage;
    var ChatSmileyMessage = (function (_super) {
        __extends(ChatSmileyMessage, _super);
        function ChatSmileyMessage() {
            this.entityId = 0;
            this.smileyId = 0;
            this.accountId = 0;
            _super.call(this);
        }
        ChatSmileyMessage.prototype.getMessageId = function () {
            return ChatSmileyMessage.ID;
        };
        ChatSmileyMessage.prototype.reset = function () {
            this.entityId = 0;
            this.smileyId = 0;
            this.accountId = 0;
        };
        ChatSmileyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatSmileyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatSmileyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatSmileyMessage(param1);
        };
        ChatSmileyMessage.prototype.serializeAs_ChatSmileyMessage = function (param1) {
            param1.writeInt(this.entityId);
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
        };
        ChatSmileyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatSmileyMessage(param1);
        };
        ChatSmileyMessage.prototype.deserializeAs_ChatSmileyMessage = function (param1) {
            this.entityId = param1.readInt();
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of ChatSmileyMessage.smileyId.');
            }
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of ChatSmileyMessage.accountId.');
            }
        };
        ChatSmileyMessage.ID = 801;
        return ChatSmileyMessage;
    })(NetworkMessage);
    Protocol.ChatSmileyMessage = ChatSmileyMessage;
    var ChatSmileyRequestMessage = (function (_super) {
        __extends(ChatSmileyRequestMessage, _super);
        function ChatSmileyRequestMessage() {
            this.smileyId = 0;
            _super.call(this);
        }
        ChatSmileyRequestMessage.prototype.getMessageId = function () {
            return ChatSmileyRequestMessage.ID;
        };
        ChatSmileyRequestMessage.prototype.reset = function () {
            this.smileyId = 0;
        };
        ChatSmileyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChatSmileyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChatSmileyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChatSmileyRequestMessage(param1);
        };
        ChatSmileyRequestMessage.prototype.serializeAs_ChatSmileyRequestMessage = function (param1) {
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
        };
        ChatSmileyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChatSmileyRequestMessage(param1);
        };
        ChatSmileyRequestMessage.prototype.deserializeAs_ChatSmileyRequestMessage = function (param1) {
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of ChatSmileyRequestMessage.smileyId.');
            }
        };
        ChatSmileyRequestMessage.ID = 800;
        return ChatSmileyRequestMessage;
    })(NetworkMessage);
    Protocol.ChatSmileyRequestMessage = ChatSmileyRequestMessage;
    var LocalizedChatSmileyMessage = (function (_super) {
        __extends(LocalizedChatSmileyMessage, _super);
        function LocalizedChatSmileyMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        LocalizedChatSmileyMessage.prototype.getMessageId = function () {
            return LocalizedChatSmileyMessage.ID;
        };
        LocalizedChatSmileyMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        LocalizedChatSmileyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LocalizedChatSmileyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LocalizedChatSmileyMessage.prototype.serialize = function (param1) {
            this.serializeAs_LocalizedChatSmileyMessage(param1);
        };
        LocalizedChatSmileyMessage.prototype.serializeAs_LocalizedChatSmileyMessage = function (param1) {
            _super.prototype.serializeAs_ChatSmileyMessage.call(this, param1);
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        LocalizedChatSmileyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LocalizedChatSmileyMessage(param1);
        };
        LocalizedChatSmileyMessage.prototype.deserializeAs_LocalizedChatSmileyMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of LocalizedChatSmileyMessage.cellId.');
            }
        };
        LocalizedChatSmileyMessage.ID = 6185;
        return LocalizedChatSmileyMessage;
    })(ChatSmileyMessage);
    Protocol.LocalizedChatSmileyMessage = LocalizedChatSmileyMessage;
    var MoodSmileyRequestMessage = (function (_super) {
        __extends(MoodSmileyRequestMessage, _super);
        function MoodSmileyRequestMessage() {
            this.smileyId = 0;
            _super.call(this);
        }
        MoodSmileyRequestMessage.prototype.getMessageId = function () {
            return MoodSmileyRequestMessage.ID;
        };
        MoodSmileyRequestMessage.prototype.reset = function () {
            this.smileyId = 0;
        };
        MoodSmileyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MoodSmileyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MoodSmileyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MoodSmileyRequestMessage(param1);
        };
        MoodSmileyRequestMessage.prototype.serializeAs_MoodSmileyRequestMessage = function (param1) {
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
        };
        MoodSmileyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MoodSmileyRequestMessage(param1);
        };
        MoodSmileyRequestMessage.prototype.deserializeAs_MoodSmileyRequestMessage = function (param1) {
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of MoodSmileyRequestMessage.smileyId.');
            }
        };
        MoodSmileyRequestMessage.ID = 6192;
        return MoodSmileyRequestMessage;
    })(NetworkMessage);
    Protocol.MoodSmileyRequestMessage = MoodSmileyRequestMessage;
    var MoodSmileyResultMessage = (function (_super) {
        __extends(MoodSmileyResultMessage, _super);
        function MoodSmileyResultMessage() {
            this.resultCode = 1;
            this.smileyId = 0;
            _super.call(this);
        }
        MoodSmileyResultMessage.prototype.getMessageId = function () {
            return MoodSmileyResultMessage.ID;
        };
        MoodSmileyResultMessage.prototype.reset = function () {
            this.resultCode = 1;
            this.smileyId = 0;
        };
        MoodSmileyResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MoodSmileyResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MoodSmileyResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_MoodSmileyResultMessage(param1);
        };
        MoodSmileyResultMessage.prototype.serializeAs_MoodSmileyResultMessage = function (param1) {
            param1.writeByte(this.resultCode);
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
        };
        MoodSmileyResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MoodSmileyResultMessage(param1);
        };
        MoodSmileyResultMessage.prototype.deserializeAs_MoodSmileyResultMessage = function (param1) {
            this.resultCode = param1.readByte();
            if (this.resultCode < 0) {
                throw new Error('Forbidden value (' + this.resultCode + ') on element of MoodSmileyResultMessage.resultCode.');
            }
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of MoodSmileyResultMessage.smileyId.');
            }
        };
        MoodSmileyResultMessage.ID = 6196;
        return MoodSmileyResultMessage;
    })(NetworkMessage);
    Protocol.MoodSmileyResultMessage = MoodSmileyResultMessage;
    var MoodSmileyUpdateMessage = (function (_super) {
        __extends(MoodSmileyUpdateMessage, _super);
        function MoodSmileyUpdateMessage() {
            this.accountId = 0;
            this.playerId = 0;
            this.smileyId = 0;
            _super.call(this);
        }
        MoodSmileyUpdateMessage.prototype.getMessageId = function () {
            return MoodSmileyUpdateMessage.ID;
        };
        MoodSmileyUpdateMessage.prototype.reset = function () {
            this.accountId = 0;
            this.playerId = 0;
            this.smileyId = 0;
        };
        MoodSmileyUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MoodSmileyUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MoodSmileyUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_MoodSmileyUpdateMessage(param1);
        };
        MoodSmileyUpdateMessage.prototype.serializeAs_MoodSmileyUpdateMessage = function (param1) {
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
        };
        MoodSmileyUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MoodSmileyUpdateMessage(param1);
        };
        MoodSmileyUpdateMessage.prototype.deserializeAs_MoodSmileyUpdateMessage = function (param1) {
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of MoodSmileyUpdateMessage.accountId.');
            }
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of MoodSmileyUpdateMessage.playerId.');
            }
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of MoodSmileyUpdateMessage.smileyId.');
            }
        };
        MoodSmileyUpdateMessage.ID = 6388;
        return MoodSmileyUpdateMessage;
    })(NetworkMessage);
    Protocol.MoodSmileyUpdateMessage = MoodSmileyUpdateMessage;
    var GameCautiousMapMovementMessage = (function (_super) {
        __extends(GameCautiousMapMovementMessage, _super);
        function GameCautiousMapMovementMessage() {
            _super.call(this);
        }
        GameCautiousMapMovementMessage.prototype.getMessageId = function () {
            return GameCautiousMapMovementMessage.ID;
        };
        GameCautiousMapMovementMessage.prototype.reset = function () {
        };
        GameCautiousMapMovementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameCautiousMapMovementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameCautiousMapMovementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameCautiousMapMovementMessage(param1);
        };
        GameCautiousMapMovementMessage.prototype.serializeAs_GameCautiousMapMovementMessage = function (param1) {
            _super.prototype.serializeAs_GameMapMovementMessage.call(this, param1);
        };
        GameCautiousMapMovementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameCautiousMapMovementMessage(param1);
        };
        GameCautiousMapMovementMessage.prototype.deserializeAs_GameCautiousMapMovementMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameCautiousMapMovementMessage.ID = 6497;
        return GameCautiousMapMovementMessage;
    })(GameMapMovementMessage);
    Protocol.GameCautiousMapMovementMessage = GameCautiousMapMovementMessage;
    var GameCautiousMapMovementRequestMessage = (function (_super) {
        __extends(GameCautiousMapMovementRequestMessage, _super);
        function GameCautiousMapMovementRequestMessage() {
            _super.call(this);
        }
        GameCautiousMapMovementRequestMessage.prototype.getMessageId = function () {
            return GameCautiousMapMovementRequestMessage.ID;
        };
        GameCautiousMapMovementRequestMessage.prototype.reset = function () {
        };
        GameCautiousMapMovementRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameCautiousMapMovementRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameCautiousMapMovementRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameCautiousMapMovementRequestMessage(param1);
        };
        GameCautiousMapMovementRequestMessage.prototype.serializeAs_GameCautiousMapMovementRequestMessage = function (param1) {
            _super.prototype.serializeAs_GameMapMovementRequestMessage.call(this, param1);
        };
        GameCautiousMapMovementRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameCautiousMapMovementRequestMessage(param1);
        };
        GameCautiousMapMovementRequestMessage.prototype.deserializeAs_GameCautiousMapMovementRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameCautiousMapMovementRequestMessage.ID = 6496;
        return GameCautiousMapMovementRequestMessage;
    })(GameMapMovementRequestMessage);
    Protocol.GameCautiousMapMovementRequestMessage = GameCautiousMapMovementRequestMessage;
    var GameContextCreateErrorMessage = (function (_super) {
        __extends(GameContextCreateErrorMessage, _super);
        function GameContextCreateErrorMessage() {
            _super.call(this);
        }
        GameContextCreateErrorMessage.prototype.getMessageId = function () {
            return GameContextCreateErrorMessage.ID;
        };
        GameContextCreateErrorMessage.prototype.reset = function () {
        };
        GameContextCreateErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextCreateErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextCreateErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextCreateErrorMessage(param1);
        };
        GameContextCreateErrorMessage.prototype.serializeAs_GameContextCreateErrorMessage = function (param1) {
        };
        GameContextCreateErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextCreateErrorMessage(param1);
        };
        GameContextCreateErrorMessage.prototype.deserializeAs_GameContextCreateErrorMessage = function (param1) {
        };
        GameContextCreateErrorMessage.ID = 6024;
        return GameContextCreateErrorMessage;
    })(NetworkMessage);
    Protocol.GameContextCreateErrorMessage = GameContextCreateErrorMessage;
    var GameContextCreateMessage = (function (_super) {
        __extends(GameContextCreateMessage, _super);
        function GameContextCreateMessage() {
            this.context = 1;
            _super.call(this);
        }
        GameContextCreateMessage.prototype.getMessageId = function () {
            return GameContextCreateMessage.ID;
        };
        GameContextCreateMessage.prototype.reset = function () {
            this.context = 1;
        };
        GameContextCreateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextCreateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextCreateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextCreateMessage(param1);
        };
        GameContextCreateMessage.prototype.serializeAs_GameContextCreateMessage = function (param1) {
            param1.writeByte(this.context);
        };
        GameContextCreateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextCreateMessage(param1);
        };
        GameContextCreateMessage.prototype.deserializeAs_GameContextCreateMessage = function (param1) {
            this.context = param1.readByte();
            if (this.context < 0) {
                throw new Error('Forbidden value (' + this.context + ') on element of GameContextCreateMessage.context.');
            }
        };
        GameContextCreateMessage.ID = 200;
        return GameContextCreateMessage;
    })(NetworkMessage);
    Protocol.GameContextCreateMessage = GameContextCreateMessage;
    var GameContextCreateRequestMessage = (function (_super) {
        __extends(GameContextCreateRequestMessage, _super);
        function GameContextCreateRequestMessage() {
            _super.call(this);
        }
        GameContextCreateRequestMessage.prototype.getMessageId = function () {
            return GameContextCreateRequestMessage.ID;
        };
        GameContextCreateRequestMessage.prototype.reset = function () {
        };
        GameContextCreateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextCreateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextCreateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextCreateRequestMessage(param1);
        };
        GameContextCreateRequestMessage.prototype.serializeAs_GameContextCreateRequestMessage = function (param1) {
        };
        GameContextCreateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextCreateRequestMessage(param1);
        };
        GameContextCreateRequestMessage.prototype.deserializeAs_GameContextCreateRequestMessage = function (param1) {
        };
        GameContextCreateRequestMessage.ID = 250;
        return GameContextCreateRequestMessage;
    })(NetworkMessage);
    Protocol.GameContextCreateRequestMessage = GameContextCreateRequestMessage;
    var GameContextDestroyMessage = (function (_super) {
        __extends(GameContextDestroyMessage, _super);
        function GameContextDestroyMessage() {
            _super.call(this);
        }
        GameContextDestroyMessage.prototype.getMessageId = function () {
            return GameContextDestroyMessage.ID;
        };
        GameContextDestroyMessage.prototype.reset = function () {
        };
        GameContextDestroyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextDestroyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextDestroyMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextDestroyMessage(param1);
        };
        GameContextDestroyMessage.prototype.serializeAs_GameContextDestroyMessage = function (param1) {
        };
        GameContextDestroyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextDestroyMessage(param1);
        };
        GameContextDestroyMessage.prototype.deserializeAs_GameContextDestroyMessage = function (param1) {
        };
        GameContextDestroyMessage.ID = 201;
        return GameContextDestroyMessage;
    })(NetworkMessage);
    Protocol.GameContextDestroyMessage = GameContextDestroyMessage;
    var GameContextKickMessage = (function (_super) {
        __extends(GameContextKickMessage, _super);
        function GameContextKickMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GameContextKickMessage.prototype.getMessageId = function () {
            return GameContextKickMessage.ID;
        };
        GameContextKickMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GameContextKickMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextKickMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextKickMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextKickMessage(param1);
        };
        GameContextKickMessage.prototype.serializeAs_GameContextKickMessage = function (param1) {
            param1.writeInt(this.targetId);
        };
        GameContextKickMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextKickMessage(param1);
        };
        GameContextKickMessage.prototype.deserializeAs_GameContextKickMessage = function (param1) {
            this.targetId = param1.readInt();
        };
        GameContextKickMessage.ID = 6081;
        return GameContextKickMessage;
    })(NetworkMessage);
    Protocol.GameContextKickMessage = GameContextKickMessage;
    var GameContextMoveElementMessage = (function (_super) {
        __extends(GameContextMoveElementMessage, _super);
        function GameContextMoveElementMessage() {
            this.movement = new EntityMovementInformations();
            _super.call(this);
        }
        GameContextMoveElementMessage.prototype.getMessageId = function () {
            return GameContextMoveElementMessage.ID;
        };
        GameContextMoveElementMessage.prototype.reset = function () {
            this.movement = new EntityMovementInformations();
        };
        GameContextMoveElementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextMoveElementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextMoveElementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextMoveElementMessage(param1);
        };
        GameContextMoveElementMessage.prototype.serializeAs_GameContextMoveElementMessage = function (param1) {
            this.movement.serializeAs_EntityMovementInformations(param1);
        };
        GameContextMoveElementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextMoveElementMessage(param1);
        };
        GameContextMoveElementMessage.prototype.deserializeAs_GameContextMoveElementMessage = function (param1) {
            this.movement = new EntityMovementInformations();
            this.movement.deserialize(param1);
        };
        GameContextMoveElementMessage.ID = 253;
        return GameContextMoveElementMessage;
    })(NetworkMessage);
    Protocol.GameContextMoveElementMessage = GameContextMoveElementMessage;
    var GameContextMoveMultipleElementsMessage = (function (_super) {
        __extends(GameContextMoveMultipleElementsMessage, _super);
        function GameContextMoveMultipleElementsMessage() {
            this.movements = [];
            _super.call(this);
        }
        GameContextMoveMultipleElementsMessage.prototype.getMessageId = function () {
            return GameContextMoveMultipleElementsMessage.ID;
        };
        GameContextMoveMultipleElementsMessage.prototype.reset = function () {
            this.movements = [];
        };
        GameContextMoveMultipleElementsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextMoveMultipleElementsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextMoveMultipleElementsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextMoveMultipleElementsMessage(param1);
        };
        GameContextMoveMultipleElementsMessage.prototype.serializeAs_GameContextMoveMultipleElementsMessage = function (param1) {
            param1.writeShort(this.movements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.movements.length) {
                (this.movements[_loc2_]).serializeAs_EntityMovementInformations(param1);
                _loc2_++;
            }
        };
        GameContextMoveMultipleElementsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextMoveMultipleElementsMessage(param1);
        };
        GameContextMoveMultipleElementsMessage.prototype.deserializeAs_GameContextMoveMultipleElementsMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new EntityMovementInformations();
                _loc4_.deserialize(param1);
                this.movements.push(_loc4_);
                _loc3_++;
            }
        };
        GameContextMoveMultipleElementsMessage.ID = 254;
        return GameContextMoveMultipleElementsMessage;
    })(NetworkMessage);
    Protocol.GameContextMoveMultipleElementsMessage = GameContextMoveMultipleElementsMessage;
    var GameContextQuitMessage = (function (_super) {
        __extends(GameContextQuitMessage, _super);
        function GameContextQuitMessage() {
            _super.call(this);
        }
        GameContextQuitMessage.prototype.getMessageId = function () {
            return GameContextQuitMessage.ID;
        };
        GameContextQuitMessage.prototype.reset = function () {
        };
        GameContextQuitMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextQuitMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextQuitMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextQuitMessage(param1);
        };
        GameContextQuitMessage.prototype.serializeAs_GameContextQuitMessage = function (param1) {
        };
        GameContextQuitMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextQuitMessage(param1);
        };
        GameContextQuitMessage.prototype.deserializeAs_GameContextQuitMessage = function (param1) {
        };
        GameContextQuitMessage.ID = 255;
        return GameContextQuitMessage;
    })(NetworkMessage);
    Protocol.GameContextQuitMessage = GameContextQuitMessage;
    var GameContextReadyMessage = (function (_super) {
        __extends(GameContextReadyMessage, _super);
        function GameContextReadyMessage() {
            this.mapId = 0;
            _super.call(this);
        }
        GameContextReadyMessage.prototype.getMessageId = function () {
            return GameContextReadyMessage.ID;
        };
        GameContextReadyMessage.prototype.reset = function () {
            this.mapId = 0;
        };
        GameContextReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextReadyMessage(param1);
        };
        GameContextReadyMessage.prototype.serializeAs_GameContextReadyMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        GameContextReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextReadyMessage(param1);
        };
        GameContextReadyMessage.prototype.deserializeAs_GameContextReadyMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of GameContextReadyMessage.mapId.');
            }
        };
        GameContextReadyMessage.ID = 6071;
        return GameContextReadyMessage;
    })(NetworkMessage);
    Protocol.GameContextReadyMessage = GameContextReadyMessage;
    var GameContextRefreshEntityLookMessage = (function (_super) {
        __extends(GameContextRefreshEntityLookMessage, _super);
        function GameContextRefreshEntityLookMessage() {
            this.id = 0;
            this.look = new EntityLook();
            _super.call(this);
        }
        GameContextRefreshEntityLookMessage.prototype.getMessageId = function () {
            return GameContextRefreshEntityLookMessage.ID;
        };
        GameContextRefreshEntityLookMessage.prototype.reset = function () {
            this.id = 0;
            this.look = new EntityLook();
        };
        GameContextRefreshEntityLookMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextRefreshEntityLookMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextRefreshEntityLookMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextRefreshEntityLookMessage(param1);
        };
        GameContextRefreshEntityLookMessage.prototype.serializeAs_GameContextRefreshEntityLookMessage = function (param1) {
            param1.writeInt(this.id);
            this.look.serializeAs_EntityLook(param1);
        };
        GameContextRefreshEntityLookMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextRefreshEntityLookMessage(param1);
        };
        GameContextRefreshEntityLookMessage.prototype.deserializeAs_GameContextRefreshEntityLookMessage = function (param1) {
            this.id = param1.readInt();
            this.look = new EntityLook();
            this.look.deserialize(param1);
        };
        GameContextRefreshEntityLookMessage.ID = 5637;
        return GameContextRefreshEntityLookMessage;
    })(NetworkMessage);
    Protocol.GameContextRefreshEntityLookMessage = GameContextRefreshEntityLookMessage;
    var GameContextRemoveElementMessage = (function (_super) {
        __extends(GameContextRemoveElementMessage, _super);
        function GameContextRemoveElementMessage() {
            this.id = 0;
            _super.call(this);
        }
        GameContextRemoveElementMessage.prototype.getMessageId = function () {
            return GameContextRemoveElementMessage.ID;
        };
        GameContextRemoveElementMessage.prototype.reset = function () {
            this.id = 0;
        };
        GameContextRemoveElementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextRemoveElementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextRemoveElementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextRemoveElementMessage(param1);
        };
        GameContextRemoveElementMessage.prototype.serializeAs_GameContextRemoveElementMessage = function (param1) {
            param1.writeInt(this.id);
        };
        GameContextRemoveElementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextRemoveElementMessage(param1);
        };
        GameContextRemoveElementMessage.prototype.deserializeAs_GameContextRemoveElementMessage = function (param1) {
            this.id = param1.readInt();
        };
        GameContextRemoveElementMessage.ID = 251;
        return GameContextRemoveElementMessage;
    })(NetworkMessage);
    Protocol.GameContextRemoveElementMessage = GameContextRemoveElementMessage;
    var GameContextRemoveElementWithEventMessage = (function (_super) {
        __extends(GameContextRemoveElementWithEventMessage, _super);
        function GameContextRemoveElementWithEventMessage() {
            this.elementEventId = 0;
            _super.call(this);
        }
        GameContextRemoveElementWithEventMessage.prototype.getMessageId = function () {
            return GameContextRemoveElementWithEventMessage.ID;
        };
        GameContextRemoveElementWithEventMessage.prototype.reset = function () {
            this.elementEventId = 0;
        };
        GameContextRemoveElementWithEventMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextRemoveElementWithEventMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextRemoveElementWithEventMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextRemoveElementWithEventMessage(param1);
        };
        GameContextRemoveElementWithEventMessage.prototype.serializeAs_GameContextRemoveElementWithEventMessage = function (param1) {
            _super.prototype.serializeAs_GameContextRemoveElementMessage.call(this, param1);
            if (this.elementEventId < 0) {
                throw new Error('Forbidden value (' + this.elementEventId + ') on element elementEventId.');
            }
            param1.writeByte(this.elementEventId);
        };
        GameContextRemoveElementWithEventMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextRemoveElementWithEventMessage(param1);
        };
        GameContextRemoveElementWithEventMessage.prototype.deserializeAs_GameContextRemoveElementWithEventMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.elementEventId = param1.readByte();
            if (this.elementEventId < 0) {
                throw new Error('Forbidden value (' + this.elementEventId + ') on element of GameContextRemoveElementWithEventMessage.elementEventId.');
            }
        };
        GameContextRemoveElementWithEventMessage.ID = 6412;
        return GameContextRemoveElementWithEventMessage;
    })(GameContextRemoveElementMessage);
    Protocol.GameContextRemoveElementWithEventMessage = GameContextRemoveElementWithEventMessage;
    var GameContextRemoveMultipleElementsMessage = (function (_super) {
        __extends(GameContextRemoveMultipleElementsMessage, _super);
        function GameContextRemoveMultipleElementsMessage() {
            this.id = [];
            _super.call(this);
        }
        GameContextRemoveMultipleElementsMessage.prototype.getMessageId = function () {
            return GameContextRemoveMultipleElementsMessage.ID;
        };
        GameContextRemoveMultipleElementsMessage.prototype.reset = function () {
            this.id = [];
        };
        GameContextRemoveMultipleElementsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextRemoveMultipleElementsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextRemoveMultipleElementsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextRemoveMultipleElementsMessage(param1);
        };
        GameContextRemoveMultipleElementsMessage.prototype.serializeAs_GameContextRemoveMultipleElementsMessage = function (param1) {
            param1.writeShort(this.id.length);
            var _loc2_ = 0;
            while (_loc2_ < this.id.length) {
                param1.writeInt(this.id[_loc2_]);
                _loc2_++;
            }
        };
        GameContextRemoveMultipleElementsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextRemoveMultipleElementsMessage(param1);
        };
        GameContextRemoveMultipleElementsMessage.prototype.deserializeAs_GameContextRemoveMultipleElementsMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.id.push(_loc4_);
                _loc3_++;
            }
        };
        GameContextRemoveMultipleElementsMessage.ID = 252;
        return GameContextRemoveMultipleElementsMessage;
    })(NetworkMessage);
    Protocol.GameContextRemoveMultipleElementsMessage = GameContextRemoveMultipleElementsMessage;
    var GameContextRemoveMultipleElementsWithEventsMessage = (function (_super) {
        __extends(GameContextRemoveMultipleElementsWithEventsMessage, _super);
        function GameContextRemoveMultipleElementsWithEventsMessage() {
            this.elementEventIds = [];
            _super.call(this);
        }
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.getMessageId = function () {
            return GameContextRemoveMultipleElementsWithEventsMessage.ID;
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.reset = function () {
            this.elementEventIds = [];
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameContextRemoveMultipleElementsWithEventsMessage(param1);
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.serializeAs_GameContextRemoveMultipleElementsWithEventsMessage = function (param1) {
            _super.prototype.serializeAs_GameContextRemoveMultipleElementsMessage.call(this, param1);
            param1.writeShort(this.elementEventIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.elementEventIds.length) {
                if (this.elementEventIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.elementEventIds[_loc2_] + ') on element 1 (starting at 1) of elementEventIds.');
                }
                param1.writeByte(this.elementEventIds[_loc2_]);
                _loc2_++;
            }
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextRemoveMultipleElementsWithEventsMessage(param1);
        };
        GameContextRemoveMultipleElementsWithEventsMessage.prototype.deserializeAs_GameContextRemoveMultipleElementsWithEventsMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of elementEventIds.');
                }
                this.elementEventIds.push(_loc4_);
                _loc3_++;
            }
        };
        GameContextRemoveMultipleElementsWithEventsMessage.ID = 6416;
        return GameContextRemoveMultipleElementsWithEventsMessage;
    })(GameContextRemoveMultipleElementsMessage);
    Protocol.GameContextRemoveMultipleElementsWithEventsMessage = GameContextRemoveMultipleElementsWithEventsMessage;
    var GameEntitiesDispositionMessage = (function (_super) {
        __extends(GameEntitiesDispositionMessage, _super);
        function GameEntitiesDispositionMessage() {
            this.dispositions = [];
            _super.call(this);
        }
        GameEntitiesDispositionMessage.prototype.getMessageId = function () {
            return GameEntitiesDispositionMessage.ID;
        };
        GameEntitiesDispositionMessage.prototype.reset = function () {
            this.dispositions = [];
        };
        GameEntitiesDispositionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameEntitiesDispositionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameEntitiesDispositionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameEntitiesDispositionMessage(param1);
        };
        GameEntitiesDispositionMessage.prototype.serializeAs_GameEntitiesDispositionMessage = function (param1) {
            param1.writeShort(this.dispositions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dispositions.length) {
                (this.dispositions[_loc2_]).serializeAs_IdentifiedEntityDispositionInformations(param1);
                _loc2_++;
            }
        };
        GameEntitiesDispositionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameEntitiesDispositionMessage(param1);
        };
        GameEntitiesDispositionMessage.prototype.deserializeAs_GameEntitiesDispositionMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new IdentifiedEntityDispositionInformations();
                _loc4_.deserialize(param1);
                this.dispositions.push(_loc4_);
                _loc3_++;
            }
        };
        GameEntitiesDispositionMessage.ID = 5696;
        return GameEntitiesDispositionMessage;
    })(NetworkMessage);
    Protocol.GameEntitiesDispositionMessage = GameEntitiesDispositionMessage;
    var GameEntityDispositionErrorMessage = (function (_super) {
        __extends(GameEntityDispositionErrorMessage, _super);
        function GameEntityDispositionErrorMessage() {
            _super.call(this);
        }
        GameEntityDispositionErrorMessage.prototype.getMessageId = function () {
            return GameEntityDispositionErrorMessage.ID;
        };
        GameEntityDispositionErrorMessage.prototype.reset = function () {
        };
        GameEntityDispositionErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameEntityDispositionErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameEntityDispositionErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameEntityDispositionErrorMessage(param1);
        };
        GameEntityDispositionErrorMessage.prototype.serializeAs_GameEntityDispositionErrorMessage = function (param1) {
        };
        GameEntityDispositionErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameEntityDispositionErrorMessage(param1);
        };
        GameEntityDispositionErrorMessage.prototype.deserializeAs_GameEntityDispositionErrorMessage = function (param1) {
        };
        GameEntityDispositionErrorMessage.ID = 5695;
        return GameEntityDispositionErrorMessage;
    })(NetworkMessage);
    Protocol.GameEntityDispositionErrorMessage = GameEntityDispositionErrorMessage;
    var GameEntityDispositionMessage = (function (_super) {
        __extends(GameEntityDispositionMessage, _super);
        function GameEntityDispositionMessage() {
            this.disposition = new IdentifiedEntityDispositionInformations();
            _super.call(this);
        }
        GameEntityDispositionMessage.prototype.getMessageId = function () {
            return GameEntityDispositionMessage.ID;
        };
        GameEntityDispositionMessage.prototype.reset = function () {
            this.disposition = new IdentifiedEntityDispositionInformations();
        };
        GameEntityDispositionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameEntityDispositionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameEntityDispositionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameEntityDispositionMessage(param1);
        };
        GameEntityDispositionMessage.prototype.serializeAs_GameEntityDispositionMessage = function (param1) {
            this.disposition.serializeAs_IdentifiedEntityDispositionInformations(param1);
        };
        GameEntityDispositionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameEntityDispositionMessage(param1);
        };
        GameEntityDispositionMessage.prototype.deserializeAs_GameEntityDispositionMessage = function (param1) {
            this.disposition = new IdentifiedEntityDispositionInformations();
            this.disposition.deserialize(param1);
        };
        GameEntityDispositionMessage.ID = 5693;
        return GameEntityDispositionMessage;
    })(NetworkMessage);
    Protocol.GameEntityDispositionMessage = GameEntityDispositionMessage;
    var GameMapChangeOrientationMessage = (function (_super) {
        __extends(GameMapChangeOrientationMessage, _super);
        function GameMapChangeOrientationMessage() {
            this.orientation = new ActorOrientation();
            _super.call(this);
        }
        GameMapChangeOrientationMessage.prototype.getMessageId = function () {
            return GameMapChangeOrientationMessage.ID;
        };
        GameMapChangeOrientationMessage.prototype.reset = function () {
            this.orientation = new ActorOrientation();
        };
        GameMapChangeOrientationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapChangeOrientationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapChangeOrientationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapChangeOrientationMessage(param1);
        };
        GameMapChangeOrientationMessage.prototype.serializeAs_GameMapChangeOrientationMessage = function (param1) {
            this.orientation.serializeAs_ActorOrientation(param1);
        };
        GameMapChangeOrientationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapChangeOrientationMessage(param1);
        };
        GameMapChangeOrientationMessage.prototype.deserializeAs_GameMapChangeOrientationMessage = function (param1) {
            this.orientation = new ActorOrientation();
            this.orientation.deserialize(param1);
        };
        GameMapChangeOrientationMessage.ID = 946;
        return GameMapChangeOrientationMessage;
    })(NetworkMessage);
    Protocol.GameMapChangeOrientationMessage = GameMapChangeOrientationMessage;
    var GameMapChangeOrientationRequestMessage = (function (_super) {
        __extends(GameMapChangeOrientationRequestMessage, _super);
        function GameMapChangeOrientationRequestMessage() {
            this.direction = 1;
            _super.call(this);
        }
        GameMapChangeOrientationRequestMessage.prototype.getMessageId = function () {
            return GameMapChangeOrientationRequestMessage.ID;
        };
        GameMapChangeOrientationRequestMessage.prototype.reset = function () {
            this.direction = 1;
        };
        GameMapChangeOrientationRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapChangeOrientationRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapChangeOrientationRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapChangeOrientationRequestMessage(param1);
        };
        GameMapChangeOrientationRequestMessage.prototype.serializeAs_GameMapChangeOrientationRequestMessage = function (param1) {
            param1.writeByte(this.direction);
        };
        GameMapChangeOrientationRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapChangeOrientationRequestMessage(param1);
        };
        GameMapChangeOrientationRequestMessage.prototype.deserializeAs_GameMapChangeOrientationRequestMessage = function (param1) {
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of GameMapChangeOrientationRequestMessage.direction.');
            }
        };
        GameMapChangeOrientationRequestMessage.ID = 945;
        return GameMapChangeOrientationRequestMessage;
    })(NetworkMessage);
    Protocol.GameMapChangeOrientationRequestMessage = GameMapChangeOrientationRequestMessage;
    var GameMapChangeOrientationsMessage = (function (_super) {
        __extends(GameMapChangeOrientationsMessage, _super);
        function GameMapChangeOrientationsMessage() {
            this.orientations = [];
            _super.call(this);
        }
        GameMapChangeOrientationsMessage.prototype.getMessageId = function () {
            return GameMapChangeOrientationsMessage.ID;
        };
        GameMapChangeOrientationsMessage.prototype.reset = function () {
            this.orientations = [];
        };
        GameMapChangeOrientationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapChangeOrientationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapChangeOrientationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapChangeOrientationsMessage(param1);
        };
        GameMapChangeOrientationsMessage.prototype.serializeAs_GameMapChangeOrientationsMessage = function (param1) {
            param1.writeShort(this.orientations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.orientations.length) {
                (this.orientations[_loc2_]).serializeAs_ActorOrientation(param1);
                _loc2_++;
            }
        };
        GameMapChangeOrientationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapChangeOrientationsMessage(param1);
        };
        GameMapChangeOrientationsMessage.prototype.deserializeAs_GameMapChangeOrientationsMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ActorOrientation();
                _loc4_.deserialize(param1);
                this.orientations.push(_loc4_);
                _loc3_++;
            }
        };
        GameMapChangeOrientationsMessage.ID = 6155;
        return GameMapChangeOrientationsMessage;
    })(NetworkMessage);
    Protocol.GameMapChangeOrientationsMessage = GameMapChangeOrientationsMessage;
    var GameMapMovementCancelMessage = (function (_super) {
        __extends(GameMapMovementCancelMessage, _super);
        function GameMapMovementCancelMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        GameMapMovementCancelMessage.prototype.getMessageId = function () {
            return GameMapMovementCancelMessage.ID;
        };
        GameMapMovementCancelMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        GameMapMovementCancelMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapMovementCancelMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapMovementCancelMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapMovementCancelMessage(param1);
        };
        GameMapMovementCancelMessage.prototype.serializeAs_GameMapMovementCancelMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        GameMapMovementCancelMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapMovementCancelMessage(param1);
        };
        GameMapMovementCancelMessage.prototype.deserializeAs_GameMapMovementCancelMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameMapMovementCancelMessage.cellId.');
            }
        };
        GameMapMovementCancelMessage.ID = 953;
        return GameMapMovementCancelMessage;
    })(NetworkMessage);
    Protocol.GameMapMovementCancelMessage = GameMapMovementCancelMessage;
    var GameMapMovementConfirmMessage = (function (_super) {
        __extends(GameMapMovementConfirmMessage, _super);
        function GameMapMovementConfirmMessage() {
            _super.call(this);
        }
        GameMapMovementConfirmMessage.prototype.getMessageId = function () {
            return GameMapMovementConfirmMessage.ID;
        };
        GameMapMovementConfirmMessage.prototype.reset = function () {
        };
        GameMapMovementConfirmMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapMovementConfirmMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapMovementConfirmMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapMovementConfirmMessage(param1);
        };
        GameMapMovementConfirmMessage.prototype.serializeAs_GameMapMovementConfirmMessage = function (param1) {
        };
        GameMapMovementConfirmMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapMovementConfirmMessage(param1);
        };
        GameMapMovementConfirmMessage.prototype.deserializeAs_GameMapMovementConfirmMessage = function (param1) {
        };
        GameMapMovementConfirmMessage.ID = 952;
        return GameMapMovementConfirmMessage;
    })(NetworkMessage);
    Protocol.GameMapMovementConfirmMessage = GameMapMovementConfirmMessage;
    var GameMapMovementMessage = (function (_super) {
        __extends(GameMapMovementMessage, _super);
        function GameMapMovementMessage() {
            this.keyMovements = [];
            this.actorId = 0;
            _super.call(this);
        }
        GameMapMovementMessage.prototype.getMessageId = function () {
            return GameMapMovementMessage.ID;
        };
        GameMapMovementMessage.prototype.reset = function () {
            this.keyMovements = [];
            this.actorId = 0;
        };
        GameMapMovementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapMovementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapMovementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapMovementMessage(param1);
        };
        GameMapMovementMessage.prototype.serializeAs_GameMapMovementMessage = function (param1) {
            param1.writeShort(this.keyMovements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.keyMovements.length) {
                if (this.keyMovements[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.keyMovements[_loc2_] + ') on element 1 (starting at 1) of keyMovements.');
                }
                param1.writeShort(this.keyMovements[_loc2_]);
                _loc2_++;
            }
            param1.writeInt(this.actorId);
        };
        GameMapMovementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapMovementMessage(param1);
        };
        GameMapMovementMessage.prototype.deserializeAs_GameMapMovementMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of keyMovements.');
                }
                this.keyMovements.push(_loc4_);
                _loc3_++;
            }
            this.actorId = param1.readInt();
        };
        GameMapMovementMessage.ID = 951;
        return GameMapMovementMessage;
    })(NetworkMessage);
    Protocol.GameMapMovementMessage = GameMapMovementMessage;
    var GameMapMovementRequestMessage = (function (_super) {
        __extends(GameMapMovementRequestMessage, _super);
        function GameMapMovementRequestMessage() {
            this.keyMovements = [];
            this.mapId = 0;
            _super.call(this);
        }
        GameMapMovementRequestMessage.prototype.getMessageId = function () {
            return GameMapMovementRequestMessage.ID;
        };
        GameMapMovementRequestMessage.prototype.reset = function () {
            this.keyMovements = [];
            this.mapId = 0;
        };
        GameMapMovementRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapMovementRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapMovementRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapMovementRequestMessage(param1);
        };
        GameMapMovementRequestMessage.prototype.serializeAs_GameMapMovementRequestMessage = function (param1) {
            param1.writeShort(this.keyMovements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.keyMovements.length) {
                if (this.keyMovements[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.keyMovements[_loc2_] + ') on element 1 (starting at 1) of keyMovements.');
                }
                param1.writeShort(this.keyMovements[_loc2_]);
                _loc2_++;
            }
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        GameMapMovementRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapMovementRequestMessage(param1);
        };
        GameMapMovementRequestMessage.prototype.deserializeAs_GameMapMovementRequestMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of keyMovements.');
                }
                this.keyMovements.push(_loc4_);
                _loc3_++;
            }
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of GameMapMovementRequestMessage.mapId.');
            }
        };
        GameMapMovementRequestMessage.ID = 950;
        return GameMapMovementRequestMessage;
    })(NetworkMessage);
    Protocol.GameMapMovementRequestMessage = GameMapMovementRequestMessage;
    var GameMapNoMovementMessage = (function (_super) {
        __extends(GameMapNoMovementMessage, _super);
        function GameMapNoMovementMessage() {
            _super.call(this);
        }
        GameMapNoMovementMessage.prototype.getMessageId = function () {
            return GameMapNoMovementMessage.ID;
        };
        GameMapNoMovementMessage.prototype.reset = function () {
        };
        GameMapNoMovementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameMapNoMovementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameMapNoMovementMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameMapNoMovementMessage(param1);
        };
        GameMapNoMovementMessage.prototype.serializeAs_GameMapNoMovementMessage = function (param1) {
        };
        GameMapNoMovementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameMapNoMovementMessage(param1);
        };
        GameMapNoMovementMessage.prototype.deserializeAs_GameMapNoMovementMessage = function (param1) {
        };
        GameMapNoMovementMessage.ID = 954;
        return GameMapNoMovementMessage;
    })(NetworkMessage);
    Protocol.GameMapNoMovementMessage = GameMapNoMovementMessage;
    var ShowCellMessage = (function (_super) {
        __extends(ShowCellMessage, _super);
        function ShowCellMessage() {
            this.sourceId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        ShowCellMessage.prototype.getMessageId = function () {
            return ShowCellMessage.ID;
        };
        ShowCellMessage.prototype.reset = function () {
            this.sourceId = 0;
            this.cellId = 0;
        };
        ShowCellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShowCellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShowCellMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShowCellMessage(param1);
        };
        ShowCellMessage.prototype.serializeAs_ShowCellMessage = function (param1) {
            param1.writeInt(this.sourceId);
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        ShowCellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShowCellMessage(param1);
        };
        ShowCellMessage.prototype.deserializeAs_ShowCellMessage = function (param1) {
            this.sourceId = param1.readInt();
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of ShowCellMessage.cellId.');
            }
        };
        ShowCellMessage.ID = 5612;
        return ShowCellMessage;
    })(NetworkMessage);
    Protocol.ShowCellMessage = ShowCellMessage;
    var ShowCellRequestMessage = (function (_super) {
        __extends(ShowCellRequestMessage, _super);
        function ShowCellRequestMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        ShowCellRequestMessage.prototype.getMessageId = function () {
            return ShowCellRequestMessage.ID;
        };
        ShowCellRequestMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        ShowCellRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShowCellRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShowCellRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShowCellRequestMessage(param1);
        };
        ShowCellRequestMessage.prototype.serializeAs_ShowCellRequestMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        ShowCellRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShowCellRequestMessage(param1);
        };
        ShowCellRequestMessage.prototype.deserializeAs_ShowCellRequestMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of ShowCellRequestMessage.cellId.');
            }
        };
        ShowCellRequestMessage.ID = 5611;
        return ShowCellRequestMessage;
    })(NetworkMessage);
    Protocol.ShowCellRequestMessage = ShowCellRequestMessage;
    var ShowCellSpectatorMessage = (function (_super) {
        __extends(ShowCellSpectatorMessage, _super);
        function ShowCellSpectatorMessage() {
            this.playerName = '';
            _super.call(this);
        }
        ShowCellSpectatorMessage.prototype.getMessageId = function () {
            return ShowCellSpectatorMessage.ID;
        };
        ShowCellSpectatorMessage.prototype.reset = function () {
            this.playerName = '';
        };
        ShowCellSpectatorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShowCellSpectatorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShowCellSpectatorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShowCellSpectatorMessage(param1);
        };
        ShowCellSpectatorMessage.prototype.serializeAs_ShowCellSpectatorMessage = function (param1) {
            _super.prototype.serializeAs_ShowCellMessage.call(this, param1);
            param1.writeUTF(this.playerName);
        };
        ShowCellSpectatorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShowCellSpectatorMessage(param1);
        };
        ShowCellSpectatorMessage.prototype.deserializeAs_ShowCellSpectatorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerName = param1.readUTF();
        };
        ShowCellSpectatorMessage.ID = 6158;
        return ShowCellSpectatorMessage;
    })(ShowCellMessage);
    Protocol.ShowCellSpectatorMessage = ShowCellSpectatorMessage;
    var DisplayNumericalValuePaddockMessage = (function (_super) {
        __extends(DisplayNumericalValuePaddockMessage, _super);
        function DisplayNumericalValuePaddockMessage() {
            this.rideId = 0;
            this.value = 0;
            this.type = 0;
            _super.call(this);
        }
        DisplayNumericalValuePaddockMessage.prototype.getMessageId = function () {
            return DisplayNumericalValuePaddockMessage.ID;
        };
        DisplayNumericalValuePaddockMessage.prototype.reset = function () {
            this.rideId = 0;
            this.value = 0;
            this.type = 0;
        };
        DisplayNumericalValuePaddockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DisplayNumericalValuePaddockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DisplayNumericalValuePaddockMessage.prototype.serialize = function (param1) {
            this.serializeAs_DisplayNumericalValuePaddockMessage(param1);
        };
        DisplayNumericalValuePaddockMessage.prototype.serializeAs_DisplayNumericalValuePaddockMessage = function (param1) {
            param1.writeInt(this.rideId);
            param1.writeInt(this.value);
            param1.writeByte(this.type);
        };
        DisplayNumericalValuePaddockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DisplayNumericalValuePaddockMessage(param1);
        };
        DisplayNumericalValuePaddockMessage.prototype.deserializeAs_DisplayNumericalValuePaddockMessage = function (param1) {
            this.rideId = param1.readInt();
            this.value = param1.readInt();
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of DisplayNumericalValuePaddockMessage.type.');
            }
        };
        DisplayNumericalValuePaddockMessage.ID = 6563;
        return DisplayNumericalValuePaddockMessage;
    })(NetworkMessage);
    Protocol.DisplayNumericalValuePaddockMessage = DisplayNumericalValuePaddockMessage;
    var DungeonKeyRingMessage = (function (_super) {
        __extends(DungeonKeyRingMessage, _super);
        function DungeonKeyRingMessage() {
            this.availables = [];
            this.unavailables = [];
            _super.call(this);
        }
        DungeonKeyRingMessage.prototype.getMessageId = function () {
            return DungeonKeyRingMessage.ID;
        };
        DungeonKeyRingMessage.prototype.reset = function () {
            this.availables = [];
            this.unavailables = [];
        };
        DungeonKeyRingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonKeyRingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonKeyRingMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonKeyRingMessage(param1);
        };
        DungeonKeyRingMessage.prototype.serializeAs_DungeonKeyRingMessage = function (param1) {
            param1.writeShort(this.availables.length);
            var _loc2_ = 0;
            while (_loc2_ < this.availables.length) {
                if (this.availables[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.availables[_loc2_] + ') on element 1 (starting at 1) of availables.');
                }
                param1.writeVarShort(this.availables[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.unavailables.length);
            var _loc3_ = 0;
            while (_loc3_ < this.unavailables.length) {
                if (this.unavailables[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.unavailables[_loc3_] + ') on element 2 (starting at 1) of unavailables.');
                }
                param1.writeVarShort(this.unavailables[_loc3_]);
                _loc3_++;
            }
        };
        DungeonKeyRingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonKeyRingMessage(param1);
        };
        DungeonKeyRingMessage.prototype.deserializeAs_DungeonKeyRingMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of availables.');
                }
                this.availables.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of unavailables.');
                }
                this.unavailables.push(_loc7_);
                _loc5_++;
            }
        };
        DungeonKeyRingMessage.ID = 6299;
        return DungeonKeyRingMessage;
    })(NetworkMessage);
    Protocol.DungeonKeyRingMessage = DungeonKeyRingMessage;
    var DungeonKeyRingUpdateMessage = (function (_super) {
        __extends(DungeonKeyRingUpdateMessage, _super);
        function DungeonKeyRingUpdateMessage() {
            this.dungeonId = 0;
            this.available = false;
            _super.call(this);
        }
        DungeonKeyRingUpdateMessage.prototype.getMessageId = function () {
            return DungeonKeyRingUpdateMessage.ID;
        };
        DungeonKeyRingUpdateMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.available = false;
        };
        DungeonKeyRingUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonKeyRingUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonKeyRingUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonKeyRingUpdateMessage(param1);
        };
        DungeonKeyRingUpdateMessage.prototype.serializeAs_DungeonKeyRingUpdateMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            param1.writeBoolean(this.available);
        };
        DungeonKeyRingUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonKeyRingUpdateMessage(param1);
        };
        DungeonKeyRingUpdateMessage.prototype.deserializeAs_DungeonKeyRingUpdateMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of DungeonKeyRingUpdateMessage.dungeonId.');
            }
            this.available = param1.readBoolean();
        };
        DungeonKeyRingUpdateMessage.ID = 6296;
        return DungeonKeyRingUpdateMessage;
    })(NetworkMessage);
    Protocol.DungeonKeyRingUpdateMessage = DungeonKeyRingUpdateMessage;
    var GameFightEndMessage = (function (_super) {
        __extends(GameFightEndMessage, _super);
        function GameFightEndMessage() {
            this.duration = 0;
            this.ageBonus = 0;
            this.lootShareLimitMalus = 0;
            this.results = [];
            this.namedPartyTeamsOutcomes = [];
            _super.call(this);
        }
        GameFightEndMessage.prototype.getMessageId = function () {
            return GameFightEndMessage.ID;
        };
        GameFightEndMessage.prototype.reset = function () {
            this.duration = 0;
            this.ageBonus = 0;
            this.lootShareLimitMalus = 0;
            this.results = [];
            this.namedPartyTeamsOutcomes = [];
        };
        GameFightEndMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightEndMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightEndMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightEndMessage(param1);
        };
        GameFightEndMessage.prototype.serializeAs_GameFightEndMessage = function (param1) {
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element duration.');
            }
            param1.writeInt(this.duration);
            param1.writeShort(this.ageBonus);
            param1.writeShort(this.lootShareLimitMalus);
            param1.writeShort(this.results.length);
            var _loc2_ = 0;
            while (_loc2_ < this.results.length) {
                param1.writeShort((this.results[_loc2_]).getTypeId());
                (this.results[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.namedPartyTeamsOutcomes.length);
            var _loc3_ = 0;
            while (_loc3_ < this.namedPartyTeamsOutcomes.length) {
                (this.namedPartyTeamsOutcomes[_loc3_]).serializeAs_NamedPartyTeamWithOutcome(param1);
                _loc3_++;
            }
        };
        GameFightEndMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightEndMessage(param1);
        };
        GameFightEndMessage.prototype.deserializeAs_GameFightEndMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = null;
            this.duration = param1.readInt();
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element of GameFightEndMessage.duration.');
            }
            this.ageBonus = param1.readShort();
            this.lootShareLimitMalus = param1.readShort();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(FightResultListEntry, _loc6_);
                _loc7_.deserialize(param1);
                this.results.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = new NamedPartyTeamWithOutcome();
                _loc8_.deserialize(param1);
                this.namedPartyTeamsOutcomes.push(_loc8_);
                _loc5_++;
            }
        };
        GameFightEndMessage.ID = 720;
        return GameFightEndMessage;
    })(NetworkMessage);
    Protocol.GameFightEndMessage = GameFightEndMessage;
    var GameFightHumanReadyStateMessage = (function (_super) {
        __extends(GameFightHumanReadyStateMessage, _super);
        function GameFightHumanReadyStateMessage() {
            this.characterId = 0;
            this.isReady = false;
            _super.call(this);
        }
        GameFightHumanReadyStateMessage.prototype.getMessageId = function () {
            return GameFightHumanReadyStateMessage.ID;
        };
        GameFightHumanReadyStateMessage.prototype.reset = function () {
            this.characterId = 0;
            this.isReady = false;
        };
        GameFightHumanReadyStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightHumanReadyStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightHumanReadyStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightHumanReadyStateMessage(param1);
        };
        GameFightHumanReadyStateMessage.prototype.serializeAs_GameFightHumanReadyStateMessage = function (param1) {
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeVarInt(this.characterId);
            param1.writeBoolean(this.isReady);
        };
        GameFightHumanReadyStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightHumanReadyStateMessage(param1);
        };
        GameFightHumanReadyStateMessage.prototype.deserializeAs_GameFightHumanReadyStateMessage = function (param1) {
            this.characterId = param1.readVarUhInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of GameFightHumanReadyStateMessage.characterId.');
            }
            this.isReady = param1.readBoolean();
        };
        GameFightHumanReadyStateMessage.ID = 740;
        return GameFightHumanReadyStateMessage;
    })(NetworkMessage);
    Protocol.GameFightHumanReadyStateMessage = GameFightHumanReadyStateMessage;
    var GameFightJoinMessage = (function (_super) {
        __extends(GameFightJoinMessage, _super);
        function GameFightJoinMessage() {
            this.canBeCancelled = false;
            this.canSayReady = false;
            this.isFightStarted = false;
            this.timeMaxBeforeFightStart = 0;
            this.fightType = 0;
            _super.call(this);
        }
        GameFightJoinMessage.prototype.getMessageId = function () {
            return GameFightJoinMessage.ID;
        };
        GameFightJoinMessage.prototype.reset = function () {
            this.canBeCancelled = false;
            this.canSayReady = false;
            this.isFightStarted = false;
            this.timeMaxBeforeFightStart = 0;
            this.fightType = 0;
        };
        GameFightJoinMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightJoinMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightJoinMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightJoinMessage(param1);
        };
        GameFightJoinMessage.prototype.serializeAs_GameFightJoinMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.canBeCancelled);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.canSayReady);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.isFightStarted);
            param1.writeByte(_loc2_);
            if (this.timeMaxBeforeFightStart < 0) {
                throw new Error('Forbidden value (' + this.timeMaxBeforeFightStart + ') on element timeMaxBeforeFightStart.');
            }
            param1.writeShort(this.timeMaxBeforeFightStart);
            param1.writeByte(this.fightType);
        };
        GameFightJoinMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightJoinMessage(param1);
        };
        GameFightJoinMessage.prototype.deserializeAs_GameFightJoinMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.canBeCancelled = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.canSayReady = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.isFightStarted = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.timeMaxBeforeFightStart = param1.readShort();
            if (this.timeMaxBeforeFightStart < 0) {
                throw new Error('Forbidden value (' + this.timeMaxBeforeFightStart + ') on element of GameFightJoinMessage.timeMaxBeforeFightStart.');
            }
            this.fightType = param1.readByte();
            if (this.fightType < 0) {
                throw new Error('Forbidden value (' + this.fightType + ') on element of GameFightJoinMessage.fightType.');
            }
        };
        GameFightJoinMessage.ID = 702;
        return GameFightJoinMessage;
    })(NetworkMessage);
    Protocol.GameFightJoinMessage = GameFightJoinMessage;
    var GameFightJoinRequestMessage = (function (_super) {
        __extends(GameFightJoinRequestMessage, _super);
        function GameFightJoinRequestMessage() {
            this.fighterId = 0;
            this.fightId = 0;
            _super.call(this);
        }
        GameFightJoinRequestMessage.prototype.getMessageId = function () {
            return GameFightJoinRequestMessage.ID;
        };
        GameFightJoinRequestMessage.prototype.reset = function () {
            this.fighterId = 0;
            this.fightId = 0;
        };
        GameFightJoinRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightJoinRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightJoinRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightJoinRequestMessage(param1);
        };
        GameFightJoinRequestMessage.prototype.serializeAs_GameFightJoinRequestMessage = function (param1) {
            param1.writeInt(this.fighterId);
            param1.writeInt(this.fightId);
        };
        GameFightJoinRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightJoinRequestMessage(param1);
        };
        GameFightJoinRequestMessage.prototype.deserializeAs_GameFightJoinRequestMessage = function (param1) {
            this.fighterId = param1.readInt();
            this.fightId = param1.readInt();
        };
        GameFightJoinRequestMessage.ID = 701;
        return GameFightJoinRequestMessage;
    })(NetworkMessage);
    Protocol.GameFightJoinRequestMessage = GameFightJoinRequestMessage;
    var GameFightLeaveMessage = (function (_super) {
        __extends(GameFightLeaveMessage, _super);
        function GameFightLeaveMessage() {
            this.charId = 0;
            _super.call(this);
        }
        GameFightLeaveMessage.prototype.getMessageId = function () {
            return GameFightLeaveMessage.ID;
        };
        GameFightLeaveMessage.prototype.reset = function () {
            this.charId = 0;
        };
        GameFightLeaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightLeaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightLeaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightLeaveMessage(param1);
        };
        GameFightLeaveMessage.prototype.serializeAs_GameFightLeaveMessage = function (param1) {
            param1.writeInt(this.charId);
        };
        GameFightLeaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightLeaveMessage(param1);
        };
        GameFightLeaveMessage.prototype.deserializeAs_GameFightLeaveMessage = function (param1) {
            this.charId = param1.readInt();
        };
        GameFightLeaveMessage.ID = 721;
        return GameFightLeaveMessage;
    })(NetworkMessage);
    Protocol.GameFightLeaveMessage = GameFightLeaveMessage;
    var GameFightNewRoundMessage = (function (_super) {
        __extends(GameFightNewRoundMessage, _super);
        function GameFightNewRoundMessage() {
            this.roundNumber = 0;
            _super.call(this);
        }
        GameFightNewRoundMessage.prototype.getMessageId = function () {
            return GameFightNewRoundMessage.ID;
        };
        GameFightNewRoundMessage.prototype.reset = function () {
            this.roundNumber = 0;
        };
        GameFightNewRoundMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightNewRoundMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightNewRoundMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightNewRoundMessage(param1);
        };
        GameFightNewRoundMessage.prototype.serializeAs_GameFightNewRoundMessage = function (param1) {
            if (this.roundNumber < 0) {
                throw new Error('Forbidden value (' + this.roundNumber + ') on element roundNumber.');
            }
            param1.writeVarInt(this.roundNumber);
        };
        GameFightNewRoundMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightNewRoundMessage(param1);
        };
        GameFightNewRoundMessage.prototype.deserializeAs_GameFightNewRoundMessage = function (param1) {
            this.roundNumber = param1.readVarUhInt();
            if (this.roundNumber < 0) {
                throw new Error('Forbidden value (' + this.roundNumber + ') on element of GameFightNewRoundMessage.roundNumber.');
            }
        };
        GameFightNewRoundMessage.ID = 6239;
        return GameFightNewRoundMessage;
    })(NetworkMessage);
    Protocol.GameFightNewRoundMessage = GameFightNewRoundMessage;
    var GameFightNewWaveMessage = (function (_super) {
        __extends(GameFightNewWaveMessage, _super);
        function GameFightNewWaveMessage() {
            this.id = 0;
            this.teamId = 2;
            this.nbTurnBeforeNextWave = 0;
            _super.call(this);
        }
        GameFightNewWaveMessage.prototype.getMessageId = function () {
            return GameFightNewWaveMessage.ID;
        };
        GameFightNewWaveMessage.prototype.reset = function () {
            this.id = 0;
            this.teamId = 2;
            this.nbTurnBeforeNextWave = 0;
        };
        GameFightNewWaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightNewWaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightNewWaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightNewWaveMessage(param1);
        };
        GameFightNewWaveMessage.prototype.serializeAs_GameFightNewWaveMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeByte(this.id);
            param1.writeByte(this.teamId);
            param1.writeShort(this.nbTurnBeforeNextWave);
        };
        GameFightNewWaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightNewWaveMessage(param1);
        };
        GameFightNewWaveMessage.prototype.deserializeAs_GameFightNewWaveMessage = function (param1) {
            this.id = param1.readByte();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of GameFightNewWaveMessage.id.');
            }
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of GameFightNewWaveMessage.teamId.');
            }
            this.nbTurnBeforeNextWave = param1.readShort();
        };
        GameFightNewWaveMessage.ID = 6490;
        return GameFightNewWaveMessage;
    })(NetworkMessage);
    Protocol.GameFightNewWaveMessage = GameFightNewWaveMessage;
    var GameFightOptionStateUpdateMessage = (function (_super) {
        __extends(GameFightOptionStateUpdateMessage, _super);
        function GameFightOptionStateUpdateMessage() {
            this.fightId = 0;
            this.teamId = 2;
            this.option = 3;
            this.state = false;
            _super.call(this);
        }
        GameFightOptionStateUpdateMessage.prototype.getMessageId = function () {
            return GameFightOptionStateUpdateMessage.ID;
        };
        GameFightOptionStateUpdateMessage.prototype.reset = function () {
            this.fightId = 0;
            this.teamId = 2;
            this.option = 3;
            this.state = false;
        };
        GameFightOptionStateUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightOptionStateUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightOptionStateUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightOptionStateUpdateMessage(param1);
        };
        GameFightOptionStateUpdateMessage.prototype.serializeAs_GameFightOptionStateUpdateMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeShort(this.fightId);
            param1.writeByte(this.teamId);
            param1.writeByte(this.option);
            param1.writeBoolean(this.state);
        };
        GameFightOptionStateUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightOptionStateUpdateMessage(param1);
        };
        GameFightOptionStateUpdateMessage.prototype.deserializeAs_GameFightOptionStateUpdateMessage = function (param1) {
            this.fightId = param1.readShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GameFightOptionStateUpdateMessage.fightId.');
            }
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of GameFightOptionStateUpdateMessage.teamId.');
            }
            this.option = param1.readByte();
            if (this.option < 0) {
                throw new Error('Forbidden value (' + this.option + ') on element of GameFightOptionStateUpdateMessage.option.');
            }
            this.state = param1.readBoolean();
        };
        GameFightOptionStateUpdateMessage.ID = 5927;
        return GameFightOptionStateUpdateMessage;
    })(NetworkMessage);
    Protocol.GameFightOptionStateUpdateMessage = GameFightOptionStateUpdateMessage;
    var GameFightOptionToggleMessage = (function (_super) {
        __extends(GameFightOptionToggleMessage, _super);
        function GameFightOptionToggleMessage() {
            this.option = 3;
            _super.call(this);
        }
        GameFightOptionToggleMessage.prototype.getMessageId = function () {
            return GameFightOptionToggleMessage.ID;
        };
        GameFightOptionToggleMessage.prototype.reset = function () {
            this.option = 3;
        };
        GameFightOptionToggleMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightOptionToggleMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightOptionToggleMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightOptionToggleMessage(param1);
        };
        GameFightOptionToggleMessage.prototype.serializeAs_GameFightOptionToggleMessage = function (param1) {
            param1.writeByte(this.option);
        };
        GameFightOptionToggleMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightOptionToggleMessage(param1);
        };
        GameFightOptionToggleMessage.prototype.deserializeAs_GameFightOptionToggleMessage = function (param1) {
            this.option = param1.readByte();
            if (this.option < 0) {
                throw new Error('Forbidden value (' + this.option + ') on element of GameFightOptionToggleMessage.option.');
            }
        };
        GameFightOptionToggleMessage.ID = 707;
        return GameFightOptionToggleMessage;
    })(NetworkMessage);
    Protocol.GameFightOptionToggleMessage = GameFightOptionToggleMessage;
    var GameFightPlacementPositionRequestMessage = (function (_super) {
        __extends(GameFightPlacementPositionRequestMessage, _super);
        function GameFightPlacementPositionRequestMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        GameFightPlacementPositionRequestMessage.prototype.getMessageId = function () {
            return GameFightPlacementPositionRequestMessage.ID;
        };
        GameFightPlacementPositionRequestMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        GameFightPlacementPositionRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementPositionRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementPositionRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementPositionRequestMessage(param1);
        };
        GameFightPlacementPositionRequestMessage.prototype.serializeAs_GameFightPlacementPositionRequestMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        GameFightPlacementPositionRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementPositionRequestMessage(param1);
        };
        GameFightPlacementPositionRequestMessage.prototype.deserializeAs_GameFightPlacementPositionRequestMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameFightPlacementPositionRequestMessage.cellId.');
            }
        };
        GameFightPlacementPositionRequestMessage.ID = 704;
        return GameFightPlacementPositionRequestMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementPositionRequestMessage = GameFightPlacementPositionRequestMessage;
    var GameFightPlacementPossiblePositionsMessage = (function (_super) {
        __extends(GameFightPlacementPossiblePositionsMessage, _super);
        function GameFightPlacementPossiblePositionsMessage() {
            this.positionsForChallengers = [];
            this.positionsForDefenders = [];
            this.teamNumber = 2;
            _super.call(this);
        }
        GameFightPlacementPossiblePositionsMessage.prototype.getMessageId = function () {
            return GameFightPlacementPossiblePositionsMessage.ID;
        };
        GameFightPlacementPossiblePositionsMessage.prototype.reset = function () {
            this.positionsForChallengers = [];
            this.positionsForDefenders = [];
            this.teamNumber = 2;
        };
        GameFightPlacementPossiblePositionsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementPossiblePositionsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementPossiblePositionsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementPossiblePositionsMessage(param1);
        };
        GameFightPlacementPossiblePositionsMessage.prototype.serializeAs_GameFightPlacementPossiblePositionsMessage = function (param1) {
            param1.writeShort(this.positionsForChallengers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.positionsForChallengers.length) {
                if (this.positionsForChallengers[_loc2_] < 0 || this.positionsForChallengers[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.positionsForChallengers[_loc2_] + ') on element 1 (starting at 1) of positionsForChallengers.');
                }
                param1.writeVarShort(this.positionsForChallengers[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.positionsForDefenders.length);
            var _loc3_ = 0;
            while (_loc3_ < this.positionsForDefenders.length) {
                if (this.positionsForDefenders[_loc3_] < 0 || this.positionsForDefenders[_loc3_] > 559) {
                    throw new Error('Forbidden value (' + this.positionsForDefenders[_loc3_] + ') on element 2 (starting at 1) of positionsForDefenders.');
                }
                param1.writeVarShort(this.positionsForDefenders[_loc3_]);
                _loc3_++;
            }
            param1.writeByte(this.teamNumber);
        };
        GameFightPlacementPossiblePositionsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementPossiblePositionsMessage(param1);
        };
        GameFightPlacementPossiblePositionsMessage.prototype.deserializeAs_GameFightPlacementPossiblePositionsMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0 || _loc6_ > 559) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of positionsForChallengers.');
                }
                this.positionsForChallengers.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0 || _loc7_ > 559) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of positionsForDefenders.');
                }
                this.positionsForDefenders.push(_loc7_);
                _loc5_++;
            }
            this.teamNumber = param1.readByte();
            if (this.teamNumber < 0) {
                throw new Error('Forbidden value (' + this.teamNumber + ') on element of GameFightPlacementPossiblePositionsMessage.teamNumber.');
            }
        };
        GameFightPlacementPossiblePositionsMessage.ID = 703;
        return GameFightPlacementPossiblePositionsMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementPossiblePositionsMessage = GameFightPlacementPossiblePositionsMessage;
    var GameFightPlacementSwapPositionsAcceptMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsAcceptMessage, _super);
        function GameFightPlacementSwapPositionsAcceptMessage() {
            this.requestId = 0;
            _super.call(this);
        }
        GameFightPlacementSwapPositionsAcceptMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsAcceptMessage.ID;
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.reset = function () {
            this.requestId = 0;
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsAcceptMessage(param1);
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.serializeAs_GameFightPlacementSwapPositionsAcceptMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeInt(this.requestId);
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsAcceptMessage(param1);
        };
        GameFightPlacementSwapPositionsAcceptMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsAcceptMessage = function (param1) {
            this.requestId = param1.readInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of GameFightPlacementSwapPositionsAcceptMessage.requestId.');
            }
        };
        GameFightPlacementSwapPositionsAcceptMessage.ID = 6547;
        return GameFightPlacementSwapPositionsAcceptMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsAcceptMessage = GameFightPlacementSwapPositionsAcceptMessage;
    var GameFightPlacementSwapPositionsCancelMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsCancelMessage, _super);
        function GameFightPlacementSwapPositionsCancelMessage() {
            this.requestId = 0;
            _super.call(this);
        }
        GameFightPlacementSwapPositionsCancelMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsCancelMessage.ID;
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.reset = function () {
            this.requestId = 0;
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsCancelMessage(param1);
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.serializeAs_GameFightPlacementSwapPositionsCancelMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeInt(this.requestId);
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsCancelMessage(param1);
        };
        GameFightPlacementSwapPositionsCancelMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsCancelMessage = function (param1) {
            this.requestId = param1.readInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of GameFightPlacementSwapPositionsCancelMessage.requestId.');
            }
        };
        GameFightPlacementSwapPositionsCancelMessage.ID = 6543;
        return GameFightPlacementSwapPositionsCancelMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsCancelMessage = GameFightPlacementSwapPositionsCancelMessage;
    var GameFightPlacementSwapPositionsCancelledMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsCancelledMessage, _super);
        function GameFightPlacementSwapPositionsCancelledMessage() {
            this.requestId = 0;
            this.cancellerId = 0;
            _super.call(this);
        }
        GameFightPlacementSwapPositionsCancelledMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsCancelledMessage.ID;
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.reset = function () {
            this.requestId = 0;
            this.cancellerId = 0;
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsCancelledMessage(param1);
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.serializeAs_GameFightPlacementSwapPositionsCancelledMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeInt(this.requestId);
            if (this.cancellerId < 0) {
                throw new Error('Forbidden value (' + this.cancellerId + ') on element cancellerId.');
            }
            param1.writeVarInt(this.cancellerId);
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsCancelledMessage(param1);
        };
        GameFightPlacementSwapPositionsCancelledMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsCancelledMessage = function (param1) {
            this.requestId = param1.readInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of GameFightPlacementSwapPositionsCancelledMessage.requestId.');
            }
            this.cancellerId = param1.readVarUhInt();
            if (this.cancellerId < 0) {
                throw new Error('Forbidden value (' + this.cancellerId + ') on element of GameFightPlacementSwapPositionsCancelledMessage.cancellerId.');
            }
        };
        GameFightPlacementSwapPositionsCancelledMessage.ID = 6546;
        return GameFightPlacementSwapPositionsCancelledMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsCancelledMessage = GameFightPlacementSwapPositionsCancelledMessage;
    var GameFightPlacementSwapPositionsErrorMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsErrorMessage, _super);
        function GameFightPlacementSwapPositionsErrorMessage() {
            _super.call(this);
        }
        GameFightPlacementSwapPositionsErrorMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsErrorMessage.ID;
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.reset = function () {
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsErrorMessage(param1);
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.serializeAs_GameFightPlacementSwapPositionsErrorMessage = function (param1) {
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsErrorMessage(param1);
        };
        GameFightPlacementSwapPositionsErrorMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsErrorMessage = function (param1) {
        };
        GameFightPlacementSwapPositionsErrorMessage.ID = 6548;
        return GameFightPlacementSwapPositionsErrorMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsErrorMessage = GameFightPlacementSwapPositionsErrorMessage;
    var GameFightPlacementSwapPositionsMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsMessage, _super);
        function GameFightPlacementSwapPositionsMessage() {
            this.dispositions = [];
            _super.call(this);
        }
        GameFightPlacementSwapPositionsMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsMessage.ID;
        };
        GameFightPlacementSwapPositionsMessage.prototype.reset = function () {
            this.dispositions = [];
        };
        GameFightPlacementSwapPositionsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsMessage(param1);
        };
        GameFightPlacementSwapPositionsMessage.prototype.serializeAs_GameFightPlacementSwapPositionsMessage = function (param1) {
            var _loc2_ = 0;
            while (_loc2_ < 2) {
                this.dispositions[_loc2_].serializeAs_IdentifiedEntityDispositionInformations(param1);
                _loc2_++;
            }
        };
        GameFightPlacementSwapPositionsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsMessage(param1);
        };
        GameFightPlacementSwapPositionsMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsMessage = function (param1) {
            var _loc2_ = 0;
            while (_loc2_ < 2) {
                this.dispositions[_loc2_] = new IdentifiedEntityDispositionInformations();
                this.dispositions[_loc2_].deserialize(param1);
                _loc2_++;
            }
        };
        GameFightPlacementSwapPositionsMessage.ID = 6544;
        return GameFightPlacementSwapPositionsMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsMessage = GameFightPlacementSwapPositionsMessage;
    var GameFightPlacementSwapPositionsOfferMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsOfferMessage, _super);
        function GameFightPlacementSwapPositionsOfferMessage() {
            this.requestId = 0;
            this.requesterId = 0;
            this.requesterCellId = 0;
            this.requestedId = 0;
            this.requestedCellId = 0;
            _super.call(this);
        }
        GameFightPlacementSwapPositionsOfferMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsOfferMessage.ID;
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.reset = function () {
            this.requestId = 0;
            this.requesterId = 0;
            this.requesterCellId = 0;
            this.requestedId = 0;
            this.requestedCellId = 0;
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsOfferMessage(param1);
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.serializeAs_GameFightPlacementSwapPositionsOfferMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeInt(this.requestId);
            if (this.requesterId < 0) {
                throw new Error('Forbidden value (' + this.requesterId + ') on element requesterId.');
            }
            param1.writeVarInt(this.requesterId);
            if (this.requesterCellId < 0 || this.requesterCellId > 559) {
                throw new Error('Forbidden value (' + this.requesterCellId + ') on element requesterCellId.');
            }
            param1.writeVarShort(this.requesterCellId);
            if (this.requestedId < 0) {
                throw new Error('Forbidden value (' + this.requestedId + ') on element requestedId.');
            }
            param1.writeVarInt(this.requestedId);
            if (this.requestedCellId < 0 || this.requestedCellId > 559) {
                throw new Error('Forbidden value (' + this.requestedCellId + ') on element requestedCellId.');
            }
            param1.writeVarShort(this.requestedCellId);
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsOfferMessage(param1);
        };
        GameFightPlacementSwapPositionsOfferMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsOfferMessage = function (param1) {
            this.requestId = param1.readInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of GameFightPlacementSwapPositionsOfferMessage.requestId.');
            }
            this.requesterId = param1.readVarUhInt();
            if (this.requesterId < 0) {
                throw new Error('Forbidden value (' + this.requesterId + ') on element of GameFightPlacementSwapPositionsOfferMessage.requesterId.');
            }
            this.requesterCellId = param1.readVarUhShort();
            if (this.requesterCellId < 0 || this.requesterCellId > 559) {
                throw new Error('Forbidden value (' + this.requesterCellId + ') on element of GameFightPlacementSwapPositionsOfferMessage.requesterCellId.');
            }
            this.requestedId = param1.readVarUhInt();
            if (this.requestedId < 0) {
                throw new Error('Forbidden value (' + this.requestedId + ') on element of GameFightPlacementSwapPositionsOfferMessage.requestedId.');
            }
            this.requestedCellId = param1.readVarUhShort();
            if (this.requestedCellId < 0 || this.requestedCellId > 559) {
                throw new Error('Forbidden value (' + this.requestedCellId + ') on element of GameFightPlacementSwapPositionsOfferMessage.requestedCellId.');
            }
        };
        GameFightPlacementSwapPositionsOfferMessage.ID = 6542;
        return GameFightPlacementSwapPositionsOfferMessage;
    })(NetworkMessage);
    Protocol.GameFightPlacementSwapPositionsOfferMessage = GameFightPlacementSwapPositionsOfferMessage;
    var GameFightPlacementSwapPositionsRequestMessage = (function (_super) {
        __extends(GameFightPlacementSwapPositionsRequestMessage, _super);
        function GameFightPlacementSwapPositionsRequestMessage() {
            this.requestedId = 0;
            _super.call(this);
        }
        GameFightPlacementSwapPositionsRequestMessage.prototype.getMessageId = function () {
            return GameFightPlacementSwapPositionsRequestMessage.ID;
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.reset = function () {
            this.requestedId = 0;
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightPlacementSwapPositionsRequestMessage(param1);
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.serializeAs_GameFightPlacementSwapPositionsRequestMessage = function (param1) {
            _super.prototype.serializeAs_GameFightPlacementPositionRequestMessage.call(this, param1);
            param1.writeInt(this.requestedId);
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightPlacementSwapPositionsRequestMessage(param1);
        };
        GameFightPlacementSwapPositionsRequestMessage.prototype.deserializeAs_GameFightPlacementSwapPositionsRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.requestedId = param1.readInt();
        };
        GameFightPlacementSwapPositionsRequestMessage.ID = 6541;
        return GameFightPlacementSwapPositionsRequestMessage;
    })(GameFightPlacementPositionRequestMessage);
    Protocol.GameFightPlacementSwapPositionsRequestMessage = GameFightPlacementSwapPositionsRequestMessage;
    var GameFightReadyMessage = (function (_super) {
        __extends(GameFightReadyMessage, _super);
        function GameFightReadyMessage() {
            this.isReady = false;
            _super.call(this);
        }
        GameFightReadyMessage.prototype.getMessageId = function () {
            return GameFightReadyMessage.ID;
        };
        GameFightReadyMessage.prototype.reset = function () {
            this.isReady = false;
        };
        GameFightReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightReadyMessage(param1);
        };
        GameFightReadyMessage.prototype.serializeAs_GameFightReadyMessage = function (param1) {
            param1.writeBoolean(this.isReady);
        };
        GameFightReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightReadyMessage(param1);
        };
        GameFightReadyMessage.prototype.deserializeAs_GameFightReadyMessage = function (param1) {
            this.isReady = param1.readBoolean();
        };
        GameFightReadyMessage.ID = 708;
        return GameFightReadyMessage;
    })(NetworkMessage);
    Protocol.GameFightReadyMessage = GameFightReadyMessage;
    var GameFightRemoveTeamMemberMessage = (function (_super) {
        __extends(GameFightRemoveTeamMemberMessage, _super);
        function GameFightRemoveTeamMemberMessage() {
            this.fightId = 0;
            this.teamId = 2;
            this.charId = 0;
            _super.call(this);
        }
        GameFightRemoveTeamMemberMessage.prototype.getMessageId = function () {
            return GameFightRemoveTeamMemberMessage.ID;
        };
        GameFightRemoveTeamMemberMessage.prototype.reset = function () {
            this.fightId = 0;
            this.teamId = 2;
            this.charId = 0;
        };
        GameFightRemoveTeamMemberMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightRemoveTeamMemberMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightRemoveTeamMemberMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightRemoveTeamMemberMessage(param1);
        };
        GameFightRemoveTeamMemberMessage.prototype.serializeAs_GameFightRemoveTeamMemberMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeShort(this.fightId);
            param1.writeByte(this.teamId);
            param1.writeInt(this.charId);
        };
        GameFightRemoveTeamMemberMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightRemoveTeamMemberMessage(param1);
        };
        GameFightRemoveTeamMemberMessage.prototype.deserializeAs_GameFightRemoveTeamMemberMessage = function (param1) {
            this.fightId = param1.readShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GameFightRemoveTeamMemberMessage.fightId.');
            }
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of GameFightRemoveTeamMemberMessage.teamId.');
            }
            this.charId = param1.readInt();
        };
        GameFightRemoveTeamMemberMessage.ID = 711;
        return GameFightRemoveTeamMemberMessage;
    })(NetworkMessage);
    Protocol.GameFightRemoveTeamMemberMessage = GameFightRemoveTeamMemberMessage;
    var GameFightResumeMessage = (function (_super) {
        __extends(GameFightResumeMessage, _super);
        function GameFightResumeMessage() {
            this.spellCooldowns = [];
            this.summonCount = 0;
            this.bombCount = 0;
            _super.call(this);
        }
        GameFightResumeMessage.prototype.getMessageId = function () {
            return GameFightResumeMessage.ID;
        };
        GameFightResumeMessage.prototype.reset = function () {
            this.spellCooldowns = [];
            this.summonCount = 0;
            this.bombCount = 0;
        };
        GameFightResumeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightResumeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightResumeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightResumeMessage(param1);
        };
        GameFightResumeMessage.prototype.serializeAs_GameFightResumeMessage = function (param1) {
            _super.prototype.serializeAs_GameFightSpectateMessage.call(this, param1);
            param1.writeShort(this.spellCooldowns.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spellCooldowns.length) {
                (this.spellCooldowns[_loc2_]).serializeAs_GameFightSpellCooldown(param1);
                _loc2_++;
            }
            if (this.summonCount < 0) {
                throw new Error('Forbidden value (' + this.summonCount + ') on element summonCount.');
            }
            param1.writeByte(this.summonCount);
            if (this.bombCount < 0) {
                throw new Error('Forbidden value (' + this.bombCount + ') on element bombCount.');
            }
            param1.writeByte(this.bombCount);
        };
        GameFightResumeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightResumeMessage(param1);
        };
        GameFightResumeMessage.prototype.deserializeAs_GameFightResumeMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GameFightSpellCooldown();
                _loc4_.deserialize(param1);
                this.spellCooldowns.push(_loc4_);
                _loc3_++;
            }
            this.summonCount = param1.readByte();
            if (this.summonCount < 0) {
                throw new Error('Forbidden value (' + this.summonCount + ') on element of GameFightResumeMessage.summonCount.');
            }
            this.bombCount = param1.readByte();
            if (this.bombCount < 0) {
                throw new Error('Forbidden value (' + this.bombCount + ') on element of GameFightResumeMessage.bombCount.');
            }
        };
        GameFightResumeMessage.ID = 6067;
        return GameFightResumeMessage;
    })(GameFightSpectateMessage);
    Protocol.GameFightResumeMessage = GameFightResumeMessage;
    var GameFightResumeWithSlavesMessage = (function (_super) {
        __extends(GameFightResumeWithSlavesMessage, _super);
        function GameFightResumeWithSlavesMessage() {
            this.slavesInfo = [];
            _super.call(this);
        }
        GameFightResumeWithSlavesMessage.prototype.getMessageId = function () {
            return GameFightResumeWithSlavesMessage.ID;
        };
        GameFightResumeWithSlavesMessage.prototype.reset = function () {
            this.slavesInfo = [];
        };
        GameFightResumeWithSlavesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightResumeWithSlavesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightResumeWithSlavesMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightResumeWithSlavesMessage(param1);
        };
        GameFightResumeWithSlavesMessage.prototype.serializeAs_GameFightResumeWithSlavesMessage = function (param1) {
            _super.prototype.serializeAs_GameFightResumeMessage.call(this, param1);
            param1.writeShort(this.slavesInfo.length);
            var _loc2_ = 0;
            while (_loc2_ < this.slavesInfo.length) {
                (this.slavesInfo[_loc2_]).serializeAs_GameFightResumeSlaveInfo(param1);
                _loc2_++;
            }
        };
        GameFightResumeWithSlavesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightResumeWithSlavesMessage(param1);
        };
        GameFightResumeWithSlavesMessage.prototype.deserializeAs_GameFightResumeWithSlavesMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GameFightResumeSlaveInfo();
                _loc4_.deserialize(param1);
                this.slavesInfo.push(_loc4_);
                _loc3_++;
            }
        };
        GameFightResumeWithSlavesMessage.ID = 6215;
        return GameFightResumeWithSlavesMessage;
    })(GameFightResumeMessage);
    Protocol.GameFightResumeWithSlavesMessage = GameFightResumeWithSlavesMessage;
    var GameFightSpectateMessage = (function (_super) {
        __extends(GameFightSpectateMessage, _super);
        function GameFightSpectateMessage() {
            this.effects = [];
            this.marks = [];
            this.gameTurn = 0;
            this.fightStart = 0;
            this.idols = [];
            _super.call(this);
        }
        GameFightSpectateMessage.prototype.getMessageId = function () {
            return GameFightSpectateMessage.ID;
        };
        GameFightSpectateMessage.prototype.reset = function () {
            this.effects = [];
            this.marks = [];
            this.gameTurn = 0;
            this.fightStart = 0;
            this.idols = [];
        };
        GameFightSpectateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightSpectateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightSpectateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightSpectateMessage(param1);
        };
        GameFightSpectateMessage.prototype.serializeAs_GameFightSpectateMessage = function (param1) {
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                (this.effects[_loc2_]).serializeAs_FightDispellableEffectExtendedInformations(param1);
                _loc2_++;
            }
            param1.writeShort(this.marks.length);
            var _loc3_ = 0;
            while (_loc3_ < this.marks.length) {
                (this.marks[_loc3_]).serializeAs_GameActionMark(param1);
                _loc3_++;
            }
            if (this.gameTurn < 0) {
                throw new Error('Forbidden value (' + this.gameTurn + ') on element gameTurn.');
            }
            param1.writeVarShort(this.gameTurn);
            if (this.fightStart < 0) {
                throw new Error('Forbidden value (' + this.fightStart + ') on element fightStart.');
            }
            param1.writeInt(this.fightStart);
            param1.writeShort(this.idols.length);
            var _loc4_ = 0;
            while (_loc4_ < this.idols.length) {
                (this.idols[_loc4_]).serializeAs_Idol(param1);
                _loc4_++;
            }
        };
        GameFightSpectateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightSpectateMessage(param1);
        };
        GameFightSpectateMessage.prototype.deserializeAs_GameFightSpectateMessage = function (param1) {
            var _loc8_ = null;
            var _loc9_ = null;
            var _loc10_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc8_ = new FightDispellableEffectExtendedInformations();
                _loc8_.deserialize(param1);
                this.effects.push(_loc8_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc9_ = new GameActionMark();
                _loc9_.deserialize(param1);
                this.marks.push(_loc9_);
                _loc5_++;
            }
            this.gameTurn = param1.readVarUhShort();
            if (this.gameTurn < 0) {
                throw new Error('Forbidden value (' + this.gameTurn + ') on element of GameFightSpectateMessage.gameTurn.');
            }
            this.fightStart = param1.readInt();
            if (this.fightStart < 0) {
                throw new Error('Forbidden value (' + this.fightStart + ') on element of GameFightSpectateMessage.fightStart.');
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc10_ = new Idol();
                _loc10_.deserialize(param1);
                this.idols.push(_loc10_);
                _loc7_++;
            }
        };
        GameFightSpectateMessage.ID = 6069;
        return GameFightSpectateMessage;
    })(NetworkMessage);
    Protocol.GameFightSpectateMessage = GameFightSpectateMessage;
    var GameFightSpectatePlayerRequestMessage = (function (_super) {
        __extends(GameFightSpectatePlayerRequestMessage, _super);
        function GameFightSpectatePlayerRequestMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        GameFightSpectatePlayerRequestMessage.prototype.getMessageId = function () {
            return GameFightSpectatePlayerRequestMessage.ID;
        };
        GameFightSpectatePlayerRequestMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        GameFightSpectatePlayerRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightSpectatePlayerRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightSpectatePlayerRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightSpectatePlayerRequestMessage(param1);
        };
        GameFightSpectatePlayerRequestMessage.prototype.serializeAs_GameFightSpectatePlayerRequestMessage = function (param1) {
            param1.writeInt(this.playerId);
        };
        GameFightSpectatePlayerRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightSpectatePlayerRequestMessage(param1);
        };
        GameFightSpectatePlayerRequestMessage.prototype.deserializeAs_GameFightSpectatePlayerRequestMessage = function (param1) {
            this.playerId = param1.readInt();
        };
        GameFightSpectatePlayerRequestMessage.ID = 6474;
        return GameFightSpectatePlayerRequestMessage;
    })(NetworkMessage);
    Protocol.GameFightSpectatePlayerRequestMessage = GameFightSpectatePlayerRequestMessage;
    var GameFightSpectatorJoinMessage = (function (_super) {
        __extends(GameFightSpectatorJoinMessage, _super);
        function GameFightSpectatorJoinMessage() {
            this.namedPartyTeams = [];
            _super.call(this);
        }
        GameFightSpectatorJoinMessage.prototype.getMessageId = function () {
            return GameFightSpectatorJoinMessage.ID;
        };
        GameFightSpectatorJoinMessage.prototype.reset = function () {
            this.namedPartyTeams = [];
        };
        GameFightSpectatorJoinMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightSpectatorJoinMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightSpectatorJoinMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightSpectatorJoinMessage(param1);
        };
        GameFightSpectatorJoinMessage.prototype.serializeAs_GameFightSpectatorJoinMessage = function (param1) {
            _super.prototype.serializeAs_GameFightJoinMessage.call(this, param1);
            param1.writeShort(this.namedPartyTeams.length);
            var _loc2_ = 0;
            while (_loc2_ < this.namedPartyTeams.length) {
                (this.namedPartyTeams[_loc2_]).serializeAs_NamedPartyTeam(param1);
                _loc2_++;
            }
        };
        GameFightSpectatorJoinMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightSpectatorJoinMessage(param1);
        };
        GameFightSpectatorJoinMessage.prototype.deserializeAs_GameFightSpectatorJoinMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new NamedPartyTeam();
                _loc4_.deserialize(param1);
                this.namedPartyTeams.push(_loc4_);
                _loc3_++;
            }
        };
        GameFightSpectatorJoinMessage.ID = 6504;
        return GameFightSpectatorJoinMessage;
    })(GameFightJoinMessage);
    Protocol.GameFightSpectatorJoinMessage = GameFightSpectatorJoinMessage;
    var GameFightStartMessage = (function (_super) {
        __extends(GameFightStartMessage, _super);
        function GameFightStartMessage() {
            this.idols = [];
            _super.call(this);
        }
        GameFightStartMessage.prototype.getMessageId = function () {
            return GameFightStartMessage.ID;
        };
        GameFightStartMessage.prototype.reset = function () {
            this.idols = [];
        };
        GameFightStartMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightStartMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightStartMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightStartMessage(param1);
        };
        GameFightStartMessage.prototype.serializeAs_GameFightStartMessage = function (param1) {
            param1.writeShort(this.idols.length);
            var _loc2_ = 0;
            while (_loc2_ < this.idols.length) {
                (this.idols[_loc2_]).serializeAs_Idol(param1);
                _loc2_++;
            }
        };
        GameFightStartMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightStartMessage(param1);
        };
        GameFightStartMessage.prototype.deserializeAs_GameFightStartMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new Idol();
                _loc4_.deserialize(param1);
                this.idols.push(_loc4_);
                _loc3_++;
            }
        };
        GameFightStartMessage.ID = 712;
        return GameFightStartMessage;
    })(NetworkMessage);
    Protocol.GameFightStartMessage = GameFightStartMessage;
    var GameFightStartingMessage = (function (_super) {
        __extends(GameFightStartingMessage, _super);
        function GameFightStartingMessage() {
            this.fightType = 0;
            this.attackerId = 0;
            this.defenderId = 0;
            _super.call(this);
        }
        GameFightStartingMessage.prototype.getMessageId = function () {
            return GameFightStartingMessage.ID;
        };
        GameFightStartingMessage.prototype.reset = function () {
            this.fightType = 0;
            this.attackerId = 0;
            this.defenderId = 0;
        };
        GameFightStartingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightStartingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightStartingMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightStartingMessage(param1);
        };
        GameFightStartingMessage.prototype.serializeAs_GameFightStartingMessage = function (param1) {
            param1.writeByte(this.fightType);
            param1.writeInt(this.attackerId);
            param1.writeInt(this.defenderId);
        };
        GameFightStartingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightStartingMessage(param1);
        };
        GameFightStartingMessage.prototype.deserializeAs_GameFightStartingMessage = function (param1) {
            this.fightType = param1.readByte();
            if (this.fightType < 0) {
                throw new Error('Forbidden value (' + this.fightType + ') on element of GameFightStartingMessage.fightType.');
            }
            this.attackerId = param1.readInt();
            this.defenderId = param1.readInt();
        };
        GameFightStartingMessage.ID = 700;
        return GameFightStartingMessage;
    })(NetworkMessage);
    Protocol.GameFightStartingMessage = GameFightStartingMessage;
    var GameFightSynchronizeMessage = (function (_super) {
        __extends(GameFightSynchronizeMessage, _super);
        function GameFightSynchronizeMessage() {
            this.fighters = [];
            _super.call(this);
        }
        GameFightSynchronizeMessage.prototype.getMessageId = function () {
            return GameFightSynchronizeMessage.ID;
        };
        GameFightSynchronizeMessage.prototype.reset = function () {
            this.fighters = [];
        };
        GameFightSynchronizeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightSynchronizeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightSynchronizeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightSynchronizeMessage(param1);
        };
        GameFightSynchronizeMessage.prototype.serializeAs_GameFightSynchronizeMessage = function (param1) {
            param1.writeShort(this.fighters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.fighters.length) {
                param1.writeShort((this.fighters[_loc2_]).getTypeId());
                (this.fighters[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        GameFightSynchronizeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightSynchronizeMessage(param1);
        };
        GameFightSynchronizeMessage.prototype.deserializeAs_GameFightSynchronizeMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(GameFightFighterInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.fighters.push(_loc5_);
                _loc3_++;
            }
        };
        GameFightSynchronizeMessage.ID = 5921;
        return GameFightSynchronizeMessage;
    })(NetworkMessage);
    Protocol.GameFightSynchronizeMessage = GameFightSynchronizeMessage;
    var GameFightTurnEndMessage = (function (_super) {
        __extends(GameFightTurnEndMessage, _super);
        function GameFightTurnEndMessage() {
            this.id = 0;
            _super.call(this);
        }
        GameFightTurnEndMessage.prototype.getMessageId = function () {
            return GameFightTurnEndMessage.ID;
        };
        GameFightTurnEndMessage.prototype.reset = function () {
            this.id = 0;
        };
        GameFightTurnEndMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnEndMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnEndMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnEndMessage(param1);
        };
        GameFightTurnEndMessage.prototype.serializeAs_GameFightTurnEndMessage = function (param1) {
            param1.writeInt(this.id);
        };
        GameFightTurnEndMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnEndMessage(param1);
        };
        GameFightTurnEndMessage.prototype.deserializeAs_GameFightTurnEndMessage = function (param1) {
            this.id = param1.readInt();
        };
        GameFightTurnEndMessage.ID = 719;
        return GameFightTurnEndMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnEndMessage = GameFightTurnEndMessage;
    var GameFightTurnFinishMessage = (function (_super) {
        __extends(GameFightTurnFinishMessage, _super);
        function GameFightTurnFinishMessage() {
            _super.call(this);
        }
        GameFightTurnFinishMessage.prototype.getMessageId = function () {
            return GameFightTurnFinishMessage.ID;
        };
        GameFightTurnFinishMessage.prototype.reset = function () {
        };
        GameFightTurnFinishMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnFinishMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnFinishMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnFinishMessage(param1);
        };
        GameFightTurnFinishMessage.prototype.serializeAs_GameFightTurnFinishMessage = function (param1) {
        };
        GameFightTurnFinishMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnFinishMessage(param1);
        };
        GameFightTurnFinishMessage.prototype.deserializeAs_GameFightTurnFinishMessage = function (param1) {
        };
        GameFightTurnFinishMessage.ID = 718;
        return GameFightTurnFinishMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnFinishMessage = GameFightTurnFinishMessage;
    var GameFightTurnListMessage = (function (_super) {
        __extends(GameFightTurnListMessage, _super);
        function GameFightTurnListMessage() {
            this.ids = [];
            this.deadsIds = [];
            _super.call(this);
        }
        GameFightTurnListMessage.prototype.getMessageId = function () {
            return GameFightTurnListMessage.ID;
        };
        GameFightTurnListMessage.prototype.reset = function () {
            this.ids = [];
            this.deadsIds = [];
        };
        GameFightTurnListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnListMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnListMessage(param1);
        };
        GameFightTurnListMessage.prototype.serializeAs_GameFightTurnListMessage = function (param1) {
            param1.writeShort(this.ids.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ids.length) {
                param1.writeInt(this.ids[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.deadsIds.length);
            var _loc3_ = 0;
            while (_loc3_ < this.deadsIds.length) {
                param1.writeInt(this.deadsIds[_loc3_]);
                _loc3_++;
            }
        };
        GameFightTurnListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnListMessage(param1);
        };
        GameFightTurnListMessage.prototype.deserializeAs_GameFightTurnListMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readInt();
                this.ids.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readInt();
                this.deadsIds.push(_loc7_);
                _loc5_++;
            }
        };
        GameFightTurnListMessage.ID = 713;
        return GameFightTurnListMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnListMessage = GameFightTurnListMessage;
    var GameFightTurnReadyMessage = (function (_super) {
        __extends(GameFightTurnReadyMessage, _super);
        function GameFightTurnReadyMessage() {
            this.isReady = false;
            _super.call(this);
        }
        GameFightTurnReadyMessage.prototype.getMessageId = function () {
            return GameFightTurnReadyMessage.ID;
        };
        GameFightTurnReadyMessage.prototype.reset = function () {
            this.isReady = false;
        };
        GameFightTurnReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnReadyMessage(param1);
        };
        GameFightTurnReadyMessage.prototype.serializeAs_GameFightTurnReadyMessage = function (param1) {
            param1.writeBoolean(this.isReady);
        };
        GameFightTurnReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnReadyMessage(param1);
        };
        GameFightTurnReadyMessage.prototype.deserializeAs_GameFightTurnReadyMessage = function (param1) {
            this.isReady = param1.readBoolean();
        };
        GameFightTurnReadyMessage.ID = 716;
        return GameFightTurnReadyMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnReadyMessage = GameFightTurnReadyMessage;
    var GameFightTurnReadyRequestMessage = (function (_super) {
        __extends(GameFightTurnReadyRequestMessage, _super);
        function GameFightTurnReadyRequestMessage() {
            this.id = 0;
            _super.call(this);
        }
        GameFightTurnReadyRequestMessage.prototype.getMessageId = function () {
            return GameFightTurnReadyRequestMessage.ID;
        };
        GameFightTurnReadyRequestMessage.prototype.reset = function () {
            this.id = 0;
        };
        GameFightTurnReadyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnReadyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnReadyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnReadyRequestMessage(param1);
        };
        GameFightTurnReadyRequestMessage.prototype.serializeAs_GameFightTurnReadyRequestMessage = function (param1) {
            param1.writeInt(this.id);
        };
        GameFightTurnReadyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnReadyRequestMessage(param1);
        };
        GameFightTurnReadyRequestMessage.prototype.deserializeAs_GameFightTurnReadyRequestMessage = function (param1) {
            this.id = param1.readInt();
        };
        GameFightTurnReadyRequestMessage.ID = 715;
        return GameFightTurnReadyRequestMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnReadyRequestMessage = GameFightTurnReadyRequestMessage;
    var GameFightTurnResumeMessage = (function (_super) {
        __extends(GameFightTurnResumeMessage, _super);
        function GameFightTurnResumeMessage() {
            this.remainingTime = 0;
            _super.call(this);
        }
        GameFightTurnResumeMessage.prototype.getMessageId = function () {
            return GameFightTurnResumeMessage.ID;
        };
        GameFightTurnResumeMessage.prototype.reset = function () {
            this.remainingTime = 0;
        };
        GameFightTurnResumeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnResumeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnResumeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnResumeMessage(param1);
        };
        GameFightTurnResumeMessage.prototype.serializeAs_GameFightTurnResumeMessage = function (param1) {
            _super.prototype.serializeAs_GameFightTurnStartMessage.call(this, param1);
            if (this.remainingTime < 0) {
                throw new Error('Forbidden value (' + this.remainingTime + ') on element remainingTime.');
            }
            param1.writeVarInt(this.remainingTime);
        };
        GameFightTurnResumeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnResumeMessage(param1);
        };
        GameFightTurnResumeMessage.prototype.deserializeAs_GameFightTurnResumeMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.remainingTime = param1.readVarUhInt();
            if (this.remainingTime < 0) {
                throw new Error('Forbidden value (' + this.remainingTime + ') on element of GameFightTurnResumeMessage.remainingTime.');
            }
        };
        GameFightTurnResumeMessage.ID = 6307;
        return GameFightTurnResumeMessage;
    })(GameFightTurnStartMessage);
    Protocol.GameFightTurnResumeMessage = GameFightTurnResumeMessage;
    var GameFightTurnStartMessage = (function (_super) {
        __extends(GameFightTurnStartMessage, _super);
        function GameFightTurnStartMessage() {
            this.id = 0;
            this.waitTime = 0;
            _super.call(this);
        }
        GameFightTurnStartMessage.prototype.getMessageId = function () {
            return GameFightTurnStartMessage.ID;
        };
        GameFightTurnStartMessage.prototype.reset = function () {
            this.id = 0;
            this.waitTime = 0;
        };
        GameFightTurnStartMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnStartMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnStartMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnStartMessage(param1);
        };
        GameFightTurnStartMessage.prototype.serializeAs_GameFightTurnStartMessage = function (param1) {
            param1.writeInt(this.id);
            if (this.waitTime < 0) {
                throw new Error('Forbidden value (' + this.waitTime + ') on element waitTime.');
            }
            param1.writeVarInt(this.waitTime);
        };
        GameFightTurnStartMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnStartMessage(param1);
        };
        GameFightTurnStartMessage.prototype.deserializeAs_GameFightTurnStartMessage = function (param1) {
            this.id = param1.readInt();
            this.waitTime = param1.readVarUhInt();
            if (this.waitTime < 0) {
                throw new Error('Forbidden value (' + this.waitTime + ') on element of GameFightTurnStartMessage.waitTime.');
            }
        };
        GameFightTurnStartMessage.ID = 714;
        return GameFightTurnStartMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnStartMessage = GameFightTurnStartMessage;
    var GameFightTurnStartPlayingMessage = (function (_super) {
        __extends(GameFightTurnStartPlayingMessage, _super);
        function GameFightTurnStartPlayingMessage() {
            _super.call(this);
        }
        GameFightTurnStartPlayingMessage.prototype.getMessageId = function () {
            return GameFightTurnStartPlayingMessage.ID;
        };
        GameFightTurnStartPlayingMessage.prototype.reset = function () {
        };
        GameFightTurnStartPlayingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightTurnStartPlayingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightTurnStartPlayingMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTurnStartPlayingMessage(param1);
        };
        GameFightTurnStartPlayingMessage.prototype.serializeAs_GameFightTurnStartPlayingMessage = function (param1) {
        };
        GameFightTurnStartPlayingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTurnStartPlayingMessage(param1);
        };
        GameFightTurnStartPlayingMessage.prototype.deserializeAs_GameFightTurnStartPlayingMessage = function (param1) {
        };
        GameFightTurnStartPlayingMessage.ID = 6465;
        return GameFightTurnStartPlayingMessage;
    })(NetworkMessage);
    Protocol.GameFightTurnStartPlayingMessage = GameFightTurnStartPlayingMessage;
    var GameFightUpdateTeamMessage = (function (_super) {
        __extends(GameFightUpdateTeamMessage, _super);
        function GameFightUpdateTeamMessage() {
            this.fightId = 0;
            this.team = new FightTeamInformations();
            _super.call(this);
        }
        GameFightUpdateTeamMessage.prototype.getMessageId = function () {
            return GameFightUpdateTeamMessage.ID;
        };
        GameFightUpdateTeamMessage.prototype.reset = function () {
            this.fightId = 0;
            this.team = new FightTeamInformations();
        };
        GameFightUpdateTeamMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightUpdateTeamMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightUpdateTeamMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightUpdateTeamMessage(param1);
        };
        GameFightUpdateTeamMessage.prototype.serializeAs_GameFightUpdateTeamMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeShort(this.fightId);
            this.team.serializeAs_FightTeamInformations(param1);
        };
        GameFightUpdateTeamMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightUpdateTeamMessage(param1);
        };
        GameFightUpdateTeamMessage.prototype.deserializeAs_GameFightUpdateTeamMessage = function (param1) {
            this.fightId = param1.readShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GameFightUpdateTeamMessage.fightId.');
            }
            this.team = new FightTeamInformations();
            this.team.deserialize(param1);
        };
        GameFightUpdateTeamMessage.ID = 5572;
        return GameFightUpdateTeamMessage;
    })(NetworkMessage);
    Protocol.GameFightUpdateTeamMessage = GameFightUpdateTeamMessage;
    var SlaveSwitchContextMessage = (function (_super) {
        __extends(SlaveSwitchContextMessage, _super);
        function SlaveSwitchContextMessage() {
            this.masterId = 0;
            this.slaveId = 0;
            this.slaveSpells = [];
            this.slaveStats = new CharacterCharacteristicsInformations();
            this.shortcuts = [];
            _super.call(this);
        }
        SlaveSwitchContextMessage.prototype.getMessageId = function () {
            return SlaveSwitchContextMessage.ID;
        };
        SlaveSwitchContextMessage.prototype.reset = function () {
            this.masterId = 0;
            this.slaveId = 0;
            this.slaveSpells = [];
            this.slaveStats = new CharacterCharacteristicsInformations();
            this.shortcuts = [];
        };
        SlaveSwitchContextMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SlaveSwitchContextMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SlaveSwitchContextMessage.prototype.serialize = function (param1) {
            this.serializeAs_SlaveSwitchContextMessage(param1);
        };
        SlaveSwitchContextMessage.prototype.serializeAs_SlaveSwitchContextMessage = function (param1) {
            param1.writeInt(this.masterId);
            param1.writeInt(this.slaveId);
            param1.writeShort(this.slaveSpells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.slaveSpells.length) {
                (this.slaveSpells[_loc2_]).serializeAs_SpellItem(param1);
                _loc2_++;
            }
            this.slaveStats.serializeAs_CharacterCharacteristicsInformations(param1);
            param1.writeShort(this.shortcuts.length);
            var _loc3_ = 0;
            while (_loc3_ < this.shortcuts.length) {
                param1.writeShort((this.shortcuts[_loc3_]).getTypeId());
                (this.shortcuts[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        SlaveSwitchContextMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SlaveSwitchContextMessage(param1);
        };
        SlaveSwitchContextMessage.prototype.deserializeAs_SlaveSwitchContextMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = 0;
            var _loc8_ = null;
            this.masterId = param1.readInt();
            this.slaveId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new SpellItem();
                _loc6_.deserialize(param1);
                this.slaveSpells.push(_loc6_);
                _loc3_++;
            }
            this.slaveStats = new CharacterCharacteristicsInformations();
            this.slaveStats.deserialize(param1);
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readUnsignedShort();
                _loc8_ = ProtocolTypeManager.getInstance(Shortcut, _loc7_);
                _loc8_.deserialize(param1);
                this.shortcuts.push(_loc8_);
                _loc5_++;
            }
        };
        SlaveSwitchContextMessage.ID = 6214;
        return SlaveSwitchContextMessage;
    })(NetworkMessage);
    Protocol.SlaveSwitchContextMessage = SlaveSwitchContextMessage;
    var ChallengeInfoMessage = (function (_super) {
        __extends(ChallengeInfoMessage, _super);
        function ChallengeInfoMessage() {
            this.challengeId = 0;
            this.targetId = 0;
            this.xpBonus = 0;
            this.dropBonus = 0;
            _super.call(this);
        }
        ChallengeInfoMessage.prototype.getMessageId = function () {
            return ChallengeInfoMessage.ID;
        };
        ChallengeInfoMessage.prototype.reset = function () {
            this.challengeId = 0;
            this.targetId = 0;
            this.xpBonus = 0;
            this.dropBonus = 0;
        };
        ChallengeInfoMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeInfoMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeInfoMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeInfoMessage(param1);
        };
        ChallengeInfoMessage.prototype.serializeAs_ChallengeInfoMessage = function (param1) {
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element challengeId.');
            }
            param1.writeVarShort(this.challengeId);
            param1.writeInt(this.targetId);
            if (this.xpBonus < 0) {
                throw new Error('Forbidden value (' + this.xpBonus + ') on element xpBonus.');
            }
            param1.writeVarInt(this.xpBonus);
            if (this.dropBonus < 0) {
                throw new Error('Forbidden value (' + this.dropBonus + ') on element dropBonus.');
            }
            param1.writeVarInt(this.dropBonus);
        };
        ChallengeInfoMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeInfoMessage(param1);
        };
        ChallengeInfoMessage.prototype.deserializeAs_ChallengeInfoMessage = function (param1) {
            this.challengeId = param1.readVarUhShort();
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element of ChallengeInfoMessage.challengeId.');
            }
            this.targetId = param1.readInt();
            this.xpBonus = param1.readVarUhInt();
            if (this.xpBonus < 0) {
                throw new Error('Forbidden value (' + this.xpBonus + ') on element of ChallengeInfoMessage.xpBonus.');
            }
            this.dropBonus = param1.readVarUhInt();
            if (this.dropBonus < 0) {
                throw new Error('Forbidden value (' + this.dropBonus + ') on element of ChallengeInfoMessage.dropBonus.');
            }
        };
        ChallengeInfoMessage.ID = 6022;
        return ChallengeInfoMessage;
    })(NetworkMessage);
    Protocol.ChallengeInfoMessage = ChallengeInfoMessage;
    var ChallengeResultMessage = (function (_super) {
        __extends(ChallengeResultMessage, _super);
        function ChallengeResultMessage() {
            this.challengeId = 0;
            this.success = false;
            _super.call(this);
        }
        ChallengeResultMessage.prototype.getMessageId = function () {
            return ChallengeResultMessage.ID;
        };
        ChallengeResultMessage.prototype.reset = function () {
            this.challengeId = 0;
            this.success = false;
        };
        ChallengeResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeResultMessage(param1);
        };
        ChallengeResultMessage.prototype.serializeAs_ChallengeResultMessage = function (param1) {
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element challengeId.');
            }
            param1.writeVarShort(this.challengeId);
            param1.writeBoolean(this.success);
        };
        ChallengeResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeResultMessage(param1);
        };
        ChallengeResultMessage.prototype.deserializeAs_ChallengeResultMessage = function (param1) {
            this.challengeId = param1.readVarUhShort();
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element of ChallengeResultMessage.challengeId.');
            }
            this.success = param1.readBoolean();
        };
        ChallengeResultMessage.ID = 6019;
        return ChallengeResultMessage;
    })(NetworkMessage);
    Protocol.ChallengeResultMessage = ChallengeResultMessage;
    var ChallengeTargetUpdateMessage = (function (_super) {
        __extends(ChallengeTargetUpdateMessage, _super);
        function ChallengeTargetUpdateMessage() {
            this.challengeId = 0;
            this.targetId = 0;
            _super.call(this);
        }
        ChallengeTargetUpdateMessage.prototype.getMessageId = function () {
            return ChallengeTargetUpdateMessage.ID;
        };
        ChallengeTargetUpdateMessage.prototype.reset = function () {
            this.challengeId = 0;
            this.targetId = 0;
        };
        ChallengeTargetUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeTargetUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeTargetUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeTargetUpdateMessage(param1);
        };
        ChallengeTargetUpdateMessage.prototype.serializeAs_ChallengeTargetUpdateMessage = function (param1) {
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element challengeId.');
            }
            param1.writeVarShort(this.challengeId);
            param1.writeInt(this.targetId);
        };
        ChallengeTargetUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeTargetUpdateMessage(param1);
        };
        ChallengeTargetUpdateMessage.prototype.deserializeAs_ChallengeTargetUpdateMessage = function (param1) {
            this.challengeId = param1.readVarUhShort();
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element of ChallengeTargetUpdateMessage.challengeId.');
            }
            this.targetId = param1.readInt();
        };
        ChallengeTargetUpdateMessage.ID = 6123;
        return ChallengeTargetUpdateMessage;
    })(NetworkMessage);
    Protocol.ChallengeTargetUpdateMessage = ChallengeTargetUpdateMessage;
    var ChallengeTargetsListMessage = (function (_super) {
        __extends(ChallengeTargetsListMessage, _super);
        function ChallengeTargetsListMessage() {
            this.targetIds = [];
            this.targetCells = [];
            _super.call(this);
        }
        ChallengeTargetsListMessage.prototype.getMessageId = function () {
            return ChallengeTargetsListMessage.ID;
        };
        ChallengeTargetsListMessage.prototype.reset = function () {
            this.targetIds = [];
            this.targetCells = [];
        };
        ChallengeTargetsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeTargetsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeTargetsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeTargetsListMessage(param1);
        };
        ChallengeTargetsListMessage.prototype.serializeAs_ChallengeTargetsListMessage = function (param1) {
            param1.writeShort(this.targetIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.targetIds.length) {
                param1.writeInt(this.targetIds[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.targetCells.length);
            var _loc3_ = 0;
            while (_loc3_ < this.targetCells.length) {
                if (this.targetCells[_loc3_] < -1 || this.targetCells[_loc3_] > 559) {
                    throw new Error('Forbidden value (' + this.targetCells[_loc3_] + ') on element 2 (starting at 1) of targetCells.');
                }
                param1.writeShort(this.targetCells[_loc3_]);
                _loc3_++;
            }
        };
        ChallengeTargetsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeTargetsListMessage(param1);
        };
        ChallengeTargetsListMessage.prototype.deserializeAs_ChallengeTargetsListMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readInt();
                this.targetIds.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readShort();
                if (_loc7_ < -1 || _loc7_ > 559) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of targetCells.');
                }
                this.targetCells.push(_loc7_);
                _loc5_++;
            }
        };
        ChallengeTargetsListMessage.ID = 5613;
        return ChallengeTargetsListMessage;
    })(NetworkMessage);
    Protocol.ChallengeTargetsListMessage = ChallengeTargetsListMessage;
    var ChallengeTargetsListRequestMessage = (function (_super) {
        __extends(ChallengeTargetsListRequestMessage, _super);
        function ChallengeTargetsListRequestMessage() {
            this.challengeId = 0;
            _super.call(this);
        }
        ChallengeTargetsListRequestMessage.prototype.getMessageId = function () {
            return ChallengeTargetsListRequestMessage.ID;
        };
        ChallengeTargetsListRequestMessage.prototype.reset = function () {
            this.challengeId = 0;
        };
        ChallengeTargetsListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeTargetsListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeTargetsListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeTargetsListRequestMessage(param1);
        };
        ChallengeTargetsListRequestMessage.prototype.serializeAs_ChallengeTargetsListRequestMessage = function (param1) {
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element challengeId.');
            }
            param1.writeVarShort(this.challengeId);
        };
        ChallengeTargetsListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeTargetsListRequestMessage(param1);
        };
        ChallengeTargetsListRequestMessage.prototype.deserializeAs_ChallengeTargetsListRequestMessage = function (param1) {
            this.challengeId = param1.readVarUhShort();
            if (this.challengeId < 0) {
                throw new Error('Forbidden value (' + this.challengeId + ') on element of ChallengeTargetsListRequestMessage.challengeId.');
            }
        };
        ChallengeTargetsListRequestMessage.ID = 5614;
        return ChallengeTargetsListRequestMessage;
    })(NetworkMessage);
    Protocol.ChallengeTargetsListRequestMessage = ChallengeTargetsListRequestMessage;
    var GameFightRefreshFighterMessage = (function (_super) {
        __extends(GameFightRefreshFighterMessage, _super);
        function GameFightRefreshFighterMessage() {
            this.informations = new GameContextActorInformations();
            _super.call(this);
        }
        GameFightRefreshFighterMessage.prototype.getMessageId = function () {
            return GameFightRefreshFighterMessage.ID;
        };
        GameFightRefreshFighterMessage.prototype.reset = function () {
            this.informations = new GameContextActorInformations();
        };
        GameFightRefreshFighterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightRefreshFighterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightRefreshFighterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightRefreshFighterMessage(param1);
        };
        GameFightRefreshFighterMessage.prototype.serializeAs_GameFightRefreshFighterMessage = function (param1) {
            param1.writeShort(this.informations.getTypeId());
            this.informations.serialize(param1);
        };
        GameFightRefreshFighterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightRefreshFighterMessage(param1);
        };
        GameFightRefreshFighterMessage.prototype.deserializeAs_GameFightRefreshFighterMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.informations = ProtocolTypeManager.getInstance(GameContextActorInformations, _loc2_);
            this.informations.deserialize(param1);
        };
        GameFightRefreshFighterMessage.ID = 6309;
        return GameFightRefreshFighterMessage;
    })(NetworkMessage);
    Protocol.GameFightRefreshFighterMessage = GameFightRefreshFighterMessage;
    var GameFightShowFighterMessage = (function (_super) {
        __extends(GameFightShowFighterMessage, _super);
        function GameFightShowFighterMessage() {
            this.informations = new GameFightFighterInformations();
            _super.call(this);
        }
        GameFightShowFighterMessage.prototype.getMessageId = function () {
            return GameFightShowFighterMessage.ID;
        };
        GameFightShowFighterMessage.prototype.reset = function () {
            this.informations = new GameFightFighterInformations();
        };
        GameFightShowFighterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightShowFighterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightShowFighterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightShowFighterMessage(param1);
        };
        GameFightShowFighterMessage.prototype.serializeAs_GameFightShowFighterMessage = function (param1) {
            param1.writeShort(this.informations.getTypeId());
            this.informations.serialize(param1);
        };
        GameFightShowFighterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightShowFighterMessage(param1);
        };
        GameFightShowFighterMessage.prototype.deserializeAs_GameFightShowFighterMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.informations = ProtocolTypeManager.getInstance(GameFightFighterInformations, _loc2_);
            this.informations.deserialize(param1);
        };
        GameFightShowFighterMessage.ID = 5864;
        return GameFightShowFighterMessage;
    })(NetworkMessage);
    Protocol.GameFightShowFighterMessage = GameFightShowFighterMessage;
    var GameFightShowFighterRandomStaticPoseMessage = (function (_super) {
        __extends(GameFightShowFighterRandomStaticPoseMessage, _super);
        function GameFightShowFighterRandomStaticPoseMessage() {
            _super.call(this);
        }
        GameFightShowFighterRandomStaticPoseMessage.prototype.getMessageId = function () {
            return GameFightShowFighterRandomStaticPoseMessage.ID;
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.reset = function () {
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameFightShowFighterRandomStaticPoseMessage(param1);
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.serializeAs_GameFightShowFighterRandomStaticPoseMessage = function (param1) {
            _super.prototype.serializeAs_GameFightShowFighterMessage.call(this, param1);
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightShowFighterRandomStaticPoseMessage(param1);
        };
        GameFightShowFighterRandomStaticPoseMessage.prototype.deserializeAs_GameFightShowFighterRandomStaticPoseMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameFightShowFighterRandomStaticPoseMessage.ID = 6218;
        return GameFightShowFighterRandomStaticPoseMessage;
    })(GameFightShowFighterMessage);
    Protocol.GameFightShowFighterRandomStaticPoseMessage = GameFightShowFighterRandomStaticPoseMessage;
    var GameDataPaddockObjectAddMessage = (function (_super) {
        __extends(GameDataPaddockObjectAddMessage, _super);
        function GameDataPaddockObjectAddMessage() {
            this.paddockItemDescription = new PaddockItem();
            _super.call(this);
        }
        GameDataPaddockObjectAddMessage.prototype.getMessageId = function () {
            return GameDataPaddockObjectAddMessage.ID;
        };
        GameDataPaddockObjectAddMessage.prototype.reset = function () {
            this.paddockItemDescription = new PaddockItem();
        };
        GameDataPaddockObjectAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameDataPaddockObjectAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameDataPaddockObjectAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameDataPaddockObjectAddMessage(param1);
        };
        GameDataPaddockObjectAddMessage.prototype.serializeAs_GameDataPaddockObjectAddMessage = function (param1) {
            this.paddockItemDescription.serializeAs_PaddockItem(param1);
        };
        GameDataPaddockObjectAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameDataPaddockObjectAddMessage(param1);
        };
        GameDataPaddockObjectAddMessage.prototype.deserializeAs_GameDataPaddockObjectAddMessage = function (param1) {
            this.paddockItemDescription = new PaddockItem();
            this.paddockItemDescription.deserialize(param1);
        };
        GameDataPaddockObjectAddMessage.ID = 5990;
        return GameDataPaddockObjectAddMessage;
    })(NetworkMessage);
    Protocol.GameDataPaddockObjectAddMessage = GameDataPaddockObjectAddMessage;
    var GameDataPaddockObjectListAddMessage = (function (_super) {
        __extends(GameDataPaddockObjectListAddMessage, _super);
        function GameDataPaddockObjectListAddMessage() {
            this.paddockItemDescription = [];
            _super.call(this);
        }
        GameDataPaddockObjectListAddMessage.prototype.getMessageId = function () {
            return GameDataPaddockObjectListAddMessage.ID;
        };
        GameDataPaddockObjectListAddMessage.prototype.reset = function () {
            this.paddockItemDescription = [];
        };
        GameDataPaddockObjectListAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameDataPaddockObjectListAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameDataPaddockObjectListAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameDataPaddockObjectListAddMessage(param1);
        };
        GameDataPaddockObjectListAddMessage.prototype.serializeAs_GameDataPaddockObjectListAddMessage = function (param1) {
            param1.writeShort(this.paddockItemDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.paddockItemDescription.length) {
                (this.paddockItemDescription[_loc2_]).serializeAs_PaddockItem(param1);
                _loc2_++;
            }
        };
        GameDataPaddockObjectListAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameDataPaddockObjectListAddMessage(param1);
        };
        GameDataPaddockObjectListAddMessage.prototype.deserializeAs_GameDataPaddockObjectListAddMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PaddockItem();
                _loc4_.deserialize(param1);
                this.paddockItemDescription.push(_loc4_);
                _loc3_++;
            }
        };
        GameDataPaddockObjectListAddMessage.ID = 5992;
        return GameDataPaddockObjectListAddMessage;
    })(NetworkMessage);
    Protocol.GameDataPaddockObjectListAddMessage = GameDataPaddockObjectListAddMessage;
    var GameDataPaddockObjectRemoveMessage = (function (_super) {
        __extends(GameDataPaddockObjectRemoveMessage, _super);
        function GameDataPaddockObjectRemoveMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        GameDataPaddockObjectRemoveMessage.prototype.getMessageId = function () {
            return GameDataPaddockObjectRemoveMessage.ID;
        };
        GameDataPaddockObjectRemoveMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        GameDataPaddockObjectRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameDataPaddockObjectRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameDataPaddockObjectRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameDataPaddockObjectRemoveMessage(param1);
        };
        GameDataPaddockObjectRemoveMessage.prototype.serializeAs_GameDataPaddockObjectRemoveMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        GameDataPaddockObjectRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameDataPaddockObjectRemoveMessage(param1);
        };
        GameDataPaddockObjectRemoveMessage.prototype.deserializeAs_GameDataPaddockObjectRemoveMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameDataPaddockObjectRemoveMessage.cellId.');
            }
        };
        GameDataPaddockObjectRemoveMessage.ID = 5993;
        return GameDataPaddockObjectRemoveMessage;
    })(NetworkMessage);
    Protocol.GameDataPaddockObjectRemoveMessage = GameDataPaddockObjectRemoveMessage;
    var MountDataErrorMessage = (function (_super) {
        __extends(MountDataErrorMessage, _super);
        function MountDataErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        MountDataErrorMessage.prototype.getMessageId = function () {
            return MountDataErrorMessage.ID;
        };
        MountDataErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        MountDataErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountDataErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountDataErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountDataErrorMessage(param1);
        };
        MountDataErrorMessage.prototype.serializeAs_MountDataErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        MountDataErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountDataErrorMessage(param1);
        };
        MountDataErrorMessage.prototype.deserializeAs_MountDataErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of MountDataErrorMessage.reason.');
            }
        };
        MountDataErrorMessage.ID = 6172;
        return MountDataErrorMessage;
    })(NetworkMessage);
    Protocol.MountDataErrorMessage = MountDataErrorMessage;
    var MountDataMessage = (function (_super) {
        __extends(MountDataMessage, _super);
        function MountDataMessage() {
            this.mountData = new MountClientData();
            _super.call(this);
        }
        MountDataMessage.prototype.getMessageId = function () {
            return MountDataMessage.ID;
        };
        MountDataMessage.prototype.reset = function () {
            this.mountData = new MountClientData();
        };
        MountDataMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountDataMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountDataMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountDataMessage(param1);
        };
        MountDataMessage.prototype.serializeAs_MountDataMessage = function (param1) {
            this.mountData.serializeAs_MountClientData(param1);
        };
        MountDataMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountDataMessage(param1);
        };
        MountDataMessage.prototype.deserializeAs_MountDataMessage = function (param1) {
            this.mountData = new MountClientData();
            this.mountData.deserialize(param1);
        };
        MountDataMessage.ID = 5973;
        return MountDataMessage;
    })(NetworkMessage);
    Protocol.MountDataMessage = MountDataMessage;
    var MountEmoteIconUsedOkMessage = (function (_super) {
        __extends(MountEmoteIconUsedOkMessage, _super);
        function MountEmoteIconUsedOkMessage() {
            this.mountId = 0;
            this.reactionType = 0;
            _super.call(this);
        }
        MountEmoteIconUsedOkMessage.prototype.getMessageId = function () {
            return MountEmoteIconUsedOkMessage.ID;
        };
        MountEmoteIconUsedOkMessage.prototype.reset = function () {
            this.mountId = 0;
            this.reactionType = 0;
        };
        MountEmoteIconUsedOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountEmoteIconUsedOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountEmoteIconUsedOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountEmoteIconUsedOkMessage(param1);
        };
        MountEmoteIconUsedOkMessage.prototype.serializeAs_MountEmoteIconUsedOkMessage = function (param1) {
            param1.writeVarInt(this.mountId);
            if (this.reactionType < 0) {
                throw new Error('Forbidden value (' + this.reactionType + ') on element reactionType.');
            }
            param1.writeByte(this.reactionType);
        };
        MountEmoteIconUsedOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountEmoteIconUsedOkMessage(param1);
        };
        MountEmoteIconUsedOkMessage.prototype.deserializeAs_MountEmoteIconUsedOkMessage = function (param1) {
            this.mountId = param1.readVarInt();
            this.reactionType = param1.readByte();
            if (this.reactionType < 0) {
                throw new Error('Forbidden value (' + this.reactionType + ') on element of MountEmoteIconUsedOkMessage.reactionType.');
            }
        };
        MountEmoteIconUsedOkMessage.ID = 5978;
        return MountEmoteIconUsedOkMessage;
    })(NetworkMessage);
    Protocol.MountEmoteIconUsedOkMessage = MountEmoteIconUsedOkMessage;
    var MountEquipedErrorMessage = (function (_super) {
        __extends(MountEquipedErrorMessage, _super);
        function MountEquipedErrorMessage() {
            this.errorType = 0;
            _super.call(this);
        }
        MountEquipedErrorMessage.prototype.getMessageId = function () {
            return MountEquipedErrorMessage.ID;
        };
        MountEquipedErrorMessage.prototype.reset = function () {
            this.errorType = 0;
        };
        MountEquipedErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountEquipedErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountEquipedErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountEquipedErrorMessage(param1);
        };
        MountEquipedErrorMessage.prototype.serializeAs_MountEquipedErrorMessage = function (param1) {
            param1.writeByte(this.errorType);
        };
        MountEquipedErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountEquipedErrorMessage(param1);
        };
        MountEquipedErrorMessage.prototype.deserializeAs_MountEquipedErrorMessage = function (param1) {
            this.errorType = param1.readByte();
            if (this.errorType < 0) {
                throw new Error('Forbidden value (' + this.errorType + ') on element of MountEquipedErrorMessage.errorType.');
            }
        };
        MountEquipedErrorMessage.ID = 5963;
        return MountEquipedErrorMessage;
    })(NetworkMessage);
    Protocol.MountEquipedErrorMessage = MountEquipedErrorMessage;
    var MountFeedRequestMessage = (function (_super) {
        __extends(MountFeedRequestMessage, _super);
        function MountFeedRequestMessage() {
            this.mountUid = 0;
            this.mountLocation = 0;
            this.mountFoodUid = 0;
            this.quantity = 0;
            _super.call(this);
        }
        MountFeedRequestMessage.prototype.getMessageId = function () {
            return MountFeedRequestMessage.ID;
        };
        MountFeedRequestMessage.prototype.reset = function () {
            this.mountUid = 0;
            this.mountLocation = 0;
            this.mountFoodUid = 0;
            this.quantity = 0;
        };
        MountFeedRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountFeedRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountFeedRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountFeedRequestMessage(param1);
        };
        MountFeedRequestMessage.prototype.serializeAs_MountFeedRequestMessage = function (param1) {
            if (this.mountUid < 0) {
                throw new Error('Forbidden value (' + this.mountUid + ') on element mountUid.');
            }
            param1.writeVarInt(this.mountUid);
            param1.writeByte(this.mountLocation);
            if (this.mountFoodUid < 0) {
                throw new Error('Forbidden value (' + this.mountFoodUid + ') on element mountFoodUid.');
            }
            param1.writeVarInt(this.mountFoodUid);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        MountFeedRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountFeedRequestMessage(param1);
        };
        MountFeedRequestMessage.prototype.deserializeAs_MountFeedRequestMessage = function (param1) {
            this.mountUid = param1.readVarUhInt();
            if (this.mountUid < 0) {
                throw new Error('Forbidden value (' + this.mountUid + ') on element of MountFeedRequestMessage.mountUid.');
            }
            this.mountLocation = param1.readByte();
            this.mountFoodUid = param1.readVarUhInt();
            if (this.mountFoodUid < 0) {
                throw new Error('Forbidden value (' + this.mountFoodUid + ') on element of MountFeedRequestMessage.mountFoodUid.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of MountFeedRequestMessage.quantity.');
            }
        };
        MountFeedRequestMessage.ID = 6189;
        return MountFeedRequestMessage;
    })(NetworkMessage);
    Protocol.MountFeedRequestMessage = MountFeedRequestMessage;
    var MountInformationInPaddockRequestMessage = (function (_super) {
        __extends(MountInformationInPaddockRequestMessage, _super);
        function MountInformationInPaddockRequestMessage() {
            this.mapRideId = 0;
            _super.call(this);
        }
        MountInformationInPaddockRequestMessage.prototype.getMessageId = function () {
            return MountInformationInPaddockRequestMessage.ID;
        };
        MountInformationInPaddockRequestMessage.prototype.reset = function () {
            this.mapRideId = 0;
        };
        MountInformationInPaddockRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountInformationInPaddockRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountInformationInPaddockRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountInformationInPaddockRequestMessage(param1);
        };
        MountInformationInPaddockRequestMessage.prototype.serializeAs_MountInformationInPaddockRequestMessage = function (param1) {
            param1.writeVarInt(this.mapRideId);
        };
        MountInformationInPaddockRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountInformationInPaddockRequestMessage(param1);
        };
        MountInformationInPaddockRequestMessage.prototype.deserializeAs_MountInformationInPaddockRequestMessage = function (param1) {
            this.mapRideId = param1.readVarInt();
        };
        MountInformationInPaddockRequestMessage.ID = 5975;
        return MountInformationInPaddockRequestMessage;
    })(NetworkMessage);
    Protocol.MountInformationInPaddockRequestMessage = MountInformationInPaddockRequestMessage;
    var MountInformationRequestMessage = (function (_super) {
        __extends(MountInformationRequestMessage, _super);
        function MountInformationRequestMessage() {
            this.id = 0;
            this.time = 0;
            _super.call(this);
        }
        MountInformationRequestMessage.prototype.getMessageId = function () {
            return MountInformationRequestMessage.ID;
        };
        MountInformationRequestMessage.prototype.reset = function () {
            this.id = 0;
            this.time = 0;
        };
        MountInformationRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountInformationRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountInformationRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountInformationRequestMessage(param1);
        };
        MountInformationRequestMessage.prototype.serializeAs_MountInformationRequestMessage = function (param1) {
            if (this.id < -9.007199254740992E15 || this.id > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeDouble(this.id);
            if (this.time < -9.007199254740992E15 || this.time > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.time + ') on element time.');
            }
            param1.writeDouble(this.time);
        };
        MountInformationRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountInformationRequestMessage(param1);
        };
        MountInformationRequestMessage.prototype.deserializeAs_MountInformationRequestMessage = function (param1) {
            this.id = param1.readDouble();
            if (this.id < -9.007199254740992E15 || this.id > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.id + ') on element of MountInformationRequestMessage.id.');
            }
            this.time = param1.readDouble();
            if (this.time < -9.007199254740992E15 || this.time > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.time + ') on element of MountInformationRequestMessage.time.');
            }
        };
        MountInformationRequestMessage.ID = 5972;
        return MountInformationRequestMessage;
    })(NetworkMessage);
    Protocol.MountInformationRequestMessage = MountInformationRequestMessage;
    var MountReleaseRequestMessage = (function (_super) {
        __extends(MountReleaseRequestMessage, _super);
        function MountReleaseRequestMessage() {
            _super.call(this);
        }
        MountReleaseRequestMessage.prototype.getMessageId = function () {
            return MountReleaseRequestMessage.ID;
        };
        MountReleaseRequestMessage.prototype.reset = function () {
        };
        MountReleaseRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountReleaseRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountReleaseRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountReleaseRequestMessage(param1);
        };
        MountReleaseRequestMessage.prototype.serializeAs_MountReleaseRequestMessage = function (param1) {
        };
        MountReleaseRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountReleaseRequestMessage(param1);
        };
        MountReleaseRequestMessage.prototype.deserializeAs_MountReleaseRequestMessage = function (param1) {
        };
        MountReleaseRequestMessage.ID = 5980;
        return MountReleaseRequestMessage;
    })(NetworkMessage);
    Protocol.MountReleaseRequestMessage = MountReleaseRequestMessage;
    var MountReleasedMessage = (function (_super) {
        __extends(MountReleasedMessage, _super);
        function MountReleasedMessage() {
            this.mountId = 0;
            _super.call(this);
        }
        MountReleasedMessage.prototype.getMessageId = function () {
            return MountReleasedMessage.ID;
        };
        MountReleasedMessage.prototype.reset = function () {
            this.mountId = 0;
        };
        MountReleasedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountReleasedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountReleasedMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountReleasedMessage(param1);
        };
        MountReleasedMessage.prototype.serializeAs_MountReleasedMessage = function (param1) {
            param1.writeVarInt(this.mountId);
        };
        MountReleasedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountReleasedMessage(param1);
        };
        MountReleasedMessage.prototype.deserializeAs_MountReleasedMessage = function (param1) {
            this.mountId = param1.readVarInt();
        };
        MountReleasedMessage.ID = 6308;
        return MountReleasedMessage;
    })(NetworkMessage);
    Protocol.MountReleasedMessage = MountReleasedMessage;
    var MountRenameRequestMessage = (function (_super) {
        __extends(MountRenameRequestMessage, _super);
        function MountRenameRequestMessage() {
            this.name = '';
            this.mountId = 0;
            _super.call(this);
        }
        MountRenameRequestMessage.prototype.getMessageId = function () {
            return MountRenameRequestMessage.ID;
        };
        MountRenameRequestMessage.prototype.reset = function () {
            this.name = '';
            this.mountId = 0;
        };
        MountRenameRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountRenameRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountRenameRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountRenameRequestMessage(param1);
        };
        MountRenameRequestMessage.prototype.serializeAs_MountRenameRequestMessage = function (param1) {
            param1.writeUTF(this.name);
            param1.writeVarInt(this.mountId);
        };
        MountRenameRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountRenameRequestMessage(param1);
        };
        MountRenameRequestMessage.prototype.deserializeAs_MountRenameRequestMessage = function (param1) {
            this.name = param1.readUTF();
            this.mountId = param1.readVarInt();
        };
        MountRenameRequestMessage.ID = 5987;
        return MountRenameRequestMessage;
    })(NetworkMessage);
    Protocol.MountRenameRequestMessage = MountRenameRequestMessage;
    var MountRenamedMessage = (function (_super) {
        __extends(MountRenamedMessage, _super);
        function MountRenamedMessage() {
            this.mountId = 0;
            this.name = '';
            _super.call(this);
        }
        MountRenamedMessage.prototype.getMessageId = function () {
            return MountRenamedMessage.ID;
        };
        MountRenamedMessage.prototype.reset = function () {
            this.mountId = 0;
            this.name = '';
        };
        MountRenamedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountRenamedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountRenamedMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountRenamedMessage(param1);
        };
        MountRenamedMessage.prototype.serializeAs_MountRenamedMessage = function (param1) {
            param1.writeVarInt(this.mountId);
            param1.writeUTF(this.name);
        };
        MountRenamedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountRenamedMessage(param1);
        };
        MountRenamedMessage.prototype.deserializeAs_MountRenamedMessage = function (param1) {
            this.mountId = param1.readVarInt();
            this.name = param1.readUTF();
        };
        MountRenamedMessage.ID = 5983;
        return MountRenamedMessage;
    })(NetworkMessage);
    Protocol.MountRenamedMessage = MountRenamedMessage;
    var MountRidingMessage = (function (_super) {
        __extends(MountRidingMessage, _super);
        function MountRidingMessage() {
            this.isRiding = false;
            _super.call(this);
        }
        MountRidingMessage.prototype.getMessageId = function () {
            return MountRidingMessage.ID;
        };
        MountRidingMessage.prototype.reset = function () {
            this.isRiding = false;
        };
        MountRidingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountRidingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountRidingMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountRidingMessage(param1);
        };
        MountRidingMessage.prototype.serializeAs_MountRidingMessage = function (param1) {
            param1.writeBoolean(this.isRiding);
        };
        MountRidingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountRidingMessage(param1);
        };
        MountRidingMessage.prototype.deserializeAs_MountRidingMessage = function (param1) {
            this.isRiding = param1.readBoolean();
        };
        MountRidingMessage.ID = 5967;
        return MountRidingMessage;
    })(NetworkMessage);
    Protocol.MountRidingMessage = MountRidingMessage;
    var MountSetMessage = (function (_super) {
        __extends(MountSetMessage, _super);
        function MountSetMessage() {
            this.mountData = new MountClientData();
            _super.call(this);
        }
        MountSetMessage.prototype.getMessageId = function () {
            return MountSetMessage.ID;
        };
        MountSetMessage.prototype.reset = function () {
            this.mountData = new MountClientData();
        };
        MountSetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountSetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountSetMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountSetMessage(param1);
        };
        MountSetMessage.prototype.serializeAs_MountSetMessage = function (param1) {
            this.mountData.serializeAs_MountClientData(param1);
        };
        MountSetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountSetMessage(param1);
        };
        MountSetMessage.prototype.deserializeAs_MountSetMessage = function (param1) {
            this.mountData = new MountClientData();
            this.mountData.deserialize(param1);
        };
        MountSetMessage.ID = 5968;
        return MountSetMessage;
    })(NetworkMessage);
    Protocol.MountSetMessage = MountSetMessage;
    var MountSetXpRatioRequestMessage = (function (_super) {
        __extends(MountSetXpRatioRequestMessage, _super);
        function MountSetXpRatioRequestMessage() {
            this.xpRatio = 0;
            _super.call(this);
        }
        MountSetXpRatioRequestMessage.prototype.getMessageId = function () {
            return MountSetXpRatioRequestMessage.ID;
        };
        MountSetXpRatioRequestMessage.prototype.reset = function () {
            this.xpRatio = 0;
        };
        MountSetXpRatioRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountSetXpRatioRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountSetXpRatioRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountSetXpRatioRequestMessage(param1);
        };
        MountSetXpRatioRequestMessage.prototype.serializeAs_MountSetXpRatioRequestMessage = function (param1) {
            if (this.xpRatio < 0) {
                throw new Error('Forbidden value (' + this.xpRatio + ') on element xpRatio.');
            }
            param1.writeByte(this.xpRatio);
        };
        MountSetXpRatioRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountSetXpRatioRequestMessage(param1);
        };
        MountSetXpRatioRequestMessage.prototype.deserializeAs_MountSetXpRatioRequestMessage = function (param1) {
            this.xpRatio = param1.readByte();
            if (this.xpRatio < 0) {
                throw new Error('Forbidden value (' + this.xpRatio + ') on element of MountSetXpRatioRequestMessage.xpRatio.');
            }
        };
        MountSetXpRatioRequestMessage.ID = 5989;
        return MountSetXpRatioRequestMessage;
    })(NetworkMessage);
    Protocol.MountSetXpRatioRequestMessage = MountSetXpRatioRequestMessage;
    var MountSterilizeRequestMessage = (function (_super) {
        __extends(MountSterilizeRequestMessage, _super);
        function MountSterilizeRequestMessage() {
            _super.call(this);
        }
        MountSterilizeRequestMessage.prototype.getMessageId = function () {
            return MountSterilizeRequestMessage.ID;
        };
        MountSterilizeRequestMessage.prototype.reset = function () {
        };
        MountSterilizeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountSterilizeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountSterilizeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountSterilizeRequestMessage(param1);
        };
        MountSterilizeRequestMessage.prototype.serializeAs_MountSterilizeRequestMessage = function (param1) {
        };
        MountSterilizeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountSterilizeRequestMessage(param1);
        };
        MountSterilizeRequestMessage.prototype.deserializeAs_MountSterilizeRequestMessage = function (param1) {
        };
        MountSterilizeRequestMessage.ID = 5962;
        return MountSterilizeRequestMessage;
    })(NetworkMessage);
    Protocol.MountSterilizeRequestMessage = MountSterilizeRequestMessage;
    var MountSterilizedMessage = (function (_super) {
        __extends(MountSterilizedMessage, _super);
        function MountSterilizedMessage() {
            this.mountId = 0;
            _super.call(this);
        }
        MountSterilizedMessage.prototype.getMessageId = function () {
            return MountSterilizedMessage.ID;
        };
        MountSterilizedMessage.prototype.reset = function () {
            this.mountId = 0;
        };
        MountSterilizedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountSterilizedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountSterilizedMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountSterilizedMessage(param1);
        };
        MountSterilizedMessage.prototype.serializeAs_MountSterilizedMessage = function (param1) {
            param1.writeVarInt(this.mountId);
        };
        MountSterilizedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountSterilizedMessage(param1);
        };
        MountSterilizedMessage.prototype.deserializeAs_MountSterilizedMessage = function (param1) {
            this.mountId = param1.readVarInt();
        };
        MountSterilizedMessage.ID = 5977;
        return MountSterilizedMessage;
    })(NetworkMessage);
    Protocol.MountSterilizedMessage = MountSterilizedMessage;
    var MountToggleRidingRequestMessage = (function (_super) {
        __extends(MountToggleRidingRequestMessage, _super);
        function MountToggleRidingRequestMessage() {
            _super.call(this);
        }
        MountToggleRidingRequestMessage.prototype.getMessageId = function () {
            return MountToggleRidingRequestMessage.ID;
        };
        MountToggleRidingRequestMessage.prototype.reset = function () {
        };
        MountToggleRidingRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountToggleRidingRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountToggleRidingRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountToggleRidingRequestMessage(param1);
        };
        MountToggleRidingRequestMessage.prototype.serializeAs_MountToggleRidingRequestMessage = function (param1) {
        };
        MountToggleRidingRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountToggleRidingRequestMessage(param1);
        };
        MountToggleRidingRequestMessage.prototype.deserializeAs_MountToggleRidingRequestMessage = function (param1) {
        };
        MountToggleRidingRequestMessage.ID = 5976;
        return MountToggleRidingRequestMessage;
    })(NetworkMessage);
    Protocol.MountToggleRidingRequestMessage = MountToggleRidingRequestMessage;
    var MountUnSetMessage = (function (_super) {
        __extends(MountUnSetMessage, _super);
        function MountUnSetMessage() {
            _super.call(this);
        }
        MountUnSetMessage.prototype.getMessageId = function () {
            return MountUnSetMessage.ID;
        };
        MountUnSetMessage.prototype.reset = function () {
        };
        MountUnSetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountUnSetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountUnSetMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountUnSetMessage(param1);
        };
        MountUnSetMessage.prototype.serializeAs_MountUnSetMessage = function (param1) {
        };
        MountUnSetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountUnSetMessage(param1);
        };
        MountUnSetMessage.prototype.deserializeAs_MountUnSetMessage = function (param1) {
        };
        MountUnSetMessage.ID = 5982;
        return MountUnSetMessage;
    })(NetworkMessage);
    Protocol.MountUnSetMessage = MountUnSetMessage;
    var MountXpRatioMessage = (function (_super) {
        __extends(MountXpRatioMessage, _super);
        function MountXpRatioMessage() {
            this.ratio = 0;
            _super.call(this);
        }
        MountXpRatioMessage.prototype.getMessageId = function () {
            return MountXpRatioMessage.ID;
        };
        MountXpRatioMessage.prototype.reset = function () {
            this.ratio = 0;
        };
        MountXpRatioMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MountXpRatioMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MountXpRatioMessage.prototype.serialize = function (param1) {
            this.serializeAs_MountXpRatioMessage(param1);
        };
        MountXpRatioMessage.prototype.serializeAs_MountXpRatioMessage = function (param1) {
            if (this.ratio < 0) {
                throw new Error('Forbidden value (' + this.ratio + ') on element ratio.');
            }
            param1.writeByte(this.ratio);
        };
        MountXpRatioMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MountXpRatioMessage(param1);
        };
        MountXpRatioMessage.prototype.deserializeAs_MountXpRatioMessage = function (param1) {
            this.ratio = param1.readByte();
            if (this.ratio < 0) {
                throw new Error('Forbidden value (' + this.ratio + ') on element of MountXpRatioMessage.ratio.');
            }
        };
        MountXpRatioMessage.ID = 5970;
        return MountXpRatioMessage;
    })(NetworkMessage);
    Protocol.MountXpRatioMessage = MountXpRatioMessage;
    var PaddockBuyRequestMessage = (function (_super) {
        __extends(PaddockBuyRequestMessage, _super);
        function PaddockBuyRequestMessage() {
            this.proposedPrice = 0;
            _super.call(this);
        }
        PaddockBuyRequestMessage.prototype.getMessageId = function () {
            return PaddockBuyRequestMessage.ID;
        };
        PaddockBuyRequestMessage.prototype.reset = function () {
            this.proposedPrice = 0;
        };
        PaddockBuyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockBuyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockBuyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockBuyRequestMessage(param1);
        };
        PaddockBuyRequestMessage.prototype.serializeAs_PaddockBuyRequestMessage = function (param1) {
            if (this.proposedPrice < 0) {
                throw new Error('Forbidden value (' + this.proposedPrice + ') on element proposedPrice.');
            }
            param1.writeVarInt(this.proposedPrice);
        };
        PaddockBuyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockBuyRequestMessage(param1);
        };
        PaddockBuyRequestMessage.prototype.deserializeAs_PaddockBuyRequestMessage = function (param1) {
            this.proposedPrice = param1.readVarUhInt();
            if (this.proposedPrice < 0) {
                throw new Error('Forbidden value (' + this.proposedPrice + ') on element of PaddockBuyRequestMessage.proposedPrice.');
            }
        };
        PaddockBuyRequestMessage.ID = 5951;
        return PaddockBuyRequestMessage;
    })(NetworkMessage);
    Protocol.PaddockBuyRequestMessage = PaddockBuyRequestMessage;
    var PaddockBuyResultMessage = (function (_super) {
        __extends(PaddockBuyResultMessage, _super);
        function PaddockBuyResultMessage() {
            this.paddockId = 0;
            this.bought = false;
            this.realPrice = 0;
            _super.call(this);
        }
        PaddockBuyResultMessage.prototype.getMessageId = function () {
            return PaddockBuyResultMessage.ID;
        };
        PaddockBuyResultMessage.prototype.reset = function () {
            this.paddockId = 0;
            this.bought = false;
            this.realPrice = 0;
        };
        PaddockBuyResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockBuyResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockBuyResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockBuyResultMessage(param1);
        };
        PaddockBuyResultMessage.prototype.serializeAs_PaddockBuyResultMessage = function (param1) {
            param1.writeInt(this.paddockId);
            param1.writeBoolean(this.bought);
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element realPrice.');
            }
            param1.writeVarInt(this.realPrice);
        };
        PaddockBuyResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockBuyResultMessage(param1);
        };
        PaddockBuyResultMessage.prototype.deserializeAs_PaddockBuyResultMessage = function (param1) {
            this.paddockId = param1.readInt();
            this.bought = param1.readBoolean();
            this.realPrice = param1.readVarUhInt();
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element of PaddockBuyResultMessage.realPrice.');
            }
        };
        PaddockBuyResultMessage.ID = 6516;
        return PaddockBuyResultMessage;
    })(NetworkMessage);
    Protocol.PaddockBuyResultMessage = PaddockBuyResultMessage;
    var PaddockMoveItemRequestMessage = (function (_super) {
        __extends(PaddockMoveItemRequestMessage, _super);
        function PaddockMoveItemRequestMessage() {
            this.oldCellId = 0;
            this.newCellId = 0;
            _super.call(this);
        }
        PaddockMoveItemRequestMessage.prototype.getMessageId = function () {
            return PaddockMoveItemRequestMessage.ID;
        };
        PaddockMoveItemRequestMessage.prototype.reset = function () {
            this.oldCellId = 0;
            this.newCellId = 0;
        };
        PaddockMoveItemRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockMoveItemRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockMoveItemRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockMoveItemRequestMessage(param1);
        };
        PaddockMoveItemRequestMessage.prototype.serializeAs_PaddockMoveItemRequestMessage = function (param1) {
            if (this.oldCellId < 0 || this.oldCellId > 559) {
                throw new Error('Forbidden value (' + this.oldCellId + ') on element oldCellId.');
            }
            param1.writeVarShort(this.oldCellId);
            if (this.newCellId < 0 || this.newCellId > 559) {
                throw new Error('Forbidden value (' + this.newCellId + ') on element newCellId.');
            }
            param1.writeVarShort(this.newCellId);
        };
        PaddockMoveItemRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockMoveItemRequestMessage(param1);
        };
        PaddockMoveItemRequestMessage.prototype.deserializeAs_PaddockMoveItemRequestMessage = function (param1) {
            this.oldCellId = param1.readVarUhShort();
            if (this.oldCellId < 0 || this.oldCellId > 559) {
                throw new Error('Forbidden value (' + this.oldCellId + ') on element of PaddockMoveItemRequestMessage.oldCellId.');
            }
            this.newCellId = param1.readVarUhShort();
            if (this.newCellId < 0 || this.newCellId > 559) {
                throw new Error('Forbidden value (' + this.newCellId + ') on element of PaddockMoveItemRequestMessage.newCellId.');
            }
        };
        PaddockMoveItemRequestMessage.ID = 6052;
        return PaddockMoveItemRequestMessage;
    })(NetworkMessage);
    Protocol.PaddockMoveItemRequestMessage = PaddockMoveItemRequestMessage;
    var PaddockRemoveItemRequestMessage = (function (_super) {
        __extends(PaddockRemoveItemRequestMessage, _super);
        function PaddockRemoveItemRequestMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        PaddockRemoveItemRequestMessage.prototype.getMessageId = function () {
            return PaddockRemoveItemRequestMessage.ID;
        };
        PaddockRemoveItemRequestMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        PaddockRemoveItemRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockRemoveItemRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockRemoveItemRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockRemoveItemRequestMessage(param1);
        };
        PaddockRemoveItemRequestMessage.prototype.serializeAs_PaddockRemoveItemRequestMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        PaddockRemoveItemRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockRemoveItemRequestMessage(param1);
        };
        PaddockRemoveItemRequestMessage.prototype.deserializeAs_PaddockRemoveItemRequestMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of PaddockRemoveItemRequestMessage.cellId.');
            }
        };
        PaddockRemoveItemRequestMessage.ID = 5958;
        return PaddockRemoveItemRequestMessage;
    })(NetworkMessage);
    Protocol.PaddockRemoveItemRequestMessage = PaddockRemoveItemRequestMessage;
    var PaddockSellRequestMessage = (function (_super) {
        __extends(PaddockSellRequestMessage, _super);
        function PaddockSellRequestMessage() {
            this.price = 0;
            _super.call(this);
        }
        PaddockSellRequestMessage.prototype.getMessageId = function () {
            return PaddockSellRequestMessage.ID;
        };
        PaddockSellRequestMessage.prototype.reset = function () {
            this.price = 0;
        };
        PaddockSellRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockSellRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockSellRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockSellRequestMessage(param1);
        };
        PaddockSellRequestMessage.prototype.serializeAs_PaddockSellRequestMessage = function (param1) {
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        PaddockSellRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockSellRequestMessage(param1);
        };
        PaddockSellRequestMessage.prototype.deserializeAs_PaddockSellRequestMessage = function (param1) {
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of PaddockSellRequestMessage.price.');
            }
        };
        PaddockSellRequestMessage.ID = 5953;
        return PaddockSellRequestMessage;
    })(NetworkMessage);
    Protocol.PaddockSellRequestMessage = PaddockSellRequestMessage;
    var NotificationByServerMessage = (function (_super) {
        __extends(NotificationByServerMessage, _super);
        function NotificationByServerMessage() {
            this.id = 0;
            this.parameters = [];
            this.forceOpen = false;
            _super.call(this);
        }
        NotificationByServerMessage.prototype.getMessageId = function () {
            return NotificationByServerMessage.ID;
        };
        NotificationByServerMessage.prototype.reset = function () {
            this.id = 0;
            this.parameters = [];
            this.forceOpen = false;
        };
        NotificationByServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NotificationByServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NotificationByServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_NotificationByServerMessage(param1);
        };
        NotificationByServerMessage.prototype.serializeAs_NotificationByServerMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            param1.writeShort(this.parameters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parameters.length) {
                param1.writeUTF(this.parameters[_loc2_]);
                _loc2_++;
            }
            param1.writeBoolean(this.forceOpen);
        };
        NotificationByServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NotificationByServerMessage(param1);
        };
        NotificationByServerMessage.prototype.deserializeAs_NotificationByServerMessage = function (param1) {
            var _loc4_ = null;
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of NotificationByServerMessage.id.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.parameters.push(_loc4_);
                _loc3_++;
            }
            this.forceOpen = param1.readBoolean();
        };
        NotificationByServerMessage.ID = 6103;
        return NotificationByServerMessage;
    })(NetworkMessage);
    Protocol.NotificationByServerMessage = NotificationByServerMessage;
    var NotificationListMessage = (function (_super) {
        __extends(NotificationListMessage, _super);
        function NotificationListMessage() {
            this.flags = [];
            _super.call(this);
        }
        NotificationListMessage.prototype.getMessageId = function () {
            return NotificationListMessage.ID;
        };
        NotificationListMessage.prototype.reset = function () {
            this.flags = [];
        };
        NotificationListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NotificationListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NotificationListMessage.prototype.serialize = function (param1) {
            this.serializeAs_NotificationListMessage(param1);
        };
        NotificationListMessage.prototype.serializeAs_NotificationListMessage = function (param1) {
            param1.writeShort(this.flags.length);
            var _loc2_ = 0;
            while (_loc2_ < this.flags.length) {
                param1.writeVarInt(this.flags[_loc2_]);
                _loc2_++;
            }
        };
        NotificationListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NotificationListMessage(param1);
        };
        NotificationListMessage.prototype.deserializeAs_NotificationListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarInt();
                this.flags.push(_loc4_);
                _loc3_++;
            }
        };
        NotificationListMessage.ID = 6087;
        return NotificationListMessage;
    })(NetworkMessage);
    Protocol.NotificationListMessage = NotificationListMessage;
    var NotificationResetMessage = (function (_super) {
        __extends(NotificationResetMessage, _super);
        function NotificationResetMessage() {
            _super.call(this);
        }
        NotificationResetMessage.prototype.getMessageId = function () {
            return NotificationResetMessage.ID;
        };
        NotificationResetMessage.prototype.reset = function () {
        };
        NotificationResetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NotificationResetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NotificationResetMessage.prototype.serialize = function (param1) {
            this.serializeAs_NotificationResetMessage(param1);
        };
        NotificationResetMessage.prototype.serializeAs_NotificationResetMessage = function (param1) {
        };
        NotificationResetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NotificationResetMessage(param1);
        };
        NotificationResetMessage.prototype.deserializeAs_NotificationResetMessage = function (param1) {
        };
        NotificationResetMessage.ID = 6089;
        return NotificationResetMessage;
    })(NetworkMessage);
    Protocol.NotificationResetMessage = NotificationResetMessage;
    var NotificationUpdateFlagMessage = (function (_super) {
        __extends(NotificationUpdateFlagMessage, _super);
        function NotificationUpdateFlagMessage() {
            this.index = 0;
            _super.call(this);
        }
        NotificationUpdateFlagMessage.prototype.getMessageId = function () {
            return NotificationUpdateFlagMessage.ID;
        };
        NotificationUpdateFlagMessage.prototype.reset = function () {
            this.index = 0;
        };
        NotificationUpdateFlagMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NotificationUpdateFlagMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NotificationUpdateFlagMessage.prototype.serialize = function (param1) {
            this.serializeAs_NotificationUpdateFlagMessage(param1);
        };
        NotificationUpdateFlagMessage.prototype.serializeAs_NotificationUpdateFlagMessage = function (param1) {
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element index.');
            }
            param1.writeVarShort(this.index);
        };
        NotificationUpdateFlagMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NotificationUpdateFlagMessage(param1);
        };
        NotificationUpdateFlagMessage.prototype.deserializeAs_NotificationUpdateFlagMessage = function (param1) {
            this.index = param1.readVarUhShort();
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element of NotificationUpdateFlagMessage.index.');
            }
        };
        NotificationUpdateFlagMessage.ID = 6090;
        return NotificationUpdateFlagMessage;
    })(NetworkMessage);
    Protocol.NotificationUpdateFlagMessage = NotificationUpdateFlagMessage;
    var ChangeMapMessage = (function (_super) {
        __extends(ChangeMapMessage, _super);
        function ChangeMapMessage() {
            this.mapId = 0;
            _super.call(this);
        }
        ChangeMapMessage.prototype.getMessageId = function () {
            return ChangeMapMessage.ID;
        };
        ChangeMapMessage.prototype.reset = function () {
            this.mapId = 0;
        };
        ChangeMapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChangeMapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChangeMapMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChangeMapMessage(param1);
        };
        ChangeMapMessage.prototype.serializeAs_ChangeMapMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        ChangeMapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChangeMapMessage(param1);
        };
        ChangeMapMessage.prototype.deserializeAs_ChangeMapMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of ChangeMapMessage.mapId.');
            }
        };
        ChangeMapMessage.ID = 221;
        return ChangeMapMessage;
    })(NetworkMessage);
    Protocol.ChangeMapMessage = ChangeMapMessage;
    var CurrentMapMessage = (function (_super) {
        __extends(CurrentMapMessage, _super);
        function CurrentMapMessage() {
            this.mapId = 0;
            this.mapKey = '';
            _super.call(this);
        }
        CurrentMapMessage.prototype.getMessageId = function () {
            return CurrentMapMessage.ID;
        };
        CurrentMapMessage.prototype.reset = function () {
            this.mapId = 0;
            this.mapKey = '';
        };
        CurrentMapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CurrentMapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CurrentMapMessage.prototype.serialize = function (param1) {
            this.serializeAs_CurrentMapMessage(param1);
        };
        CurrentMapMessage.prototype.serializeAs_CurrentMapMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
            param1.writeUTF(this.mapKey);
        };
        CurrentMapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CurrentMapMessage(param1);
        };
        CurrentMapMessage.prototype.deserializeAs_CurrentMapMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of CurrentMapMessage.mapId.');
            }
            this.mapKey = param1.readUTF();
        };
        CurrentMapMessage.ID = 220;
        return CurrentMapMessage;
    })(NetworkMessage);
    Protocol.CurrentMapMessage = CurrentMapMessage;
    var ErrorMapNotFoundMessage = (function (_super) {
        __extends(ErrorMapNotFoundMessage, _super);
        function ErrorMapNotFoundMessage() {
            this.mapId = 0;
            _super.call(this);
        }
        ErrorMapNotFoundMessage.prototype.getMessageId = function () {
            return ErrorMapNotFoundMessage.ID;
        };
        ErrorMapNotFoundMessage.prototype.reset = function () {
            this.mapId = 0;
        };
        ErrorMapNotFoundMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ErrorMapNotFoundMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ErrorMapNotFoundMessage.prototype.serialize = function (param1) {
            this.serializeAs_ErrorMapNotFoundMessage(param1);
        };
        ErrorMapNotFoundMessage.prototype.serializeAs_ErrorMapNotFoundMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        ErrorMapNotFoundMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ErrorMapNotFoundMessage(param1);
        };
        ErrorMapNotFoundMessage.prototype.deserializeAs_ErrorMapNotFoundMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of ErrorMapNotFoundMessage.mapId.');
            }
        };
        ErrorMapNotFoundMessage.ID = 6197;
        return ErrorMapNotFoundMessage;
    })(NetworkMessage);
    Protocol.ErrorMapNotFoundMessage = ErrorMapNotFoundMessage;
    var GameRolePlayShowActorMessage = (function (_super) {
        __extends(GameRolePlayShowActorMessage, _super);
        function GameRolePlayShowActorMessage() {
            this.informations = new GameRolePlayActorInformations();
            _super.call(this);
        }
        GameRolePlayShowActorMessage.prototype.getMessageId = function () {
            return GameRolePlayShowActorMessage.ID;
        };
        GameRolePlayShowActorMessage.prototype.reset = function () {
            this.informations = new GameRolePlayActorInformations();
        };
        GameRolePlayShowActorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayShowActorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayShowActorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayShowActorMessage(param1);
        };
        GameRolePlayShowActorMessage.prototype.serializeAs_GameRolePlayShowActorMessage = function (param1) {
            param1.writeShort(this.informations.getTypeId());
            this.informations.serialize(param1);
        };
        GameRolePlayShowActorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayShowActorMessage(param1);
        };
        GameRolePlayShowActorMessage.prototype.deserializeAs_GameRolePlayShowActorMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.informations = ProtocolTypeManager.getInstance(GameRolePlayActorInformations, _loc2_);
            this.informations.deserialize(param1);
        };
        GameRolePlayShowActorMessage.ID = 5632;
        return GameRolePlayShowActorMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayShowActorMessage = GameRolePlayShowActorMessage;
    var GameRolePlayShowActorWithEventMessage = (function (_super) {
        __extends(GameRolePlayShowActorWithEventMessage, _super);
        function GameRolePlayShowActorWithEventMessage() {
            this.actorEventId = 0;
            _super.call(this);
        }
        GameRolePlayShowActorWithEventMessage.prototype.getMessageId = function () {
            return GameRolePlayShowActorWithEventMessage.ID;
        };
        GameRolePlayShowActorWithEventMessage.prototype.reset = function () {
            this.actorEventId = 0;
        };
        GameRolePlayShowActorWithEventMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayShowActorWithEventMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayShowActorWithEventMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayShowActorWithEventMessage(param1);
        };
        GameRolePlayShowActorWithEventMessage.prototype.serializeAs_GameRolePlayShowActorWithEventMessage = function (param1) {
            _super.prototype.serializeAs_GameRolePlayShowActorMessage.call(this, param1);
            if (this.actorEventId < 0) {
                throw new Error('Forbidden value (' + this.actorEventId + ') on element actorEventId.');
            }
            param1.writeByte(this.actorEventId);
        };
        GameRolePlayShowActorWithEventMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayShowActorWithEventMessage(param1);
        };
        GameRolePlayShowActorWithEventMessage.prototype.deserializeAs_GameRolePlayShowActorWithEventMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.actorEventId = param1.readByte();
            if (this.actorEventId < 0) {
                throw new Error('Forbidden value (' + this.actorEventId + ') on element of GameRolePlayShowActorWithEventMessage.actorEventId.');
            }
        };
        GameRolePlayShowActorWithEventMessage.ID = 6407;
        return GameRolePlayShowActorWithEventMessage;
    })(GameRolePlayShowActorMessage);
    Protocol.GameRolePlayShowActorWithEventMessage = GameRolePlayShowActorWithEventMessage;
    var MapComplementaryInformationsDataInHouseMessage = (function (_super) {
        __extends(MapComplementaryInformationsDataInHouseMessage, _super);
        function MapComplementaryInformationsDataInHouseMessage() {
            this.currentHouse = new HouseInformationsInside();
            _super.call(this);
        }
        MapComplementaryInformationsDataInHouseMessage.prototype.getMessageId = function () {
            return MapComplementaryInformationsDataInHouseMessage.ID;
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.reset = function () {
            this.currentHouse = new HouseInformationsInside();
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapComplementaryInformationsDataInHouseMessage(param1);
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.serializeAs_MapComplementaryInformationsDataInHouseMessage = function (param1) {
            _super.prototype.serializeAs_MapComplementaryInformationsDataMessage.call(this, param1);
            this.currentHouse.serializeAs_HouseInformationsInside(param1);
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapComplementaryInformationsDataInHouseMessage(param1);
        };
        MapComplementaryInformationsDataInHouseMessage.prototype.deserializeAs_MapComplementaryInformationsDataInHouseMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.currentHouse = new HouseInformationsInside();
            this.currentHouse.deserialize(param1);
        };
        MapComplementaryInformationsDataInHouseMessage.ID = 6130;
        return MapComplementaryInformationsDataInHouseMessage;
    })(MapComplementaryInformationsDataMessage);
    Protocol.MapComplementaryInformationsDataInHouseMessage = MapComplementaryInformationsDataInHouseMessage;
    var MapComplementaryInformationsDataMessage = (function (_super) {
        __extends(MapComplementaryInformationsDataMessage, _super);
        function MapComplementaryInformationsDataMessage() {
            this.subAreaId = 0;
            this.mapId = 0;
            this.houses = [];
            this.actors = [];
            this.interactiveElements = [];
            this.statedElements = [];
            this.obstacles = [];
            this.fights = [];
            _super.call(this);
        }
        MapComplementaryInformationsDataMessage.prototype.getMessageId = function () {
            return MapComplementaryInformationsDataMessage.ID;
        };
        MapComplementaryInformationsDataMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.mapId = 0;
            this.houses = [];
            this.actors = [];
            this.interactiveElements = [];
            this.statedElements = [];
            this.obstacles = [];
            this.fights = [];
        };
        MapComplementaryInformationsDataMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapComplementaryInformationsDataMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapComplementaryInformationsDataMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapComplementaryInformationsDataMessage(param1);
        };
        MapComplementaryInformationsDataMessage.prototype.serializeAs_MapComplementaryInformationsDataMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
            param1.writeShort(this.houses.length);
            var _loc2_ = 0;
            while (_loc2_ < this.houses.length) {
                param1.writeShort((this.houses[_loc2_]).getTypeId());
                (this.houses[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.actors.length);
            var _loc3_ = 0;
            while (_loc3_ < this.actors.length) {
                param1.writeShort((this.actors[_loc3_]).getTypeId());
                (this.actors[_loc3_]).serialize(param1);
                _loc3_++;
            }
            param1.writeShort(this.interactiveElements.length);
            var _loc4_ = 0;
            while (_loc4_ < this.interactiveElements.length) {
                param1.writeShort((this.interactiveElements[_loc4_]).getTypeId());
                (this.interactiveElements[_loc4_]).serialize(param1);
                _loc4_++;
            }
            param1.writeShort(this.statedElements.length);
            var _loc5_ = 0;
            while (_loc5_ < this.statedElements.length) {
                (this.statedElements[_loc5_]).serializeAs_StatedElement(param1);
                _loc5_++;
            }
            param1.writeShort(this.obstacles.length);
            var _loc6_ = 0;
            while (_loc6_ < this.obstacles.length) {
                (this.obstacles[_loc6_]).serializeAs_MapObstacle(param1);
                _loc6_++;
            }
            param1.writeShort(this.fights.length);
            var _loc7_ = 0;
            while (_loc7_ < this.fights.length) {
                (this.fights[_loc7_]).serializeAs_FightCommonInformations(param1);
                _loc7_++;
            }
        };
        MapComplementaryInformationsDataMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapComplementaryInformationsDataMessage(param1);
        };
        MapComplementaryInformationsDataMessage.prototype.deserializeAs_MapComplementaryInformationsDataMessage = function (param1) {
            var _loc14_ = 0;
            var _loc15_ = null;
            var _loc16_ = 0;
            var _loc17_ = null;
            var _loc18_ = 0;
            var _loc19_ = null;
            var _loc20_ = null;
            var _loc21_ = null;
            var _loc22_ = null;
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of MapComplementaryInformationsDataMessage.subAreaId.');
            }
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of MapComplementaryInformationsDataMessage.mapId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc14_ = param1.readUnsignedShort();
                _loc15_ = ProtocolTypeManager.getInstance(HouseInformations, _loc14_);
                _loc15_.deserialize(param1);
                this.houses.push(_loc15_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc16_ = param1.readUnsignedShort();
                _loc17_ = ProtocolTypeManager.getInstance(GameRolePlayActorInformations, _loc16_);
                _loc17_.deserialize(param1);
                this.actors.push(_loc17_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc18_ = param1.readUnsignedShort();
                _loc19_ = ProtocolTypeManager.getInstance(InteractiveElement, _loc18_);
                _loc19_.deserialize(param1);
                this.interactiveElements.push(_loc19_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc20_ = new StatedElement();
                _loc20_.deserialize(param1);
                this.statedElements.push(_loc20_);
                _loc9_++;
            }
            var _loc10_ = param1.readUnsignedShort();
            var _loc11_ = 0;
            while (_loc11_ < _loc10_) {
                _loc21_ = new MapObstacle();
                _loc21_.deserialize(param1);
                this.obstacles.push(_loc21_);
                _loc11_++;
            }
            var _loc12_ = param1.readUnsignedShort();
            var _loc13_ = 0;
            while (_loc13_ < _loc12_) {
                _loc22_ = new FightCommonInformations();
                _loc22_.deserialize(param1);
                this.fights.push(_loc22_);
                _loc13_++;
            }
        };
        MapComplementaryInformationsDataMessage.ID = 226;
        return MapComplementaryInformationsDataMessage;
    })(NetworkMessage);
    Protocol.MapComplementaryInformationsDataMessage = MapComplementaryInformationsDataMessage;
    var MapComplementaryInformationsWithCoordsMessage = (function (_super) {
        __extends(MapComplementaryInformationsWithCoordsMessage, _super);
        function MapComplementaryInformationsWithCoordsMessage() {
            this.worldX = 0;
            this.worldY = 0;
            _super.call(this);
        }
        MapComplementaryInformationsWithCoordsMessage.prototype.getMessageId = function () {
            return MapComplementaryInformationsWithCoordsMessage.ID;
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.reset = function () {
            this.worldX = 0;
            this.worldY = 0;
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapComplementaryInformationsWithCoordsMessage(param1);
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.serializeAs_MapComplementaryInformationsWithCoordsMessage = function (param1) {
            _super.prototype.serializeAs_MapComplementaryInformationsDataMessage.call(this, param1);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapComplementaryInformationsWithCoordsMessage(param1);
        };
        MapComplementaryInformationsWithCoordsMessage.prototype.deserializeAs_MapComplementaryInformationsWithCoordsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of MapComplementaryInformationsWithCoordsMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of MapComplementaryInformationsWithCoordsMessage.worldY.');
            }
        };
        MapComplementaryInformationsWithCoordsMessage.ID = 6268;
        return MapComplementaryInformationsWithCoordsMessage;
    })(MapComplementaryInformationsDataMessage);
    Protocol.MapComplementaryInformationsWithCoordsMessage = MapComplementaryInformationsWithCoordsMessage;
    var MapFightCountMessage = (function (_super) {
        __extends(MapFightCountMessage, _super);
        function MapFightCountMessage() {
            this.fightCount = 0;
            _super.call(this);
        }
        MapFightCountMessage.prototype.getMessageId = function () {
            return MapFightCountMessage.ID;
        };
        MapFightCountMessage.prototype.reset = function () {
            this.fightCount = 0;
        };
        MapFightCountMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapFightCountMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapFightCountMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapFightCountMessage(param1);
        };
        MapFightCountMessage.prototype.serializeAs_MapFightCountMessage = function (param1) {
            if (this.fightCount < 0) {
                throw new Error('Forbidden value (' + this.fightCount + ') on element fightCount.');
            }
            param1.writeVarShort(this.fightCount);
        };
        MapFightCountMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapFightCountMessage(param1);
        };
        MapFightCountMessage.prototype.deserializeAs_MapFightCountMessage = function (param1) {
            this.fightCount = param1.readVarUhShort();
            if (this.fightCount < 0) {
                throw new Error('Forbidden value (' + this.fightCount + ') on element of MapFightCountMessage.fightCount.');
            }
        };
        MapFightCountMessage.ID = 210;
        return MapFightCountMessage;
    })(NetworkMessage);
    Protocol.MapFightCountMessage = MapFightCountMessage;
    var MapInformationsRequestMessage = (function (_super) {
        __extends(MapInformationsRequestMessage, _super);
        function MapInformationsRequestMessage() {
            this.mapId = 0;
            _super.call(this);
        }
        MapInformationsRequestMessage.prototype.getMessageId = function () {
            return MapInformationsRequestMessage.ID;
        };
        MapInformationsRequestMessage.prototype.reset = function () {
            this.mapId = 0;
        };
        MapInformationsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapInformationsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapInformationsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapInformationsRequestMessage(param1);
        };
        MapInformationsRequestMessage.prototype.serializeAs_MapInformationsRequestMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        MapInformationsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapInformationsRequestMessage(param1);
        };
        MapInformationsRequestMessage.prototype.deserializeAs_MapInformationsRequestMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of MapInformationsRequestMessage.mapId.');
            }
        };
        MapInformationsRequestMessage.ID = 225;
        return MapInformationsRequestMessage;
    })(NetworkMessage);
    Protocol.MapInformationsRequestMessage = MapInformationsRequestMessage;
    var MapObstacleUpdateMessage = (function (_super) {
        __extends(MapObstacleUpdateMessage, _super);
        function MapObstacleUpdateMessage() {
            this.obstacles = [];
            _super.call(this);
        }
        MapObstacleUpdateMessage.prototype.getMessageId = function () {
            return MapObstacleUpdateMessage.ID;
        };
        MapObstacleUpdateMessage.prototype.reset = function () {
            this.obstacles = [];
        };
        MapObstacleUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapObstacleUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapObstacleUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapObstacleUpdateMessage(param1);
        };
        MapObstacleUpdateMessage.prototype.serializeAs_MapObstacleUpdateMessage = function (param1) {
            param1.writeShort(this.obstacles.length);
            var _loc2_ = 0;
            while (_loc2_ < this.obstacles.length) {
                (this.obstacles[_loc2_]).serializeAs_MapObstacle(param1);
                _loc2_++;
            }
        };
        MapObstacleUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapObstacleUpdateMessage(param1);
        };
        MapObstacleUpdateMessage.prototype.deserializeAs_MapObstacleUpdateMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MapObstacle();
                _loc4_.deserialize(param1);
                this.obstacles.push(_loc4_);
                _loc3_++;
            }
        };
        MapObstacleUpdateMessage.ID = 6051;
        return MapObstacleUpdateMessage;
    })(NetworkMessage);
    Protocol.MapObstacleUpdateMessage = MapObstacleUpdateMessage;
    var MapRunningFightDetailsExtendedMessage = (function (_super) {
        __extends(MapRunningFightDetailsExtendedMessage, _super);
        function MapRunningFightDetailsExtendedMessage() {
            this.namedPartyTeams = [];
            _super.call(this);
        }
        MapRunningFightDetailsExtendedMessage.prototype.getMessageId = function () {
            return MapRunningFightDetailsExtendedMessage.ID;
        };
        MapRunningFightDetailsExtendedMessage.prototype.reset = function () {
            this.namedPartyTeams = [];
        };
        MapRunningFightDetailsExtendedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapRunningFightDetailsExtendedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapRunningFightDetailsExtendedMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapRunningFightDetailsExtendedMessage(param1);
        };
        MapRunningFightDetailsExtendedMessage.prototype.serializeAs_MapRunningFightDetailsExtendedMessage = function (param1) {
            _super.prototype.serializeAs_MapRunningFightDetailsMessage.call(this, param1);
            param1.writeShort(this.namedPartyTeams.length);
            var _loc2_ = 0;
            while (_loc2_ < this.namedPartyTeams.length) {
                (this.namedPartyTeams[_loc2_]).serializeAs_NamedPartyTeam(param1);
                _loc2_++;
            }
        };
        MapRunningFightDetailsExtendedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapRunningFightDetailsExtendedMessage(param1);
        };
        MapRunningFightDetailsExtendedMessage.prototype.deserializeAs_MapRunningFightDetailsExtendedMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new NamedPartyTeam();
                _loc4_.deserialize(param1);
                this.namedPartyTeams.push(_loc4_);
                _loc3_++;
            }
        };
        MapRunningFightDetailsExtendedMessage.ID = 6500;
        return MapRunningFightDetailsExtendedMessage;
    })(MapRunningFightDetailsMessage);
    Protocol.MapRunningFightDetailsExtendedMessage = MapRunningFightDetailsExtendedMessage;
    var MapRunningFightDetailsMessage = (function (_super) {
        __extends(MapRunningFightDetailsMessage, _super);
        function MapRunningFightDetailsMessage() {
            this.fightId = 0;
            this.attackers = [];
            this.defenders = [];
            _super.call(this);
        }
        MapRunningFightDetailsMessage.prototype.getMessageId = function () {
            return MapRunningFightDetailsMessage.ID;
        };
        MapRunningFightDetailsMessage.prototype.reset = function () {
            this.fightId = 0;
            this.attackers = [];
            this.defenders = [];
        };
        MapRunningFightDetailsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapRunningFightDetailsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapRunningFightDetailsMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapRunningFightDetailsMessage(param1);
        };
        MapRunningFightDetailsMessage.prototype.serializeAs_MapRunningFightDetailsMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            param1.writeShort(this.attackers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.attackers.length) {
                param1.writeShort((this.attackers[_loc2_]).getTypeId());
                (this.attackers[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.defenders.length);
            var _loc3_ = 0;
            while (_loc3_ < this.defenders.length) {
                param1.writeShort((this.defenders[_loc3_]).getTypeId());
                (this.defenders[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        MapRunningFightDetailsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapRunningFightDetailsMessage(param1);
        };
        MapRunningFightDetailsMessage.prototype.deserializeAs_MapRunningFightDetailsMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            var _loc9_ = null;
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of MapRunningFightDetailsMessage.fightId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(GameFightFighterLightInformations, _loc6_);
                _loc7_.deserialize(param1);
                this.attackers.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readUnsignedShort();
                _loc9_ = ProtocolTypeManager.getInstance(GameFightFighterLightInformations, _loc8_);
                _loc9_.deserialize(param1);
                this.defenders.push(_loc9_);
                _loc5_++;
            }
        };
        MapRunningFightDetailsMessage.ID = 5751;
        return MapRunningFightDetailsMessage;
    })(NetworkMessage);
    Protocol.MapRunningFightDetailsMessage = MapRunningFightDetailsMessage;
    var MapRunningFightDetailsRequestMessage = (function (_super) {
        __extends(MapRunningFightDetailsRequestMessage, _super);
        function MapRunningFightDetailsRequestMessage() {
            this.fightId = 0;
            _super.call(this);
        }
        MapRunningFightDetailsRequestMessage.prototype.getMessageId = function () {
            return MapRunningFightDetailsRequestMessage.ID;
        };
        MapRunningFightDetailsRequestMessage.prototype.reset = function () {
            this.fightId = 0;
        };
        MapRunningFightDetailsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapRunningFightDetailsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapRunningFightDetailsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapRunningFightDetailsRequestMessage(param1);
        };
        MapRunningFightDetailsRequestMessage.prototype.serializeAs_MapRunningFightDetailsRequestMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
        };
        MapRunningFightDetailsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapRunningFightDetailsRequestMessage(param1);
        };
        MapRunningFightDetailsRequestMessage.prototype.deserializeAs_MapRunningFightDetailsRequestMessage = function (param1) {
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of MapRunningFightDetailsRequestMessage.fightId.');
            }
        };
        MapRunningFightDetailsRequestMessage.ID = 5750;
        return MapRunningFightDetailsRequestMessage;
    })(NetworkMessage);
    Protocol.MapRunningFightDetailsRequestMessage = MapRunningFightDetailsRequestMessage;
    var MapRunningFightListMessage = (function (_super) {
        __extends(MapRunningFightListMessage, _super);
        function MapRunningFightListMessage() {
            this.fights = [];
            _super.call(this);
        }
        MapRunningFightListMessage.prototype.getMessageId = function () {
            return MapRunningFightListMessage.ID;
        };
        MapRunningFightListMessage.prototype.reset = function () {
            this.fights = [];
        };
        MapRunningFightListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapRunningFightListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapRunningFightListMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapRunningFightListMessage(param1);
        };
        MapRunningFightListMessage.prototype.serializeAs_MapRunningFightListMessage = function (param1) {
            param1.writeShort(this.fights.length);
            var _loc2_ = 0;
            while (_loc2_ < this.fights.length) {
                (this.fights[_loc2_]).serializeAs_FightExternalInformations(param1);
                _loc2_++;
            }
        };
        MapRunningFightListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapRunningFightListMessage(param1);
        };
        MapRunningFightListMessage.prototype.deserializeAs_MapRunningFightListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new FightExternalInformations();
                _loc4_.deserialize(param1);
                this.fights.push(_loc4_);
                _loc3_++;
            }
        };
        MapRunningFightListMessage.ID = 5743;
        return MapRunningFightListMessage;
    })(NetworkMessage);
    Protocol.MapRunningFightListMessage = MapRunningFightListMessage;
    var MapRunningFightListRequestMessage = (function (_super) {
        __extends(MapRunningFightListRequestMessage, _super);
        function MapRunningFightListRequestMessage() {
            _super.call(this);
        }
        MapRunningFightListRequestMessage.prototype.getMessageId = function () {
            return MapRunningFightListRequestMessage.ID;
        };
        MapRunningFightListRequestMessage.prototype.reset = function () {
        };
        MapRunningFightListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapRunningFightListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapRunningFightListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapRunningFightListRequestMessage(param1);
        };
        MapRunningFightListRequestMessage.prototype.serializeAs_MapRunningFightListRequestMessage = function (param1) {
        };
        MapRunningFightListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapRunningFightListRequestMessage(param1);
        };
        MapRunningFightListRequestMessage.prototype.deserializeAs_MapRunningFightListRequestMessage = function (param1) {
        };
        MapRunningFightListRequestMessage.ID = 5742;
        return MapRunningFightListRequestMessage;
    })(NetworkMessage);
    Protocol.MapRunningFightListRequestMessage = MapRunningFightListRequestMessage;
    var StopToListenRunningFightRequestMessage = (function (_super) {
        __extends(StopToListenRunningFightRequestMessage, _super);
        function StopToListenRunningFightRequestMessage() {
            _super.call(this);
        }
        StopToListenRunningFightRequestMessage.prototype.getMessageId = function () {
            return StopToListenRunningFightRequestMessage.ID;
        };
        StopToListenRunningFightRequestMessage.prototype.reset = function () {
        };
        StopToListenRunningFightRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StopToListenRunningFightRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StopToListenRunningFightRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_StopToListenRunningFightRequestMessage(param1);
        };
        StopToListenRunningFightRequestMessage.prototype.serializeAs_StopToListenRunningFightRequestMessage = function (param1) {
        };
        StopToListenRunningFightRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StopToListenRunningFightRequestMessage(param1);
        };
        StopToListenRunningFightRequestMessage.prototype.deserializeAs_StopToListenRunningFightRequestMessage = function (param1) {
        };
        StopToListenRunningFightRequestMessage.ID = 6124;
        return StopToListenRunningFightRequestMessage;
    })(NetworkMessage);
    Protocol.StopToListenRunningFightRequestMessage = StopToListenRunningFightRequestMessage;
    var TeleportOnSameMapMessage = (function (_super) {
        __extends(TeleportOnSameMapMessage, _super);
        function TeleportOnSameMapMessage() {
            this.targetId = 0;
            this.cellId = 0;
            _super.call(this);
        }
        TeleportOnSameMapMessage.prototype.getMessageId = function () {
            return TeleportOnSameMapMessage.ID;
        };
        TeleportOnSameMapMessage.prototype.reset = function () {
            this.targetId = 0;
            this.cellId = 0;
        };
        TeleportOnSameMapMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportOnSameMapMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportOnSameMapMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportOnSameMapMessage(param1);
        };
        TeleportOnSameMapMessage.prototype.serializeAs_TeleportOnSameMapMessage = function (param1) {
            param1.writeInt(this.targetId);
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        TeleportOnSameMapMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportOnSameMapMessage(param1);
        };
        TeleportOnSameMapMessage.prototype.deserializeAs_TeleportOnSameMapMessage = function (param1) {
            this.targetId = param1.readInt();
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of TeleportOnSameMapMessage.cellId.');
            }
        };
        TeleportOnSameMapMessage.ID = 6048;
        return TeleportOnSameMapMessage;
    })(NetworkMessage);
    Protocol.TeleportOnSameMapMessage = TeleportOnSameMapMessage;
    var GameRolePlayFreeSoulRequestMessage = (function (_super) {
        __extends(GameRolePlayFreeSoulRequestMessage, _super);
        function GameRolePlayFreeSoulRequestMessage() {
            _super.call(this);
        }
        GameRolePlayFreeSoulRequestMessage.prototype.getMessageId = function () {
            return GameRolePlayFreeSoulRequestMessage.ID;
        };
        GameRolePlayFreeSoulRequestMessage.prototype.reset = function () {
        };
        GameRolePlayFreeSoulRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayFreeSoulRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayFreeSoulRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayFreeSoulRequestMessage(param1);
        };
        GameRolePlayFreeSoulRequestMessage.prototype.serializeAs_GameRolePlayFreeSoulRequestMessage = function (param1) {
        };
        GameRolePlayFreeSoulRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayFreeSoulRequestMessage(param1);
        };
        GameRolePlayFreeSoulRequestMessage.prototype.deserializeAs_GameRolePlayFreeSoulRequestMessage = function (param1) {
        };
        GameRolePlayFreeSoulRequestMessage.ID = 745;
        return GameRolePlayFreeSoulRequestMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayFreeSoulRequestMessage = GameRolePlayFreeSoulRequestMessage;
    var GameRolePlayGameOverMessage = (function (_super) {
        __extends(GameRolePlayGameOverMessage, _super);
        function GameRolePlayGameOverMessage() {
            _super.call(this);
        }
        GameRolePlayGameOverMessage.prototype.getMessageId = function () {
            return GameRolePlayGameOverMessage.ID;
        };
        GameRolePlayGameOverMessage.prototype.reset = function () {
        };
        GameRolePlayGameOverMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayGameOverMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayGameOverMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayGameOverMessage(param1);
        };
        GameRolePlayGameOverMessage.prototype.serializeAs_GameRolePlayGameOverMessage = function (param1) {
        };
        GameRolePlayGameOverMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayGameOverMessage(param1);
        };
        GameRolePlayGameOverMessage.prototype.deserializeAs_GameRolePlayGameOverMessage = function (param1) {
        };
        GameRolePlayGameOverMessage.ID = 746;
        return GameRolePlayGameOverMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayGameOverMessage = GameRolePlayGameOverMessage;
    var GameRolePlayPlayerLifeStatusMessage = (function (_super) {
        __extends(GameRolePlayPlayerLifeStatusMessage, _super);
        function GameRolePlayPlayerLifeStatusMessage() {
            this.state = 0;
            _super.call(this);
        }
        GameRolePlayPlayerLifeStatusMessage.prototype.getMessageId = function () {
            return GameRolePlayPlayerLifeStatusMessage.ID;
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.reset = function () {
            this.state = 0;
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPlayerLifeStatusMessage(param1);
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.serializeAs_GameRolePlayPlayerLifeStatusMessage = function (param1) {
            param1.writeByte(this.state);
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPlayerLifeStatusMessage(param1);
        };
        GameRolePlayPlayerLifeStatusMessage.prototype.deserializeAs_GameRolePlayPlayerLifeStatusMessage = function (param1) {
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of GameRolePlayPlayerLifeStatusMessage.state.');
            }
        };
        GameRolePlayPlayerLifeStatusMessage.ID = 5996;
        return GameRolePlayPlayerLifeStatusMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayPlayerLifeStatusMessage = GameRolePlayPlayerLifeStatusMessage;
    var WarnOnPermaDeathMessage = (function (_super) {
        __extends(WarnOnPermaDeathMessage, _super);
        function WarnOnPermaDeathMessage() {
            this.enable = false;
            _super.call(this);
        }
        WarnOnPermaDeathMessage.prototype.getMessageId = function () {
            return WarnOnPermaDeathMessage.ID;
        };
        WarnOnPermaDeathMessage.prototype.reset = function () {
            this.enable = false;
        };
        WarnOnPermaDeathMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        WarnOnPermaDeathMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        WarnOnPermaDeathMessage.prototype.serialize = function (param1) {
            this.serializeAs_WarnOnPermaDeathMessage(param1);
        };
        WarnOnPermaDeathMessage.prototype.serializeAs_WarnOnPermaDeathMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        WarnOnPermaDeathMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_WarnOnPermaDeathMessage(param1);
        };
        WarnOnPermaDeathMessage.prototype.deserializeAs_WarnOnPermaDeathMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        WarnOnPermaDeathMessage.ID = 6512;
        return WarnOnPermaDeathMessage;
    })(NetworkMessage);
    Protocol.WarnOnPermaDeathMessage = WarnOnPermaDeathMessage;
    var GameRolePlayDelayedActionFinishedMessage = (function (_super) {
        __extends(GameRolePlayDelayedActionFinishedMessage, _super);
        function GameRolePlayDelayedActionFinishedMessage() {
            this.delayedCharacterId = 0;
            this.delayTypeId = 0;
            _super.call(this);
        }
        GameRolePlayDelayedActionFinishedMessage.prototype.getMessageId = function () {
            return GameRolePlayDelayedActionFinishedMessage.ID;
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.reset = function () {
            this.delayedCharacterId = 0;
            this.delayTypeId = 0;
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayDelayedActionFinishedMessage(param1);
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.serializeAs_GameRolePlayDelayedActionFinishedMessage = function (param1) {
            param1.writeInt(this.delayedCharacterId);
            param1.writeByte(this.delayTypeId);
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayDelayedActionFinishedMessage(param1);
        };
        GameRolePlayDelayedActionFinishedMessage.prototype.deserializeAs_GameRolePlayDelayedActionFinishedMessage = function (param1) {
            this.delayedCharacterId = param1.readInt();
            this.delayTypeId = param1.readByte();
            if (this.delayTypeId < 0) {
                throw new Error('Forbidden value (' + this.delayTypeId + ') on element of GameRolePlayDelayedActionFinishedMessage.delayTypeId.');
            }
        };
        GameRolePlayDelayedActionFinishedMessage.ID = 6150;
        return GameRolePlayDelayedActionFinishedMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayDelayedActionFinishedMessage = GameRolePlayDelayedActionFinishedMessage;
    var GameRolePlayDelayedActionMessage = (function (_super) {
        __extends(GameRolePlayDelayedActionMessage, _super);
        function GameRolePlayDelayedActionMessage() {
            this.delayedCharacterId = 0;
            this.delayTypeId = 0;
            this.delayEndTime = 0;
            _super.call(this);
        }
        GameRolePlayDelayedActionMessage.prototype.getMessageId = function () {
            return GameRolePlayDelayedActionMessage.ID;
        };
        GameRolePlayDelayedActionMessage.prototype.reset = function () {
            this.delayedCharacterId = 0;
            this.delayTypeId = 0;
            this.delayEndTime = 0;
        };
        GameRolePlayDelayedActionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayDelayedActionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayDelayedActionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayDelayedActionMessage(param1);
        };
        GameRolePlayDelayedActionMessage.prototype.serializeAs_GameRolePlayDelayedActionMessage = function (param1) {
            param1.writeInt(this.delayedCharacterId);
            param1.writeByte(this.delayTypeId);
            if (this.delayEndTime < 0 || this.delayEndTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.delayEndTime + ') on element delayEndTime.');
            }
            param1.writeDouble(this.delayEndTime);
        };
        GameRolePlayDelayedActionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayDelayedActionMessage(param1);
        };
        GameRolePlayDelayedActionMessage.prototype.deserializeAs_GameRolePlayDelayedActionMessage = function (param1) {
            this.delayedCharacterId = param1.readInt();
            this.delayTypeId = param1.readByte();
            if (this.delayTypeId < 0) {
                throw new Error('Forbidden value (' + this.delayTypeId + ') on element of GameRolePlayDelayedActionMessage.delayTypeId.');
            }
            this.delayEndTime = param1.readDouble();
            if (this.delayEndTime < 0 || this.delayEndTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.delayEndTime + ') on element of GameRolePlayDelayedActionMessage.delayEndTime.');
            }
        };
        GameRolePlayDelayedActionMessage.ID = 6153;
        return GameRolePlayDelayedActionMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayDelayedActionMessage = GameRolePlayDelayedActionMessage;
    var GameRolePlayDelayedObjectUseMessage = (function (_super) {
        __extends(GameRolePlayDelayedObjectUseMessage, _super);
        function GameRolePlayDelayedObjectUseMessage() {
            this.objectGID = 0;
            _super.call(this);
        }
        GameRolePlayDelayedObjectUseMessage.prototype.getMessageId = function () {
            return GameRolePlayDelayedObjectUseMessage.ID;
        };
        GameRolePlayDelayedObjectUseMessage.prototype.reset = function () {
            this.objectGID = 0;
        };
        GameRolePlayDelayedObjectUseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayDelayedObjectUseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayDelayedObjectUseMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayDelayedObjectUseMessage(param1);
        };
        GameRolePlayDelayedObjectUseMessage.prototype.serializeAs_GameRolePlayDelayedObjectUseMessage = function (param1) {
            _super.prototype.serializeAs_GameRolePlayDelayedActionMessage.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
        };
        GameRolePlayDelayedObjectUseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayDelayedObjectUseMessage(param1);
        };
        GameRolePlayDelayedObjectUseMessage.prototype.deserializeAs_GameRolePlayDelayedObjectUseMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of GameRolePlayDelayedObjectUseMessage.objectGID.');
            }
        };
        GameRolePlayDelayedObjectUseMessage.ID = 6425;
        return GameRolePlayDelayedObjectUseMessage;
    })(GameRolePlayDelayedActionMessage);
    Protocol.GameRolePlayDelayedObjectUseMessage = GameRolePlayDelayedObjectUseMessage;
    var ComicReadingBeginMessage = (function (_super) {
        __extends(ComicReadingBeginMessage, _super);
        function ComicReadingBeginMessage() {
            this.comicId = 0;
            _super.call(this);
        }
        ComicReadingBeginMessage.prototype.getMessageId = function () {
            return ComicReadingBeginMessage.ID;
        };
        ComicReadingBeginMessage.prototype.reset = function () {
            this.comicId = 0;
        };
        ComicReadingBeginMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ComicReadingBeginMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ComicReadingBeginMessage.prototype.serialize = function (param1) {
            this.serializeAs_ComicReadingBeginMessage(param1);
        };
        ComicReadingBeginMessage.prototype.serializeAs_ComicReadingBeginMessage = function (param1) {
            if (this.comicId < 0) {
                throw new Error('Forbidden value (' + this.comicId + ') on element comicId.');
            }
            param1.writeVarShort(this.comicId);
        };
        ComicReadingBeginMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ComicReadingBeginMessage(param1);
        };
        ComicReadingBeginMessage.prototype.deserializeAs_ComicReadingBeginMessage = function (param1) {
            this.comicId = param1.readVarUhShort();
            if (this.comicId < 0) {
                throw new Error('Forbidden value (' + this.comicId + ') on element of ComicReadingBeginMessage.comicId.');
            }
        };
        ComicReadingBeginMessage.ID = 6536;
        return ComicReadingBeginMessage;
    })(NetworkMessage);
    Protocol.ComicReadingBeginMessage = ComicReadingBeginMessage;
    var DocumentReadingBeginMessage = (function (_super) {
        __extends(DocumentReadingBeginMessage, _super);
        function DocumentReadingBeginMessage() {
            this.documentId = 0;
            _super.call(this);
        }
        DocumentReadingBeginMessage.prototype.getMessageId = function () {
            return DocumentReadingBeginMessage.ID;
        };
        DocumentReadingBeginMessage.prototype.reset = function () {
            this.documentId = 0;
        };
        DocumentReadingBeginMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DocumentReadingBeginMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DocumentReadingBeginMessage.prototype.serialize = function (param1) {
            this.serializeAs_DocumentReadingBeginMessage(param1);
        };
        DocumentReadingBeginMessage.prototype.serializeAs_DocumentReadingBeginMessage = function (param1) {
            if (this.documentId < 0) {
                throw new Error('Forbidden value (' + this.documentId + ') on element documentId.');
            }
            param1.writeVarShort(this.documentId);
        };
        DocumentReadingBeginMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DocumentReadingBeginMessage(param1);
        };
        DocumentReadingBeginMessage.prototype.deserializeAs_DocumentReadingBeginMessage = function (param1) {
            this.documentId = param1.readVarUhShort();
            if (this.documentId < 0) {
                throw new Error('Forbidden value (' + this.documentId + ') on element of DocumentReadingBeginMessage.documentId.');
            }
        };
        DocumentReadingBeginMessage.ID = 5675;
        return DocumentReadingBeginMessage;
    })(NetworkMessage);
    Protocol.DocumentReadingBeginMessage = DocumentReadingBeginMessage;
    var EmoteAddMessage = (function (_super) {
        __extends(EmoteAddMessage, _super);
        function EmoteAddMessage() {
            this.emoteId = 0;
            _super.call(this);
        }
        EmoteAddMessage.prototype.getMessageId = function () {
            return EmoteAddMessage.ID;
        };
        EmoteAddMessage.prototype.reset = function () {
            this.emoteId = 0;
        };
        EmoteAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmoteAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmoteAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmoteAddMessage(param1);
        };
        EmoteAddMessage.prototype.serializeAs_EmoteAddMessage = function (param1) {
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
        };
        EmoteAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmoteAddMessage(param1);
        };
        EmoteAddMessage.prototype.deserializeAs_EmoteAddMessage = function (param1) {
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of EmoteAddMessage.emoteId.');
            }
        };
        EmoteAddMessage.ID = 5644;
        return EmoteAddMessage;
    })(NetworkMessage);
    Protocol.EmoteAddMessage = EmoteAddMessage;
    var EmoteListMessage = (function (_super) {
        __extends(EmoteListMessage, _super);
        function EmoteListMessage() {
            this.emoteIds = [];
            _super.call(this);
        }
        EmoteListMessage.prototype.getMessageId = function () {
            return EmoteListMessage.ID;
        };
        EmoteListMessage.prototype.reset = function () {
            this.emoteIds = [];
        };
        EmoteListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmoteListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmoteListMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmoteListMessage(param1);
        };
        EmoteListMessage.prototype.serializeAs_EmoteListMessage = function (param1) {
            param1.writeShort(this.emoteIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.emoteIds.length) {
                if (this.emoteIds[_loc2_] < 0 || this.emoteIds[_loc2_] > 255) {
                    throw new Error('Forbidden value (' + this.emoteIds[_loc2_] + ') on element 1 (starting at 1) of emoteIds.');
                }
                param1.writeByte(this.emoteIds[_loc2_]);
                _loc2_++;
            }
        };
        EmoteListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmoteListMessage(param1);
        };
        EmoteListMessage.prototype.deserializeAs_EmoteListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedByte();
                if (_loc4_ < 0 || _loc4_ > 255) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of emoteIds.');
                }
                this.emoteIds.push(_loc4_);
                _loc3_++;
            }
        };
        EmoteListMessage.ID = 5689;
        return EmoteListMessage;
    })(NetworkMessage);
    Protocol.EmoteListMessage = EmoteListMessage;
    var EmotePlayAbstractMessage = (function (_super) {
        __extends(EmotePlayAbstractMessage, _super);
        function EmotePlayAbstractMessage() {
            this.emoteId = 0;
            this.emoteStartTime = 0;
            _super.call(this);
        }
        EmotePlayAbstractMessage.prototype.getMessageId = function () {
            return EmotePlayAbstractMessage.ID;
        };
        EmotePlayAbstractMessage.prototype.reset = function () {
            this.emoteId = 0;
            this.emoteStartTime = 0;
        };
        EmotePlayAbstractMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmotePlayAbstractMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmotePlayAbstractMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmotePlayAbstractMessage(param1);
        };
        EmotePlayAbstractMessage.prototype.serializeAs_EmotePlayAbstractMessage = function (param1) {
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
            if (this.emoteStartTime < -9.007199254740992E15 || this.emoteStartTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.emoteStartTime + ') on element emoteStartTime.');
            }
            param1.writeDouble(this.emoteStartTime);
        };
        EmotePlayAbstractMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmotePlayAbstractMessage(param1);
        };
        EmotePlayAbstractMessage.prototype.deserializeAs_EmotePlayAbstractMessage = function (param1) {
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of EmotePlayAbstractMessage.emoteId.');
            }
            this.emoteStartTime = param1.readDouble();
            if (this.emoteStartTime < -9.007199254740992E15 || this.emoteStartTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.emoteStartTime + ') on element of EmotePlayAbstractMessage.emoteStartTime.');
            }
        };
        EmotePlayAbstractMessage.ID = 5690;
        return EmotePlayAbstractMessage;
    })(NetworkMessage);
    Protocol.EmotePlayAbstractMessage = EmotePlayAbstractMessage;
    var EmotePlayErrorMessage = (function (_super) {
        __extends(EmotePlayErrorMessage, _super);
        function EmotePlayErrorMessage() {
            this.emoteId = 0;
            _super.call(this);
        }
        EmotePlayErrorMessage.prototype.getMessageId = function () {
            return EmotePlayErrorMessage.ID;
        };
        EmotePlayErrorMessage.prototype.reset = function () {
            this.emoteId = 0;
        };
        EmotePlayErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmotePlayErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmotePlayErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmotePlayErrorMessage(param1);
        };
        EmotePlayErrorMessage.prototype.serializeAs_EmotePlayErrorMessage = function (param1) {
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
        };
        EmotePlayErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmotePlayErrorMessage(param1);
        };
        EmotePlayErrorMessage.prototype.deserializeAs_EmotePlayErrorMessage = function (param1) {
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of EmotePlayErrorMessage.emoteId.');
            }
        };
        EmotePlayErrorMessage.ID = 5688;
        return EmotePlayErrorMessage;
    })(NetworkMessage);
    Protocol.EmotePlayErrorMessage = EmotePlayErrorMessage;
    var EmotePlayMassiveMessage = (function (_super) {
        __extends(EmotePlayMassiveMessage, _super);
        function EmotePlayMassiveMessage() {
            this.actorIds = [];
            _super.call(this);
        }
        EmotePlayMassiveMessage.prototype.getMessageId = function () {
            return EmotePlayMassiveMessage.ID;
        };
        EmotePlayMassiveMessage.prototype.reset = function () {
            this.actorIds = [];
        };
        EmotePlayMassiveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmotePlayMassiveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmotePlayMassiveMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmotePlayMassiveMessage(param1);
        };
        EmotePlayMassiveMessage.prototype.serializeAs_EmotePlayMassiveMessage = function (param1) {
            _super.prototype.serializeAs_EmotePlayAbstractMessage.call(this, param1);
            param1.writeShort(this.actorIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.actorIds.length) {
                param1.writeInt(this.actorIds[_loc2_]);
                _loc2_++;
            }
        };
        EmotePlayMassiveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmotePlayMassiveMessage(param1);
        };
        EmotePlayMassiveMessage.prototype.deserializeAs_EmotePlayMassiveMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.actorIds.push(_loc4_);
                _loc3_++;
            }
        };
        EmotePlayMassiveMessage.ID = 5691;
        return EmotePlayMassiveMessage;
    })(EmotePlayAbstractMessage);
    Protocol.EmotePlayMassiveMessage = EmotePlayMassiveMessage;
    var EmotePlayMessage = (function (_super) {
        __extends(EmotePlayMessage, _super);
        function EmotePlayMessage() {
            this.actorId = 0;
            this.accountId = 0;
            _super.call(this);
        }
        EmotePlayMessage.prototype.getMessageId = function () {
            return EmotePlayMessage.ID;
        };
        EmotePlayMessage.prototype.reset = function () {
            this.actorId = 0;
            this.accountId = 0;
        };
        EmotePlayMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmotePlayMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmotePlayMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmotePlayMessage(param1);
        };
        EmotePlayMessage.prototype.serializeAs_EmotePlayMessage = function (param1) {
            _super.prototype.serializeAs_EmotePlayAbstractMessage.call(this, param1);
            param1.writeInt(this.actorId);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
        };
        EmotePlayMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmotePlayMessage(param1);
        };
        EmotePlayMessage.prototype.deserializeAs_EmotePlayMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.actorId = param1.readInt();
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of EmotePlayMessage.accountId.');
            }
        };
        EmotePlayMessage.ID = 5683;
        return EmotePlayMessage;
    })(EmotePlayAbstractMessage);
    Protocol.EmotePlayMessage = EmotePlayMessage;
    var EmotePlayRequestMessage = (function (_super) {
        __extends(EmotePlayRequestMessage, _super);
        function EmotePlayRequestMessage() {
            this.emoteId = 0;
            _super.call(this);
        }
        EmotePlayRequestMessage.prototype.getMessageId = function () {
            return EmotePlayRequestMessage.ID;
        };
        EmotePlayRequestMessage.prototype.reset = function () {
            this.emoteId = 0;
        };
        EmotePlayRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmotePlayRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmotePlayRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmotePlayRequestMessage(param1);
        };
        EmotePlayRequestMessage.prototype.serializeAs_EmotePlayRequestMessage = function (param1) {
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
        };
        EmotePlayRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmotePlayRequestMessage(param1);
        };
        EmotePlayRequestMessage.prototype.deserializeAs_EmotePlayRequestMessage = function (param1) {
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of EmotePlayRequestMessage.emoteId.');
            }
        };
        EmotePlayRequestMessage.ID = 5685;
        return EmotePlayRequestMessage;
    })(NetworkMessage);
    Protocol.EmotePlayRequestMessage = EmotePlayRequestMessage;
    var EmoteRemoveMessage = (function (_super) {
        __extends(EmoteRemoveMessage, _super);
        function EmoteRemoveMessage() {
            this.emoteId = 0;
            _super.call(this);
        }
        EmoteRemoveMessage.prototype.getMessageId = function () {
            return EmoteRemoveMessage.ID;
        };
        EmoteRemoveMessage.prototype.reset = function () {
            this.emoteId = 0;
        };
        EmoteRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EmoteRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EmoteRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_EmoteRemoveMessage(param1);
        };
        EmoteRemoveMessage.prototype.serializeAs_EmoteRemoveMessage = function (param1) {
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
        };
        EmoteRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EmoteRemoveMessage(param1);
        };
        EmoteRemoveMessage.prototype.deserializeAs_EmoteRemoveMessage = function (param1) {
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of EmoteRemoveMessage.emoteId.');
            }
        };
        EmoteRemoveMessage.ID = 5687;
        return EmoteRemoveMessage;
    })(NetworkMessage);
    Protocol.EmoteRemoveMessage = EmoteRemoveMessage;
    var GameRolePlayAggressionMessage = (function (_super) {
        __extends(GameRolePlayAggressionMessage, _super);
        function GameRolePlayAggressionMessage() {
            this.attackerId = 0;
            this.defenderId = 0;
            _super.call(this);
        }
        GameRolePlayAggressionMessage.prototype.getMessageId = function () {
            return GameRolePlayAggressionMessage.ID;
        };
        GameRolePlayAggressionMessage.prototype.reset = function () {
            this.attackerId = 0;
            this.defenderId = 0;
        };
        GameRolePlayAggressionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayAggressionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayAggressionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayAggressionMessage(param1);
        };
        GameRolePlayAggressionMessage.prototype.serializeAs_GameRolePlayAggressionMessage = function (param1) {
            if (this.attackerId < 0) {
                throw new Error('Forbidden value (' + this.attackerId + ') on element attackerId.');
            }
            param1.writeVarInt(this.attackerId);
            if (this.defenderId < 0) {
                throw new Error('Forbidden value (' + this.defenderId + ') on element defenderId.');
            }
            param1.writeVarInt(this.defenderId);
        };
        GameRolePlayAggressionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayAggressionMessage(param1);
        };
        GameRolePlayAggressionMessage.prototype.deserializeAs_GameRolePlayAggressionMessage = function (param1) {
            this.attackerId = param1.readVarUhInt();
            if (this.attackerId < 0) {
                throw new Error('Forbidden value (' + this.attackerId + ') on element of GameRolePlayAggressionMessage.attackerId.');
            }
            this.defenderId = param1.readVarUhInt();
            if (this.defenderId < 0) {
                throw new Error('Forbidden value (' + this.defenderId + ') on element of GameRolePlayAggressionMessage.defenderId.');
            }
        };
        GameRolePlayAggressionMessage.ID = 6073;
        return GameRolePlayAggressionMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayAggressionMessage = GameRolePlayAggressionMessage;
    var GameRolePlayAttackMonsterRequestMessage = (function (_super) {
        __extends(GameRolePlayAttackMonsterRequestMessage, _super);
        function GameRolePlayAttackMonsterRequestMessage() {
            this.monsterGroupId = 0;
            _super.call(this);
        }
        GameRolePlayAttackMonsterRequestMessage.prototype.getMessageId = function () {
            return GameRolePlayAttackMonsterRequestMessage.ID;
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.reset = function () {
            this.monsterGroupId = 0;
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayAttackMonsterRequestMessage(param1);
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.serializeAs_GameRolePlayAttackMonsterRequestMessage = function (param1) {
            param1.writeInt(this.monsterGroupId);
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayAttackMonsterRequestMessage(param1);
        };
        GameRolePlayAttackMonsterRequestMessage.prototype.deserializeAs_GameRolePlayAttackMonsterRequestMessage = function (param1) {
            this.monsterGroupId = param1.readInt();
        };
        GameRolePlayAttackMonsterRequestMessage.ID = 6191;
        return GameRolePlayAttackMonsterRequestMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayAttackMonsterRequestMessage = GameRolePlayAttackMonsterRequestMessage;
    var GameRolePlayFightRequestCanceledMessage = (function (_super) {
        __extends(GameRolePlayFightRequestCanceledMessage, _super);
        function GameRolePlayFightRequestCanceledMessage() {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
            _super.call(this);
        }
        GameRolePlayFightRequestCanceledMessage.prototype.getMessageId = function () {
            return GameRolePlayFightRequestCanceledMessage.ID;
        };
        GameRolePlayFightRequestCanceledMessage.prototype.reset = function () {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
        };
        GameRolePlayFightRequestCanceledMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayFightRequestCanceledMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayFightRequestCanceledMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayFightRequestCanceledMessage(param1);
        };
        GameRolePlayFightRequestCanceledMessage.prototype.serializeAs_GameRolePlayFightRequestCanceledMessage = function (param1) {
            param1.writeInt(this.fightId);
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element sourceId.');
            }
            param1.writeVarInt(this.sourceId);
            param1.writeInt(this.targetId);
        };
        GameRolePlayFightRequestCanceledMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayFightRequestCanceledMessage(param1);
        };
        GameRolePlayFightRequestCanceledMessage.prototype.deserializeAs_GameRolePlayFightRequestCanceledMessage = function (param1) {
            this.fightId = param1.readInt();
            this.sourceId = param1.readVarUhInt();
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element of GameRolePlayFightRequestCanceledMessage.sourceId.');
            }
            this.targetId = param1.readInt();
        };
        GameRolePlayFightRequestCanceledMessage.ID = 5822;
        return GameRolePlayFightRequestCanceledMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayFightRequestCanceledMessage = GameRolePlayFightRequestCanceledMessage;
    var GameRolePlayPlayerFightFriendlyAnswerMessage = (function (_super) {
        __extends(GameRolePlayPlayerFightFriendlyAnswerMessage, _super);
        function GameRolePlayPlayerFightFriendlyAnswerMessage() {
            this.fightId = 0;
            this.accept = false;
            _super.call(this);
        }
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.getMessageId = function () {
            return GameRolePlayPlayerFightFriendlyAnswerMessage.ID;
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.reset = function () {
            this.fightId = 0;
            this.accept = false;
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPlayerFightFriendlyAnswerMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.serializeAs_GameRolePlayPlayerFightFriendlyAnswerMessage = function (param1) {
            param1.writeInt(this.fightId);
            param1.writeBoolean(this.accept);
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPlayerFightFriendlyAnswerMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.prototype.deserializeAs_GameRolePlayPlayerFightFriendlyAnswerMessage = function (param1) {
            this.fightId = param1.readInt();
            this.accept = param1.readBoolean();
        };
        GameRolePlayPlayerFightFriendlyAnswerMessage.ID = 5732;
        return GameRolePlayPlayerFightFriendlyAnswerMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayPlayerFightFriendlyAnswerMessage = GameRolePlayPlayerFightFriendlyAnswerMessage;
    var GameRolePlayPlayerFightFriendlyAnsweredMessage = (function (_super) {
        __extends(GameRolePlayPlayerFightFriendlyAnsweredMessage, _super);
        function GameRolePlayPlayerFightFriendlyAnsweredMessage() {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
            this.accept = false;
            _super.call(this);
        }
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.getMessageId = function () {
            return GameRolePlayPlayerFightFriendlyAnsweredMessage.ID;
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.reset = function () {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
            this.accept = false;
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPlayerFightFriendlyAnsweredMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.serializeAs_GameRolePlayPlayerFightFriendlyAnsweredMessage = function (param1) {
            param1.writeInt(this.fightId);
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element sourceId.');
            }
            param1.writeVarInt(this.sourceId);
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
            param1.writeBoolean(this.accept);
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPlayerFightFriendlyAnsweredMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.prototype.deserializeAs_GameRolePlayPlayerFightFriendlyAnsweredMessage = function (param1) {
            this.fightId = param1.readInt();
            this.sourceId = param1.readVarUhInt();
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element of GameRolePlayPlayerFightFriendlyAnsweredMessage.sourceId.');
            }
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of GameRolePlayPlayerFightFriendlyAnsweredMessage.targetId.');
            }
            this.accept = param1.readBoolean();
        };
        GameRolePlayPlayerFightFriendlyAnsweredMessage.ID = 5733;
        return GameRolePlayPlayerFightFriendlyAnsweredMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayPlayerFightFriendlyAnsweredMessage = GameRolePlayPlayerFightFriendlyAnsweredMessage;
    var GameRolePlayPlayerFightFriendlyRequestedMessage = (function (_super) {
        __extends(GameRolePlayPlayerFightFriendlyRequestedMessage, _super);
        function GameRolePlayPlayerFightFriendlyRequestedMessage() {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
            _super.call(this);
        }
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.getMessageId = function () {
            return GameRolePlayPlayerFightFriendlyRequestedMessage.ID;
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.reset = function () {
            this.fightId = 0;
            this.sourceId = 0;
            this.targetId = 0;
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPlayerFightFriendlyRequestedMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.serializeAs_GameRolePlayPlayerFightFriendlyRequestedMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element sourceId.');
            }
            param1.writeVarInt(this.sourceId);
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPlayerFightFriendlyRequestedMessage(param1);
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.prototype.deserializeAs_GameRolePlayPlayerFightFriendlyRequestedMessage = function (param1) {
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GameRolePlayPlayerFightFriendlyRequestedMessage.fightId.');
            }
            this.sourceId = param1.readVarUhInt();
            if (this.sourceId < 0) {
                throw new Error('Forbidden value (' + this.sourceId + ') on element of GameRolePlayPlayerFightFriendlyRequestedMessage.sourceId.');
            }
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of GameRolePlayPlayerFightFriendlyRequestedMessage.targetId.');
            }
        };
        GameRolePlayPlayerFightFriendlyRequestedMessage.ID = 5937;
        return GameRolePlayPlayerFightFriendlyRequestedMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayPlayerFightFriendlyRequestedMessage = GameRolePlayPlayerFightFriendlyRequestedMessage;
    var GameRolePlayPlayerFightRequestMessage = (function (_super) {
        __extends(GameRolePlayPlayerFightRequestMessage, _super);
        function GameRolePlayPlayerFightRequestMessage() {
            this.targetId = 0;
            this.targetCellId = 0;
            this.friendly = false;
            _super.call(this);
        }
        GameRolePlayPlayerFightRequestMessage.prototype.getMessageId = function () {
            return GameRolePlayPlayerFightRequestMessage.ID;
        };
        GameRolePlayPlayerFightRequestMessage.prototype.reset = function () {
            this.targetId = 0;
            this.targetCellId = 0;
            this.friendly = false;
        };
        GameRolePlayPlayerFightRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayPlayerFightRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayPlayerFightRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPlayerFightRequestMessage(param1);
        };
        GameRolePlayPlayerFightRequestMessage.prototype.serializeAs_GameRolePlayPlayerFightRequestMessage = function (param1) {
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
            if (this.targetCellId < -1 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element targetCellId.');
            }
            param1.writeShort(this.targetCellId);
            param1.writeBoolean(this.friendly);
        };
        GameRolePlayPlayerFightRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPlayerFightRequestMessage(param1);
        };
        GameRolePlayPlayerFightRequestMessage.prototype.deserializeAs_GameRolePlayPlayerFightRequestMessage = function (param1) {
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of GameRolePlayPlayerFightRequestMessage.targetId.');
            }
            this.targetCellId = param1.readShort();
            if (this.targetCellId < -1 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element of GameRolePlayPlayerFightRequestMessage.targetCellId.');
            }
            this.friendly = param1.readBoolean();
        };
        GameRolePlayPlayerFightRequestMessage.ID = 5731;
        return GameRolePlayPlayerFightRequestMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayPlayerFightRequestMessage = GameRolePlayPlayerFightRequestMessage;
    var GameRolePlayRemoveChallengeMessage = (function (_super) {
        __extends(GameRolePlayRemoveChallengeMessage, _super);
        function GameRolePlayRemoveChallengeMessage() {
            this.fightId = 0;
            _super.call(this);
        }
        GameRolePlayRemoveChallengeMessage.prototype.getMessageId = function () {
            return GameRolePlayRemoveChallengeMessage.ID;
        };
        GameRolePlayRemoveChallengeMessage.prototype.reset = function () {
            this.fightId = 0;
        };
        GameRolePlayRemoveChallengeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayRemoveChallengeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayRemoveChallengeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayRemoveChallengeMessage(param1);
        };
        GameRolePlayRemoveChallengeMessage.prototype.serializeAs_GameRolePlayRemoveChallengeMessage = function (param1) {
            param1.writeInt(this.fightId);
        };
        GameRolePlayRemoveChallengeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayRemoveChallengeMessage(param1);
        };
        GameRolePlayRemoveChallengeMessage.prototype.deserializeAs_GameRolePlayRemoveChallengeMessage = function (param1) {
            this.fightId = param1.readInt();
        };
        GameRolePlayRemoveChallengeMessage.ID = 300;
        return GameRolePlayRemoveChallengeMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayRemoveChallengeMessage = GameRolePlayRemoveChallengeMessage;
    var GameRolePlayShowChallengeMessage = (function (_super) {
        __extends(GameRolePlayShowChallengeMessage, _super);
        function GameRolePlayShowChallengeMessage() {
            this.commonsInfos = new FightCommonInformations();
            _super.call(this);
        }
        GameRolePlayShowChallengeMessage.prototype.getMessageId = function () {
            return GameRolePlayShowChallengeMessage.ID;
        };
        GameRolePlayShowChallengeMessage.prototype.reset = function () {
            this.commonsInfos = new FightCommonInformations();
        };
        GameRolePlayShowChallengeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayShowChallengeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayShowChallengeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayShowChallengeMessage(param1);
        };
        GameRolePlayShowChallengeMessage.prototype.serializeAs_GameRolePlayShowChallengeMessage = function (param1) {
            this.commonsInfos.serializeAs_FightCommonInformations(param1);
        };
        GameRolePlayShowChallengeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayShowChallengeMessage(param1);
        };
        GameRolePlayShowChallengeMessage.prototype.deserializeAs_GameRolePlayShowChallengeMessage = function (param1) {
            this.commonsInfos = new FightCommonInformations();
            this.commonsInfos.deserialize(param1);
        };
        GameRolePlayShowChallengeMessage.ID = 301;
        return GameRolePlayShowChallengeMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayShowChallengeMessage = GameRolePlayShowChallengeMessage;
    var GameRolePlayArenaFightAnswerMessage = (function (_super) {
        __extends(GameRolePlayArenaFightAnswerMessage, _super);
        function GameRolePlayArenaFightAnswerMessage() {
            this.fightId = 0;
            this.accept = false;
            _super.call(this);
        }
        GameRolePlayArenaFightAnswerMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaFightAnswerMessage.ID;
        };
        GameRolePlayArenaFightAnswerMessage.prototype.reset = function () {
            this.fightId = 0;
            this.accept = false;
        };
        GameRolePlayArenaFightAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaFightAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaFightAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaFightAnswerMessage(param1);
        };
        GameRolePlayArenaFightAnswerMessage.prototype.serializeAs_GameRolePlayArenaFightAnswerMessage = function (param1) {
            param1.writeInt(this.fightId);
            param1.writeBoolean(this.accept);
        };
        GameRolePlayArenaFightAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaFightAnswerMessage(param1);
        };
        GameRolePlayArenaFightAnswerMessage.prototype.deserializeAs_GameRolePlayArenaFightAnswerMessage = function (param1) {
            this.fightId = param1.readInt();
            this.accept = param1.readBoolean();
        };
        GameRolePlayArenaFightAnswerMessage.ID = 6279;
        return GameRolePlayArenaFightAnswerMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaFightAnswerMessage = GameRolePlayArenaFightAnswerMessage;
    var GameRolePlayArenaFightPropositionMessage = (function (_super) {
        __extends(GameRolePlayArenaFightPropositionMessage, _super);
        function GameRolePlayArenaFightPropositionMessage() {
            this.fightId = 0;
            this.alliesId = [];
            this.duration = 0;
            _super.call(this);
        }
        GameRolePlayArenaFightPropositionMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaFightPropositionMessage.ID;
        };
        GameRolePlayArenaFightPropositionMessage.prototype.reset = function () {
            this.fightId = 0;
            this.alliesId = [];
            this.duration = 0;
        };
        GameRolePlayArenaFightPropositionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaFightPropositionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaFightPropositionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaFightPropositionMessage(param1);
        };
        GameRolePlayArenaFightPropositionMessage.prototype.serializeAs_GameRolePlayArenaFightPropositionMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            param1.writeShort(this.alliesId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alliesId.length) {
                param1.writeInt(this.alliesId[_loc2_]);
                _loc2_++;
            }
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element duration.');
            }
            param1.writeVarShort(this.duration);
        };
        GameRolePlayArenaFightPropositionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaFightPropositionMessage(param1);
        };
        GameRolePlayArenaFightPropositionMessage.prototype.deserializeAs_GameRolePlayArenaFightPropositionMessage = function (param1) {
            var _loc4_ = 0;
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GameRolePlayArenaFightPropositionMessage.fightId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.alliesId.push(_loc4_);
                _loc3_++;
            }
            this.duration = param1.readVarUhShort();
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element of GameRolePlayArenaFightPropositionMessage.duration.');
            }
        };
        GameRolePlayArenaFightPropositionMessage.ID = 6276;
        return GameRolePlayArenaFightPropositionMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaFightPropositionMessage = GameRolePlayArenaFightPropositionMessage;
    var GameRolePlayArenaFighterStatusMessage = (function (_super) {
        __extends(GameRolePlayArenaFighterStatusMessage, _super);
        function GameRolePlayArenaFighterStatusMessage() {
            this.fightId = 0;
            this.playerId = 0;
            this.accepted = false;
            _super.call(this);
        }
        GameRolePlayArenaFighterStatusMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaFighterStatusMessage.ID;
        };
        GameRolePlayArenaFighterStatusMessage.prototype.reset = function () {
            this.fightId = 0;
            this.playerId = 0;
            this.accepted = false;
        };
        GameRolePlayArenaFighterStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaFighterStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaFighterStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaFighterStatusMessage(param1);
        };
        GameRolePlayArenaFighterStatusMessage.prototype.serializeAs_GameRolePlayArenaFighterStatusMessage = function (param1) {
            param1.writeInt(this.fightId);
            param1.writeInt(this.playerId);
            param1.writeBoolean(this.accepted);
        };
        GameRolePlayArenaFighterStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaFighterStatusMessage(param1);
        };
        GameRolePlayArenaFighterStatusMessage.prototype.deserializeAs_GameRolePlayArenaFighterStatusMessage = function (param1) {
            this.fightId = param1.readInt();
            this.playerId = param1.readInt();
            this.accepted = param1.readBoolean();
        };
        GameRolePlayArenaFighterStatusMessage.ID = 6281;
        return GameRolePlayArenaFighterStatusMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaFighterStatusMessage = GameRolePlayArenaFighterStatusMessage;
    var GameRolePlayArenaRegisterMessage = (function (_super) {
        __extends(GameRolePlayArenaRegisterMessage, _super);
        function GameRolePlayArenaRegisterMessage() {
            this.battleMode = 3;
            _super.call(this);
        }
        GameRolePlayArenaRegisterMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaRegisterMessage.ID;
        };
        GameRolePlayArenaRegisterMessage.prototype.reset = function () {
            this.battleMode = 3;
        };
        GameRolePlayArenaRegisterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaRegisterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaRegisterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaRegisterMessage(param1);
        };
        GameRolePlayArenaRegisterMessage.prototype.serializeAs_GameRolePlayArenaRegisterMessage = function (param1) {
            param1.writeInt(this.battleMode);
        };
        GameRolePlayArenaRegisterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaRegisterMessage(param1);
        };
        GameRolePlayArenaRegisterMessage.prototype.deserializeAs_GameRolePlayArenaRegisterMessage = function (param1) {
            this.battleMode = param1.readInt();
            if (this.battleMode < 0) {
                throw new Error('Forbidden value (' + this.battleMode + ') on element of GameRolePlayArenaRegisterMessage.battleMode.');
            }
        };
        GameRolePlayArenaRegisterMessage.ID = 6280;
        return GameRolePlayArenaRegisterMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaRegisterMessage = GameRolePlayArenaRegisterMessage;
    var GameRolePlayArenaRegistrationStatusMessage = (function (_super) {
        __extends(GameRolePlayArenaRegistrationStatusMessage, _super);
        function GameRolePlayArenaRegistrationStatusMessage() {
            this.registered = false;
            this.step = 0;
            this.battleMode = 3;
            _super.call(this);
        }
        GameRolePlayArenaRegistrationStatusMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaRegistrationStatusMessage.ID;
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.reset = function () {
            this.registered = false;
            this.step = 0;
            this.battleMode = 3;
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaRegistrationStatusMessage(param1);
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.serializeAs_GameRolePlayArenaRegistrationStatusMessage = function (param1) {
            param1.writeBoolean(this.registered);
            param1.writeByte(this.step);
            param1.writeInt(this.battleMode);
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaRegistrationStatusMessage(param1);
        };
        GameRolePlayArenaRegistrationStatusMessage.prototype.deserializeAs_GameRolePlayArenaRegistrationStatusMessage = function (param1) {
            this.registered = param1.readBoolean();
            this.step = param1.readByte();
            if (this.step < 0) {
                throw new Error('Forbidden value (' + this.step + ') on element of GameRolePlayArenaRegistrationStatusMessage.step.');
            }
            this.battleMode = param1.readInt();
            if (this.battleMode < 0) {
                throw new Error('Forbidden value (' + this.battleMode + ') on element of GameRolePlayArenaRegistrationStatusMessage.battleMode.');
            }
        };
        GameRolePlayArenaRegistrationStatusMessage.ID = 6284;
        return GameRolePlayArenaRegistrationStatusMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaRegistrationStatusMessage = GameRolePlayArenaRegistrationStatusMessage;
    var GameRolePlayArenaSwitchToFightServerMessage = (function (_super) {
        __extends(GameRolePlayArenaSwitchToFightServerMessage, _super);
        function GameRolePlayArenaSwitchToFightServerMessage() {
            this.address = '';
            this.port = 0;
            this.ticket = [];
            _super.call(this);
        }
        GameRolePlayArenaSwitchToFightServerMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaSwitchToFightServerMessage.ID;
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.reset = function () {
            this.address = '';
            this.port = 0;
            this.ticket = [];
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaSwitchToFightServerMessage(param1);
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.serializeAs_GameRolePlayArenaSwitchToFightServerMessage = function (param1) {
            param1.writeUTF(this.address);
            if (this.port < 0 || this.port > 65535) {
                throw new Error('Forbidden value (' + this.port + ') on element port.');
            }
            param1.writeShort(this.port);
            param1.writeVarInt(this.ticket.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ticket.length) {
                param1.writeByte(this.ticket[_loc2_]);
                _loc2_++;
            }
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaSwitchToFightServerMessage(param1);
        };
        GameRolePlayArenaSwitchToFightServerMessage.prototype.deserializeAs_GameRolePlayArenaSwitchToFightServerMessage = function (param1) {
            var _loc4_ = 0;
            this.address = param1.readUTF();
            this.port = param1.readUnsignedShort();
            if (this.port < 0 || this.port > 65535) {
                throw new Error('Forbidden value (' + this.port + ') on element of GameRolePlayArenaSwitchToFightServerMessage.port.');
            }
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.ticket.push(_loc4_);
                _loc3_++;
            }
        };
        GameRolePlayArenaSwitchToFightServerMessage.ID = 6575;
        return GameRolePlayArenaSwitchToFightServerMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaSwitchToFightServerMessage = GameRolePlayArenaSwitchToFightServerMessage;
    var GameRolePlayArenaSwitchToGameServerMessage = (function (_super) {
        __extends(GameRolePlayArenaSwitchToGameServerMessage, _super);
        function GameRolePlayArenaSwitchToGameServerMessage() {
            this.validToken = false;
            this.ticket = [];
            this.homeServerId = 0;
            _super.call(this);
        }
        GameRolePlayArenaSwitchToGameServerMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaSwitchToGameServerMessage.ID;
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.reset = function () {
            this.validToken = false;
            this.ticket = [];
            this.homeServerId = 0;
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaSwitchToGameServerMessage(param1);
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.serializeAs_GameRolePlayArenaSwitchToGameServerMessage = function (param1) {
            param1.writeBoolean(this.validToken);
            param1.writeVarInt(this.ticket.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ticket.length) {
                param1.writeByte(this.ticket[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.homeServerId);
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaSwitchToGameServerMessage(param1);
        };
        GameRolePlayArenaSwitchToGameServerMessage.prototype.deserializeAs_GameRolePlayArenaSwitchToGameServerMessage = function (param1) {
            var _loc4_ = 0;
            this.validToken = param1.readBoolean();
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.ticket.push(_loc4_);
                _loc3_++;
            }
            this.homeServerId = param1.readShort();
        };
        GameRolePlayArenaSwitchToGameServerMessage.ID = 6574;
        return GameRolePlayArenaSwitchToGameServerMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaSwitchToGameServerMessage = GameRolePlayArenaSwitchToGameServerMessage;
    var GameRolePlayArenaUnregisterMessage = (function (_super) {
        __extends(GameRolePlayArenaUnregisterMessage, _super);
        function GameRolePlayArenaUnregisterMessage() {
            _super.call(this);
        }
        GameRolePlayArenaUnregisterMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaUnregisterMessage.ID;
        };
        GameRolePlayArenaUnregisterMessage.prototype.reset = function () {
        };
        GameRolePlayArenaUnregisterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaUnregisterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaUnregisterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaUnregisterMessage(param1);
        };
        GameRolePlayArenaUnregisterMessage.prototype.serializeAs_GameRolePlayArenaUnregisterMessage = function (param1) {
        };
        GameRolePlayArenaUnregisterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaUnregisterMessage(param1);
        };
        GameRolePlayArenaUnregisterMessage.prototype.deserializeAs_GameRolePlayArenaUnregisterMessage = function (param1) {
        };
        GameRolePlayArenaUnregisterMessage.ID = 6282;
        return GameRolePlayArenaUnregisterMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaUnregisterMessage = GameRolePlayArenaUnregisterMessage;
    var GameRolePlayArenaUpdatePlayerInfosMessage = (function (_super) {
        __extends(GameRolePlayArenaUpdatePlayerInfosMessage, _super);
        function GameRolePlayArenaUpdatePlayerInfosMessage() {
            this.rank = 0;
            this.bestDailyRank = 0;
            this.bestRank = 0;
            this.victoryCount = 0;
            this.arenaFightcount = 0;
            _super.call(this);
        }
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.getMessageId = function () {
            return GameRolePlayArenaUpdatePlayerInfosMessage.ID;
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.reset = function () {
            this.rank = 0;
            this.bestDailyRank = 0;
            this.bestRank = 0;
            this.victoryCount = 0;
            this.arenaFightcount = 0;
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayArenaUpdatePlayerInfosMessage(param1);
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.serializeAs_GameRolePlayArenaUpdatePlayerInfosMessage = function (param1) {
            if (this.rank < 0 || this.rank > 2300) {
                throw new Error('Forbidden value (' + this.rank + ') on element rank.');
            }
            param1.writeVarShort(this.rank);
            if (this.bestDailyRank < 0 || this.bestDailyRank > 2300) {
                throw new Error('Forbidden value (' + this.bestDailyRank + ') on element bestDailyRank.');
            }
            param1.writeVarShort(this.bestDailyRank);
            if (this.bestRank < 0 || this.bestRank > 2300) {
                throw new Error('Forbidden value (' + this.bestRank + ') on element bestRank.');
            }
            param1.writeVarShort(this.bestRank);
            if (this.victoryCount < 0) {
                throw new Error('Forbidden value (' + this.victoryCount + ') on element victoryCount.');
            }
            param1.writeVarShort(this.victoryCount);
            if (this.arenaFightcount < 0) {
                throw new Error('Forbidden value (' + this.arenaFightcount + ') on element arenaFightcount.');
            }
            param1.writeVarShort(this.arenaFightcount);
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayArenaUpdatePlayerInfosMessage(param1);
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.prototype.deserializeAs_GameRolePlayArenaUpdatePlayerInfosMessage = function (param1) {
            this.rank = param1.readVarUhShort();
            if (this.rank < 0 || this.rank > 2300) {
                throw new Error('Forbidden value (' + this.rank + ') on element of GameRolePlayArenaUpdatePlayerInfosMessage.rank.');
            }
            this.bestDailyRank = param1.readVarUhShort();
            if (this.bestDailyRank < 0 || this.bestDailyRank > 2300) {
                throw new Error('Forbidden value (' + this.bestDailyRank + ') on element of GameRolePlayArenaUpdatePlayerInfosMessage.bestDailyRank.');
            }
            this.bestRank = param1.readVarUhShort();
            if (this.bestRank < 0 || this.bestRank > 2300) {
                throw new Error('Forbidden value (' + this.bestRank + ') on element of GameRolePlayArenaUpdatePlayerInfosMessage.bestRank.');
            }
            this.victoryCount = param1.readVarUhShort();
            if (this.victoryCount < 0) {
                throw new Error('Forbidden value (' + this.victoryCount + ') on element of GameRolePlayArenaUpdatePlayerInfosMessage.victoryCount.');
            }
            this.arenaFightcount = param1.readVarUhShort();
            if (this.arenaFightcount < 0) {
                throw new Error('Forbidden value (' + this.arenaFightcount + ') on element of GameRolePlayArenaUpdatePlayerInfosMessage.arenaFightcount.');
            }
        };
        GameRolePlayArenaUpdatePlayerInfosMessage.ID = 6301;
        return GameRolePlayArenaUpdatePlayerInfosMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayArenaUpdatePlayerInfosMessage = GameRolePlayArenaUpdatePlayerInfosMessage;
    var AccountHouseMessage = (function (_super) {
        __extends(AccountHouseMessage, _super);
        function AccountHouseMessage() {
            this.houses = [];
            _super.call(this);
        }
        AccountHouseMessage.prototype.getMessageId = function () {
            return AccountHouseMessage.ID;
        };
        AccountHouseMessage.prototype.reset = function () {
            this.houses = [];
        };
        AccountHouseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccountHouseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccountHouseMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccountHouseMessage(param1);
        };
        AccountHouseMessage.prototype.serializeAs_AccountHouseMessage = function (param1) {
            param1.writeShort(this.houses.length);
            var _loc2_ = 0;
            while (_loc2_ < this.houses.length) {
                (this.houses[_loc2_]).serializeAs_AccountHouseInformations(param1);
                _loc2_++;
            }
        };
        AccountHouseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccountHouseMessage(param1);
        };
        AccountHouseMessage.prototype.deserializeAs_AccountHouseMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new AccountHouseInformations();
                _loc4_.deserialize(param1);
                this.houses.push(_loc4_);
                _loc3_++;
            }
        };
        AccountHouseMessage.ID = 6315;
        return AccountHouseMessage;
    })(NetworkMessage);
    Protocol.AccountHouseMessage = AccountHouseMessage;
    var HouseBuyRequestMessage = (function (_super) {
        __extends(HouseBuyRequestMessage, _super);
        function HouseBuyRequestMessage() {
            this.proposedPrice = 0;
            _super.call(this);
        }
        HouseBuyRequestMessage.prototype.getMessageId = function () {
            return HouseBuyRequestMessage.ID;
        };
        HouseBuyRequestMessage.prototype.reset = function () {
            this.proposedPrice = 0;
        };
        HouseBuyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseBuyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseBuyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseBuyRequestMessage(param1);
        };
        HouseBuyRequestMessage.prototype.serializeAs_HouseBuyRequestMessage = function (param1) {
            if (this.proposedPrice < 0) {
                throw new Error('Forbidden value (' + this.proposedPrice + ') on element proposedPrice.');
            }
            param1.writeVarInt(this.proposedPrice);
        };
        HouseBuyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseBuyRequestMessage(param1);
        };
        HouseBuyRequestMessage.prototype.deserializeAs_HouseBuyRequestMessage = function (param1) {
            this.proposedPrice = param1.readVarUhInt();
            if (this.proposedPrice < 0) {
                throw new Error('Forbidden value (' + this.proposedPrice + ') on element of HouseBuyRequestMessage.proposedPrice.');
            }
        };
        HouseBuyRequestMessage.ID = 5738;
        return HouseBuyRequestMessage;
    })(NetworkMessage);
    Protocol.HouseBuyRequestMessage = HouseBuyRequestMessage;
    var HouseBuyResultMessage = (function (_super) {
        __extends(HouseBuyResultMessage, _super);
        function HouseBuyResultMessage() {
            this.houseId = 0;
            this.bought = false;
            this.realPrice = 0;
            _super.call(this);
        }
        HouseBuyResultMessage.prototype.getMessageId = function () {
            return HouseBuyResultMessage.ID;
        };
        HouseBuyResultMessage.prototype.reset = function () {
            this.houseId = 0;
            this.bought = false;
            this.realPrice = 0;
        };
        HouseBuyResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseBuyResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseBuyResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseBuyResultMessage(param1);
        };
        HouseBuyResultMessage.prototype.serializeAs_HouseBuyResultMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            param1.writeBoolean(this.bought);
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element realPrice.');
            }
            param1.writeVarInt(this.realPrice);
        };
        HouseBuyResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseBuyResultMessage(param1);
        };
        HouseBuyResultMessage.prototype.deserializeAs_HouseBuyResultMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseBuyResultMessage.houseId.');
            }
            this.bought = param1.readBoolean();
            this.realPrice = param1.readVarUhInt();
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element of HouseBuyResultMessage.realPrice.');
            }
        };
        HouseBuyResultMessage.ID = 5735;
        return HouseBuyResultMessage;
    })(NetworkMessage);
    Protocol.HouseBuyResultMessage = HouseBuyResultMessage;
    var HouseKickIndoorMerchantRequestMessage = (function (_super) {
        __extends(HouseKickIndoorMerchantRequestMessage, _super);
        function HouseKickIndoorMerchantRequestMessage() {
            this.cellId = 0;
            _super.call(this);
        }
        HouseKickIndoorMerchantRequestMessage.prototype.getMessageId = function () {
            return HouseKickIndoorMerchantRequestMessage.ID;
        };
        HouseKickIndoorMerchantRequestMessage.prototype.reset = function () {
            this.cellId = 0;
        };
        HouseKickIndoorMerchantRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseKickIndoorMerchantRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseKickIndoorMerchantRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseKickIndoorMerchantRequestMessage(param1);
        };
        HouseKickIndoorMerchantRequestMessage.prototype.serializeAs_HouseKickIndoorMerchantRequestMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
        };
        HouseKickIndoorMerchantRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseKickIndoorMerchantRequestMessage(param1);
        };
        HouseKickIndoorMerchantRequestMessage.prototype.deserializeAs_HouseKickIndoorMerchantRequestMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of HouseKickIndoorMerchantRequestMessage.cellId.');
            }
        };
        HouseKickIndoorMerchantRequestMessage.ID = 5661;
        return HouseKickIndoorMerchantRequestMessage;
    })(NetworkMessage);
    Protocol.HouseKickIndoorMerchantRequestMessage = HouseKickIndoorMerchantRequestMessage;
    var HouseKickRequestMessage = (function (_super) {
        __extends(HouseKickRequestMessage, _super);
        function HouseKickRequestMessage() {
            this.id = 0;
            _super.call(this);
        }
        HouseKickRequestMessage.prototype.getMessageId = function () {
            return HouseKickRequestMessage.ID;
        };
        HouseKickRequestMessage.prototype.reset = function () {
            this.id = 0;
        };
        HouseKickRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseKickRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseKickRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseKickRequestMessage(param1);
        };
        HouseKickRequestMessage.prototype.serializeAs_HouseKickRequestMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
        };
        HouseKickRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseKickRequestMessage(param1);
        };
        HouseKickRequestMessage.prototype.deserializeAs_HouseKickRequestMessage = function (param1) {
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of HouseKickRequestMessage.id.');
            }
        };
        HouseKickRequestMessage.ID = 5698;
        return HouseKickRequestMessage;
    })(NetworkMessage);
    Protocol.HouseKickRequestMessage = HouseKickRequestMessage;
    var HouseLockFromInsideRequestMessage = (function (_super) {
        __extends(HouseLockFromInsideRequestMessage, _super);
        function HouseLockFromInsideRequestMessage() {
            _super.call(this);
        }
        HouseLockFromInsideRequestMessage.prototype.getMessageId = function () {
            return HouseLockFromInsideRequestMessage.ID;
        };
        HouseLockFromInsideRequestMessage.prototype.reset = function () {
        };
        HouseLockFromInsideRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseLockFromInsideRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseLockFromInsideRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseLockFromInsideRequestMessage(param1);
        };
        HouseLockFromInsideRequestMessage.prototype.serializeAs_HouseLockFromInsideRequestMessage = function (param1) {
            _super.prototype.serializeAs_LockableChangeCodeMessage.call(this, param1);
        };
        HouseLockFromInsideRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseLockFromInsideRequestMessage(param1);
        };
        HouseLockFromInsideRequestMessage.prototype.deserializeAs_HouseLockFromInsideRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        HouseLockFromInsideRequestMessage.ID = 5885;
        return HouseLockFromInsideRequestMessage;
    })(LockableChangeCodeMessage);
    Protocol.HouseLockFromInsideRequestMessage = HouseLockFromInsideRequestMessage;
    var HousePropertiesMessage = (function (_super) {
        __extends(HousePropertiesMessage, _super);
        function HousePropertiesMessage() {
            this.properties = new HouseInformations();
            _super.call(this);
        }
        HousePropertiesMessage.prototype.getMessageId = function () {
            return HousePropertiesMessage.ID;
        };
        HousePropertiesMessage.prototype.reset = function () {
            this.properties = new HouseInformations();
        };
        HousePropertiesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HousePropertiesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HousePropertiesMessage.prototype.serialize = function (param1) {
            this.serializeAs_HousePropertiesMessage(param1);
        };
        HousePropertiesMessage.prototype.serializeAs_HousePropertiesMessage = function (param1) {
            param1.writeShort(this.properties.getTypeId());
            this.properties.serialize(param1);
        };
        HousePropertiesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HousePropertiesMessage(param1);
        };
        HousePropertiesMessage.prototype.deserializeAs_HousePropertiesMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.properties = ProtocolTypeManager.getInstance(HouseInformations, _loc2_);
            this.properties.deserialize(param1);
        };
        HousePropertiesMessage.ID = 5734;
        return HousePropertiesMessage;
    })(NetworkMessage);
    Protocol.HousePropertiesMessage = HousePropertiesMessage;
    var HouseSellFromInsideRequestMessage = (function (_super) {
        __extends(HouseSellFromInsideRequestMessage, _super);
        function HouseSellFromInsideRequestMessage() {
            _super.call(this);
        }
        HouseSellFromInsideRequestMessage.prototype.getMessageId = function () {
            return HouseSellFromInsideRequestMessage.ID;
        };
        HouseSellFromInsideRequestMessage.prototype.reset = function () {
        };
        HouseSellFromInsideRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseSellFromInsideRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseSellFromInsideRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseSellFromInsideRequestMessage(param1);
        };
        HouseSellFromInsideRequestMessage.prototype.serializeAs_HouseSellFromInsideRequestMessage = function (param1) {
            _super.prototype.serializeAs_HouseSellRequestMessage.call(this, param1);
        };
        HouseSellFromInsideRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseSellFromInsideRequestMessage(param1);
        };
        HouseSellFromInsideRequestMessage.prototype.deserializeAs_HouseSellFromInsideRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        HouseSellFromInsideRequestMessage.ID = 5884;
        return HouseSellFromInsideRequestMessage;
    })(HouseSellRequestMessage);
    Protocol.HouseSellFromInsideRequestMessage = HouseSellFromInsideRequestMessage;
    var HouseSellRequestMessage = (function (_super) {
        __extends(HouseSellRequestMessage, _super);
        function HouseSellRequestMessage() {
            this.amount = 0;
            _super.call(this);
        }
        HouseSellRequestMessage.prototype.getMessageId = function () {
            return HouseSellRequestMessage.ID;
        };
        HouseSellRequestMessage.prototype.reset = function () {
            this.amount = 0;
        };
        HouseSellRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseSellRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseSellRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseSellRequestMessage(param1);
        };
        HouseSellRequestMessage.prototype.serializeAs_HouseSellRequestMessage = function (param1) {
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element amount.');
            }
            param1.writeVarInt(this.amount);
        };
        HouseSellRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseSellRequestMessage(param1);
        };
        HouseSellRequestMessage.prototype.deserializeAs_HouseSellRequestMessage = function (param1) {
            this.amount = param1.readVarUhInt();
            if (this.amount < 0) {
                throw new Error('Forbidden value (' + this.amount + ') on element of HouseSellRequestMessage.amount.');
            }
        };
        HouseSellRequestMessage.ID = 5697;
        return HouseSellRequestMessage;
    })(NetworkMessage);
    Protocol.HouseSellRequestMessage = HouseSellRequestMessage;
    var HouseSoldMessage = (function (_super) {
        __extends(HouseSoldMessage, _super);
        function HouseSoldMessage() {
            this.houseId = 0;
            this.realPrice = 0;
            this.buyerName = '';
            _super.call(this);
        }
        HouseSoldMessage.prototype.getMessageId = function () {
            return HouseSoldMessage.ID;
        };
        HouseSoldMessage.prototype.reset = function () {
            this.houseId = 0;
            this.realPrice = 0;
            this.buyerName = '';
        };
        HouseSoldMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseSoldMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseSoldMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseSoldMessage(param1);
        };
        HouseSoldMessage.prototype.serializeAs_HouseSoldMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element realPrice.');
            }
            param1.writeVarInt(this.realPrice);
            param1.writeUTF(this.buyerName);
        };
        HouseSoldMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseSoldMessage(param1);
        };
        HouseSoldMessage.prototype.deserializeAs_HouseSoldMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseSoldMessage.houseId.');
            }
            this.realPrice = param1.readVarUhInt();
            if (this.realPrice < 0) {
                throw new Error('Forbidden value (' + this.realPrice + ') on element of HouseSoldMessage.realPrice.');
            }
            this.buyerName = param1.readUTF();
        };
        HouseSoldMessage.ID = 5737;
        return HouseSoldMessage;
    })(NetworkMessage);
    Protocol.HouseSoldMessage = HouseSoldMessage;
    var HouseToSellFilterMessage = (function (_super) {
        __extends(HouseToSellFilterMessage, _super);
        function HouseToSellFilterMessage() {
            this.areaId = 0;
            this.atLeastNbRoom = 0;
            this.atLeastNbChest = 0;
            this.skillRequested = 0;
            this.maxPrice = 0;
            _super.call(this);
        }
        HouseToSellFilterMessage.prototype.getMessageId = function () {
            return HouseToSellFilterMessage.ID;
        };
        HouseToSellFilterMessage.prototype.reset = function () {
            this.areaId = 0;
            this.atLeastNbRoom = 0;
            this.atLeastNbChest = 0;
            this.skillRequested = 0;
            this.maxPrice = 0;
        };
        HouseToSellFilterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseToSellFilterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseToSellFilterMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseToSellFilterMessage(param1);
        };
        HouseToSellFilterMessage.prototype.serializeAs_HouseToSellFilterMessage = function (param1) {
            param1.writeInt(this.areaId);
            if (this.atLeastNbRoom < 0) {
                throw new Error('Forbidden value (' + this.atLeastNbRoom + ') on element atLeastNbRoom.');
            }
            param1.writeByte(this.atLeastNbRoom);
            if (this.atLeastNbChest < 0) {
                throw new Error('Forbidden value (' + this.atLeastNbChest + ') on element atLeastNbChest.');
            }
            param1.writeByte(this.atLeastNbChest);
            if (this.skillRequested < 0) {
                throw new Error('Forbidden value (' + this.skillRequested + ') on element skillRequested.');
            }
            param1.writeVarShort(this.skillRequested);
            if (this.maxPrice < 0) {
                throw new Error('Forbidden value (' + this.maxPrice + ') on element maxPrice.');
            }
            param1.writeVarInt(this.maxPrice);
        };
        HouseToSellFilterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseToSellFilterMessage(param1);
        };
        HouseToSellFilterMessage.prototype.deserializeAs_HouseToSellFilterMessage = function (param1) {
            this.areaId = param1.readInt();
            this.atLeastNbRoom = param1.readByte();
            if (this.atLeastNbRoom < 0) {
                throw new Error('Forbidden value (' + this.atLeastNbRoom + ') on element of HouseToSellFilterMessage.atLeastNbRoom.');
            }
            this.atLeastNbChest = param1.readByte();
            if (this.atLeastNbChest < 0) {
                throw new Error('Forbidden value (' + this.atLeastNbChest + ') on element of HouseToSellFilterMessage.atLeastNbChest.');
            }
            this.skillRequested = param1.readVarUhShort();
            if (this.skillRequested < 0) {
                throw new Error('Forbidden value (' + this.skillRequested + ') on element of HouseToSellFilterMessage.skillRequested.');
            }
            this.maxPrice = param1.readVarUhInt();
            if (this.maxPrice < 0) {
                throw new Error('Forbidden value (' + this.maxPrice + ') on element of HouseToSellFilterMessage.maxPrice.');
            }
        };
        HouseToSellFilterMessage.ID = 6137;
        return HouseToSellFilterMessage;
    })(NetworkMessage);
    Protocol.HouseToSellFilterMessage = HouseToSellFilterMessage;
    var HouseToSellListMessage = (function (_super) {
        __extends(HouseToSellListMessage, _super);
        function HouseToSellListMessage() {
            this.pageIndex = 0;
            this.totalPage = 0;
            this.houseList = [];
            _super.call(this);
        }
        HouseToSellListMessage.prototype.getMessageId = function () {
            return HouseToSellListMessage.ID;
        };
        HouseToSellListMessage.prototype.reset = function () {
            this.pageIndex = 0;
            this.totalPage = 0;
            this.houseList = [];
        };
        HouseToSellListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseToSellListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseToSellListMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseToSellListMessage(param1);
        };
        HouseToSellListMessage.prototype.serializeAs_HouseToSellListMessage = function (param1) {
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element pageIndex.');
            }
            param1.writeVarShort(this.pageIndex);
            if (this.totalPage < 0) {
                throw new Error('Forbidden value (' + this.totalPage + ') on element totalPage.');
            }
            param1.writeVarShort(this.totalPage);
            param1.writeShort(this.houseList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.houseList.length) {
                (this.houseList[_loc2_]).serializeAs_HouseInformationsForSell(param1);
                _loc2_++;
            }
        };
        HouseToSellListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseToSellListMessage(param1);
        };
        HouseToSellListMessage.prototype.deserializeAs_HouseToSellListMessage = function (param1) {
            var _loc4_ = null;
            this.pageIndex = param1.readVarUhShort();
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element of HouseToSellListMessage.pageIndex.');
            }
            this.totalPage = param1.readVarUhShort();
            if (this.totalPage < 0) {
                throw new Error('Forbidden value (' + this.totalPage + ') on element of HouseToSellListMessage.totalPage.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new HouseInformationsForSell();
                _loc4_.deserialize(param1);
                this.houseList.push(_loc4_);
                _loc3_++;
            }
        };
        HouseToSellListMessage.ID = 6140;
        return HouseToSellListMessage;
    })(NetworkMessage);
    Protocol.HouseToSellListMessage = HouseToSellListMessage;
    var HouseToSellListRequestMessage = (function (_super) {
        __extends(HouseToSellListRequestMessage, _super);
        function HouseToSellListRequestMessage() {
            this.pageIndex = 0;
            _super.call(this);
        }
        HouseToSellListRequestMessage.prototype.getMessageId = function () {
            return HouseToSellListRequestMessage.ID;
        };
        HouseToSellListRequestMessage.prototype.reset = function () {
            this.pageIndex = 0;
        };
        HouseToSellListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseToSellListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseToSellListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseToSellListRequestMessage(param1);
        };
        HouseToSellListRequestMessage.prototype.serializeAs_HouseToSellListRequestMessage = function (param1) {
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element pageIndex.');
            }
            param1.writeVarShort(this.pageIndex);
        };
        HouseToSellListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseToSellListRequestMessage(param1);
        };
        HouseToSellListRequestMessage.prototype.deserializeAs_HouseToSellListRequestMessage = function (param1) {
            this.pageIndex = param1.readVarUhShort();
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element of HouseToSellListRequestMessage.pageIndex.');
            }
        };
        HouseToSellListRequestMessage.ID = 6139;
        return HouseToSellListRequestMessage;
    })(NetworkMessage);
    Protocol.HouseToSellListRequestMessage = HouseToSellListRequestMessage;
    var HouseGuildNoneMessage = (function (_super) {
        __extends(HouseGuildNoneMessage, _super);
        function HouseGuildNoneMessage() {
            this.houseId = 0;
            _super.call(this);
        }
        HouseGuildNoneMessage.prototype.getMessageId = function () {
            return HouseGuildNoneMessage.ID;
        };
        HouseGuildNoneMessage.prototype.reset = function () {
            this.houseId = 0;
        };
        HouseGuildNoneMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseGuildNoneMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseGuildNoneMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseGuildNoneMessage(param1);
        };
        HouseGuildNoneMessage.prototype.serializeAs_HouseGuildNoneMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
        };
        HouseGuildNoneMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseGuildNoneMessage(param1);
        };
        HouseGuildNoneMessage.prototype.deserializeAs_HouseGuildNoneMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseGuildNoneMessage.houseId.');
            }
        };
        HouseGuildNoneMessage.ID = 5701;
        return HouseGuildNoneMessage;
    })(NetworkMessage);
    Protocol.HouseGuildNoneMessage = HouseGuildNoneMessage;
    var HouseGuildRightsMessage = (function (_super) {
        __extends(HouseGuildRightsMessage, _super);
        function HouseGuildRightsMessage() {
            this.houseId = 0;
            this.guildInfo = new GuildInformations();
            this.rights = 0;
            _super.call(this);
        }
        HouseGuildRightsMessage.prototype.getMessageId = function () {
            return HouseGuildRightsMessage.ID;
        };
        HouseGuildRightsMessage.prototype.reset = function () {
            this.houseId = 0;
            this.guildInfo = new GuildInformations();
            this.rights = 0;
        };
        HouseGuildRightsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseGuildRightsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseGuildRightsMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseGuildRightsMessage(param1);
        };
        HouseGuildRightsMessage.prototype.serializeAs_HouseGuildRightsMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            this.guildInfo.serializeAs_GuildInformations(param1);
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element rights.');
            }
            param1.writeVarInt(this.rights);
        };
        HouseGuildRightsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseGuildRightsMessage(param1);
        };
        HouseGuildRightsMessage.prototype.deserializeAs_HouseGuildRightsMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseGuildRightsMessage.houseId.');
            }
            this.guildInfo = new GuildInformations();
            this.guildInfo.deserialize(param1);
            this.rights = param1.readVarUhInt();
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element of HouseGuildRightsMessage.rights.');
            }
        };
        HouseGuildRightsMessage.ID = 5703;
        return HouseGuildRightsMessage;
    })(NetworkMessage);
    Protocol.HouseGuildRightsMessage = HouseGuildRightsMessage;
    var HouseGuildRightsViewMessage = (function (_super) {
        __extends(HouseGuildRightsViewMessage, _super);
        function HouseGuildRightsViewMessage() {
            _super.call(this);
        }
        HouseGuildRightsViewMessage.prototype.getMessageId = function () {
            return HouseGuildRightsViewMessage.ID;
        };
        HouseGuildRightsViewMessage.prototype.reset = function () {
        };
        HouseGuildRightsViewMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseGuildRightsViewMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseGuildRightsViewMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseGuildRightsViewMessage(param1);
        };
        HouseGuildRightsViewMessage.prototype.serializeAs_HouseGuildRightsViewMessage = function (param1) {
        };
        HouseGuildRightsViewMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseGuildRightsViewMessage(param1);
        };
        HouseGuildRightsViewMessage.prototype.deserializeAs_HouseGuildRightsViewMessage = function (param1) {
        };
        HouseGuildRightsViewMessage.ID = 5700;
        return HouseGuildRightsViewMessage;
    })(NetworkMessage);
    Protocol.HouseGuildRightsViewMessage = HouseGuildRightsViewMessage;
    var HouseGuildShareRequestMessage = (function (_super) {
        __extends(HouseGuildShareRequestMessage, _super);
        function HouseGuildShareRequestMessage() {
            this.enable = false;
            this.rights = 0;
            _super.call(this);
        }
        HouseGuildShareRequestMessage.prototype.getMessageId = function () {
            return HouseGuildShareRequestMessage.ID;
        };
        HouseGuildShareRequestMessage.prototype.reset = function () {
            this.enable = false;
            this.rights = 0;
        };
        HouseGuildShareRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        HouseGuildShareRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        HouseGuildShareRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_HouseGuildShareRequestMessage(param1);
        };
        HouseGuildShareRequestMessage.prototype.serializeAs_HouseGuildShareRequestMessage = function (param1) {
            param1.writeBoolean(this.enable);
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element rights.');
            }
            param1.writeVarInt(this.rights);
        };
        HouseGuildShareRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseGuildShareRequestMessage(param1);
        };
        HouseGuildShareRequestMessage.prototype.deserializeAs_HouseGuildShareRequestMessage = function (param1) {
            this.enable = param1.readBoolean();
            this.rights = param1.readVarUhInt();
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element of HouseGuildShareRequestMessage.rights.');
            }
        };
        HouseGuildShareRequestMessage.ID = 5704;
        return HouseGuildShareRequestMessage;
    })(NetworkMessage);
    Protocol.HouseGuildShareRequestMessage = HouseGuildShareRequestMessage;
    var JobAllowMultiCraftRequestMessage = (function (_super) {
        __extends(JobAllowMultiCraftRequestMessage, _super);
        function JobAllowMultiCraftRequestMessage() {
            this.enabled = false;
            _super.call(this);
        }
        JobAllowMultiCraftRequestMessage.prototype.getMessageId = function () {
            return JobAllowMultiCraftRequestMessage.ID;
        };
        JobAllowMultiCraftRequestMessage.prototype.reset = function () {
            this.enabled = false;
        };
        JobAllowMultiCraftRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobAllowMultiCraftRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobAllowMultiCraftRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobAllowMultiCraftRequestMessage(param1);
        };
        JobAllowMultiCraftRequestMessage.prototype.serializeAs_JobAllowMultiCraftRequestMessage = function (param1) {
            param1.writeBoolean(this.enabled);
        };
        JobAllowMultiCraftRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobAllowMultiCraftRequestMessage(param1);
        };
        JobAllowMultiCraftRequestMessage.prototype.deserializeAs_JobAllowMultiCraftRequestMessage = function (param1) {
            this.enabled = param1.readBoolean();
        };
        JobAllowMultiCraftRequestMessage.ID = 5748;
        return JobAllowMultiCraftRequestMessage;
    })(NetworkMessage);
    Protocol.JobAllowMultiCraftRequestMessage = JobAllowMultiCraftRequestMessage;
    var JobBookSubscriptionMessage = (function (_super) {
        __extends(JobBookSubscriptionMessage, _super);
        function JobBookSubscriptionMessage() {
            this.addedOrDeleted = false;
            this.jobId = 0;
            _super.call(this);
        }
        JobBookSubscriptionMessage.prototype.getMessageId = function () {
            return JobBookSubscriptionMessage.ID;
        };
        JobBookSubscriptionMessage.prototype.reset = function () {
            this.addedOrDeleted = false;
            this.jobId = 0;
        };
        JobBookSubscriptionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobBookSubscriptionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobBookSubscriptionMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobBookSubscriptionMessage(param1);
        };
        JobBookSubscriptionMessage.prototype.serializeAs_JobBookSubscriptionMessage = function (param1) {
            param1.writeBoolean(this.addedOrDeleted);
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
        };
        JobBookSubscriptionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobBookSubscriptionMessage(param1);
        };
        JobBookSubscriptionMessage.prototype.deserializeAs_JobBookSubscriptionMessage = function (param1) {
            this.addedOrDeleted = param1.readBoolean();
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobBookSubscriptionMessage.jobId.');
            }
        };
        JobBookSubscriptionMessage.ID = 6593;
        return JobBookSubscriptionMessage;
    })(NetworkMessage);
    Protocol.JobBookSubscriptionMessage = JobBookSubscriptionMessage;
    var JobCrafterDirectoryAddMessage = (function (_super) {
        __extends(JobCrafterDirectoryAddMessage, _super);
        function JobCrafterDirectoryAddMessage() {
            this.listEntry = new JobCrafterDirectoryListEntry();
            _super.call(this);
        }
        JobCrafterDirectoryAddMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryAddMessage.ID;
        };
        JobCrafterDirectoryAddMessage.prototype.reset = function () {
            this.listEntry = new JobCrafterDirectoryListEntry();
        };
        JobCrafterDirectoryAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryAddMessage(param1);
        };
        JobCrafterDirectoryAddMessage.prototype.serializeAs_JobCrafterDirectoryAddMessage = function (param1) {
            this.listEntry.serializeAs_JobCrafterDirectoryListEntry(param1);
        };
        JobCrafterDirectoryAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryAddMessage(param1);
        };
        JobCrafterDirectoryAddMessage.prototype.deserializeAs_JobCrafterDirectoryAddMessage = function (param1) {
            this.listEntry = new JobCrafterDirectoryListEntry();
            this.listEntry.deserialize(param1);
        };
        JobCrafterDirectoryAddMessage.ID = 5651;
        return JobCrafterDirectoryAddMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryAddMessage = JobCrafterDirectoryAddMessage;
    var JobCrafterDirectoryDefineSettingsMessage = (function (_super) {
        __extends(JobCrafterDirectoryDefineSettingsMessage, _super);
        function JobCrafterDirectoryDefineSettingsMessage() {
            this.settings = new JobCrafterDirectorySettings();
            _super.call(this);
        }
        JobCrafterDirectoryDefineSettingsMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryDefineSettingsMessage.ID;
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.reset = function () {
            this.settings = new JobCrafterDirectorySettings();
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryDefineSettingsMessage(param1);
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.serializeAs_JobCrafterDirectoryDefineSettingsMessage = function (param1) {
            this.settings.serializeAs_JobCrafterDirectorySettings(param1);
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryDefineSettingsMessage(param1);
        };
        JobCrafterDirectoryDefineSettingsMessage.prototype.deserializeAs_JobCrafterDirectoryDefineSettingsMessage = function (param1) {
            this.settings = new JobCrafterDirectorySettings();
            this.settings.deserialize(param1);
        };
        JobCrafterDirectoryDefineSettingsMessage.ID = 5649;
        return JobCrafterDirectoryDefineSettingsMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryDefineSettingsMessage = JobCrafterDirectoryDefineSettingsMessage;
    var JobCrafterDirectoryEntryMessage = (function (_super) {
        __extends(JobCrafterDirectoryEntryMessage, _super);
        function JobCrafterDirectoryEntryMessage() {
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.jobInfoList = [];
            this.playerLook = new EntityLook();
            _super.call(this);
        }
        JobCrafterDirectoryEntryMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryEntryMessage.ID;
        };
        JobCrafterDirectoryEntryMessage.prototype.reset = function () {
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.jobInfoList = [];
            this.playerLook = new EntityLook();
        };
        JobCrafterDirectoryEntryMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryEntryMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryEntryMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryEntryMessage(param1);
        };
        JobCrafterDirectoryEntryMessage.prototype.serializeAs_JobCrafterDirectoryEntryMessage = function (param1) {
            this.playerInfo.serializeAs_JobCrafterDirectoryEntryPlayerInfo(param1);
            param1.writeShort(this.jobInfoList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.jobInfoList.length) {
                (this.jobInfoList[_loc2_]).serializeAs_JobCrafterDirectoryEntryJobInfo(param1);
                _loc2_++;
            }
            this.playerLook.serializeAs_EntityLook(param1);
        };
        JobCrafterDirectoryEntryMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryEntryMessage(param1);
        };
        JobCrafterDirectoryEntryMessage.prototype.deserializeAs_JobCrafterDirectoryEntryMessage = function (param1) {
            var _loc4_ = null;
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.playerInfo.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new JobCrafterDirectoryEntryJobInfo();
                _loc4_.deserialize(param1);
                this.jobInfoList.push(_loc4_);
                _loc3_++;
            }
            this.playerLook = new EntityLook();
            this.playerLook.deserialize(param1);
        };
        JobCrafterDirectoryEntryMessage.ID = 6044;
        return JobCrafterDirectoryEntryMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryEntryMessage = JobCrafterDirectoryEntryMessage;
    var JobCrafterDirectoryEntryRequestMessage = (function (_super) {
        __extends(JobCrafterDirectoryEntryRequestMessage, _super);
        function JobCrafterDirectoryEntryRequestMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        JobCrafterDirectoryEntryRequestMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryEntryRequestMessage.ID;
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryEntryRequestMessage(param1);
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.serializeAs_JobCrafterDirectoryEntryRequestMessage = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryEntryRequestMessage(param1);
        };
        JobCrafterDirectoryEntryRequestMessage.prototype.deserializeAs_JobCrafterDirectoryEntryRequestMessage = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of JobCrafterDirectoryEntryRequestMessage.playerId.');
            }
        };
        JobCrafterDirectoryEntryRequestMessage.ID = 6043;
        return JobCrafterDirectoryEntryRequestMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryEntryRequestMessage = JobCrafterDirectoryEntryRequestMessage;
    var JobCrafterDirectoryListMessage = (function (_super) {
        __extends(JobCrafterDirectoryListMessage, _super);
        function JobCrafterDirectoryListMessage() {
            this.listEntries = [];
            _super.call(this);
        }
        JobCrafterDirectoryListMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryListMessage.ID;
        };
        JobCrafterDirectoryListMessage.prototype.reset = function () {
            this.listEntries = [];
        };
        JobCrafterDirectoryListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryListMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryListMessage(param1);
        };
        JobCrafterDirectoryListMessage.prototype.serializeAs_JobCrafterDirectoryListMessage = function (param1) {
            param1.writeShort(this.listEntries.length);
            var _loc2_ = 0;
            while (_loc2_ < this.listEntries.length) {
                (this.listEntries[_loc2_]).serializeAs_JobCrafterDirectoryListEntry(param1);
                _loc2_++;
            }
        };
        JobCrafterDirectoryListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryListMessage(param1);
        };
        JobCrafterDirectoryListMessage.prototype.deserializeAs_JobCrafterDirectoryListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new JobCrafterDirectoryListEntry();
                _loc4_.deserialize(param1);
                this.listEntries.push(_loc4_);
                _loc3_++;
            }
        };
        JobCrafterDirectoryListMessage.ID = 6046;
        return JobCrafterDirectoryListMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryListMessage = JobCrafterDirectoryListMessage;
    var JobCrafterDirectoryListRequestMessage = (function (_super) {
        __extends(JobCrafterDirectoryListRequestMessage, _super);
        function JobCrafterDirectoryListRequestMessage() {
            this.jobId = 0;
            _super.call(this);
        }
        JobCrafterDirectoryListRequestMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryListRequestMessage.ID;
        };
        JobCrafterDirectoryListRequestMessage.prototype.reset = function () {
            this.jobId = 0;
        };
        JobCrafterDirectoryListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryListRequestMessage(param1);
        };
        JobCrafterDirectoryListRequestMessage.prototype.serializeAs_JobCrafterDirectoryListRequestMessage = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
        };
        JobCrafterDirectoryListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryListRequestMessage(param1);
        };
        JobCrafterDirectoryListRequestMessage.prototype.deserializeAs_JobCrafterDirectoryListRequestMessage = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobCrafterDirectoryListRequestMessage.jobId.');
            }
        };
        JobCrafterDirectoryListRequestMessage.ID = 6047;
        return JobCrafterDirectoryListRequestMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryListRequestMessage = JobCrafterDirectoryListRequestMessage;
    var JobCrafterDirectoryRemoveMessage = (function (_super) {
        __extends(JobCrafterDirectoryRemoveMessage, _super);
        function JobCrafterDirectoryRemoveMessage() {
            this.jobId = 0;
            this.playerId = 0;
            _super.call(this);
        }
        JobCrafterDirectoryRemoveMessage.prototype.getMessageId = function () {
            return JobCrafterDirectoryRemoveMessage.ID;
        };
        JobCrafterDirectoryRemoveMessage.prototype.reset = function () {
            this.jobId = 0;
            this.playerId = 0;
        };
        JobCrafterDirectoryRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectoryRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectoryRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryRemoveMessage(param1);
        };
        JobCrafterDirectoryRemoveMessage.prototype.serializeAs_JobCrafterDirectoryRemoveMessage = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        JobCrafterDirectoryRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryRemoveMessage(param1);
        };
        JobCrafterDirectoryRemoveMessage.prototype.deserializeAs_JobCrafterDirectoryRemoveMessage = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobCrafterDirectoryRemoveMessage.jobId.');
            }
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of JobCrafterDirectoryRemoveMessage.playerId.');
            }
        };
        JobCrafterDirectoryRemoveMessage.ID = 5653;
        return JobCrafterDirectoryRemoveMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectoryRemoveMessage = JobCrafterDirectoryRemoveMessage;
    var JobCrafterDirectorySettingsMessage = (function (_super) {
        __extends(JobCrafterDirectorySettingsMessage, _super);
        function JobCrafterDirectorySettingsMessage() {
            this.craftersSettings = [];
            _super.call(this);
        }
        JobCrafterDirectorySettingsMessage.prototype.getMessageId = function () {
            return JobCrafterDirectorySettingsMessage.ID;
        };
        JobCrafterDirectorySettingsMessage.prototype.reset = function () {
            this.craftersSettings = [];
        };
        JobCrafterDirectorySettingsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobCrafterDirectorySettingsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobCrafterDirectorySettingsMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectorySettingsMessage(param1);
        };
        JobCrafterDirectorySettingsMessage.prototype.serializeAs_JobCrafterDirectorySettingsMessage = function (param1) {
            param1.writeShort(this.craftersSettings.length);
            var _loc2_ = 0;
            while (_loc2_ < this.craftersSettings.length) {
                (this.craftersSettings[_loc2_]).serializeAs_JobCrafterDirectorySettings(param1);
                _loc2_++;
            }
        };
        JobCrafterDirectorySettingsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectorySettingsMessage(param1);
        };
        JobCrafterDirectorySettingsMessage.prototype.deserializeAs_JobCrafterDirectorySettingsMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new JobCrafterDirectorySettings();
                _loc4_.deserialize(param1);
                this.craftersSettings.push(_loc4_);
                _loc3_++;
            }
        };
        JobCrafterDirectorySettingsMessage.ID = 5652;
        return JobCrafterDirectorySettingsMessage;
    })(NetworkMessage);
    Protocol.JobCrafterDirectorySettingsMessage = JobCrafterDirectorySettingsMessage;
    var JobDescriptionMessage = (function (_super) {
        __extends(JobDescriptionMessage, _super);
        function JobDescriptionMessage() {
            this.jobsDescription = [];
            _super.call(this);
        }
        JobDescriptionMessage.prototype.getMessageId = function () {
            return JobDescriptionMessage.ID;
        };
        JobDescriptionMessage.prototype.reset = function () {
            this.jobsDescription = [];
        };
        JobDescriptionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobDescriptionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobDescriptionMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobDescriptionMessage(param1);
        };
        JobDescriptionMessage.prototype.serializeAs_JobDescriptionMessage = function (param1) {
            param1.writeShort(this.jobsDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.jobsDescription.length) {
                (this.jobsDescription[_loc2_]).serializeAs_JobDescription(param1);
                _loc2_++;
            }
        };
        JobDescriptionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobDescriptionMessage(param1);
        };
        JobDescriptionMessage.prototype.deserializeAs_JobDescriptionMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new JobDescription();
                _loc4_.deserialize(param1);
                this.jobsDescription.push(_loc4_);
                _loc3_++;
            }
        };
        JobDescriptionMessage.ID = 5655;
        return JobDescriptionMessage;
    })(NetworkMessage);
    Protocol.JobDescriptionMessage = JobDescriptionMessage;
    var JobExperienceMultiUpdateMessage = (function (_super) {
        __extends(JobExperienceMultiUpdateMessage, _super);
        function JobExperienceMultiUpdateMessage() {
            this.experiencesUpdate = [];
            _super.call(this);
        }
        JobExperienceMultiUpdateMessage.prototype.getMessageId = function () {
            return JobExperienceMultiUpdateMessage.ID;
        };
        JobExperienceMultiUpdateMessage.prototype.reset = function () {
            this.experiencesUpdate = [];
        };
        JobExperienceMultiUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobExperienceMultiUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobExperienceMultiUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobExperienceMultiUpdateMessage(param1);
        };
        JobExperienceMultiUpdateMessage.prototype.serializeAs_JobExperienceMultiUpdateMessage = function (param1) {
            param1.writeShort(this.experiencesUpdate.length);
            var _loc2_ = 0;
            while (_loc2_ < this.experiencesUpdate.length) {
                (this.experiencesUpdate[_loc2_]).serializeAs_JobExperience(param1);
                _loc2_++;
            }
        };
        JobExperienceMultiUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobExperienceMultiUpdateMessage(param1);
        };
        JobExperienceMultiUpdateMessage.prototype.deserializeAs_JobExperienceMultiUpdateMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new JobExperience();
                _loc4_.deserialize(param1);
                this.experiencesUpdate.push(_loc4_);
                _loc3_++;
            }
        };
        JobExperienceMultiUpdateMessage.ID = 5809;
        return JobExperienceMultiUpdateMessage;
    })(NetworkMessage);
    Protocol.JobExperienceMultiUpdateMessage = JobExperienceMultiUpdateMessage;
    var JobExperienceOtherPlayerUpdateMessage = (function (_super) {
        __extends(JobExperienceOtherPlayerUpdateMessage, _super);
        function JobExperienceOtherPlayerUpdateMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        JobExperienceOtherPlayerUpdateMessage.prototype.getMessageId = function () {
            return JobExperienceOtherPlayerUpdateMessage.ID;
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobExperienceOtherPlayerUpdateMessage(param1);
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.serializeAs_JobExperienceOtherPlayerUpdateMessage = function (param1) {
            _super.prototype.serializeAs_JobExperienceUpdateMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobExperienceOtherPlayerUpdateMessage(param1);
        };
        JobExperienceOtherPlayerUpdateMessage.prototype.deserializeAs_JobExperienceOtherPlayerUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of JobExperienceOtherPlayerUpdateMessage.playerId.');
            }
        };
        JobExperienceOtherPlayerUpdateMessage.ID = 6599;
        return JobExperienceOtherPlayerUpdateMessage;
    })(JobExperienceUpdateMessage);
    Protocol.JobExperienceOtherPlayerUpdateMessage = JobExperienceOtherPlayerUpdateMessage;
    var JobExperienceUpdateMessage = (function (_super) {
        __extends(JobExperienceUpdateMessage, _super);
        function JobExperienceUpdateMessage() {
            this.experiencesUpdate = new JobExperience();
            _super.call(this);
        }
        JobExperienceUpdateMessage.prototype.getMessageId = function () {
            return JobExperienceUpdateMessage.ID;
        };
        JobExperienceUpdateMessage.prototype.reset = function () {
            this.experiencesUpdate = new JobExperience();
        };
        JobExperienceUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobExperienceUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobExperienceUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobExperienceUpdateMessage(param1);
        };
        JobExperienceUpdateMessage.prototype.serializeAs_JobExperienceUpdateMessage = function (param1) {
            this.experiencesUpdate.serializeAs_JobExperience(param1);
        };
        JobExperienceUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobExperienceUpdateMessage(param1);
        };
        JobExperienceUpdateMessage.prototype.deserializeAs_JobExperienceUpdateMessage = function (param1) {
            this.experiencesUpdate = new JobExperience();
            this.experiencesUpdate.deserialize(param1);
        };
        JobExperienceUpdateMessage.ID = 5654;
        return JobExperienceUpdateMessage;
    })(NetworkMessage);
    Protocol.JobExperienceUpdateMessage = JobExperienceUpdateMessage;
    var JobLevelUpMessage = (function (_super) {
        __extends(JobLevelUpMessage, _super);
        function JobLevelUpMessage() {
            this.newLevel = 0;
            this.jobsDescription = new JobDescription();
            _super.call(this);
        }
        JobLevelUpMessage.prototype.getMessageId = function () {
            return JobLevelUpMessage.ID;
        };
        JobLevelUpMessage.prototype.reset = function () {
            this.newLevel = 0;
            this.jobsDescription = new JobDescription();
        };
        JobLevelUpMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobLevelUpMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobLevelUpMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobLevelUpMessage(param1);
        };
        JobLevelUpMessage.prototype.serializeAs_JobLevelUpMessage = function (param1) {
            if (this.newLevel < 0 || this.newLevel > 255) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element newLevel.');
            }
            param1.writeByte(this.newLevel);
            this.jobsDescription.serializeAs_JobDescription(param1);
        };
        JobLevelUpMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobLevelUpMessage(param1);
        };
        JobLevelUpMessage.prototype.deserializeAs_JobLevelUpMessage = function (param1) {
            this.newLevel = param1.readUnsignedByte();
            if (this.newLevel < 0 || this.newLevel > 255) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element of JobLevelUpMessage.newLevel.');
            }
            this.jobsDescription = new JobDescription();
            this.jobsDescription.deserialize(param1);
        };
        JobLevelUpMessage.ID = 5656;
        return JobLevelUpMessage;
    })(NetworkMessage);
    Protocol.JobLevelUpMessage = JobLevelUpMessage;
    var JobMultiCraftAvailableSkillsMessage = (function (_super) {
        __extends(JobMultiCraftAvailableSkillsMessage, _super);
        function JobMultiCraftAvailableSkillsMessage() {
            this.playerId = 0;
            this.skills = [];
            _super.call(this);
        }
        JobMultiCraftAvailableSkillsMessage.prototype.getMessageId = function () {
            return JobMultiCraftAvailableSkillsMessage.ID;
        };
        JobMultiCraftAvailableSkillsMessage.prototype.reset = function () {
            this.playerId = 0;
            this.skills = [];
        };
        JobMultiCraftAvailableSkillsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobMultiCraftAvailableSkillsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobMultiCraftAvailableSkillsMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobMultiCraftAvailableSkillsMessage(param1);
        };
        JobMultiCraftAvailableSkillsMessage.prototype.serializeAs_JobMultiCraftAvailableSkillsMessage = function (param1) {
            _super.prototype.serializeAs_JobAllowMultiCraftRequestMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeShort(this.skills.length);
            var _loc2_ = 0;
            while (_loc2_ < this.skills.length) {
                if (this.skills[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.skills[_loc2_] + ') on element 2 (starting at 1) of skills.');
                }
                param1.writeVarShort(this.skills[_loc2_]);
                _loc2_++;
            }
        };
        JobMultiCraftAvailableSkillsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobMultiCraftAvailableSkillsMessage(param1);
        };
        JobMultiCraftAvailableSkillsMessage.prototype.deserializeAs_JobMultiCraftAvailableSkillsMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of JobMultiCraftAvailableSkillsMessage.playerId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of skills.');
                }
                this.skills.push(_loc4_);
                _loc3_++;
            }
        };
        JobMultiCraftAvailableSkillsMessage.ID = 5747;
        return JobMultiCraftAvailableSkillsMessage;
    })(JobAllowMultiCraftRequestMessage);
    Protocol.JobMultiCraftAvailableSkillsMessage = JobMultiCraftAvailableSkillsMessage;
    var LockableChangeCodeMessage = (function (_super) {
        __extends(LockableChangeCodeMessage, _super);
        function LockableChangeCodeMessage() {
            this.code = '';
            _super.call(this);
        }
        LockableChangeCodeMessage.prototype.getMessageId = function () {
            return LockableChangeCodeMessage.ID;
        };
        LockableChangeCodeMessage.prototype.reset = function () {
            this.code = '';
        };
        LockableChangeCodeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableChangeCodeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableChangeCodeMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableChangeCodeMessage(param1);
        };
        LockableChangeCodeMessage.prototype.serializeAs_LockableChangeCodeMessage = function (param1) {
            param1.writeUTF(this.code);
        };
        LockableChangeCodeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableChangeCodeMessage(param1);
        };
        LockableChangeCodeMessage.prototype.deserializeAs_LockableChangeCodeMessage = function (param1) {
            this.code = param1.readUTF();
        };
        LockableChangeCodeMessage.ID = 5666;
        return LockableChangeCodeMessage;
    })(NetworkMessage);
    Protocol.LockableChangeCodeMessage = LockableChangeCodeMessage;
    var LockableCodeResultMessage = (function (_super) {
        __extends(LockableCodeResultMessage, _super);
        function LockableCodeResultMessage() {
            this.result = 0;
            _super.call(this);
        }
        LockableCodeResultMessage.prototype.getMessageId = function () {
            return LockableCodeResultMessage.ID;
        };
        LockableCodeResultMessage.prototype.reset = function () {
            this.result = 0;
        };
        LockableCodeResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableCodeResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableCodeResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableCodeResultMessage(param1);
        };
        LockableCodeResultMessage.prototype.serializeAs_LockableCodeResultMessage = function (param1) {
            param1.writeByte(this.result);
        };
        LockableCodeResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableCodeResultMessage(param1);
        };
        LockableCodeResultMessage.prototype.deserializeAs_LockableCodeResultMessage = function (param1) {
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of LockableCodeResultMessage.result.');
            }
        };
        LockableCodeResultMessage.ID = 5672;
        return LockableCodeResultMessage;
    })(NetworkMessage);
    Protocol.LockableCodeResultMessage = LockableCodeResultMessage;
    var LockableShowCodeDialogMessage = (function (_super) {
        __extends(LockableShowCodeDialogMessage, _super);
        function LockableShowCodeDialogMessage() {
            this.changeOrUse = false;
            this.codeSize = 0;
            _super.call(this);
        }
        LockableShowCodeDialogMessage.prototype.getMessageId = function () {
            return LockableShowCodeDialogMessage.ID;
        };
        LockableShowCodeDialogMessage.prototype.reset = function () {
            this.changeOrUse = false;
            this.codeSize = 0;
        };
        LockableShowCodeDialogMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableShowCodeDialogMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableShowCodeDialogMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableShowCodeDialogMessage(param1);
        };
        LockableShowCodeDialogMessage.prototype.serializeAs_LockableShowCodeDialogMessage = function (param1) {
            param1.writeBoolean(this.changeOrUse);
            if (this.codeSize < 0) {
                throw new Error('Forbidden value (' + this.codeSize + ') on element codeSize.');
            }
            param1.writeByte(this.codeSize);
        };
        LockableShowCodeDialogMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableShowCodeDialogMessage(param1);
        };
        LockableShowCodeDialogMessage.prototype.deserializeAs_LockableShowCodeDialogMessage = function (param1) {
            this.changeOrUse = param1.readBoolean();
            this.codeSize = param1.readByte();
            if (this.codeSize < 0) {
                throw new Error('Forbidden value (' + this.codeSize + ') on element of LockableShowCodeDialogMessage.codeSize.');
            }
        };
        LockableShowCodeDialogMessage.ID = 5740;
        return LockableShowCodeDialogMessage;
    })(NetworkMessage);
    Protocol.LockableShowCodeDialogMessage = LockableShowCodeDialogMessage;
    var LockableStateUpdateAbstractMessage = (function (_super) {
        __extends(LockableStateUpdateAbstractMessage, _super);
        function LockableStateUpdateAbstractMessage() {
            this.locked = false;
            _super.call(this);
        }
        LockableStateUpdateAbstractMessage.prototype.getMessageId = function () {
            return LockableStateUpdateAbstractMessage.ID;
        };
        LockableStateUpdateAbstractMessage.prototype.reset = function () {
            this.locked = false;
        };
        LockableStateUpdateAbstractMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableStateUpdateAbstractMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableStateUpdateAbstractMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableStateUpdateAbstractMessage(param1);
        };
        LockableStateUpdateAbstractMessage.prototype.serializeAs_LockableStateUpdateAbstractMessage = function (param1) {
            param1.writeBoolean(this.locked);
        };
        LockableStateUpdateAbstractMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableStateUpdateAbstractMessage(param1);
        };
        LockableStateUpdateAbstractMessage.prototype.deserializeAs_LockableStateUpdateAbstractMessage = function (param1) {
            this.locked = param1.readBoolean();
        };
        LockableStateUpdateAbstractMessage.ID = 5671;
        return LockableStateUpdateAbstractMessage;
    })(NetworkMessage);
    Protocol.LockableStateUpdateAbstractMessage = LockableStateUpdateAbstractMessage;
    var LockableStateUpdateHouseDoorMessage = (function (_super) {
        __extends(LockableStateUpdateHouseDoorMessage, _super);
        function LockableStateUpdateHouseDoorMessage() {
            this.houseId = 0;
            _super.call(this);
        }
        LockableStateUpdateHouseDoorMessage.prototype.getMessageId = function () {
            return LockableStateUpdateHouseDoorMessage.ID;
        };
        LockableStateUpdateHouseDoorMessage.prototype.reset = function () {
            this.houseId = 0;
        };
        LockableStateUpdateHouseDoorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableStateUpdateHouseDoorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableStateUpdateHouseDoorMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableStateUpdateHouseDoorMessage(param1);
        };
        LockableStateUpdateHouseDoorMessage.prototype.serializeAs_LockableStateUpdateHouseDoorMessage = function (param1) {
            _super.prototype.serializeAs_LockableStateUpdateAbstractMessage.call(this, param1);
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
        };
        LockableStateUpdateHouseDoorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableStateUpdateHouseDoorMessage(param1);
        };
        LockableStateUpdateHouseDoorMessage.prototype.deserializeAs_LockableStateUpdateHouseDoorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of LockableStateUpdateHouseDoorMessage.houseId.');
            }
        };
        LockableStateUpdateHouseDoorMessage.ID = 5668;
        return LockableStateUpdateHouseDoorMessage;
    })(LockableStateUpdateAbstractMessage);
    Protocol.LockableStateUpdateHouseDoorMessage = LockableStateUpdateHouseDoorMessage;
    var LockableStateUpdateStorageMessage = (function (_super) {
        __extends(LockableStateUpdateStorageMessage, _super);
        function LockableStateUpdateStorageMessage() {
            this.mapId = 0;
            this.elementId = 0;
            _super.call(this);
        }
        LockableStateUpdateStorageMessage.prototype.getMessageId = function () {
            return LockableStateUpdateStorageMessage.ID;
        };
        LockableStateUpdateStorageMessage.prototype.reset = function () {
            this.mapId = 0;
            this.elementId = 0;
        };
        LockableStateUpdateStorageMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableStateUpdateStorageMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableStateUpdateStorageMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableStateUpdateStorageMessage(param1);
        };
        LockableStateUpdateStorageMessage.prototype.serializeAs_LockableStateUpdateStorageMessage = function (param1) {
            _super.prototype.serializeAs_LockableStateUpdateAbstractMessage.call(this, param1);
            param1.writeInt(this.mapId);
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element elementId.');
            }
            param1.writeVarInt(this.elementId);
        };
        LockableStateUpdateStorageMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableStateUpdateStorageMessage(param1);
        };
        LockableStateUpdateStorageMessage.prototype.deserializeAs_LockableStateUpdateStorageMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.mapId = param1.readInt();
            this.elementId = param1.readVarUhInt();
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element of LockableStateUpdateStorageMessage.elementId.');
            }
        };
        LockableStateUpdateStorageMessage.ID = 5669;
        return LockableStateUpdateStorageMessage;
    })(LockableStateUpdateAbstractMessage);
    Protocol.LockableStateUpdateStorageMessage = LockableStateUpdateStorageMessage;
    var LockableUseCodeMessage = (function (_super) {
        __extends(LockableUseCodeMessage, _super);
        function LockableUseCodeMessage() {
            this.code = '';
            _super.call(this);
        }
        LockableUseCodeMessage.prototype.getMessageId = function () {
            return LockableUseCodeMessage.ID;
        };
        LockableUseCodeMessage.prototype.reset = function () {
            this.code = '';
        };
        LockableUseCodeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LockableUseCodeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LockableUseCodeMessage.prototype.serialize = function (param1) {
            this.serializeAs_LockableUseCodeMessage(param1);
        };
        LockableUseCodeMessage.prototype.serializeAs_LockableUseCodeMessage = function (param1) {
            param1.writeUTF(this.code);
        };
        LockableUseCodeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LockableUseCodeMessage(param1);
        };
        LockableUseCodeMessage.prototype.deserializeAs_LockableUseCodeMessage = function (param1) {
            this.code = param1.readUTF();
        };
        LockableUseCodeMessage.ID = 5667;
        return LockableUseCodeMessage;
    })(NetworkMessage);
    Protocol.LockableUseCodeMessage = LockableUseCodeMessage;
    var AlliancePrismDialogQuestionMessage = (function (_super) {
        __extends(AlliancePrismDialogQuestionMessage, _super);
        function AlliancePrismDialogQuestionMessage() {
            _super.call(this);
        }
        AlliancePrismDialogQuestionMessage.prototype.getMessageId = function () {
            return AlliancePrismDialogQuestionMessage.ID;
        };
        AlliancePrismDialogQuestionMessage.prototype.reset = function () {
        };
        AlliancePrismDialogQuestionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AlliancePrismDialogQuestionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AlliancePrismDialogQuestionMessage.prototype.serialize = function (param1) {
            this.serializeAs_AlliancePrismDialogQuestionMessage(param1);
        };
        AlliancePrismDialogQuestionMessage.prototype.serializeAs_AlliancePrismDialogQuestionMessage = function (param1) {
        };
        AlliancePrismDialogQuestionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AlliancePrismDialogQuestionMessage(param1);
        };
        AlliancePrismDialogQuestionMessage.prototype.deserializeAs_AlliancePrismDialogQuestionMessage = function (param1) {
        };
        AlliancePrismDialogQuestionMessage.ID = 6448;
        return AlliancePrismDialogQuestionMessage;
    })(NetworkMessage);
    Protocol.AlliancePrismDialogQuestionMessage = AlliancePrismDialogQuestionMessage;
    var AllianceTaxCollectorDialogQuestionExtendedMessage = (function (_super) {
        __extends(AllianceTaxCollectorDialogQuestionExtendedMessage, _super);
        function AllianceTaxCollectorDialogQuestionExtendedMessage() {
            this.alliance = new BasicNamedAllianceInformations();
            _super.call(this);
        }
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.getMessageId = function () {
            return AllianceTaxCollectorDialogQuestionExtendedMessage.ID;
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.reset = function () {
            this.alliance = new BasicNamedAllianceInformations();
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.serialize = function (param1) {
            this.serializeAs_AllianceTaxCollectorDialogQuestionExtendedMessage(param1);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.serializeAs_AllianceTaxCollectorDialogQuestionExtendedMessage = function (param1) {
            _super.prototype.serializeAs_TaxCollectorDialogQuestionExtendedMessage.call(this, param1);
            this.alliance.serializeAs_BasicNamedAllianceInformations(param1);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceTaxCollectorDialogQuestionExtendedMessage(param1);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.prototype.deserializeAs_AllianceTaxCollectorDialogQuestionExtendedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.alliance = new BasicNamedAllianceInformations();
            this.alliance.deserialize(param1);
        };
        AllianceTaxCollectorDialogQuestionExtendedMessage.ID = 6445;
        return AllianceTaxCollectorDialogQuestionExtendedMessage;
    })(TaxCollectorDialogQuestionExtendedMessage);
    Protocol.AllianceTaxCollectorDialogQuestionExtendedMessage = AllianceTaxCollectorDialogQuestionExtendedMessage;
    var EntityTalkMessage = (function (_super) {
        __extends(EntityTalkMessage, _super);
        function EntityTalkMessage() {
            this.entityId = 0;
            this.textId = 0;
            this.parameters = [];
            _super.call(this);
        }
        EntityTalkMessage.prototype.getMessageId = function () {
            return EntityTalkMessage.ID;
        };
        EntityTalkMessage.prototype.reset = function () {
            this.entityId = 0;
            this.textId = 0;
            this.parameters = [];
        };
        EntityTalkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        EntityTalkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        EntityTalkMessage.prototype.serialize = function (param1) {
            this.serializeAs_EntityTalkMessage(param1);
        };
        EntityTalkMessage.prototype.serializeAs_EntityTalkMessage = function (param1) {
            param1.writeInt(this.entityId);
            if (this.textId < 0) {
                throw new Error('Forbidden value (' + this.textId + ') on element textId.');
            }
            param1.writeVarShort(this.textId);
            param1.writeShort(this.parameters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parameters.length) {
                param1.writeUTF(this.parameters[_loc2_]);
                _loc2_++;
            }
        };
        EntityTalkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_EntityTalkMessage(param1);
        };
        EntityTalkMessage.prototype.deserializeAs_EntityTalkMessage = function (param1) {
            var _loc4_ = null;
            this.entityId = param1.readInt();
            this.textId = param1.readVarUhShort();
            if (this.textId < 0) {
                throw new Error('Forbidden value (' + this.textId + ') on element of EntityTalkMessage.textId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.parameters.push(_loc4_);
                _loc3_++;
            }
        };
        EntityTalkMessage.ID = 6110;
        return EntityTalkMessage;
    })(NetworkMessage);
    Protocol.EntityTalkMessage = EntityTalkMessage;
    var MapNpcsQuestStatusUpdateMessage = (function (_super) {
        __extends(MapNpcsQuestStatusUpdateMessage, _super);
        function MapNpcsQuestStatusUpdateMessage() {
            this.mapId = 0;
            this.npcsIdsWithQuest = [];
            this.questFlags = [];
            this.npcsIdsWithoutQuest = [];
            _super.call(this);
        }
        MapNpcsQuestStatusUpdateMessage.prototype.getMessageId = function () {
            return MapNpcsQuestStatusUpdateMessage.ID;
        };
        MapNpcsQuestStatusUpdateMessage.prototype.reset = function () {
            this.mapId = 0;
            this.npcsIdsWithQuest = [];
            this.questFlags = [];
            this.npcsIdsWithoutQuest = [];
        };
        MapNpcsQuestStatusUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MapNpcsQuestStatusUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MapNpcsQuestStatusUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_MapNpcsQuestStatusUpdateMessage(param1);
        };
        MapNpcsQuestStatusUpdateMessage.prototype.serializeAs_MapNpcsQuestStatusUpdateMessage = function (param1) {
            param1.writeInt(this.mapId);
            param1.writeShort(this.npcsIdsWithQuest.length);
            var _loc2_ = 0;
            while (_loc2_ < this.npcsIdsWithQuest.length) {
                param1.writeInt(this.npcsIdsWithQuest[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.questFlags.length);
            var _loc3_ = 0;
            while (_loc3_ < this.questFlags.length) {
                (this.questFlags[_loc3_]).serializeAs_GameRolePlayNpcQuestFlag(param1);
                _loc3_++;
            }
            param1.writeShort(this.npcsIdsWithoutQuest.length);
            var _loc4_ = 0;
            while (_loc4_ < this.npcsIdsWithoutQuest.length) {
                param1.writeInt(this.npcsIdsWithoutQuest[_loc4_]);
                _loc4_++;
            }
        };
        MapNpcsQuestStatusUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MapNpcsQuestStatusUpdateMessage(param1);
        };
        MapNpcsQuestStatusUpdateMessage.prototype.deserializeAs_MapNpcsQuestStatusUpdateMessage = function (param1) {
            var _loc8_ = 0;
            var _loc9_ = null;
            var _loc10_ = 0;
            this.mapId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc8_ = param1.readInt();
                this.npcsIdsWithQuest.push(_loc8_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc9_ = new GameRolePlayNpcQuestFlag();
                _loc9_.deserialize(param1);
                this.questFlags.push(_loc9_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc10_ = param1.readInt();
                this.npcsIdsWithoutQuest.push(_loc10_);
                _loc7_++;
            }
        };
        MapNpcsQuestStatusUpdateMessage.ID = 5642;
        return MapNpcsQuestStatusUpdateMessage;
    })(NetworkMessage);
    Protocol.MapNpcsQuestStatusUpdateMessage = MapNpcsQuestStatusUpdateMessage;
    var NpcDialogCreationMessage = (function (_super) {
        __extends(NpcDialogCreationMessage, _super);
        function NpcDialogCreationMessage() {
            this.mapId = 0;
            this.npcId = 0;
            _super.call(this);
        }
        NpcDialogCreationMessage.prototype.getMessageId = function () {
            return NpcDialogCreationMessage.ID;
        };
        NpcDialogCreationMessage.prototype.reset = function () {
            this.mapId = 0;
            this.npcId = 0;
        };
        NpcDialogCreationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NpcDialogCreationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NpcDialogCreationMessage.prototype.serialize = function (param1) {
            this.serializeAs_NpcDialogCreationMessage(param1);
        };
        NpcDialogCreationMessage.prototype.serializeAs_NpcDialogCreationMessage = function (param1) {
            param1.writeInt(this.mapId);
            param1.writeInt(this.npcId);
        };
        NpcDialogCreationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NpcDialogCreationMessage(param1);
        };
        NpcDialogCreationMessage.prototype.deserializeAs_NpcDialogCreationMessage = function (param1) {
            this.mapId = param1.readInt();
            this.npcId = param1.readInt();
        };
        NpcDialogCreationMessage.ID = 5618;
        return NpcDialogCreationMessage;
    })(NetworkMessage);
    Protocol.NpcDialogCreationMessage = NpcDialogCreationMessage;
    var NpcDialogQuestionMessage = (function (_super) {
        __extends(NpcDialogQuestionMessage, _super);
        function NpcDialogQuestionMessage() {
            this.messageId = 0;
            this.dialogParams = [];
            this.visibleReplies = [];
            _super.call(this);
        }
        NpcDialogQuestionMessage.prototype.getMessageId = function () {
            return NpcDialogQuestionMessage.ID;
        };
        NpcDialogQuestionMessage.prototype.reset = function () {
            this.messageId = 0;
            this.dialogParams = [];
            this.visibleReplies = [];
        };
        NpcDialogQuestionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NpcDialogQuestionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NpcDialogQuestionMessage.prototype.serialize = function (param1) {
            this.serializeAs_NpcDialogQuestionMessage(param1);
        };
        NpcDialogQuestionMessage.prototype.serializeAs_NpcDialogQuestionMessage = function (param1) {
            if (this.messageId < 0) {
                throw new Error('Forbidden value (' + this.messageId + ') on element messageId.');
            }
            param1.writeVarShort(this.messageId);
            param1.writeShort(this.dialogParams.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dialogParams.length) {
                param1.writeUTF(this.dialogParams[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.visibleReplies.length);
            var _loc3_ = 0;
            while (_loc3_ < this.visibleReplies.length) {
                if (this.visibleReplies[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.visibleReplies[_loc3_] + ') on element 3 (starting at 1) of visibleReplies.');
                }
                param1.writeVarShort(this.visibleReplies[_loc3_]);
                _loc3_++;
            }
        };
        NpcDialogQuestionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NpcDialogQuestionMessage(param1);
        };
        NpcDialogQuestionMessage.prototype.deserializeAs_NpcDialogQuestionMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = 0;
            this.messageId = param1.readVarUhShort();
            if (this.messageId < 0) {
                throw new Error('Forbidden value (' + this.messageId + ') on element of NpcDialogQuestionMessage.messageId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUTF();
                this.dialogParams.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of visibleReplies.');
                }
                this.visibleReplies.push(_loc7_);
                _loc5_++;
            }
        };
        NpcDialogQuestionMessage.ID = 5617;
        return NpcDialogQuestionMessage;
    })(NetworkMessage);
    Protocol.NpcDialogQuestionMessage = NpcDialogQuestionMessage;
    var NpcDialogReplyMessage = (function (_super) {
        __extends(NpcDialogReplyMessage, _super);
        function NpcDialogReplyMessage() {
            this.replyId = 0;
            _super.call(this);
        }
        NpcDialogReplyMessage.prototype.getMessageId = function () {
            return NpcDialogReplyMessage.ID;
        };
        NpcDialogReplyMessage.prototype.reset = function () {
            this.replyId = 0;
        };
        NpcDialogReplyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NpcDialogReplyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NpcDialogReplyMessage.prototype.serialize = function (param1) {
            this.serializeAs_NpcDialogReplyMessage(param1);
        };
        NpcDialogReplyMessage.prototype.serializeAs_NpcDialogReplyMessage = function (param1) {
            if (this.replyId < 0) {
                throw new Error('Forbidden value (' + this.replyId + ') on element replyId.');
            }
            param1.writeVarShort(this.replyId);
        };
        NpcDialogReplyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NpcDialogReplyMessage(param1);
        };
        NpcDialogReplyMessage.prototype.deserializeAs_NpcDialogReplyMessage = function (param1) {
            this.replyId = param1.readVarUhShort();
            if (this.replyId < 0) {
                throw new Error('Forbidden value (' + this.replyId + ') on element of NpcDialogReplyMessage.replyId.');
            }
        };
        NpcDialogReplyMessage.ID = 5616;
        return NpcDialogReplyMessage;
    })(NetworkMessage);
    Protocol.NpcDialogReplyMessage = NpcDialogReplyMessage;
    var NpcGenericActionFailureMessage = (function (_super) {
        __extends(NpcGenericActionFailureMessage, _super);
        function NpcGenericActionFailureMessage() {
            _super.call(this);
        }
        NpcGenericActionFailureMessage.prototype.getMessageId = function () {
            return NpcGenericActionFailureMessage.ID;
        };
        NpcGenericActionFailureMessage.prototype.reset = function () {
        };
        NpcGenericActionFailureMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NpcGenericActionFailureMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NpcGenericActionFailureMessage.prototype.serialize = function (param1) {
            this.serializeAs_NpcGenericActionFailureMessage(param1);
        };
        NpcGenericActionFailureMessage.prototype.serializeAs_NpcGenericActionFailureMessage = function (param1) {
        };
        NpcGenericActionFailureMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NpcGenericActionFailureMessage(param1);
        };
        NpcGenericActionFailureMessage.prototype.deserializeAs_NpcGenericActionFailureMessage = function (param1) {
        };
        NpcGenericActionFailureMessage.ID = 5900;
        return NpcGenericActionFailureMessage;
    })(NetworkMessage);
    Protocol.NpcGenericActionFailureMessage = NpcGenericActionFailureMessage;
    var NpcGenericActionRequestMessage = (function (_super) {
        __extends(NpcGenericActionRequestMessage, _super);
        function NpcGenericActionRequestMessage() {
            this.npcId = 0;
            this.npcActionId = 0;
            this.npcMapId = 0;
            _super.call(this);
        }
        NpcGenericActionRequestMessage.prototype.getMessageId = function () {
            return NpcGenericActionRequestMessage.ID;
        };
        NpcGenericActionRequestMessage.prototype.reset = function () {
            this.npcId = 0;
            this.npcActionId = 0;
            this.npcMapId = 0;
        };
        NpcGenericActionRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NpcGenericActionRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NpcGenericActionRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_NpcGenericActionRequestMessage(param1);
        };
        NpcGenericActionRequestMessage.prototype.serializeAs_NpcGenericActionRequestMessage = function (param1) {
            param1.writeInt(this.npcId);
            if (this.npcActionId < 0) {
                throw new Error('Forbidden value (' + this.npcActionId + ') on element npcActionId.');
            }
            param1.writeByte(this.npcActionId);
            param1.writeInt(this.npcMapId);
        };
        NpcGenericActionRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NpcGenericActionRequestMessage(param1);
        };
        NpcGenericActionRequestMessage.prototype.deserializeAs_NpcGenericActionRequestMessage = function (param1) {
            this.npcId = param1.readInt();
            this.npcActionId = param1.readByte();
            if (this.npcActionId < 0) {
                throw new Error('Forbidden value (' + this.npcActionId + ') on element of NpcGenericActionRequestMessage.npcActionId.');
            }
            this.npcMapId = param1.readInt();
        };
        NpcGenericActionRequestMessage.ID = 5898;
        return NpcGenericActionRequestMessage;
    })(NetworkMessage);
    Protocol.NpcGenericActionRequestMessage = NpcGenericActionRequestMessage;
    var TaxCollectorDialogQuestionBasicMessage = (function (_super) {
        __extends(TaxCollectorDialogQuestionBasicMessage, _super);
        function TaxCollectorDialogQuestionBasicMessage() {
            this.guildInfo = new BasicGuildInformations();
            _super.call(this);
        }
        TaxCollectorDialogQuestionBasicMessage.prototype.getMessageId = function () {
            return TaxCollectorDialogQuestionBasicMessage.ID;
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.reset = function () {
            this.guildInfo = new BasicGuildInformations();
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorDialogQuestionBasicMessage(param1);
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.serializeAs_TaxCollectorDialogQuestionBasicMessage = function (param1) {
            this.guildInfo.serializeAs_BasicGuildInformations(param1);
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorDialogQuestionBasicMessage(param1);
        };
        TaxCollectorDialogQuestionBasicMessage.prototype.deserializeAs_TaxCollectorDialogQuestionBasicMessage = function (param1) {
            this.guildInfo = new BasicGuildInformations();
            this.guildInfo.deserialize(param1);
        };
        TaxCollectorDialogQuestionBasicMessage.ID = 5619;
        return TaxCollectorDialogQuestionBasicMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorDialogQuestionBasicMessage = TaxCollectorDialogQuestionBasicMessage;
    var TaxCollectorDialogQuestionExtendedMessage = (function (_super) {
        __extends(TaxCollectorDialogQuestionExtendedMessage, _super);
        function TaxCollectorDialogQuestionExtendedMessage() {
            this.maxPods = 0;
            this.prospecting = 0;
            this.wisdom = 0;
            this.taxCollectorsCount = 0;
            this.taxCollectorAttack = 0;
            this.kamas = 0;
            this.experience = 0;
            this.pods = 0;
            this.itemsValue = 0;
            _super.call(this);
        }
        TaxCollectorDialogQuestionExtendedMessage.prototype.getMessageId = function () {
            return TaxCollectorDialogQuestionExtendedMessage.ID;
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.reset = function () {
            this.maxPods = 0;
            this.prospecting = 0;
            this.wisdom = 0;
            this.taxCollectorsCount = 0;
            this.taxCollectorAttack = 0;
            this.kamas = 0;
            this.experience = 0;
            this.pods = 0;
            this.itemsValue = 0;
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorDialogQuestionExtendedMessage(param1);
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.serializeAs_TaxCollectorDialogQuestionExtendedMessage = function (param1) {
            _super.prototype.serializeAs_TaxCollectorDialogQuestionBasicMessage.call(this, param1);
            if (this.maxPods < 0) {
                throw new Error('Forbidden value (' + this.maxPods + ') on element maxPods.');
            }
            param1.writeVarShort(this.maxPods);
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element prospecting.');
            }
            param1.writeVarShort(this.prospecting);
            if (this.wisdom < 0) {
                throw new Error('Forbidden value (' + this.wisdom + ') on element wisdom.');
            }
            param1.writeVarShort(this.wisdom);
            if (this.taxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorsCount + ') on element taxCollectorsCount.');
            }
            param1.writeByte(this.taxCollectorsCount);
            param1.writeInt(this.taxCollectorAttack);
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element kamas.');
            }
            param1.writeVarInt(this.kamas);
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.pods < 0) {
                throw new Error('Forbidden value (' + this.pods + ') on element pods.');
            }
            param1.writeVarInt(this.pods);
            if (this.itemsValue < 0) {
                throw new Error('Forbidden value (' + this.itemsValue + ') on element itemsValue.');
            }
            param1.writeVarInt(this.itemsValue);
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorDialogQuestionExtendedMessage(param1);
        };
        TaxCollectorDialogQuestionExtendedMessage.prototype.deserializeAs_TaxCollectorDialogQuestionExtendedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.maxPods = param1.readVarUhShort();
            if (this.maxPods < 0) {
                throw new Error('Forbidden value (' + this.maxPods + ') on element of TaxCollectorDialogQuestionExtendedMessage.maxPods.');
            }
            this.prospecting = param1.readVarUhShort();
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element of TaxCollectorDialogQuestionExtendedMessage.prospecting.');
            }
            this.wisdom = param1.readVarUhShort();
            if (this.wisdom < 0) {
                throw new Error('Forbidden value (' + this.wisdom + ') on element of TaxCollectorDialogQuestionExtendedMessage.wisdom.');
            }
            this.taxCollectorsCount = param1.readByte();
            if (this.taxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorsCount + ') on element of TaxCollectorDialogQuestionExtendedMessage.taxCollectorsCount.');
            }
            this.taxCollectorAttack = param1.readInt();
            this.kamas = param1.readVarUhInt();
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element of TaxCollectorDialogQuestionExtendedMessage.kamas.');
            }
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of TaxCollectorDialogQuestionExtendedMessage.experience.');
            }
            this.pods = param1.readVarUhInt();
            if (this.pods < 0) {
                throw new Error('Forbidden value (' + this.pods + ') on element of TaxCollectorDialogQuestionExtendedMessage.pods.');
            }
            this.itemsValue = param1.readVarUhInt();
            if (this.itemsValue < 0) {
                throw new Error('Forbidden value (' + this.itemsValue + ') on element of TaxCollectorDialogQuestionExtendedMessage.itemsValue.');
            }
        };
        TaxCollectorDialogQuestionExtendedMessage.ID = 5615;
        return TaxCollectorDialogQuestionExtendedMessage;
    })(TaxCollectorDialogQuestionBasicMessage);
    Protocol.TaxCollectorDialogQuestionExtendedMessage = TaxCollectorDialogQuestionExtendedMessage;
    var ObjectGroundAddedMessage = (function (_super) {
        __extends(ObjectGroundAddedMessage, _super);
        function ObjectGroundAddedMessage() {
            this.cellId = 0;
            this.objectGID = 0;
            _super.call(this);
        }
        ObjectGroundAddedMessage.prototype.getMessageId = function () {
            return ObjectGroundAddedMessage.ID;
        };
        ObjectGroundAddedMessage.prototype.reset = function () {
            this.cellId = 0;
            this.objectGID = 0;
        };
        ObjectGroundAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectGroundAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectGroundAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectGroundAddedMessage(param1);
        };
        ObjectGroundAddedMessage.prototype.serializeAs_ObjectGroundAddedMessage = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
        };
        ObjectGroundAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectGroundAddedMessage(param1);
        };
        ObjectGroundAddedMessage.prototype.deserializeAs_ObjectGroundAddedMessage = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of ObjectGroundAddedMessage.cellId.');
            }
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectGroundAddedMessage.objectGID.');
            }
        };
        ObjectGroundAddedMessage.ID = 3017;
        return ObjectGroundAddedMessage;
    })(NetworkMessage);
    Protocol.ObjectGroundAddedMessage = ObjectGroundAddedMessage;
    var ObjectGroundListAddedMessage = (function (_super) {
        __extends(ObjectGroundListAddedMessage, _super);
        function ObjectGroundListAddedMessage() {
            this.cells = [];
            this.referenceIds = [];
            _super.call(this);
        }
        ObjectGroundListAddedMessage.prototype.getMessageId = function () {
            return ObjectGroundListAddedMessage.ID;
        };
        ObjectGroundListAddedMessage.prototype.reset = function () {
            this.cells = [];
            this.referenceIds = [];
        };
        ObjectGroundListAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectGroundListAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectGroundListAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectGroundListAddedMessage(param1);
        };
        ObjectGroundListAddedMessage.prototype.serializeAs_ObjectGroundListAddedMessage = function (param1) {
            param1.writeShort(this.cells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.cells.length) {
                if (this.cells[_loc2_] < 0 || this.cells[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.cells[_loc2_] + ') on element 1 (starting at 1) of cells.');
                }
                param1.writeVarShort(this.cells[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.referenceIds.length);
            var _loc3_ = 0;
            while (_loc3_ < this.referenceIds.length) {
                if (this.referenceIds[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.referenceIds[_loc3_] + ') on element 2 (starting at 1) of referenceIds.');
                }
                param1.writeVarShort(this.referenceIds[_loc3_]);
                _loc3_++;
            }
        };
        ObjectGroundListAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectGroundListAddedMessage(param1);
        };
        ObjectGroundListAddedMessage.prototype.deserializeAs_ObjectGroundListAddedMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0 || _loc6_ > 559) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of cells.');
                }
                this.cells.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of referenceIds.');
                }
                this.referenceIds.push(_loc7_);
                _loc5_++;
            }
        };
        ObjectGroundListAddedMessage.ID = 5925;
        return ObjectGroundListAddedMessage;
    })(NetworkMessage);
    Protocol.ObjectGroundListAddedMessage = ObjectGroundListAddedMessage;
    var ObjectGroundRemovedMessage = (function (_super) {
        __extends(ObjectGroundRemovedMessage, _super);
        function ObjectGroundRemovedMessage() {
            this.cell = 0;
            _super.call(this);
        }
        ObjectGroundRemovedMessage.prototype.getMessageId = function () {
            return ObjectGroundRemovedMessage.ID;
        };
        ObjectGroundRemovedMessage.prototype.reset = function () {
            this.cell = 0;
        };
        ObjectGroundRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectGroundRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectGroundRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectGroundRemovedMessage(param1);
        };
        ObjectGroundRemovedMessage.prototype.serializeAs_ObjectGroundRemovedMessage = function (param1) {
            if (this.cell < 0 || this.cell > 559) {
                throw new Error('Forbidden value (' + this.cell + ') on element cell.');
            }
            param1.writeVarShort(this.cell);
        };
        ObjectGroundRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectGroundRemovedMessage(param1);
        };
        ObjectGroundRemovedMessage.prototype.deserializeAs_ObjectGroundRemovedMessage = function (param1) {
            this.cell = param1.readVarUhShort();
            if (this.cell < 0 || this.cell > 559) {
                throw new Error('Forbidden value (' + this.cell + ') on element of ObjectGroundRemovedMessage.cell.');
            }
        };
        ObjectGroundRemovedMessage.ID = 3014;
        return ObjectGroundRemovedMessage;
    })(NetworkMessage);
    Protocol.ObjectGroundRemovedMessage = ObjectGroundRemovedMessage;
    var ObjectGroundRemovedMultipleMessage = (function (_super) {
        __extends(ObjectGroundRemovedMultipleMessage, _super);
        function ObjectGroundRemovedMultipleMessage() {
            this.cells = [];
            _super.call(this);
        }
        ObjectGroundRemovedMultipleMessage.prototype.getMessageId = function () {
            return ObjectGroundRemovedMultipleMessage.ID;
        };
        ObjectGroundRemovedMultipleMessage.prototype.reset = function () {
            this.cells = [];
        };
        ObjectGroundRemovedMultipleMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectGroundRemovedMultipleMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectGroundRemovedMultipleMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectGroundRemovedMultipleMessage(param1);
        };
        ObjectGroundRemovedMultipleMessage.prototype.serializeAs_ObjectGroundRemovedMultipleMessage = function (param1) {
            param1.writeShort(this.cells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.cells.length) {
                if (this.cells[_loc2_] < 0 || this.cells[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.cells[_loc2_] + ') on element 1 (starting at 1) of cells.');
                }
                param1.writeVarShort(this.cells[_loc2_]);
                _loc2_++;
            }
        };
        ObjectGroundRemovedMultipleMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectGroundRemovedMultipleMessage(param1);
        };
        ObjectGroundRemovedMultipleMessage.prototype.deserializeAs_ObjectGroundRemovedMultipleMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0 || _loc4_ > 559) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of cells.');
                }
                this.cells.push(_loc4_);
                _loc3_++;
            }
        };
        ObjectGroundRemovedMultipleMessage.ID = 5944;
        return ObjectGroundRemovedMultipleMessage;
    })(NetworkMessage);
    Protocol.ObjectGroundRemovedMultipleMessage = ObjectGroundRemovedMultipleMessage;
    var GameDataPlayFarmObjectAnimationMessage = (function (_super) {
        __extends(GameDataPlayFarmObjectAnimationMessage, _super);
        function GameDataPlayFarmObjectAnimationMessage() {
            this.cellId = [];
            _super.call(this);
        }
        GameDataPlayFarmObjectAnimationMessage.prototype.getMessageId = function () {
            return GameDataPlayFarmObjectAnimationMessage.ID;
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.reset = function () {
            this.cellId = [];
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameDataPlayFarmObjectAnimationMessage(param1);
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.serializeAs_GameDataPlayFarmObjectAnimationMessage = function (param1) {
            param1.writeShort(this.cellId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.cellId.length) {
                if (this.cellId[_loc2_] < 0 || this.cellId[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.cellId[_loc2_] + ') on element 1 (starting at 1) of cellId.');
                }
                param1.writeVarShort(this.cellId[_loc2_]);
                _loc2_++;
            }
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameDataPlayFarmObjectAnimationMessage(param1);
        };
        GameDataPlayFarmObjectAnimationMessage.prototype.deserializeAs_GameDataPlayFarmObjectAnimationMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0 || _loc4_ > 559) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of cellId.');
                }
                this.cellId.push(_loc4_);
                _loc3_++;
            }
        };
        GameDataPlayFarmObjectAnimationMessage.ID = 6026;
        return GameDataPlayFarmObjectAnimationMessage;
    })(NetworkMessage);
    Protocol.GameDataPlayFarmObjectAnimationMessage = GameDataPlayFarmObjectAnimationMessage;
    var PaddockPropertiesMessage = (function (_super) {
        __extends(PaddockPropertiesMessage, _super);
        function PaddockPropertiesMessage() {
            this.properties = new PaddockInformations();
            _super.call(this);
        }
        PaddockPropertiesMessage.prototype.getMessageId = function () {
            return PaddockPropertiesMessage.ID;
        };
        PaddockPropertiesMessage.prototype.reset = function () {
            this.properties = new PaddockInformations();
        };
        PaddockPropertiesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockPropertiesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockPropertiesMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockPropertiesMessage(param1);
        };
        PaddockPropertiesMessage.prototype.serializeAs_PaddockPropertiesMessage = function (param1) {
            param1.writeShort(this.properties.getTypeId());
            this.properties.serialize(param1);
        };
        PaddockPropertiesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockPropertiesMessage(param1);
        };
        PaddockPropertiesMessage.prototype.deserializeAs_PaddockPropertiesMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.properties = ProtocolTypeManager.getInstance(PaddockInformations, _loc2_);
            this.properties.deserialize(param1);
        };
        PaddockPropertiesMessage.ID = 5824;
        return PaddockPropertiesMessage;
    })(NetworkMessage);
    Protocol.PaddockPropertiesMessage = PaddockPropertiesMessage;
    var PaddockSellBuyDialogMessage = (function (_super) {
        __extends(PaddockSellBuyDialogMessage, _super);
        function PaddockSellBuyDialogMessage() {
            this.bsell = false;
            this.ownerId = 0;
            this.price = 0;
            _super.call(this);
        }
        PaddockSellBuyDialogMessage.prototype.getMessageId = function () {
            return PaddockSellBuyDialogMessage.ID;
        };
        PaddockSellBuyDialogMessage.prototype.reset = function () {
            this.bsell = false;
            this.ownerId = 0;
            this.price = 0;
        };
        PaddockSellBuyDialogMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockSellBuyDialogMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockSellBuyDialogMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockSellBuyDialogMessage(param1);
        };
        PaddockSellBuyDialogMessage.prototype.serializeAs_PaddockSellBuyDialogMessage = function (param1) {
            param1.writeBoolean(this.bsell);
            if (this.ownerId < 0) {
                throw new Error('Forbidden value (' + this.ownerId + ') on element ownerId.');
            }
            param1.writeVarInt(this.ownerId);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        PaddockSellBuyDialogMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockSellBuyDialogMessage(param1);
        };
        PaddockSellBuyDialogMessage.prototype.deserializeAs_PaddockSellBuyDialogMessage = function (param1) {
            this.bsell = param1.readBoolean();
            this.ownerId = param1.readVarUhInt();
            if (this.ownerId < 0) {
                throw new Error('Forbidden value (' + this.ownerId + ') on element of PaddockSellBuyDialogMessage.ownerId.');
            }
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of PaddockSellBuyDialogMessage.price.');
            }
        };
        PaddockSellBuyDialogMessage.ID = 6018;
        return PaddockSellBuyDialogMessage;
    })(NetworkMessage);
    Protocol.PaddockSellBuyDialogMessage = PaddockSellBuyDialogMessage;
    var PaddockToSellFilterMessage = (function (_super) {
        __extends(PaddockToSellFilterMessage, _super);
        function PaddockToSellFilterMessage() {
            this.areaId = 0;
            this.atLeastNbMount = 0;
            this.atLeastNbMachine = 0;
            this.maxPrice = 0;
            _super.call(this);
        }
        PaddockToSellFilterMessage.prototype.getMessageId = function () {
            return PaddockToSellFilterMessage.ID;
        };
        PaddockToSellFilterMessage.prototype.reset = function () {
            this.areaId = 0;
            this.atLeastNbMount = 0;
            this.atLeastNbMachine = 0;
            this.maxPrice = 0;
        };
        PaddockToSellFilterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockToSellFilterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockToSellFilterMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockToSellFilterMessage(param1);
        };
        PaddockToSellFilterMessage.prototype.serializeAs_PaddockToSellFilterMessage = function (param1) {
            param1.writeInt(this.areaId);
            param1.writeByte(this.atLeastNbMount);
            param1.writeByte(this.atLeastNbMachine);
            if (this.maxPrice < 0) {
                throw new Error('Forbidden value (' + this.maxPrice + ') on element maxPrice.');
            }
            param1.writeVarInt(this.maxPrice);
        };
        PaddockToSellFilterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockToSellFilterMessage(param1);
        };
        PaddockToSellFilterMessage.prototype.deserializeAs_PaddockToSellFilterMessage = function (param1) {
            this.areaId = param1.readInt();
            this.atLeastNbMount = param1.readByte();
            this.atLeastNbMachine = param1.readByte();
            this.maxPrice = param1.readVarUhInt();
            if (this.maxPrice < 0) {
                throw new Error('Forbidden value (' + this.maxPrice + ') on element of PaddockToSellFilterMessage.maxPrice.');
            }
        };
        PaddockToSellFilterMessage.ID = 6161;
        return PaddockToSellFilterMessage;
    })(NetworkMessage);
    Protocol.PaddockToSellFilterMessage = PaddockToSellFilterMessage;
    var PaddockToSellListMessage = (function (_super) {
        __extends(PaddockToSellListMessage, _super);
        function PaddockToSellListMessage() {
            this.pageIndex = 0;
            this.totalPage = 0;
            this.paddockList = [];
            _super.call(this);
        }
        PaddockToSellListMessage.prototype.getMessageId = function () {
            return PaddockToSellListMessage.ID;
        };
        PaddockToSellListMessage.prototype.reset = function () {
            this.pageIndex = 0;
            this.totalPage = 0;
            this.paddockList = [];
        };
        PaddockToSellListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockToSellListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockToSellListMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockToSellListMessage(param1);
        };
        PaddockToSellListMessage.prototype.serializeAs_PaddockToSellListMessage = function (param1) {
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element pageIndex.');
            }
            param1.writeVarShort(this.pageIndex);
            if (this.totalPage < 0) {
                throw new Error('Forbidden value (' + this.totalPage + ') on element totalPage.');
            }
            param1.writeVarShort(this.totalPage);
            param1.writeShort(this.paddockList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.paddockList.length) {
                (this.paddockList[_loc2_]).serializeAs_PaddockInformationsForSell(param1);
                _loc2_++;
            }
        };
        PaddockToSellListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockToSellListMessage(param1);
        };
        PaddockToSellListMessage.prototype.deserializeAs_PaddockToSellListMessage = function (param1) {
            var _loc4_ = null;
            this.pageIndex = param1.readVarUhShort();
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element of PaddockToSellListMessage.pageIndex.');
            }
            this.totalPage = param1.readVarUhShort();
            if (this.totalPage < 0) {
                throw new Error('Forbidden value (' + this.totalPage + ') on element of PaddockToSellListMessage.totalPage.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PaddockInformationsForSell();
                _loc4_.deserialize(param1);
                this.paddockList.push(_loc4_);
                _loc3_++;
            }
        };
        PaddockToSellListMessage.ID = 6138;
        return PaddockToSellListMessage;
    })(NetworkMessage);
    Protocol.PaddockToSellListMessage = PaddockToSellListMessage;
    var PaddockToSellListRequestMessage = (function (_super) {
        __extends(PaddockToSellListRequestMessage, _super);
        function PaddockToSellListRequestMessage() {
            this.pageIndex = 0;
            _super.call(this);
        }
        PaddockToSellListRequestMessage.prototype.getMessageId = function () {
            return PaddockToSellListRequestMessage.ID;
        };
        PaddockToSellListRequestMessage.prototype.reset = function () {
            this.pageIndex = 0;
        };
        PaddockToSellListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PaddockToSellListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PaddockToSellListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PaddockToSellListRequestMessage(param1);
        };
        PaddockToSellListRequestMessage.prototype.serializeAs_PaddockToSellListRequestMessage = function (param1) {
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element pageIndex.');
            }
            param1.writeVarShort(this.pageIndex);
        };
        PaddockToSellListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockToSellListRequestMessage(param1);
        };
        PaddockToSellListRequestMessage.prototype.deserializeAs_PaddockToSellListRequestMessage = function (param1) {
            this.pageIndex = param1.readVarUhShort();
            if (this.pageIndex < 0) {
                throw new Error('Forbidden value (' + this.pageIndex + ') on element of PaddockToSellListRequestMessage.pageIndex.');
            }
        };
        PaddockToSellListRequestMessage.ID = 6141;
        return PaddockToSellListRequestMessage;
    })(NetworkMessage);
    Protocol.PaddockToSellListRequestMessage = PaddockToSellListRequestMessage;
    var AbstractPartyEventMessage = (function (_super) {
        __extends(AbstractPartyEventMessage, _super);
        function AbstractPartyEventMessage() {
            _super.call(this);
        }
        AbstractPartyEventMessage.prototype.getMessageId = function () {
            return AbstractPartyEventMessage.ID;
        };
        AbstractPartyEventMessage.prototype.reset = function () {
        };
        AbstractPartyEventMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractPartyEventMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractPartyEventMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractPartyEventMessage(param1);
        };
        AbstractPartyEventMessage.prototype.serializeAs_AbstractPartyEventMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        AbstractPartyEventMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractPartyEventMessage(param1);
        };
        AbstractPartyEventMessage.prototype.deserializeAs_AbstractPartyEventMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        AbstractPartyEventMessage.ID = 6273;
        return AbstractPartyEventMessage;
    })(AbstractPartyMessage);
    Protocol.AbstractPartyEventMessage = AbstractPartyEventMessage;
    var AbstractPartyMessage = (function (_super) {
        __extends(AbstractPartyMessage, _super);
        function AbstractPartyMessage() {
            this.partyId = 0;
            _super.call(this);
        }
        AbstractPartyMessage.prototype.getMessageId = function () {
            return AbstractPartyMessage.ID;
        };
        AbstractPartyMessage.prototype.reset = function () {
            this.partyId = 0;
        };
        AbstractPartyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractPartyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractPartyMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractPartyMessage(param1);
        };
        AbstractPartyMessage.prototype.serializeAs_AbstractPartyMessage = function (param1) {
            if (this.partyId < 0) {
                throw new Error('Forbidden value (' + this.partyId + ') on element partyId.');
            }
            param1.writeVarInt(this.partyId);
        };
        AbstractPartyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractPartyMessage(param1);
        };
        AbstractPartyMessage.prototype.deserializeAs_AbstractPartyMessage = function (param1) {
            this.partyId = param1.readVarUhInt();
            if (this.partyId < 0) {
                throw new Error('Forbidden value (' + this.partyId + ') on element of AbstractPartyMessage.partyId.');
            }
        };
        AbstractPartyMessage.ID = 6274;
        return AbstractPartyMessage;
    })(NetworkMessage);
    Protocol.AbstractPartyMessage = AbstractPartyMessage;
    var DungeonPartyFinderAvailableDungeonsMessage = (function (_super) {
        __extends(DungeonPartyFinderAvailableDungeonsMessage, _super);
        function DungeonPartyFinderAvailableDungeonsMessage() {
            this.dungeonIds = [];
            _super.call(this);
        }
        DungeonPartyFinderAvailableDungeonsMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderAvailableDungeonsMessage.ID;
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.reset = function () {
            this.dungeonIds = [];
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderAvailableDungeonsMessage(param1);
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.serializeAs_DungeonPartyFinderAvailableDungeonsMessage = function (param1) {
            param1.writeShort(this.dungeonIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dungeonIds.length) {
                if (this.dungeonIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.dungeonIds[_loc2_] + ') on element 1 (starting at 1) of dungeonIds.');
                }
                param1.writeVarShort(this.dungeonIds[_loc2_]);
                _loc2_++;
            }
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderAvailableDungeonsMessage(param1);
        };
        DungeonPartyFinderAvailableDungeonsMessage.prototype.deserializeAs_DungeonPartyFinderAvailableDungeonsMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of dungeonIds.');
                }
                this.dungeonIds.push(_loc4_);
                _loc3_++;
            }
        };
        DungeonPartyFinderAvailableDungeonsMessage.ID = 6242;
        return DungeonPartyFinderAvailableDungeonsMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderAvailableDungeonsMessage = DungeonPartyFinderAvailableDungeonsMessage;
    var DungeonPartyFinderAvailableDungeonsRequestMessage = (function (_super) {
        __extends(DungeonPartyFinderAvailableDungeonsRequestMessage, _super);
        function DungeonPartyFinderAvailableDungeonsRequestMessage() {
            _super.call(this);
        }
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderAvailableDungeonsRequestMessage.ID;
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.reset = function () {
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderAvailableDungeonsRequestMessage(param1);
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.serializeAs_DungeonPartyFinderAvailableDungeonsRequestMessage = function (param1) {
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderAvailableDungeonsRequestMessage(param1);
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.prototype.deserializeAs_DungeonPartyFinderAvailableDungeonsRequestMessage = function (param1) {
        };
        DungeonPartyFinderAvailableDungeonsRequestMessage.ID = 6240;
        return DungeonPartyFinderAvailableDungeonsRequestMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderAvailableDungeonsRequestMessage = DungeonPartyFinderAvailableDungeonsRequestMessage;
    var DungeonPartyFinderListenErrorMessage = (function (_super) {
        __extends(DungeonPartyFinderListenErrorMessage, _super);
        function DungeonPartyFinderListenErrorMessage() {
            this.dungeonId = 0;
            _super.call(this);
        }
        DungeonPartyFinderListenErrorMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderListenErrorMessage.ID;
        };
        DungeonPartyFinderListenErrorMessage.prototype.reset = function () {
            this.dungeonId = 0;
        };
        DungeonPartyFinderListenErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderListenErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderListenErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderListenErrorMessage(param1);
        };
        DungeonPartyFinderListenErrorMessage.prototype.serializeAs_DungeonPartyFinderListenErrorMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
        };
        DungeonPartyFinderListenErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderListenErrorMessage(param1);
        };
        DungeonPartyFinderListenErrorMessage.prototype.deserializeAs_DungeonPartyFinderListenErrorMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of DungeonPartyFinderListenErrorMessage.dungeonId.');
            }
        };
        DungeonPartyFinderListenErrorMessage.ID = 6248;
        return DungeonPartyFinderListenErrorMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderListenErrorMessage = DungeonPartyFinderListenErrorMessage;
    var DungeonPartyFinderListenRequestMessage = (function (_super) {
        __extends(DungeonPartyFinderListenRequestMessage, _super);
        function DungeonPartyFinderListenRequestMessage() {
            this.dungeonId = 0;
            _super.call(this);
        }
        DungeonPartyFinderListenRequestMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderListenRequestMessage.ID;
        };
        DungeonPartyFinderListenRequestMessage.prototype.reset = function () {
            this.dungeonId = 0;
        };
        DungeonPartyFinderListenRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderListenRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderListenRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderListenRequestMessage(param1);
        };
        DungeonPartyFinderListenRequestMessage.prototype.serializeAs_DungeonPartyFinderListenRequestMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
        };
        DungeonPartyFinderListenRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderListenRequestMessage(param1);
        };
        DungeonPartyFinderListenRequestMessage.prototype.deserializeAs_DungeonPartyFinderListenRequestMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of DungeonPartyFinderListenRequestMessage.dungeonId.');
            }
        };
        DungeonPartyFinderListenRequestMessage.ID = 6246;
        return DungeonPartyFinderListenRequestMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderListenRequestMessage = DungeonPartyFinderListenRequestMessage;
    var DungeonPartyFinderRegisterErrorMessage = (function (_super) {
        __extends(DungeonPartyFinderRegisterErrorMessage, _super);
        function DungeonPartyFinderRegisterErrorMessage() {
            _super.call(this);
        }
        DungeonPartyFinderRegisterErrorMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderRegisterErrorMessage.ID;
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.reset = function () {
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderRegisterErrorMessage(param1);
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.serializeAs_DungeonPartyFinderRegisterErrorMessage = function (param1) {
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderRegisterErrorMessage(param1);
        };
        DungeonPartyFinderRegisterErrorMessage.prototype.deserializeAs_DungeonPartyFinderRegisterErrorMessage = function (param1) {
        };
        DungeonPartyFinderRegisterErrorMessage.ID = 6243;
        return DungeonPartyFinderRegisterErrorMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderRegisterErrorMessage = DungeonPartyFinderRegisterErrorMessage;
    var DungeonPartyFinderRegisterRequestMessage = (function (_super) {
        __extends(DungeonPartyFinderRegisterRequestMessage, _super);
        function DungeonPartyFinderRegisterRequestMessage() {
            this.dungeonIds = [];
            _super.call(this);
        }
        DungeonPartyFinderRegisterRequestMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderRegisterRequestMessage.ID;
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.reset = function () {
            this.dungeonIds = [];
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderRegisterRequestMessage(param1);
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.serializeAs_DungeonPartyFinderRegisterRequestMessage = function (param1) {
            param1.writeShort(this.dungeonIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dungeonIds.length) {
                if (this.dungeonIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.dungeonIds[_loc2_] + ') on element 1 (starting at 1) of dungeonIds.');
                }
                param1.writeVarShort(this.dungeonIds[_loc2_]);
                _loc2_++;
            }
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderRegisterRequestMessage(param1);
        };
        DungeonPartyFinderRegisterRequestMessage.prototype.deserializeAs_DungeonPartyFinderRegisterRequestMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of dungeonIds.');
                }
                this.dungeonIds.push(_loc4_);
                _loc3_++;
            }
        };
        DungeonPartyFinderRegisterRequestMessage.ID = 6249;
        return DungeonPartyFinderRegisterRequestMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderRegisterRequestMessage = DungeonPartyFinderRegisterRequestMessage;
    var DungeonPartyFinderRegisterSuccessMessage = (function (_super) {
        __extends(DungeonPartyFinderRegisterSuccessMessage, _super);
        function DungeonPartyFinderRegisterSuccessMessage() {
            this.dungeonIds = [];
            _super.call(this);
        }
        DungeonPartyFinderRegisterSuccessMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderRegisterSuccessMessage.ID;
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.reset = function () {
            this.dungeonIds = [];
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderRegisterSuccessMessage(param1);
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.serializeAs_DungeonPartyFinderRegisterSuccessMessage = function (param1) {
            param1.writeShort(this.dungeonIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dungeonIds.length) {
                if (this.dungeonIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.dungeonIds[_loc2_] + ') on element 1 (starting at 1) of dungeonIds.');
                }
                param1.writeVarShort(this.dungeonIds[_loc2_]);
                _loc2_++;
            }
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderRegisterSuccessMessage(param1);
        };
        DungeonPartyFinderRegisterSuccessMessage.prototype.deserializeAs_DungeonPartyFinderRegisterSuccessMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of dungeonIds.');
                }
                this.dungeonIds.push(_loc4_);
                _loc3_++;
            }
        };
        DungeonPartyFinderRegisterSuccessMessage.ID = 6241;
        return DungeonPartyFinderRegisterSuccessMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderRegisterSuccessMessage = DungeonPartyFinderRegisterSuccessMessage;
    var DungeonPartyFinderRoomContentMessage = (function (_super) {
        __extends(DungeonPartyFinderRoomContentMessage, _super);
        function DungeonPartyFinderRoomContentMessage() {
            this.dungeonId = 0;
            this.players = [];
            _super.call(this);
        }
        DungeonPartyFinderRoomContentMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderRoomContentMessage.ID;
        };
        DungeonPartyFinderRoomContentMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.players = [];
        };
        DungeonPartyFinderRoomContentMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderRoomContentMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderRoomContentMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderRoomContentMessage(param1);
        };
        DungeonPartyFinderRoomContentMessage.prototype.serializeAs_DungeonPartyFinderRoomContentMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            param1.writeShort(this.players.length);
            var _loc2_ = 0;
            while (_loc2_ < this.players.length) {
                (this.players[_loc2_]).serializeAs_DungeonPartyFinderPlayer(param1);
                _loc2_++;
            }
        };
        DungeonPartyFinderRoomContentMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderRoomContentMessage(param1);
        };
        DungeonPartyFinderRoomContentMessage.prototype.deserializeAs_DungeonPartyFinderRoomContentMessage = function (param1) {
            var _loc4_ = null;
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of DungeonPartyFinderRoomContentMessage.dungeonId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new DungeonPartyFinderPlayer();
                _loc4_.deserialize(param1);
                this.players.push(_loc4_);
                _loc3_++;
            }
        };
        DungeonPartyFinderRoomContentMessage.ID = 6247;
        return DungeonPartyFinderRoomContentMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderRoomContentMessage = DungeonPartyFinderRoomContentMessage;
    var DungeonPartyFinderRoomContentUpdateMessage = (function (_super) {
        __extends(DungeonPartyFinderRoomContentUpdateMessage, _super);
        function DungeonPartyFinderRoomContentUpdateMessage() {
            this.dungeonId = 0;
            this.addedPlayers = [];
            this.removedPlayersIds = [];
            _super.call(this);
        }
        DungeonPartyFinderRoomContentUpdateMessage.prototype.getMessageId = function () {
            return DungeonPartyFinderRoomContentUpdateMessage.ID;
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.addedPlayers = [];
            this.removedPlayersIds = [];
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderRoomContentUpdateMessage(param1);
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.serializeAs_DungeonPartyFinderRoomContentUpdateMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            param1.writeShort(this.addedPlayers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.addedPlayers.length) {
                (this.addedPlayers[_loc2_]).serializeAs_DungeonPartyFinderPlayer(param1);
                _loc2_++;
            }
            param1.writeShort(this.removedPlayersIds.length);
            var _loc3_ = 0;
            while (_loc3_ < this.removedPlayersIds.length) {
                if (this.removedPlayersIds[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.removedPlayersIds[_loc3_] + ') on element 3 (starting at 1) of removedPlayersIds.');
                }
                param1.writeVarInt(this.removedPlayersIds[_loc3_]);
                _loc3_++;
            }
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderRoomContentUpdateMessage(param1);
        };
        DungeonPartyFinderRoomContentUpdateMessage.prototype.deserializeAs_DungeonPartyFinderRoomContentUpdateMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = 0;
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of DungeonPartyFinderRoomContentUpdateMessage.dungeonId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new DungeonPartyFinderPlayer();
                _loc6_.deserialize(param1);
                this.addedPlayers.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of removedPlayersIds.');
                }
                this.removedPlayersIds.push(_loc7_);
                _loc5_++;
            }
        };
        DungeonPartyFinderRoomContentUpdateMessage.ID = 6250;
        return DungeonPartyFinderRoomContentUpdateMessage;
    })(NetworkMessage);
    Protocol.DungeonPartyFinderRoomContentUpdateMessage = DungeonPartyFinderRoomContentUpdateMessage;
    var PartyAbdicateThroneMessage = (function (_super) {
        __extends(PartyAbdicateThroneMessage, _super);
        function PartyAbdicateThroneMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        PartyAbdicateThroneMessage.prototype.getMessageId = function () {
            return PartyAbdicateThroneMessage.ID;
        };
        PartyAbdicateThroneMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        PartyAbdicateThroneMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyAbdicateThroneMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyAbdicateThroneMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyAbdicateThroneMessage(param1);
        };
        PartyAbdicateThroneMessage.prototype.serializeAs_PartyAbdicateThroneMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        PartyAbdicateThroneMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyAbdicateThroneMessage(param1);
        };
        PartyAbdicateThroneMessage.prototype.deserializeAs_PartyAbdicateThroneMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of PartyAbdicateThroneMessage.playerId.');
            }
        };
        PartyAbdicateThroneMessage.ID = 6080;
        return PartyAbdicateThroneMessage;
    })(AbstractPartyMessage);
    Protocol.PartyAbdicateThroneMessage = PartyAbdicateThroneMessage;
    var PartyAcceptInvitationMessage = (function (_super) {
        __extends(PartyAcceptInvitationMessage, _super);
        function PartyAcceptInvitationMessage() {
            _super.call(this);
        }
        PartyAcceptInvitationMessage.prototype.getMessageId = function () {
            return PartyAcceptInvitationMessage.ID;
        };
        PartyAcceptInvitationMessage.prototype.reset = function () {
        };
        PartyAcceptInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyAcceptInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyAcceptInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyAcceptInvitationMessage(param1);
        };
        PartyAcceptInvitationMessage.prototype.serializeAs_PartyAcceptInvitationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyAcceptInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyAcceptInvitationMessage(param1);
        };
        PartyAcceptInvitationMessage.prototype.deserializeAs_PartyAcceptInvitationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyAcceptInvitationMessage.ID = 5580;
        return PartyAcceptInvitationMessage;
    })(AbstractPartyMessage);
    Protocol.PartyAcceptInvitationMessage = PartyAcceptInvitationMessage;
    var PartyCancelInvitationMessage = (function (_super) {
        __extends(PartyCancelInvitationMessage, _super);
        function PartyCancelInvitationMessage() {
            this.guestId = 0;
            _super.call(this);
        }
        PartyCancelInvitationMessage.prototype.getMessageId = function () {
            return PartyCancelInvitationMessage.ID;
        };
        PartyCancelInvitationMessage.prototype.reset = function () {
            this.guestId = 0;
        };
        PartyCancelInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyCancelInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyCancelInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyCancelInvitationMessage(param1);
        };
        PartyCancelInvitationMessage.prototype.serializeAs_PartyCancelInvitationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element guestId.');
            }
            param1.writeVarInt(this.guestId);
        };
        PartyCancelInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCancelInvitationMessage(param1);
        };
        PartyCancelInvitationMessage.prototype.deserializeAs_PartyCancelInvitationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guestId = param1.readVarUhInt();
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element of PartyCancelInvitationMessage.guestId.');
            }
        };
        PartyCancelInvitationMessage.ID = 6254;
        return PartyCancelInvitationMessage;
    })(AbstractPartyMessage);
    Protocol.PartyCancelInvitationMessage = PartyCancelInvitationMessage;
    var PartyCancelInvitationNotificationMessage = (function (_super) {
        __extends(PartyCancelInvitationNotificationMessage, _super);
        function PartyCancelInvitationNotificationMessage() {
            this.cancelerId = 0;
            this.guestId = 0;
            _super.call(this);
        }
        PartyCancelInvitationNotificationMessage.prototype.getMessageId = function () {
            return PartyCancelInvitationNotificationMessage.ID;
        };
        PartyCancelInvitationNotificationMessage.prototype.reset = function () {
            this.cancelerId = 0;
            this.guestId = 0;
        };
        PartyCancelInvitationNotificationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyCancelInvitationNotificationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyCancelInvitationNotificationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyCancelInvitationNotificationMessage(param1);
        };
        PartyCancelInvitationNotificationMessage.prototype.serializeAs_PartyCancelInvitationNotificationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            if (this.cancelerId < 0) {
                throw new Error('Forbidden value (' + this.cancelerId + ') on element cancelerId.');
            }
            param1.writeVarInt(this.cancelerId);
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element guestId.');
            }
            param1.writeVarInt(this.guestId);
        };
        PartyCancelInvitationNotificationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCancelInvitationNotificationMessage(param1);
        };
        PartyCancelInvitationNotificationMessage.prototype.deserializeAs_PartyCancelInvitationNotificationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.cancelerId = param1.readVarUhInt();
            if (this.cancelerId < 0) {
                throw new Error('Forbidden value (' + this.cancelerId + ') on element of PartyCancelInvitationNotificationMessage.cancelerId.');
            }
            this.guestId = param1.readVarUhInt();
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element of PartyCancelInvitationNotificationMessage.guestId.');
            }
        };
        PartyCancelInvitationNotificationMessage.ID = 6251;
        return PartyCancelInvitationNotificationMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyCancelInvitationNotificationMessage = PartyCancelInvitationNotificationMessage;
    var PartyCannotJoinErrorMessage = (function (_super) {
        __extends(PartyCannotJoinErrorMessage, _super);
        function PartyCannotJoinErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        PartyCannotJoinErrorMessage.prototype.getMessageId = function () {
            return PartyCannotJoinErrorMessage.ID;
        };
        PartyCannotJoinErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        PartyCannotJoinErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyCannotJoinErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyCannotJoinErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyCannotJoinErrorMessage(param1);
        };
        PartyCannotJoinErrorMessage.prototype.serializeAs_PartyCannotJoinErrorMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.reason);
        };
        PartyCannotJoinErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCannotJoinErrorMessage(param1);
        };
        PartyCannotJoinErrorMessage.prototype.deserializeAs_PartyCannotJoinErrorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of PartyCannotJoinErrorMessage.reason.');
            }
        };
        PartyCannotJoinErrorMessage.ID = 5583;
        return PartyCannotJoinErrorMessage;
    })(AbstractPartyMessage);
    Protocol.PartyCannotJoinErrorMessage = PartyCannotJoinErrorMessage;
    var PartyDeletedMessage = (function (_super) {
        __extends(PartyDeletedMessage, _super);
        function PartyDeletedMessage() {
            _super.call(this);
        }
        PartyDeletedMessage.prototype.getMessageId = function () {
            return PartyDeletedMessage.ID;
        };
        PartyDeletedMessage.prototype.reset = function () {
        };
        PartyDeletedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyDeletedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyDeletedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyDeletedMessage(param1);
        };
        PartyDeletedMessage.prototype.serializeAs_PartyDeletedMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyDeletedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyDeletedMessage(param1);
        };
        PartyDeletedMessage.prototype.deserializeAs_PartyDeletedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyDeletedMessage.ID = 6261;
        return PartyDeletedMessage;
    })(AbstractPartyMessage);
    Protocol.PartyDeletedMessage = PartyDeletedMessage;
    var PartyFollowMemberRequestMessage = (function (_super) {
        __extends(PartyFollowMemberRequestMessage, _super);
        function PartyFollowMemberRequestMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        PartyFollowMemberRequestMessage.prototype.getMessageId = function () {
            return PartyFollowMemberRequestMessage.ID;
        };
        PartyFollowMemberRequestMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        PartyFollowMemberRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyFollowMemberRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyFollowMemberRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyFollowMemberRequestMessage(param1);
        };
        PartyFollowMemberRequestMessage.prototype.serializeAs_PartyFollowMemberRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        PartyFollowMemberRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyFollowMemberRequestMessage(param1);
        };
        PartyFollowMemberRequestMessage.prototype.deserializeAs_PartyFollowMemberRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of PartyFollowMemberRequestMessage.playerId.');
            }
        };
        PartyFollowMemberRequestMessage.ID = 5577;
        return PartyFollowMemberRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyFollowMemberRequestMessage = PartyFollowMemberRequestMessage;
    var PartyFollowStatusUpdateMessage = (function (_super) {
        __extends(PartyFollowStatusUpdateMessage, _super);
        function PartyFollowStatusUpdateMessage() {
            this.success = false;
            this.followedId = 0;
            _super.call(this);
        }
        PartyFollowStatusUpdateMessage.prototype.getMessageId = function () {
            return PartyFollowStatusUpdateMessage.ID;
        };
        PartyFollowStatusUpdateMessage.prototype.reset = function () {
            this.success = false;
            this.followedId = 0;
        };
        PartyFollowStatusUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyFollowStatusUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyFollowStatusUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyFollowStatusUpdateMessage(param1);
        };
        PartyFollowStatusUpdateMessage.prototype.serializeAs_PartyFollowStatusUpdateMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeBoolean(this.success);
            if (this.followedId < 0) {
                throw new Error('Forbidden value (' + this.followedId + ') on element followedId.');
            }
            param1.writeVarInt(this.followedId);
        };
        PartyFollowStatusUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyFollowStatusUpdateMessage(param1);
        };
        PartyFollowStatusUpdateMessage.prototype.deserializeAs_PartyFollowStatusUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.success = param1.readBoolean();
            this.followedId = param1.readVarUhInt();
            if (this.followedId < 0) {
                throw new Error('Forbidden value (' + this.followedId + ') on element of PartyFollowStatusUpdateMessage.followedId.');
            }
        };
        PartyFollowStatusUpdateMessage.ID = 5581;
        return PartyFollowStatusUpdateMessage;
    })(AbstractPartyMessage);
    Protocol.PartyFollowStatusUpdateMessage = PartyFollowStatusUpdateMessage;
    var PartyFollowThisMemberRequestMessage = (function (_super) {
        __extends(PartyFollowThisMemberRequestMessage, _super);
        function PartyFollowThisMemberRequestMessage() {
            this.enabled = false;
            _super.call(this);
        }
        PartyFollowThisMemberRequestMessage.prototype.getMessageId = function () {
            return PartyFollowThisMemberRequestMessage.ID;
        };
        PartyFollowThisMemberRequestMessage.prototype.reset = function () {
            this.enabled = false;
        };
        PartyFollowThisMemberRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyFollowThisMemberRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyFollowThisMemberRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyFollowThisMemberRequestMessage(param1);
        };
        PartyFollowThisMemberRequestMessage.prototype.serializeAs_PartyFollowThisMemberRequestMessage = function (param1) {
            _super.prototype.serializeAs_PartyFollowMemberRequestMessage.call(this, param1);
            param1.writeBoolean(this.enabled);
        };
        PartyFollowThisMemberRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyFollowThisMemberRequestMessage(param1);
        };
        PartyFollowThisMemberRequestMessage.prototype.deserializeAs_PartyFollowThisMemberRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.enabled = param1.readBoolean();
        };
        PartyFollowThisMemberRequestMessage.ID = 5588;
        return PartyFollowThisMemberRequestMessage;
    })(PartyFollowMemberRequestMessage);
    Protocol.PartyFollowThisMemberRequestMessage = PartyFollowThisMemberRequestMessage;
    var PartyInvitationArenaRequestMessage = (function (_super) {
        __extends(PartyInvitationArenaRequestMessage, _super);
        function PartyInvitationArenaRequestMessage() {
            _super.call(this);
        }
        PartyInvitationArenaRequestMessage.prototype.getMessageId = function () {
            return PartyInvitationArenaRequestMessage.ID;
        };
        PartyInvitationArenaRequestMessage.prototype.reset = function () {
        };
        PartyInvitationArenaRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationArenaRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationArenaRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationArenaRequestMessage(param1);
        };
        PartyInvitationArenaRequestMessage.prototype.serializeAs_PartyInvitationArenaRequestMessage = function (param1) {
            _super.prototype.serializeAs_PartyInvitationRequestMessage.call(this, param1);
        };
        PartyInvitationArenaRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationArenaRequestMessage(param1);
        };
        PartyInvitationArenaRequestMessage.prototype.deserializeAs_PartyInvitationArenaRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyInvitationArenaRequestMessage.ID = 6283;
        return PartyInvitationArenaRequestMessage;
    })(PartyInvitationRequestMessage);
    Protocol.PartyInvitationArenaRequestMessage = PartyInvitationArenaRequestMessage;
    var PartyInvitationCancelledForGuestMessage = (function (_super) {
        __extends(PartyInvitationCancelledForGuestMessage, _super);
        function PartyInvitationCancelledForGuestMessage() {
            this.cancelerId = 0;
            _super.call(this);
        }
        PartyInvitationCancelledForGuestMessage.prototype.getMessageId = function () {
            return PartyInvitationCancelledForGuestMessage.ID;
        };
        PartyInvitationCancelledForGuestMessage.prototype.reset = function () {
            this.cancelerId = 0;
        };
        PartyInvitationCancelledForGuestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationCancelledForGuestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationCancelledForGuestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationCancelledForGuestMessage(param1);
        };
        PartyInvitationCancelledForGuestMessage.prototype.serializeAs_PartyInvitationCancelledForGuestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.cancelerId < 0) {
                throw new Error('Forbidden value (' + this.cancelerId + ') on element cancelerId.');
            }
            param1.writeVarInt(this.cancelerId);
        };
        PartyInvitationCancelledForGuestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationCancelledForGuestMessage(param1);
        };
        PartyInvitationCancelledForGuestMessage.prototype.deserializeAs_PartyInvitationCancelledForGuestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.cancelerId = param1.readVarUhInt();
            if (this.cancelerId < 0) {
                throw new Error('Forbidden value (' + this.cancelerId + ') on element of PartyInvitationCancelledForGuestMessage.cancelerId.');
            }
        };
        PartyInvitationCancelledForGuestMessage.ID = 6256;
        return PartyInvitationCancelledForGuestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyInvitationCancelledForGuestMessage = PartyInvitationCancelledForGuestMessage;
    var PartyInvitationDetailsMessage = (function (_super) {
        __extends(PartyInvitationDetailsMessage, _super);
        function PartyInvitationDetailsMessage() {
            this.partyType = 0;
            this.partyName = '';
            this.fromId = 0;
            this.fromName = '';
            this.leaderId = 0;
            this.members = [];
            this.guests = [];
            _super.call(this);
        }
        PartyInvitationDetailsMessage.prototype.getMessageId = function () {
            return PartyInvitationDetailsMessage.ID;
        };
        PartyInvitationDetailsMessage.prototype.reset = function () {
            this.partyType = 0;
            this.partyName = '';
            this.fromId = 0;
            this.fromName = '';
            this.leaderId = 0;
            this.members = [];
            this.guests = [];
        };
        PartyInvitationDetailsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationDetailsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationDetailsMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationDetailsMessage(param1);
        };
        PartyInvitationDetailsMessage.prototype.serializeAs_PartyInvitationDetailsMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.partyType);
            param1.writeUTF(this.partyName);
            if (this.fromId < 0) {
                throw new Error('Forbidden value (' + this.fromId + ') on element fromId.');
            }
            param1.writeVarInt(this.fromId);
            param1.writeUTF(this.fromName);
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element leaderId.');
            }
            param1.writeVarInt(this.leaderId);
            param1.writeShort(this.members.length);
            var _loc2_ = 0;
            while (_loc2_ < this.members.length) {
                (this.members[_loc2_]).serializeAs_PartyInvitationMemberInformations(param1);
                _loc2_++;
            }
            param1.writeShort(this.guests.length);
            var _loc3_ = 0;
            while (_loc3_ < this.guests.length) {
                (this.guests[_loc3_]).serializeAs_PartyGuestInformations(param1);
                _loc3_++;
            }
        };
        PartyInvitationDetailsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationDetailsMessage(param1);
        };
        PartyInvitationDetailsMessage.prototype.deserializeAs_PartyInvitationDetailsMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.partyType = param1.readByte();
            if (this.partyType < 0) {
                throw new Error('Forbidden value (' + this.partyType + ') on element of PartyInvitationDetailsMessage.partyType.');
            }
            this.partyName = param1.readUTF();
            this.fromId = param1.readVarUhInt();
            if (this.fromId < 0) {
                throw new Error('Forbidden value (' + this.fromId + ') on element of PartyInvitationDetailsMessage.fromId.');
            }
            this.fromName = param1.readUTF();
            this.leaderId = param1.readVarUhInt();
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element of PartyInvitationDetailsMessage.leaderId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new PartyInvitationMemberInformations();
                _loc6_.deserialize(param1);
                this.members.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = new PartyGuestInformations();
                _loc7_.deserialize(param1);
                this.guests.push(_loc7_);
                _loc5_++;
            }
        };
        PartyInvitationDetailsMessage.ID = 6263;
        return PartyInvitationDetailsMessage;
    })(AbstractPartyMessage);
    Protocol.PartyInvitationDetailsMessage = PartyInvitationDetailsMessage;
    var PartyInvitationDetailsRequestMessage = (function (_super) {
        __extends(PartyInvitationDetailsRequestMessage, _super);
        function PartyInvitationDetailsRequestMessage() {
            _super.call(this);
        }
        PartyInvitationDetailsRequestMessage.prototype.getMessageId = function () {
            return PartyInvitationDetailsRequestMessage.ID;
        };
        PartyInvitationDetailsRequestMessage.prototype.reset = function () {
        };
        PartyInvitationDetailsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationDetailsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationDetailsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationDetailsRequestMessage(param1);
        };
        PartyInvitationDetailsRequestMessage.prototype.serializeAs_PartyInvitationDetailsRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyInvitationDetailsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationDetailsRequestMessage(param1);
        };
        PartyInvitationDetailsRequestMessage.prototype.deserializeAs_PartyInvitationDetailsRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyInvitationDetailsRequestMessage.ID = 6264;
        return PartyInvitationDetailsRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyInvitationDetailsRequestMessage = PartyInvitationDetailsRequestMessage;
    var PartyInvitationDungeonDetailsMessage = (function (_super) {
        __extends(PartyInvitationDungeonDetailsMessage, _super);
        function PartyInvitationDungeonDetailsMessage() {
            this.dungeonId = 0;
            this.playersDungeonReady = [];
            _super.call(this);
        }
        PartyInvitationDungeonDetailsMessage.prototype.getMessageId = function () {
            return PartyInvitationDungeonDetailsMessage.ID;
        };
        PartyInvitationDungeonDetailsMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.playersDungeonReady = [];
        };
        PartyInvitationDungeonDetailsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationDungeonDetailsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationDungeonDetailsMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationDungeonDetailsMessage(param1);
        };
        PartyInvitationDungeonDetailsMessage.prototype.serializeAs_PartyInvitationDungeonDetailsMessage = function (param1) {
            _super.prototype.serializeAs_PartyInvitationDetailsMessage.call(this, param1);
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            param1.writeShort(this.playersDungeonReady.length);
            var _loc2_ = 0;
            while (_loc2_ < this.playersDungeonReady.length) {
                param1.writeBoolean(this.playersDungeonReady[_loc2_]);
                _loc2_++;
            }
        };
        PartyInvitationDungeonDetailsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationDungeonDetailsMessage(param1);
        };
        PartyInvitationDungeonDetailsMessage.prototype.deserializeAs_PartyInvitationDungeonDetailsMessage = function (param1) {
            var _loc4_ = false;
            _super.prototype.deserialize.call(this, param1);
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of PartyInvitationDungeonDetailsMessage.dungeonId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readBoolean();
                this.playersDungeonReady.push(_loc4_);
                _loc3_++;
            }
        };
        PartyInvitationDungeonDetailsMessage.ID = 6262;
        return PartyInvitationDungeonDetailsMessage;
    })(PartyInvitationDetailsMessage);
    Protocol.PartyInvitationDungeonDetailsMessage = PartyInvitationDungeonDetailsMessage;
    var PartyInvitationDungeonMessage = (function (_super) {
        __extends(PartyInvitationDungeonMessage, _super);
        function PartyInvitationDungeonMessage() {
            this.dungeonId = 0;
            _super.call(this);
        }
        PartyInvitationDungeonMessage.prototype.getMessageId = function () {
            return PartyInvitationDungeonMessage.ID;
        };
        PartyInvitationDungeonMessage.prototype.reset = function () {
            this.dungeonId = 0;
        };
        PartyInvitationDungeonMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationDungeonMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationDungeonMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationDungeonMessage(param1);
        };
        PartyInvitationDungeonMessage.prototype.serializeAs_PartyInvitationDungeonMessage = function (param1) {
            _super.prototype.serializeAs_PartyInvitationMessage.call(this, param1);
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
        };
        PartyInvitationDungeonMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationDungeonMessage(param1);
        };
        PartyInvitationDungeonMessage.prototype.deserializeAs_PartyInvitationDungeonMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of PartyInvitationDungeonMessage.dungeonId.');
            }
        };
        PartyInvitationDungeonMessage.ID = 6244;
        return PartyInvitationDungeonMessage;
    })(PartyInvitationMessage);
    Protocol.PartyInvitationDungeonMessage = PartyInvitationDungeonMessage;
    var PartyInvitationDungeonRequestMessage = (function (_super) {
        __extends(PartyInvitationDungeonRequestMessage, _super);
        function PartyInvitationDungeonRequestMessage() {
            this.dungeonId = 0;
            _super.call(this);
        }
        PartyInvitationDungeonRequestMessage.prototype.getMessageId = function () {
            return PartyInvitationDungeonRequestMessage.ID;
        };
        PartyInvitationDungeonRequestMessage.prototype.reset = function () {
            this.dungeonId = 0;
        };
        PartyInvitationDungeonRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationDungeonRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationDungeonRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationDungeonRequestMessage(param1);
        };
        PartyInvitationDungeonRequestMessage.prototype.serializeAs_PartyInvitationDungeonRequestMessage = function (param1) {
            _super.prototype.serializeAs_PartyInvitationRequestMessage.call(this, param1);
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
        };
        PartyInvitationDungeonRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationDungeonRequestMessage(param1);
        };
        PartyInvitationDungeonRequestMessage.prototype.deserializeAs_PartyInvitationDungeonRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of PartyInvitationDungeonRequestMessage.dungeonId.');
            }
        };
        PartyInvitationDungeonRequestMessage.ID = 6245;
        return PartyInvitationDungeonRequestMessage;
    })(PartyInvitationRequestMessage);
    Protocol.PartyInvitationDungeonRequestMessage = PartyInvitationDungeonRequestMessage;
    var PartyInvitationMessage = (function (_super) {
        __extends(PartyInvitationMessage, _super);
        function PartyInvitationMessage() {
            this.partyType = 0;
            this.partyName = '';
            this.maxParticipants = 0;
            this.fromId = 0;
            this.fromName = '';
            this.toId = 0;
            _super.call(this);
        }
        PartyInvitationMessage.prototype.getMessageId = function () {
            return PartyInvitationMessage.ID;
        };
        PartyInvitationMessage.prototype.reset = function () {
            this.partyType = 0;
            this.partyName = '';
            this.maxParticipants = 0;
            this.fromId = 0;
            this.fromName = '';
            this.toId = 0;
        };
        PartyInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationMessage(param1);
        };
        PartyInvitationMessage.prototype.serializeAs_PartyInvitationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.partyType);
            param1.writeUTF(this.partyName);
            if (this.maxParticipants < 0) {
                throw new Error('Forbidden value (' + this.maxParticipants + ') on element maxParticipants.');
            }
            param1.writeByte(this.maxParticipants);
            if (this.fromId < 0) {
                throw new Error('Forbidden value (' + this.fromId + ') on element fromId.');
            }
            param1.writeVarInt(this.fromId);
            param1.writeUTF(this.fromName);
            if (this.toId < 0) {
                throw new Error('Forbidden value (' + this.toId + ') on element toId.');
            }
            param1.writeVarInt(this.toId);
        };
        PartyInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationMessage(param1);
        };
        PartyInvitationMessage.prototype.deserializeAs_PartyInvitationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.partyType = param1.readByte();
            if (this.partyType < 0) {
                throw new Error('Forbidden value (' + this.partyType + ') on element of PartyInvitationMessage.partyType.');
            }
            this.partyName = param1.readUTF();
            this.maxParticipants = param1.readByte();
            if (this.maxParticipants < 0) {
                throw new Error('Forbidden value (' + this.maxParticipants + ') on element of PartyInvitationMessage.maxParticipants.');
            }
            this.fromId = param1.readVarUhInt();
            if (this.fromId < 0) {
                throw new Error('Forbidden value (' + this.fromId + ') on element of PartyInvitationMessage.fromId.');
            }
            this.fromName = param1.readUTF();
            this.toId = param1.readVarUhInt();
            if (this.toId < 0) {
                throw new Error('Forbidden value (' + this.toId + ') on element of PartyInvitationMessage.toId.');
            }
        };
        PartyInvitationMessage.ID = 5586;
        return PartyInvitationMessage;
    })(AbstractPartyMessage);
    Protocol.PartyInvitationMessage = PartyInvitationMessage;
    var PartyInvitationRequestMessage = (function (_super) {
        __extends(PartyInvitationRequestMessage, _super);
        function PartyInvitationRequestMessage() {
            this.name = '';
            _super.call(this);
        }
        PartyInvitationRequestMessage.prototype.getMessageId = function () {
            return PartyInvitationRequestMessage.ID;
        };
        PartyInvitationRequestMessage.prototype.reset = function () {
            this.name = '';
        };
        PartyInvitationRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyInvitationRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyInvitationRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationRequestMessage(param1);
        };
        PartyInvitationRequestMessage.prototype.serializeAs_PartyInvitationRequestMessage = function (param1) {
            param1.writeUTF(this.name);
        };
        PartyInvitationRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationRequestMessage(param1);
        };
        PartyInvitationRequestMessage.prototype.deserializeAs_PartyInvitationRequestMessage = function (param1) {
            this.name = param1.readUTF();
        };
        PartyInvitationRequestMessage.ID = 5585;
        return PartyInvitationRequestMessage;
    })(NetworkMessage);
    Protocol.PartyInvitationRequestMessage = PartyInvitationRequestMessage;
    var PartyJoinMessage = (function (_super) {
        __extends(PartyJoinMessage, _super);
        function PartyJoinMessage() {
            this.partyType = 0;
            this.partyLeaderId = 0;
            this.maxParticipants = 0;
            this.members = [];
            this.guests = [];
            this.restricted = false;
            this.partyName = '';
            _super.call(this);
        }
        PartyJoinMessage.prototype.getMessageId = function () {
            return PartyJoinMessage.ID;
        };
        PartyJoinMessage.prototype.reset = function () {
            this.partyType = 0;
            this.partyLeaderId = 0;
            this.maxParticipants = 0;
            this.members = [];
            this.guests = [];
            this.restricted = false;
            this.partyName = '';
        };
        PartyJoinMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyJoinMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyJoinMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyJoinMessage(param1);
        };
        PartyJoinMessage.prototype.serializeAs_PartyJoinMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.partyType);
            if (this.partyLeaderId < 0) {
                throw new Error('Forbidden value (' + this.partyLeaderId + ') on element partyLeaderId.');
            }
            param1.writeVarInt(this.partyLeaderId);
            if (this.maxParticipants < 0) {
                throw new Error('Forbidden value (' + this.maxParticipants + ') on element maxParticipants.');
            }
            param1.writeByte(this.maxParticipants);
            param1.writeShort(this.members.length);
            var _loc2_ = 0;
            while (_loc2_ < this.members.length) {
                param1.writeShort((this.members[_loc2_]).getTypeId());
                (this.members[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.guests.length);
            var _loc3_ = 0;
            while (_loc3_ < this.guests.length) {
                (this.guests[_loc3_]).serializeAs_PartyGuestInformations(param1);
                _loc3_++;
            }
            param1.writeBoolean(this.restricted);
            param1.writeUTF(this.partyName);
        };
        PartyJoinMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyJoinMessage(param1);
        };
        PartyJoinMessage.prototype.deserializeAs_PartyJoinMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.partyType = param1.readByte();
            if (this.partyType < 0) {
                throw new Error('Forbidden value (' + this.partyType + ') on element of PartyJoinMessage.partyType.');
            }
            this.partyLeaderId = param1.readVarUhInt();
            if (this.partyLeaderId < 0) {
                throw new Error('Forbidden value (' + this.partyLeaderId + ') on element of PartyJoinMessage.partyLeaderId.');
            }
            this.maxParticipants = param1.readByte();
            if (this.maxParticipants < 0) {
                throw new Error('Forbidden value (' + this.maxParticipants + ') on element of PartyJoinMessage.maxParticipants.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(PartyMemberInformations, _loc6_);
                _loc7_.deserialize(param1);
                this.members.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = new PartyGuestInformations();
                _loc8_.deserialize(param1);
                this.guests.push(_loc8_);
                _loc5_++;
            }
            this.restricted = param1.readBoolean();
            this.partyName = param1.readUTF();
        };
        PartyJoinMessage.ID = 5576;
        return PartyJoinMessage;
    })(AbstractPartyMessage);
    Protocol.PartyJoinMessage = PartyJoinMessage;
    var PartyKickRequestMessage = (function (_super) {
        __extends(PartyKickRequestMessage, _super);
        function PartyKickRequestMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        PartyKickRequestMessage.prototype.getMessageId = function () {
            return PartyKickRequestMessage.ID;
        };
        PartyKickRequestMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        PartyKickRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyKickRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyKickRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyKickRequestMessage(param1);
        };
        PartyKickRequestMessage.prototype.serializeAs_PartyKickRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        PartyKickRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyKickRequestMessage(param1);
        };
        PartyKickRequestMessage.prototype.deserializeAs_PartyKickRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of PartyKickRequestMessage.playerId.');
            }
        };
        PartyKickRequestMessage.ID = 5592;
        return PartyKickRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyKickRequestMessage = PartyKickRequestMessage;
    var PartyKickedByMessage = (function (_super) {
        __extends(PartyKickedByMessage, _super);
        function PartyKickedByMessage() {
            this.kickerId = 0;
            _super.call(this);
        }
        PartyKickedByMessage.prototype.getMessageId = function () {
            return PartyKickedByMessage.ID;
        };
        PartyKickedByMessage.prototype.reset = function () {
            this.kickerId = 0;
        };
        PartyKickedByMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyKickedByMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyKickedByMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyKickedByMessage(param1);
        };
        PartyKickedByMessage.prototype.serializeAs_PartyKickedByMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            if (this.kickerId < 0) {
                throw new Error('Forbidden value (' + this.kickerId + ') on element kickerId.');
            }
            param1.writeVarInt(this.kickerId);
        };
        PartyKickedByMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyKickedByMessage(param1);
        };
        PartyKickedByMessage.prototype.deserializeAs_PartyKickedByMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.kickerId = param1.readVarUhInt();
            if (this.kickerId < 0) {
                throw new Error('Forbidden value (' + this.kickerId + ') on element of PartyKickedByMessage.kickerId.');
            }
        };
        PartyKickedByMessage.ID = 5590;
        return PartyKickedByMessage;
    })(AbstractPartyMessage);
    Protocol.PartyKickedByMessage = PartyKickedByMessage;
    var PartyLeaderUpdateMessage = (function (_super) {
        __extends(PartyLeaderUpdateMessage, _super);
        function PartyLeaderUpdateMessage() {
            this.partyLeaderId = 0;
            _super.call(this);
        }
        PartyLeaderUpdateMessage.prototype.getMessageId = function () {
            return PartyLeaderUpdateMessage.ID;
        };
        PartyLeaderUpdateMessage.prototype.reset = function () {
            this.partyLeaderId = 0;
        };
        PartyLeaderUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyLeaderUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyLeaderUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyLeaderUpdateMessage(param1);
        };
        PartyLeaderUpdateMessage.prototype.serializeAs_PartyLeaderUpdateMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            if (this.partyLeaderId < 0) {
                throw new Error('Forbidden value (' + this.partyLeaderId + ') on element partyLeaderId.');
            }
            param1.writeVarInt(this.partyLeaderId);
        };
        PartyLeaderUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyLeaderUpdateMessage(param1);
        };
        PartyLeaderUpdateMessage.prototype.deserializeAs_PartyLeaderUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.partyLeaderId = param1.readVarUhInt();
            if (this.partyLeaderId < 0) {
                throw new Error('Forbidden value (' + this.partyLeaderId + ') on element of PartyLeaderUpdateMessage.partyLeaderId.');
            }
        };
        PartyLeaderUpdateMessage.ID = 5578;
        return PartyLeaderUpdateMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyLeaderUpdateMessage = PartyLeaderUpdateMessage;
    var PartyLeaveMessage = (function (_super) {
        __extends(PartyLeaveMessage, _super);
        function PartyLeaveMessage() {
            _super.call(this);
        }
        PartyLeaveMessage.prototype.getMessageId = function () {
            return PartyLeaveMessage.ID;
        };
        PartyLeaveMessage.prototype.reset = function () {
        };
        PartyLeaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyLeaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyLeaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyLeaveMessage(param1);
        };
        PartyLeaveMessage.prototype.serializeAs_PartyLeaveMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyLeaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyLeaveMessage(param1);
        };
        PartyLeaveMessage.prototype.deserializeAs_PartyLeaveMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyLeaveMessage.ID = 5594;
        return PartyLeaveMessage;
    })(AbstractPartyMessage);
    Protocol.PartyLeaveMessage = PartyLeaveMessage;
    var PartyLeaveRequestMessage = (function (_super) {
        __extends(PartyLeaveRequestMessage, _super);
        function PartyLeaveRequestMessage() {
            _super.call(this);
        }
        PartyLeaveRequestMessage.prototype.getMessageId = function () {
            return PartyLeaveRequestMessage.ID;
        };
        PartyLeaveRequestMessage.prototype.reset = function () {
        };
        PartyLeaveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyLeaveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyLeaveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyLeaveRequestMessage(param1);
        };
        PartyLeaveRequestMessage.prototype.serializeAs_PartyLeaveRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyLeaveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyLeaveRequestMessage(param1);
        };
        PartyLeaveRequestMessage.prototype.deserializeAs_PartyLeaveRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyLeaveRequestMessage.ID = 5593;
        return PartyLeaveRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyLeaveRequestMessage = PartyLeaveRequestMessage;
    var PartyLocateMembersMessage = (function (_super) {
        __extends(PartyLocateMembersMessage, _super);
        function PartyLocateMembersMessage() {
            this.geopositions = [];
            _super.call(this);
        }
        PartyLocateMembersMessage.prototype.getMessageId = function () {
            return PartyLocateMembersMessage.ID;
        };
        PartyLocateMembersMessage.prototype.reset = function () {
            this.geopositions = [];
        };
        PartyLocateMembersMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyLocateMembersMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyLocateMembersMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyLocateMembersMessage(param1);
        };
        PartyLocateMembersMessage.prototype.serializeAs_PartyLocateMembersMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeShort(this.geopositions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.geopositions.length) {
                (this.geopositions[_loc2_]).serializeAs_PartyMemberGeoPosition(param1);
                _loc2_++;
            }
        };
        PartyLocateMembersMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyLocateMembersMessage(param1);
        };
        PartyLocateMembersMessage.prototype.deserializeAs_PartyLocateMembersMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PartyMemberGeoPosition();
                _loc4_.deserialize(param1);
                this.geopositions.push(_loc4_);
                _loc3_++;
            }
        };
        PartyLocateMembersMessage.ID = 5595;
        return PartyLocateMembersMessage;
    })(AbstractPartyMessage);
    Protocol.PartyLocateMembersMessage = PartyLocateMembersMessage;
    var PartyLoyaltyStatusMessage = (function (_super) {
        __extends(PartyLoyaltyStatusMessage, _super);
        function PartyLoyaltyStatusMessage() {
            this.loyal = false;
            _super.call(this);
        }
        PartyLoyaltyStatusMessage.prototype.getMessageId = function () {
            return PartyLoyaltyStatusMessage.ID;
        };
        PartyLoyaltyStatusMessage.prototype.reset = function () {
            this.loyal = false;
        };
        PartyLoyaltyStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyLoyaltyStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyLoyaltyStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyLoyaltyStatusMessage(param1);
        };
        PartyLoyaltyStatusMessage.prototype.serializeAs_PartyLoyaltyStatusMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeBoolean(this.loyal);
        };
        PartyLoyaltyStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyLoyaltyStatusMessage(param1);
        };
        PartyLoyaltyStatusMessage.prototype.deserializeAs_PartyLoyaltyStatusMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.loyal = param1.readBoolean();
        };
        PartyLoyaltyStatusMessage.ID = 6270;
        return PartyLoyaltyStatusMessage;
    })(AbstractPartyMessage);
    Protocol.PartyLoyaltyStatusMessage = PartyLoyaltyStatusMessage;
    var PartyMemberEjectedMessage = (function (_super) {
        __extends(PartyMemberEjectedMessage, _super);
        function PartyMemberEjectedMessage() {
            this.kickerId = 0;
            _super.call(this);
        }
        PartyMemberEjectedMessage.prototype.getMessageId = function () {
            return PartyMemberEjectedMessage.ID;
        };
        PartyMemberEjectedMessage.prototype.reset = function () {
            this.kickerId = 0;
        };
        PartyMemberEjectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyMemberEjectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyMemberEjectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberEjectedMessage(param1);
        };
        PartyMemberEjectedMessage.prototype.serializeAs_PartyMemberEjectedMessage = function (param1) {
            _super.prototype.serializeAs_PartyMemberRemoveMessage.call(this, param1);
            if (this.kickerId < 0) {
                throw new Error('Forbidden value (' + this.kickerId + ') on element kickerId.');
            }
            param1.writeVarInt(this.kickerId);
        };
        PartyMemberEjectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberEjectedMessage(param1);
        };
        PartyMemberEjectedMessage.prototype.deserializeAs_PartyMemberEjectedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.kickerId = param1.readVarUhInt();
            if (this.kickerId < 0) {
                throw new Error('Forbidden value (' + this.kickerId + ') on element of PartyMemberEjectedMessage.kickerId.');
            }
        };
        PartyMemberEjectedMessage.ID = 6252;
        return PartyMemberEjectedMessage;
    })(PartyMemberRemoveMessage);
    Protocol.PartyMemberEjectedMessage = PartyMemberEjectedMessage;
    var PartyMemberInFightMessage = (function (_super) {
        __extends(PartyMemberInFightMessage, _super);
        function PartyMemberInFightMessage() {
            this.reason = 0;
            this.memberId = 0;
            this.memberAccountId = 0;
            this.memberName = '';
            this.fightId = 0;
            this.fightMap = new MapCoordinatesExtended();
            this.timeBeforeFightStart = 0;
            _super.call(this);
        }
        PartyMemberInFightMessage.prototype.getMessageId = function () {
            return PartyMemberInFightMessage.ID;
        };
        PartyMemberInFightMessage.prototype.reset = function () {
            this.reason = 0;
            this.memberId = 0;
            this.memberAccountId = 0;
            this.memberName = '';
            this.fightId = 0;
            this.fightMap = new MapCoordinatesExtended();
            this.timeBeforeFightStart = 0;
        };
        PartyMemberInFightMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyMemberInFightMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyMemberInFightMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberInFightMessage(param1);
        };
        PartyMemberInFightMessage.prototype.serializeAs_PartyMemberInFightMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.reason);
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeVarInt(this.memberId);
            if (this.memberAccountId < 0) {
                throw new Error('Forbidden value (' + this.memberAccountId + ') on element memberAccountId.');
            }
            param1.writeInt(this.memberAccountId);
            param1.writeUTF(this.memberName);
            param1.writeInt(this.fightId);
            this.fightMap.serializeAs_MapCoordinatesExtended(param1);
            param1.writeVarShort(this.timeBeforeFightStart);
        };
        PartyMemberInFightMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberInFightMessage(param1);
        };
        PartyMemberInFightMessage.prototype.deserializeAs_PartyMemberInFightMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of PartyMemberInFightMessage.reason.');
            }
            this.memberId = param1.readVarUhInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of PartyMemberInFightMessage.memberId.');
            }
            this.memberAccountId = param1.readInt();
            if (this.memberAccountId < 0) {
                throw new Error('Forbidden value (' + this.memberAccountId + ') on element of PartyMemberInFightMessage.memberAccountId.');
            }
            this.memberName = param1.readUTF();
            this.fightId = param1.readInt();
            this.fightMap = new MapCoordinatesExtended();
            this.fightMap.deserialize(param1);
            this.timeBeforeFightStart = param1.readVarShort();
        };
        PartyMemberInFightMessage.ID = 6342;
        return PartyMemberInFightMessage;
    })(AbstractPartyMessage);
    Protocol.PartyMemberInFightMessage = PartyMemberInFightMessage;
    var PartyMemberRemoveMessage = (function (_super) {
        __extends(PartyMemberRemoveMessage, _super);
        function PartyMemberRemoveMessage() {
            this.leavingPlayerId = 0;
            _super.call(this);
        }
        PartyMemberRemoveMessage.prototype.getMessageId = function () {
            return PartyMemberRemoveMessage.ID;
        };
        PartyMemberRemoveMessage.prototype.reset = function () {
            this.leavingPlayerId = 0;
        };
        PartyMemberRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyMemberRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyMemberRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberRemoveMessage(param1);
        };
        PartyMemberRemoveMessage.prototype.serializeAs_PartyMemberRemoveMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            if (this.leavingPlayerId < 0) {
                throw new Error('Forbidden value (' + this.leavingPlayerId + ') on element leavingPlayerId.');
            }
            param1.writeVarInt(this.leavingPlayerId);
        };
        PartyMemberRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberRemoveMessage(param1);
        };
        PartyMemberRemoveMessage.prototype.deserializeAs_PartyMemberRemoveMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.leavingPlayerId = param1.readVarUhInt();
            if (this.leavingPlayerId < 0) {
                throw new Error('Forbidden value (' + this.leavingPlayerId + ') on element of PartyMemberRemoveMessage.leavingPlayerId.');
            }
        };
        PartyMemberRemoveMessage.ID = 5579;
        return PartyMemberRemoveMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyMemberRemoveMessage = PartyMemberRemoveMessage;
    var PartyModifiableStatusMessage = (function (_super) {
        __extends(PartyModifiableStatusMessage, _super);
        function PartyModifiableStatusMessage() {
            this.enabled = false;
            _super.call(this);
        }
        PartyModifiableStatusMessage.prototype.getMessageId = function () {
            return PartyModifiableStatusMessage.ID;
        };
        PartyModifiableStatusMessage.prototype.reset = function () {
            this.enabled = false;
        };
        PartyModifiableStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyModifiableStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyModifiableStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyModifiableStatusMessage(param1);
        };
        PartyModifiableStatusMessage.prototype.serializeAs_PartyModifiableStatusMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeBoolean(this.enabled);
        };
        PartyModifiableStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyModifiableStatusMessage(param1);
        };
        PartyModifiableStatusMessage.prototype.deserializeAs_PartyModifiableStatusMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.enabled = param1.readBoolean();
        };
        PartyModifiableStatusMessage.ID = 6277;
        return PartyModifiableStatusMessage;
    })(AbstractPartyMessage);
    Protocol.PartyModifiableStatusMessage = PartyModifiableStatusMessage;
    var PartyNameSetErrorMessage = (function (_super) {
        __extends(PartyNameSetErrorMessage, _super);
        function PartyNameSetErrorMessage() {
            this.result = 0;
            _super.call(this);
        }
        PartyNameSetErrorMessage.prototype.getMessageId = function () {
            return PartyNameSetErrorMessage.ID;
        };
        PartyNameSetErrorMessage.prototype.reset = function () {
            this.result = 0;
        };
        PartyNameSetErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyNameSetErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyNameSetErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyNameSetErrorMessage(param1);
        };
        PartyNameSetErrorMessage.prototype.serializeAs_PartyNameSetErrorMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeByte(this.result);
        };
        PartyNameSetErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyNameSetErrorMessage(param1);
        };
        PartyNameSetErrorMessage.prototype.deserializeAs_PartyNameSetErrorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of PartyNameSetErrorMessage.result.');
            }
        };
        PartyNameSetErrorMessage.ID = 6501;
        return PartyNameSetErrorMessage;
    })(AbstractPartyMessage);
    Protocol.PartyNameSetErrorMessage = PartyNameSetErrorMessage;
    var PartyNameSetRequestMessage = (function (_super) {
        __extends(PartyNameSetRequestMessage, _super);
        function PartyNameSetRequestMessage() {
            this.partyName = '';
            _super.call(this);
        }
        PartyNameSetRequestMessage.prototype.getMessageId = function () {
            return PartyNameSetRequestMessage.ID;
        };
        PartyNameSetRequestMessage.prototype.reset = function () {
            this.partyName = '';
        };
        PartyNameSetRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyNameSetRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyNameSetRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyNameSetRequestMessage(param1);
        };
        PartyNameSetRequestMessage.prototype.serializeAs_PartyNameSetRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeUTF(this.partyName);
        };
        PartyNameSetRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyNameSetRequestMessage(param1);
        };
        PartyNameSetRequestMessage.prototype.deserializeAs_PartyNameSetRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.partyName = param1.readUTF();
        };
        PartyNameSetRequestMessage.ID = 6503;
        return PartyNameSetRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyNameSetRequestMessage = PartyNameSetRequestMessage;
    var PartyNameUpdateMessage = (function (_super) {
        __extends(PartyNameUpdateMessage, _super);
        function PartyNameUpdateMessage() {
            this.partyName = '';
            _super.call(this);
        }
        PartyNameUpdateMessage.prototype.getMessageId = function () {
            return PartyNameUpdateMessage.ID;
        };
        PartyNameUpdateMessage.prototype.reset = function () {
            this.partyName = '';
        };
        PartyNameUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyNameUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyNameUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyNameUpdateMessage(param1);
        };
        PartyNameUpdateMessage.prototype.serializeAs_PartyNameUpdateMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeUTF(this.partyName);
        };
        PartyNameUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyNameUpdateMessage(param1);
        };
        PartyNameUpdateMessage.prototype.deserializeAs_PartyNameUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.partyName = param1.readUTF();
        };
        PartyNameUpdateMessage.ID = 6502;
        return PartyNameUpdateMessage;
    })(AbstractPartyMessage);
    Protocol.PartyNameUpdateMessage = PartyNameUpdateMessage;
    var PartyNewGuestMessage = (function (_super) {
        __extends(PartyNewGuestMessage, _super);
        function PartyNewGuestMessage() {
            this.guest = new PartyGuestInformations();
            _super.call(this);
        }
        PartyNewGuestMessage.prototype.getMessageId = function () {
            return PartyNewGuestMessage.ID;
        };
        PartyNewGuestMessage.prototype.reset = function () {
            this.guest = new PartyGuestInformations();
        };
        PartyNewGuestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyNewGuestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyNewGuestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyNewGuestMessage(param1);
        };
        PartyNewGuestMessage.prototype.serializeAs_PartyNewGuestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            this.guest.serializeAs_PartyGuestInformations(param1);
        };
        PartyNewGuestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyNewGuestMessage(param1);
        };
        PartyNewGuestMessage.prototype.deserializeAs_PartyNewGuestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guest = new PartyGuestInformations();
            this.guest.deserialize(param1);
        };
        PartyNewGuestMessage.ID = 6260;
        return PartyNewGuestMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyNewGuestMessage = PartyNewGuestMessage;
    var PartyNewMemberMessage = (function (_super) {
        __extends(PartyNewMemberMessage, _super);
        function PartyNewMemberMessage() {
            _super.call(this);
        }
        PartyNewMemberMessage.prototype.getMessageId = function () {
            return PartyNewMemberMessage.ID;
        };
        PartyNewMemberMessage.prototype.reset = function () {
        };
        PartyNewMemberMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyNewMemberMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyNewMemberMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyNewMemberMessage(param1);
        };
        PartyNewMemberMessage.prototype.serializeAs_PartyNewMemberMessage = function (param1) {
            _super.prototype.serializeAs_PartyUpdateMessage.call(this, param1);
        };
        PartyNewMemberMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyNewMemberMessage(param1);
        };
        PartyNewMemberMessage.prototype.deserializeAs_PartyNewMemberMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyNewMemberMessage.ID = 6306;
        return PartyNewMemberMessage;
    })(PartyUpdateMessage);
    Protocol.PartyNewMemberMessage = PartyNewMemberMessage;
    var PartyPledgeLoyaltyRequestMessage = (function (_super) {
        __extends(PartyPledgeLoyaltyRequestMessage, _super);
        function PartyPledgeLoyaltyRequestMessage() {
            this.loyal = false;
            _super.call(this);
        }
        PartyPledgeLoyaltyRequestMessage.prototype.getMessageId = function () {
            return PartyPledgeLoyaltyRequestMessage.ID;
        };
        PartyPledgeLoyaltyRequestMessage.prototype.reset = function () {
            this.loyal = false;
        };
        PartyPledgeLoyaltyRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyPledgeLoyaltyRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyPledgeLoyaltyRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyPledgeLoyaltyRequestMessage(param1);
        };
        PartyPledgeLoyaltyRequestMessage.prototype.serializeAs_PartyPledgeLoyaltyRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeBoolean(this.loyal);
        };
        PartyPledgeLoyaltyRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyPledgeLoyaltyRequestMessage(param1);
        };
        PartyPledgeLoyaltyRequestMessage.prototype.deserializeAs_PartyPledgeLoyaltyRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.loyal = param1.readBoolean();
        };
        PartyPledgeLoyaltyRequestMessage.ID = 6269;
        return PartyPledgeLoyaltyRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyPledgeLoyaltyRequestMessage = PartyPledgeLoyaltyRequestMessage;
    var PartyRefuseInvitationMessage = (function (_super) {
        __extends(PartyRefuseInvitationMessage, _super);
        function PartyRefuseInvitationMessage() {
            _super.call(this);
        }
        PartyRefuseInvitationMessage.prototype.getMessageId = function () {
            return PartyRefuseInvitationMessage.ID;
        };
        PartyRefuseInvitationMessage.prototype.reset = function () {
        };
        PartyRefuseInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyRefuseInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyRefuseInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyRefuseInvitationMessage(param1);
        };
        PartyRefuseInvitationMessage.prototype.serializeAs_PartyRefuseInvitationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyRefuseInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyRefuseInvitationMessage(param1);
        };
        PartyRefuseInvitationMessage.prototype.deserializeAs_PartyRefuseInvitationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyRefuseInvitationMessage.ID = 5582;
        return PartyRefuseInvitationMessage;
    })(AbstractPartyMessage);
    Protocol.PartyRefuseInvitationMessage = PartyRefuseInvitationMessage;
    var PartyRefuseInvitationNotificationMessage = (function (_super) {
        __extends(PartyRefuseInvitationNotificationMessage, _super);
        function PartyRefuseInvitationNotificationMessage() {
            this.guestId = 0;
            _super.call(this);
        }
        PartyRefuseInvitationNotificationMessage.prototype.getMessageId = function () {
            return PartyRefuseInvitationNotificationMessage.ID;
        };
        PartyRefuseInvitationNotificationMessage.prototype.reset = function () {
            this.guestId = 0;
        };
        PartyRefuseInvitationNotificationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyRefuseInvitationNotificationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyRefuseInvitationNotificationMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyRefuseInvitationNotificationMessage(param1);
        };
        PartyRefuseInvitationNotificationMessage.prototype.serializeAs_PartyRefuseInvitationNotificationMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element guestId.');
            }
            param1.writeVarInt(this.guestId);
        };
        PartyRefuseInvitationNotificationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyRefuseInvitationNotificationMessage(param1);
        };
        PartyRefuseInvitationNotificationMessage.prototype.deserializeAs_PartyRefuseInvitationNotificationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guestId = param1.readVarUhInt();
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element of PartyRefuseInvitationNotificationMessage.guestId.');
            }
        };
        PartyRefuseInvitationNotificationMessage.ID = 5596;
        return PartyRefuseInvitationNotificationMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyRefuseInvitationNotificationMessage = PartyRefuseInvitationNotificationMessage;
    var PartyRestrictedMessage = (function (_super) {
        __extends(PartyRestrictedMessage, _super);
        function PartyRestrictedMessage() {
            this.restricted = false;
            _super.call(this);
        }
        PartyRestrictedMessage.prototype.getMessageId = function () {
            return PartyRestrictedMessage.ID;
        };
        PartyRestrictedMessage.prototype.reset = function () {
            this.restricted = false;
        };
        PartyRestrictedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyRestrictedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyRestrictedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyRestrictedMessage(param1);
        };
        PartyRestrictedMessage.prototype.serializeAs_PartyRestrictedMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
            param1.writeBoolean(this.restricted);
        };
        PartyRestrictedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyRestrictedMessage(param1);
        };
        PartyRestrictedMessage.prototype.deserializeAs_PartyRestrictedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.restricted = param1.readBoolean();
        };
        PartyRestrictedMessage.ID = 6175;
        return PartyRestrictedMessage;
    })(AbstractPartyMessage);
    Protocol.PartyRestrictedMessage = PartyRestrictedMessage;
    var PartyStopFollowRequestMessage = (function (_super) {
        __extends(PartyStopFollowRequestMessage, _super);
        function PartyStopFollowRequestMessage() {
            _super.call(this);
        }
        PartyStopFollowRequestMessage.prototype.getMessageId = function () {
            return PartyStopFollowRequestMessage.ID;
        };
        PartyStopFollowRequestMessage.prototype.reset = function () {
        };
        PartyStopFollowRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyStopFollowRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyStopFollowRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyStopFollowRequestMessage(param1);
        };
        PartyStopFollowRequestMessage.prototype.serializeAs_PartyStopFollowRequestMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyMessage.call(this, param1);
        };
        PartyStopFollowRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyStopFollowRequestMessage(param1);
        };
        PartyStopFollowRequestMessage.prototype.deserializeAs_PartyStopFollowRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PartyStopFollowRequestMessage.ID = 5574;
        return PartyStopFollowRequestMessage;
    })(AbstractPartyMessage);
    Protocol.PartyStopFollowRequestMessage = PartyStopFollowRequestMessage;
    var PartyUpdateLightMessage = (function (_super) {
        __extends(PartyUpdateLightMessage, _super);
        function PartyUpdateLightMessage() {
            this.id = 0;
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
            _super.call(this);
        }
        PartyUpdateLightMessage.prototype.getMessageId = function () {
            return PartyUpdateLightMessage.ID;
        };
        PartyUpdateLightMessage.prototype.reset = function () {
            this.id = 0;
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
        };
        PartyUpdateLightMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyUpdateLightMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyUpdateLightMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyUpdateLightMessage(param1);
        };
        PartyUpdateLightMessage.prototype.serializeAs_PartyUpdateLightMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element prospecting.');
            }
            param1.writeVarShort(this.prospecting);
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element regenRate.');
            }
            param1.writeByte(this.regenRate);
        };
        PartyUpdateLightMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyUpdateLightMessage(param1);
        };
        PartyUpdateLightMessage.prototype.deserializeAs_PartyUpdateLightMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of PartyUpdateLightMessage.id.');
            }
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of PartyUpdateLightMessage.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of PartyUpdateLightMessage.maxLifePoints.');
            }
            this.prospecting = param1.readVarUhShort();
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element of PartyUpdateLightMessage.prospecting.');
            }
            this.regenRate = param1.readUnsignedByte();
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element of PartyUpdateLightMessage.regenRate.');
            }
        };
        PartyUpdateLightMessage.ID = 6054;
        return PartyUpdateLightMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyUpdateLightMessage = PartyUpdateLightMessage;
    var PartyUpdateMessage = (function (_super) {
        __extends(PartyUpdateMessage, _super);
        function PartyUpdateMessage() {
            this.memberInformations = new PartyMemberInformations();
            _super.call(this);
        }
        PartyUpdateMessage.prototype.getMessageId = function () {
            return PartyUpdateMessage.ID;
        };
        PartyUpdateMessage.prototype.reset = function () {
            this.memberInformations = new PartyMemberInformations();
        };
        PartyUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyUpdateMessage(param1);
        };
        PartyUpdateMessage.prototype.serializeAs_PartyUpdateMessage = function (param1) {
            _super.prototype.serializeAs_AbstractPartyEventMessage.call(this, param1);
            param1.writeShort(this.memberInformations.getTypeId());
            this.memberInformations.serialize(param1);
        };
        PartyUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyUpdateMessage(param1);
        };
        PartyUpdateMessage.prototype.deserializeAs_PartyUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.memberInformations = ProtocolTypeManager.getInstance(PartyMemberInformations, _loc2_);
            this.memberInformations.deserialize(param1);
        };
        PartyUpdateMessage.ID = 5575;
        return PartyUpdateMessage;
    })(AbstractPartyEventMessage);
    Protocol.PartyUpdateMessage = PartyUpdateMessage;
    var PartyCompanionUpdateLightMessage = (function (_super) {
        __extends(PartyCompanionUpdateLightMessage, _super);
        function PartyCompanionUpdateLightMessage() {
            this.indexId = 0;
            _super.call(this);
        }
        PartyCompanionUpdateLightMessage.prototype.getMessageId = function () {
            return PartyCompanionUpdateLightMessage.ID;
        };
        PartyCompanionUpdateLightMessage.prototype.reset = function () {
            this.indexId = 0;
        };
        PartyCompanionUpdateLightMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartyCompanionUpdateLightMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartyCompanionUpdateLightMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartyCompanionUpdateLightMessage(param1);
        };
        PartyCompanionUpdateLightMessage.prototype.serializeAs_PartyCompanionUpdateLightMessage = function (param1) {
            _super.prototype.serializeAs_PartyUpdateLightMessage.call(this, param1);
            if (this.indexId < 0) {
                throw new Error('Forbidden value (' + this.indexId + ') on element indexId.');
            }
            param1.writeByte(this.indexId);
        };
        PartyCompanionUpdateLightMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCompanionUpdateLightMessage(param1);
        };
        PartyCompanionUpdateLightMessage.prototype.deserializeAs_PartyCompanionUpdateLightMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.indexId = param1.readByte();
            if (this.indexId < 0) {
                throw new Error('Forbidden value (' + this.indexId + ') on element of PartyCompanionUpdateLightMessage.indexId.');
            }
        };
        PartyCompanionUpdateLightMessage.ID = 6472;
        return PartyCompanionUpdateLightMessage;
    })(PartyUpdateLightMessage);
    Protocol.PartyCompanionUpdateLightMessage = PartyCompanionUpdateLightMessage;
    var PurchasableDialogMessage = (function (_super) {
        __extends(PurchasableDialogMessage, _super);
        function PurchasableDialogMessage() {
            this.buyOrSell = false;
            this.purchasableId = 0;
            this.price = 0;
            _super.call(this);
        }
        PurchasableDialogMessage.prototype.getMessageId = function () {
            return PurchasableDialogMessage.ID;
        };
        PurchasableDialogMessage.prototype.reset = function () {
            this.buyOrSell = false;
            this.purchasableId = 0;
            this.price = 0;
        };
        PurchasableDialogMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PurchasableDialogMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PurchasableDialogMessage.prototype.serialize = function (param1) {
            this.serializeAs_PurchasableDialogMessage(param1);
        };
        PurchasableDialogMessage.prototype.serializeAs_PurchasableDialogMessage = function (param1) {
            param1.writeBoolean(this.buyOrSell);
            if (this.purchasableId < 0) {
                throw new Error('Forbidden value (' + this.purchasableId + ') on element purchasableId.');
            }
            param1.writeVarInt(this.purchasableId);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        PurchasableDialogMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PurchasableDialogMessage(param1);
        };
        PurchasableDialogMessage.prototype.deserializeAs_PurchasableDialogMessage = function (param1) {
            this.buyOrSell = param1.readBoolean();
            this.purchasableId = param1.readVarUhInt();
            if (this.purchasableId < 0) {
                throw new Error('Forbidden value (' + this.purchasableId + ') on element of PurchasableDialogMessage.purchasableId.');
            }
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of PurchasableDialogMessage.price.');
            }
        };
        PurchasableDialogMessage.ID = 5739;
        return PurchasableDialogMessage;
    })(NetworkMessage);
    Protocol.PurchasableDialogMessage = PurchasableDialogMessage;
    var GuidedModeQuitRequestMessage = (function (_super) {
        __extends(GuidedModeQuitRequestMessage, _super);
        function GuidedModeQuitRequestMessage() {
            _super.call(this);
        }
        GuidedModeQuitRequestMessage.prototype.getMessageId = function () {
            return GuidedModeQuitRequestMessage.ID;
        };
        GuidedModeQuitRequestMessage.prototype.reset = function () {
        };
        GuidedModeQuitRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuidedModeQuitRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuidedModeQuitRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuidedModeQuitRequestMessage(param1);
        };
        GuidedModeQuitRequestMessage.prototype.serializeAs_GuidedModeQuitRequestMessage = function (param1) {
        };
        GuidedModeQuitRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuidedModeQuitRequestMessage(param1);
        };
        GuidedModeQuitRequestMessage.prototype.deserializeAs_GuidedModeQuitRequestMessage = function (param1) {
        };
        GuidedModeQuitRequestMessage.ID = 6092;
        return GuidedModeQuitRequestMessage;
    })(NetworkMessage);
    Protocol.GuidedModeQuitRequestMessage = GuidedModeQuitRequestMessage;
    var GuidedModeReturnRequestMessage = (function (_super) {
        __extends(GuidedModeReturnRequestMessage, _super);
        function GuidedModeReturnRequestMessage() {
            _super.call(this);
        }
        GuidedModeReturnRequestMessage.prototype.getMessageId = function () {
            return GuidedModeReturnRequestMessage.ID;
        };
        GuidedModeReturnRequestMessage.prototype.reset = function () {
        };
        GuidedModeReturnRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuidedModeReturnRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuidedModeReturnRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuidedModeReturnRequestMessage(param1);
        };
        GuidedModeReturnRequestMessage.prototype.serializeAs_GuidedModeReturnRequestMessage = function (param1) {
        };
        GuidedModeReturnRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuidedModeReturnRequestMessage(param1);
        };
        GuidedModeReturnRequestMessage.prototype.deserializeAs_GuidedModeReturnRequestMessage = function (param1) {
        };
        GuidedModeReturnRequestMessage.ID = 6088;
        return GuidedModeReturnRequestMessage;
    })(NetworkMessage);
    Protocol.GuidedModeReturnRequestMessage = GuidedModeReturnRequestMessage;
    var QuestListMessage = (function (_super) {
        __extends(QuestListMessage, _super);
        function QuestListMessage() {
            this.finishedQuestsIds = [];
            this.finishedQuestsCounts = [];
            this.activeQuests = [];
            this.reinitDoneQuestsIds = [];
            _super.call(this);
        }
        QuestListMessage.prototype.getMessageId = function () {
            return QuestListMessage.ID;
        };
        QuestListMessage.prototype.reset = function () {
            this.finishedQuestsIds = [];
            this.finishedQuestsCounts = [];
            this.activeQuests = [];
            this.reinitDoneQuestsIds = [];
        };
        QuestListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestListMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestListMessage(param1);
        };
        QuestListMessage.prototype.serializeAs_QuestListMessage = function (param1) {
            param1.writeShort(this.finishedQuestsIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.finishedQuestsIds.length) {
                if (this.finishedQuestsIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.finishedQuestsIds[_loc2_] + ') on element 1 (starting at 1) of finishedQuestsIds.');
                }
                param1.writeVarShort(this.finishedQuestsIds[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.finishedQuestsCounts.length);
            var _loc3_ = 0;
            while (_loc3_ < this.finishedQuestsCounts.length) {
                if (this.finishedQuestsCounts[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.finishedQuestsCounts[_loc3_] + ') on element 2 (starting at 1) of finishedQuestsCounts.');
                }
                param1.writeVarShort(this.finishedQuestsCounts[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.activeQuests.length);
            var _loc4_ = 0;
            while (_loc4_ < this.activeQuests.length) {
                param1.writeShort((this.activeQuests[_loc4_]).getTypeId());
                (this.activeQuests[_loc4_]).serialize(param1);
                _loc4_++;
            }
            param1.writeShort(this.reinitDoneQuestsIds.length);
            var _loc5_ = 0;
            while (_loc5_ < this.reinitDoneQuestsIds.length) {
                if (this.reinitDoneQuestsIds[_loc5_] < 0) {
                    throw new Error('Forbidden value (' + this.reinitDoneQuestsIds[_loc5_] + ') on element 4 (starting at 1) of reinitDoneQuestsIds.');
                }
                param1.writeVarShort(this.reinitDoneQuestsIds[_loc5_]);
                _loc5_++;
            }
        };
        QuestListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestListMessage(param1);
        };
        QuestListMessage.prototype.deserializeAs_QuestListMessage = function (param1) {
            var _loc10_ = 0;
            var _loc11_ = 0;
            var _loc12_ = 0;
            var _loc13_ = null;
            var _loc14_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc10_ = param1.readVarUhShort();
                if (_loc10_ < 0) {
                    throw new Error('Forbidden value (' + _loc10_ + ') on elements of finishedQuestsIds.');
                }
                this.finishedQuestsIds.push(_loc10_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc11_ = param1.readVarUhShort();
                if (_loc11_ < 0) {
                    throw new Error('Forbidden value (' + _loc11_ + ') on elements of finishedQuestsCounts.');
                }
                this.finishedQuestsCounts.push(_loc11_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc12_ = param1.readUnsignedShort();
                _loc13_ = ProtocolTypeManager.getInstance(QuestActiveInformations, _loc12_);
                _loc13_.deserialize(param1);
                this.activeQuests.push(_loc13_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc14_ = param1.readVarUhShort();
                if (_loc14_ < 0) {
                    throw new Error('Forbidden value (' + _loc14_ + ') on elements of reinitDoneQuestsIds.');
                }
                this.reinitDoneQuestsIds.push(_loc14_);
                _loc9_++;
            }
        };
        QuestListMessage.ID = 5626;
        return QuestListMessage;
    })(NetworkMessage);
    Protocol.QuestListMessage = QuestListMessage;
    var QuestListRequestMessage = (function (_super) {
        __extends(QuestListRequestMessage, _super);
        function QuestListRequestMessage() {
            _super.call(this);
        }
        QuestListRequestMessage.prototype.getMessageId = function () {
            return QuestListRequestMessage.ID;
        };
        QuestListRequestMessage.prototype.reset = function () {
        };
        QuestListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestListRequestMessage(param1);
        };
        QuestListRequestMessage.prototype.serializeAs_QuestListRequestMessage = function (param1) {
        };
        QuestListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestListRequestMessage(param1);
        };
        QuestListRequestMessage.prototype.deserializeAs_QuestListRequestMessage = function (param1) {
        };
        QuestListRequestMessage.ID = 5623;
        return QuestListRequestMessage;
    })(NetworkMessage);
    Protocol.QuestListRequestMessage = QuestListRequestMessage;
    var QuestObjectiveValidatedMessage = (function (_super) {
        __extends(QuestObjectiveValidatedMessage, _super);
        function QuestObjectiveValidatedMessage() {
            this.questId = 0;
            this.objectiveId = 0;
            _super.call(this);
        }
        QuestObjectiveValidatedMessage.prototype.getMessageId = function () {
            return QuestObjectiveValidatedMessage.ID;
        };
        QuestObjectiveValidatedMessage.prototype.reset = function () {
            this.questId = 0;
            this.objectiveId = 0;
        };
        QuestObjectiveValidatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestObjectiveValidatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestObjectiveValidatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestObjectiveValidatedMessage(param1);
        };
        QuestObjectiveValidatedMessage.prototype.serializeAs_QuestObjectiveValidatedMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element objectiveId.');
            }
            param1.writeVarShort(this.objectiveId);
        };
        QuestObjectiveValidatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestObjectiveValidatedMessage(param1);
        };
        QuestObjectiveValidatedMessage.prototype.deserializeAs_QuestObjectiveValidatedMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestObjectiveValidatedMessage.questId.');
            }
            this.objectiveId = param1.readVarUhShort();
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element of QuestObjectiveValidatedMessage.objectiveId.');
            }
        };
        QuestObjectiveValidatedMessage.ID = 6098;
        return QuestObjectiveValidatedMessage;
    })(NetworkMessage);
    Protocol.QuestObjectiveValidatedMessage = QuestObjectiveValidatedMessage;
    var QuestObjectiveValidationMessage = (function (_super) {
        __extends(QuestObjectiveValidationMessage, _super);
        function QuestObjectiveValidationMessage() {
            this.questId = 0;
            this.objectiveId = 0;
            _super.call(this);
        }
        QuestObjectiveValidationMessage.prototype.getMessageId = function () {
            return QuestObjectiveValidationMessage.ID;
        };
        QuestObjectiveValidationMessage.prototype.reset = function () {
            this.questId = 0;
            this.objectiveId = 0;
        };
        QuestObjectiveValidationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestObjectiveValidationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestObjectiveValidationMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestObjectiveValidationMessage(param1);
        };
        QuestObjectiveValidationMessage.prototype.serializeAs_QuestObjectiveValidationMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element objectiveId.');
            }
            param1.writeVarShort(this.objectiveId);
        };
        QuestObjectiveValidationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestObjectiveValidationMessage(param1);
        };
        QuestObjectiveValidationMessage.prototype.deserializeAs_QuestObjectiveValidationMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestObjectiveValidationMessage.questId.');
            }
            this.objectiveId = param1.readVarUhShort();
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element of QuestObjectiveValidationMessage.objectiveId.');
            }
        };
        QuestObjectiveValidationMessage.ID = 6085;
        return QuestObjectiveValidationMessage;
    })(NetworkMessage);
    Protocol.QuestObjectiveValidationMessage = QuestObjectiveValidationMessage;
    var QuestStartRequestMessage = (function (_super) {
        __extends(QuestStartRequestMessage, _super);
        function QuestStartRequestMessage() {
            this.questId = 0;
            _super.call(this);
        }
        QuestStartRequestMessage.prototype.getMessageId = function () {
            return QuestStartRequestMessage.ID;
        };
        QuestStartRequestMessage.prototype.reset = function () {
            this.questId = 0;
        };
        QuestStartRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStartRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStartRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStartRequestMessage(param1);
        };
        QuestStartRequestMessage.prototype.serializeAs_QuestStartRequestMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
        };
        QuestStartRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStartRequestMessage(param1);
        };
        QuestStartRequestMessage.prototype.deserializeAs_QuestStartRequestMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestStartRequestMessage.questId.');
            }
        };
        QuestStartRequestMessage.ID = 5643;
        return QuestStartRequestMessage;
    })(NetworkMessage);
    Protocol.QuestStartRequestMessage = QuestStartRequestMessage;
    var QuestStartedMessage = (function (_super) {
        __extends(QuestStartedMessage, _super);
        function QuestStartedMessage() {
            this.questId = 0;
            _super.call(this);
        }
        QuestStartedMessage.prototype.getMessageId = function () {
            return QuestStartedMessage.ID;
        };
        QuestStartedMessage.prototype.reset = function () {
            this.questId = 0;
        };
        QuestStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStartedMessage(param1);
        };
        QuestStartedMessage.prototype.serializeAs_QuestStartedMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
        };
        QuestStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStartedMessage(param1);
        };
        QuestStartedMessage.prototype.deserializeAs_QuestStartedMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestStartedMessage.questId.');
            }
        };
        QuestStartedMessage.ID = 6091;
        return QuestStartedMessage;
    })(NetworkMessage);
    Protocol.QuestStartedMessage = QuestStartedMessage;
    var QuestStepInfoMessage = (function (_super) {
        __extends(QuestStepInfoMessage, _super);
        function QuestStepInfoMessage() {
            this.infos = new QuestActiveInformations();
            _super.call(this);
        }
        QuestStepInfoMessage.prototype.getMessageId = function () {
            return QuestStepInfoMessage.ID;
        };
        QuestStepInfoMessage.prototype.reset = function () {
            this.infos = new QuestActiveInformations();
        };
        QuestStepInfoMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStepInfoMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStepInfoMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStepInfoMessage(param1);
        };
        QuestStepInfoMessage.prototype.serializeAs_QuestStepInfoMessage = function (param1) {
            param1.writeShort(this.infos.getTypeId());
            this.infos.serialize(param1);
        };
        QuestStepInfoMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStepInfoMessage(param1);
        };
        QuestStepInfoMessage.prototype.deserializeAs_QuestStepInfoMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.infos = ProtocolTypeManager.getInstance(QuestActiveInformations, _loc2_);
            this.infos.deserialize(param1);
        };
        QuestStepInfoMessage.ID = 5625;
        return QuestStepInfoMessage;
    })(NetworkMessage);
    Protocol.QuestStepInfoMessage = QuestStepInfoMessage;
    var QuestStepInfoRequestMessage = (function (_super) {
        __extends(QuestStepInfoRequestMessage, _super);
        function QuestStepInfoRequestMessage() {
            this.questId = 0;
            _super.call(this);
        }
        QuestStepInfoRequestMessage.prototype.getMessageId = function () {
            return QuestStepInfoRequestMessage.ID;
        };
        QuestStepInfoRequestMessage.prototype.reset = function () {
            this.questId = 0;
        };
        QuestStepInfoRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStepInfoRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStepInfoRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStepInfoRequestMessage(param1);
        };
        QuestStepInfoRequestMessage.prototype.serializeAs_QuestStepInfoRequestMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
        };
        QuestStepInfoRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStepInfoRequestMessage(param1);
        };
        QuestStepInfoRequestMessage.prototype.deserializeAs_QuestStepInfoRequestMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestStepInfoRequestMessage.questId.');
            }
        };
        QuestStepInfoRequestMessage.ID = 5622;
        return QuestStepInfoRequestMessage;
    })(NetworkMessage);
    Protocol.QuestStepInfoRequestMessage = QuestStepInfoRequestMessage;
    var QuestStepStartedMessage = (function (_super) {
        __extends(QuestStepStartedMessage, _super);
        function QuestStepStartedMessage() {
            this.questId = 0;
            this.stepId = 0;
            _super.call(this);
        }
        QuestStepStartedMessage.prototype.getMessageId = function () {
            return QuestStepStartedMessage.ID;
        };
        QuestStepStartedMessage.prototype.reset = function () {
            this.questId = 0;
            this.stepId = 0;
        };
        QuestStepStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStepStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStepStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStepStartedMessage(param1);
        };
        QuestStepStartedMessage.prototype.serializeAs_QuestStepStartedMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element stepId.');
            }
            param1.writeVarShort(this.stepId);
        };
        QuestStepStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStepStartedMessage(param1);
        };
        QuestStepStartedMessage.prototype.deserializeAs_QuestStepStartedMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestStepStartedMessage.questId.');
            }
            this.stepId = param1.readVarUhShort();
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element of QuestStepStartedMessage.stepId.');
            }
        };
        QuestStepStartedMessage.ID = 6096;
        return QuestStepStartedMessage;
    })(NetworkMessage);
    Protocol.QuestStepStartedMessage = QuestStepStartedMessage;
    var QuestStepValidatedMessage = (function (_super) {
        __extends(QuestStepValidatedMessage, _super);
        function QuestStepValidatedMessage() {
            this.questId = 0;
            this.stepId = 0;
            _super.call(this);
        }
        QuestStepValidatedMessage.prototype.getMessageId = function () {
            return QuestStepValidatedMessage.ID;
        };
        QuestStepValidatedMessage.prototype.reset = function () {
            this.questId = 0;
            this.stepId = 0;
        };
        QuestStepValidatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestStepValidatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestStepValidatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestStepValidatedMessage(param1);
        };
        QuestStepValidatedMessage.prototype.serializeAs_QuestStepValidatedMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element stepId.');
            }
            param1.writeVarShort(this.stepId);
        };
        QuestStepValidatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestStepValidatedMessage(param1);
        };
        QuestStepValidatedMessage.prototype.deserializeAs_QuestStepValidatedMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestStepValidatedMessage.questId.');
            }
            this.stepId = param1.readVarUhShort();
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element of QuestStepValidatedMessage.stepId.');
            }
        };
        QuestStepValidatedMessage.ID = 6099;
        return QuestStepValidatedMessage;
    })(NetworkMessage);
    Protocol.QuestStepValidatedMessage = QuestStepValidatedMessage;
    var QuestValidatedMessage = (function (_super) {
        __extends(QuestValidatedMessage, _super);
        function QuestValidatedMessage() {
            this.questId = 0;
            _super.call(this);
        }
        QuestValidatedMessage.prototype.getMessageId = function () {
            return QuestValidatedMessage.ID;
        };
        QuestValidatedMessage.prototype.reset = function () {
            this.questId = 0;
        };
        QuestValidatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QuestValidatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QuestValidatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_QuestValidatedMessage(param1);
        };
        QuestValidatedMessage.prototype.serializeAs_QuestValidatedMessage = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
        };
        QuestValidatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestValidatedMessage(param1);
        };
        QuestValidatedMessage.prototype.deserializeAs_QuestValidatedMessage = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestValidatedMessage.questId.');
            }
        };
        QuestValidatedMessage.ID = 6097;
        return QuestValidatedMessage;
    })(NetworkMessage);
    Protocol.QuestValidatedMessage = QuestValidatedMessage;
    var SpellForgetUIMessage = (function (_super) {
        __extends(SpellForgetUIMessage, _super);
        function SpellForgetUIMessage() {
            this.open = false;
            _super.call(this);
        }
        SpellForgetUIMessage.prototype.getMessageId = function () {
            return SpellForgetUIMessage.ID;
        };
        SpellForgetUIMessage.prototype.reset = function () {
            this.open = false;
        };
        SpellForgetUIMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellForgetUIMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellForgetUIMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellForgetUIMessage(param1);
        };
        SpellForgetUIMessage.prototype.serializeAs_SpellForgetUIMessage = function (param1) {
            param1.writeBoolean(this.open);
        };
        SpellForgetUIMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellForgetUIMessage(param1);
        };
        SpellForgetUIMessage.prototype.deserializeAs_SpellForgetUIMessage = function (param1) {
            this.open = param1.readBoolean();
        };
        SpellForgetUIMessage.ID = 5565;
        return SpellForgetUIMessage;
    })(NetworkMessage);
    Protocol.SpellForgetUIMessage = SpellForgetUIMessage;
    var SpellForgottenMessage = (function (_super) {
        __extends(SpellForgottenMessage, _super);
        function SpellForgottenMessage() {
            this.spellsId = [];
            this.boostPoint = 0;
            _super.call(this);
        }
        SpellForgottenMessage.prototype.getMessageId = function () {
            return SpellForgottenMessage.ID;
        };
        SpellForgottenMessage.prototype.reset = function () {
            this.spellsId = [];
            this.boostPoint = 0;
        };
        SpellForgottenMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellForgottenMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellForgottenMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellForgottenMessage(param1);
        };
        SpellForgottenMessage.prototype.serializeAs_SpellForgottenMessage = function (param1) {
            param1.writeShort(this.spellsId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spellsId.length) {
                if (this.spellsId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.spellsId[_loc2_] + ') on element 1 (starting at 1) of spellsId.');
                }
                param1.writeVarShort(this.spellsId[_loc2_]);
                _loc2_++;
            }
            if (this.boostPoint < 0) {
                throw new Error('Forbidden value (' + this.boostPoint + ') on element boostPoint.');
            }
            param1.writeVarShort(this.boostPoint);
        };
        SpellForgottenMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellForgottenMessage(param1);
        };
        SpellForgottenMessage.prototype.deserializeAs_SpellForgottenMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of spellsId.');
                }
                this.spellsId.push(_loc4_);
                _loc3_++;
            }
            this.boostPoint = param1.readVarUhShort();
            if (this.boostPoint < 0) {
                throw new Error('Forbidden value (' + this.boostPoint + ') on element of SpellForgottenMessage.boostPoint.');
            }
        };
        SpellForgottenMessage.ID = 5834;
        return SpellForgottenMessage;
    })(NetworkMessage);
    Protocol.SpellForgottenMessage = SpellForgottenMessage;
    var SpellItemBoostMessage = (function (_super) {
        __extends(SpellItemBoostMessage, _super);
        function SpellItemBoostMessage() {
            this.statId = 0;
            this.spellId = 0;
            this.value = 0;
            _super.call(this);
        }
        SpellItemBoostMessage.prototype.getMessageId = function () {
            return SpellItemBoostMessage.ID;
        };
        SpellItemBoostMessage.prototype.reset = function () {
            this.statId = 0;
            this.spellId = 0;
            this.value = 0;
        };
        SpellItemBoostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellItemBoostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellItemBoostMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellItemBoostMessage(param1);
        };
        SpellItemBoostMessage.prototype.serializeAs_SpellItemBoostMessage = function (param1) {
            if (this.statId < 0) {
                throw new Error('Forbidden value (' + this.statId + ') on element statId.');
            }
            param1.writeVarInt(this.statId);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            param1.writeVarShort(this.value);
        };
        SpellItemBoostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellItemBoostMessage(param1);
        };
        SpellItemBoostMessage.prototype.deserializeAs_SpellItemBoostMessage = function (param1) {
            this.statId = param1.readVarUhInt();
            if (this.statId < 0) {
                throw new Error('Forbidden value (' + this.statId + ') on element of SpellItemBoostMessage.statId.');
            }
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of SpellItemBoostMessage.spellId.');
            }
            this.value = param1.readVarShort();
        };
        SpellItemBoostMessage.ID = 6011;
        return SpellItemBoostMessage;
    })(NetworkMessage);
    Protocol.SpellItemBoostMessage = SpellItemBoostMessage;
    var SpellUpgradeFailureMessage = (function (_super) {
        __extends(SpellUpgradeFailureMessage, _super);
        function SpellUpgradeFailureMessage() {
            _super.call(this);
        }
        SpellUpgradeFailureMessage.prototype.getMessageId = function () {
            return SpellUpgradeFailureMessage.ID;
        };
        SpellUpgradeFailureMessage.prototype.reset = function () {
        };
        SpellUpgradeFailureMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellUpgradeFailureMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellUpgradeFailureMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellUpgradeFailureMessage(param1);
        };
        SpellUpgradeFailureMessage.prototype.serializeAs_SpellUpgradeFailureMessage = function (param1) {
        };
        SpellUpgradeFailureMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellUpgradeFailureMessage(param1);
        };
        SpellUpgradeFailureMessage.prototype.deserializeAs_SpellUpgradeFailureMessage = function (param1) {
        };
        SpellUpgradeFailureMessage.ID = 1202;
        return SpellUpgradeFailureMessage;
    })(NetworkMessage);
    Protocol.SpellUpgradeFailureMessage = SpellUpgradeFailureMessage;
    var SpellUpgradeRequestMessage = (function (_super) {
        __extends(SpellUpgradeRequestMessage, _super);
        function SpellUpgradeRequestMessage() {
            this.spellId = 0;
            this.spellLevel = 0;
            _super.call(this);
        }
        SpellUpgradeRequestMessage.prototype.getMessageId = function () {
            return SpellUpgradeRequestMessage.ID;
        };
        SpellUpgradeRequestMessage.prototype.reset = function () {
            this.spellId = 0;
            this.spellLevel = 0;
        };
        SpellUpgradeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellUpgradeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellUpgradeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellUpgradeRequestMessage(param1);
        };
        SpellUpgradeRequestMessage.prototype.serializeAs_SpellUpgradeRequestMessage = function (param1) {
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element spellLevel.');
            }
            param1.writeByte(this.spellLevel);
        };
        SpellUpgradeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellUpgradeRequestMessage(param1);
        };
        SpellUpgradeRequestMessage.prototype.deserializeAs_SpellUpgradeRequestMessage = function (param1) {
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of SpellUpgradeRequestMessage.spellId.');
            }
            this.spellLevel = param1.readByte();
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element of SpellUpgradeRequestMessage.spellLevel.');
            }
        };
        SpellUpgradeRequestMessage.ID = 5608;
        return SpellUpgradeRequestMessage;
    })(NetworkMessage);
    Protocol.SpellUpgradeRequestMessage = SpellUpgradeRequestMessage;
    var SpellUpgradeSuccessMessage = (function (_super) {
        __extends(SpellUpgradeSuccessMessage, _super);
        function SpellUpgradeSuccessMessage() {
            this.spellId = 0;
            this.spellLevel = 0;
            _super.call(this);
        }
        SpellUpgradeSuccessMessage.prototype.getMessageId = function () {
            return SpellUpgradeSuccessMessage.ID;
        };
        SpellUpgradeSuccessMessage.prototype.reset = function () {
            this.spellId = 0;
            this.spellLevel = 0;
        };
        SpellUpgradeSuccessMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellUpgradeSuccessMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellUpgradeSuccessMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellUpgradeSuccessMessage(param1);
        };
        SpellUpgradeSuccessMessage.prototype.serializeAs_SpellUpgradeSuccessMessage = function (param1) {
            param1.writeInt(this.spellId);
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element spellLevel.');
            }
            param1.writeByte(this.spellLevel);
        };
        SpellUpgradeSuccessMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellUpgradeSuccessMessage(param1);
        };
        SpellUpgradeSuccessMessage.prototype.deserializeAs_SpellUpgradeSuccessMessage = function (param1) {
            this.spellId = param1.readInt();
            this.spellLevel = param1.readByte();
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element of SpellUpgradeSuccessMessage.spellLevel.');
            }
        };
        SpellUpgradeSuccessMessage.ID = 1201;
        return SpellUpgradeSuccessMessage;
    })(NetworkMessage);
    Protocol.SpellUpgradeSuccessMessage = SpellUpgradeSuccessMessage;
    var ValidateSpellForgetMessage = (function (_super) {
        __extends(ValidateSpellForgetMessage, _super);
        function ValidateSpellForgetMessage() {
            this.spellId = 0;
            _super.call(this);
        }
        ValidateSpellForgetMessage.prototype.getMessageId = function () {
            return ValidateSpellForgetMessage.ID;
        };
        ValidateSpellForgetMessage.prototype.reset = function () {
            this.spellId = 0;
        };
        ValidateSpellForgetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ValidateSpellForgetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ValidateSpellForgetMessage.prototype.serialize = function (param1) {
            this.serializeAs_ValidateSpellForgetMessage(param1);
        };
        ValidateSpellForgetMessage.prototype.serializeAs_ValidateSpellForgetMessage = function (param1) {
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
        };
        ValidateSpellForgetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ValidateSpellForgetMessage(param1);
        };
        ValidateSpellForgetMessage.prototype.deserializeAs_ValidateSpellForgetMessage = function (param1) {
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of ValidateSpellForgetMessage.spellId.');
            }
        };
        ValidateSpellForgetMessage.ID = 1700;
        return ValidateSpellForgetMessage;
    })(NetworkMessage);
    Protocol.ValidateSpellForgetMessage = ValidateSpellForgetMessage;
    var StatsUpgradeRequestMessage = (function (_super) {
        __extends(StatsUpgradeRequestMessage, _super);
        function StatsUpgradeRequestMessage() {
            this.useAdditionnal = false;
            this.statId = 11;
            this.boostPoint = 0;
            _super.call(this);
        }
        StatsUpgradeRequestMessage.prototype.getMessageId = function () {
            return StatsUpgradeRequestMessage.ID;
        };
        StatsUpgradeRequestMessage.prototype.reset = function () {
            this.useAdditionnal = false;
            this.statId = 11;
            this.boostPoint = 0;
        };
        StatsUpgradeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StatsUpgradeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StatsUpgradeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_StatsUpgradeRequestMessage(param1);
        };
        StatsUpgradeRequestMessage.prototype.serializeAs_StatsUpgradeRequestMessage = function (param1) {
            param1.writeBoolean(this.useAdditionnal);
            param1.writeByte(this.statId);
            if (this.boostPoint < 0) {
                throw new Error('Forbidden value (' + this.boostPoint + ') on element boostPoint.');
            }
            param1.writeVarShort(this.boostPoint);
        };
        StatsUpgradeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StatsUpgradeRequestMessage(param1);
        };
        StatsUpgradeRequestMessage.prototype.deserializeAs_StatsUpgradeRequestMessage = function (param1) {
            this.useAdditionnal = param1.readBoolean();
            this.statId = param1.readByte();
            if (this.statId < 0) {
                throw new Error('Forbidden value (' + this.statId + ') on element of StatsUpgradeRequestMessage.statId.');
            }
            this.boostPoint = param1.readVarUhShort();
            if (this.boostPoint < 0) {
                throw new Error('Forbidden value (' + this.boostPoint + ') on element of StatsUpgradeRequestMessage.boostPoint.');
            }
        };
        StatsUpgradeRequestMessage.ID = 5610;
        return StatsUpgradeRequestMessage;
    })(NetworkMessage);
    Protocol.StatsUpgradeRequestMessage = StatsUpgradeRequestMessage;
    var StatsUpgradeResultMessage = (function (_super) {
        __extends(StatsUpgradeResultMessage, _super);
        function StatsUpgradeResultMessage() {
            this.result = 0;
            this.nbCharacBoost = 0;
            _super.call(this);
        }
        StatsUpgradeResultMessage.prototype.getMessageId = function () {
            return StatsUpgradeResultMessage.ID;
        };
        StatsUpgradeResultMessage.prototype.reset = function () {
            this.result = 0;
            this.nbCharacBoost = 0;
        };
        StatsUpgradeResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StatsUpgradeResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StatsUpgradeResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_StatsUpgradeResultMessage(param1);
        };
        StatsUpgradeResultMessage.prototype.serializeAs_StatsUpgradeResultMessage = function (param1) {
            param1.writeByte(this.result);
            if (this.nbCharacBoost < 0) {
                throw new Error('Forbidden value (' + this.nbCharacBoost + ') on element nbCharacBoost.');
            }
            param1.writeVarShort(this.nbCharacBoost);
        };
        StatsUpgradeResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StatsUpgradeResultMessage(param1);
        };
        StatsUpgradeResultMessage.prototype.deserializeAs_StatsUpgradeResultMessage = function (param1) {
            this.result = param1.readByte();
            this.nbCharacBoost = param1.readVarUhShort();
            if (this.nbCharacBoost < 0) {
                throw new Error('Forbidden value (' + this.nbCharacBoost + ') on element of StatsUpgradeResultMessage.nbCharacBoost.');
            }
        };
        StatsUpgradeResultMessage.ID = 5609;
        return StatsUpgradeResultMessage;
    })(NetworkMessage);
    Protocol.StatsUpgradeResultMessage = StatsUpgradeResultMessage;
    var PortalUseRequestMessage = (function (_super) {
        __extends(PortalUseRequestMessage, _super);
        function PortalUseRequestMessage() {
            this.portalId = 0;
            _super.call(this);
        }
        PortalUseRequestMessage.prototype.getMessageId = function () {
            return PortalUseRequestMessage.ID;
        };
        PortalUseRequestMessage.prototype.reset = function () {
            this.portalId = 0;
        };
        PortalUseRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PortalUseRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PortalUseRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PortalUseRequestMessage(param1);
        };
        PortalUseRequestMessage.prototype.serializeAs_PortalUseRequestMessage = function (param1) {
            if (this.portalId < 0) {
                throw new Error('Forbidden value (' + this.portalId + ') on element portalId.');
            }
            param1.writeVarInt(this.portalId);
        };
        PortalUseRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PortalUseRequestMessage(param1);
        };
        PortalUseRequestMessage.prototype.deserializeAs_PortalUseRequestMessage = function (param1) {
            this.portalId = param1.readVarUhInt();
            if (this.portalId < 0) {
                throw new Error('Forbidden value (' + this.portalId + ') on element of PortalUseRequestMessage.portalId.');
            }
        };
        PortalUseRequestMessage.ID = 6492;
        return PortalUseRequestMessage;
    })(NetworkMessage);
    Protocol.PortalUseRequestMessage = PortalUseRequestMessage;
    var TreasureHuntAvailableRetryCountUpdateMessage = (function (_super) {
        __extends(TreasureHuntAvailableRetryCountUpdateMessage, _super);
        function TreasureHuntAvailableRetryCountUpdateMessage() {
            this.questType = 0;
            this.availableRetryCount = 0;
            _super.call(this);
        }
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.getMessageId = function () {
            return TreasureHuntAvailableRetryCountUpdateMessage.ID;
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.reset = function () {
            this.questType = 0;
            this.availableRetryCount = 0;
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntAvailableRetryCountUpdateMessage(param1);
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.serializeAs_TreasureHuntAvailableRetryCountUpdateMessage = function (param1) {
            param1.writeByte(this.questType);
            param1.writeInt(this.availableRetryCount);
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntAvailableRetryCountUpdateMessage(param1);
        };
        TreasureHuntAvailableRetryCountUpdateMessage.prototype.deserializeAs_TreasureHuntAvailableRetryCountUpdateMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntAvailableRetryCountUpdateMessage.questType.');
            }
            this.availableRetryCount = param1.readInt();
        };
        TreasureHuntAvailableRetryCountUpdateMessage.ID = 6491;
        return TreasureHuntAvailableRetryCountUpdateMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntAvailableRetryCountUpdateMessage = TreasureHuntAvailableRetryCountUpdateMessage;
    var TreasureHuntDigRequestAnswerFailedMessage = (function (_super) {
        __extends(TreasureHuntDigRequestAnswerFailedMessage, _super);
        function TreasureHuntDigRequestAnswerFailedMessage() {
            this.wrongFlagCount = 0;
            _super.call(this);
        }
        TreasureHuntDigRequestAnswerFailedMessage.prototype.getMessageId = function () {
            return TreasureHuntDigRequestAnswerFailedMessage.ID;
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.reset = function () {
            this.wrongFlagCount = 0;
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntDigRequestAnswerFailedMessage(param1);
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.serializeAs_TreasureHuntDigRequestAnswerFailedMessage = function (param1) {
            _super.prototype.serializeAs_TreasureHuntDigRequestAnswerMessage.call(this, param1);
            if (this.wrongFlagCount < 0) {
                throw new Error('Forbidden value (' + this.wrongFlagCount + ') on element wrongFlagCount.');
            }
            param1.writeByte(this.wrongFlagCount);
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntDigRequestAnswerFailedMessage(param1);
        };
        TreasureHuntDigRequestAnswerFailedMessage.prototype.deserializeAs_TreasureHuntDigRequestAnswerFailedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.wrongFlagCount = param1.readByte();
            if (this.wrongFlagCount < 0) {
                throw new Error('Forbidden value (' + this.wrongFlagCount + ') on element of TreasureHuntDigRequestAnswerFailedMessage.wrongFlagCount.');
            }
        };
        TreasureHuntDigRequestAnswerFailedMessage.ID = 6509;
        return TreasureHuntDigRequestAnswerFailedMessage;
    })(TreasureHuntDigRequestAnswerMessage);
    Protocol.TreasureHuntDigRequestAnswerFailedMessage = TreasureHuntDigRequestAnswerFailedMessage;
    var TreasureHuntDigRequestAnswerMessage = (function (_super) {
        __extends(TreasureHuntDigRequestAnswerMessage, _super);
        function TreasureHuntDigRequestAnswerMessage() {
            this.questType = 0;
            this.result = 0;
            _super.call(this);
        }
        TreasureHuntDigRequestAnswerMessage.prototype.getMessageId = function () {
            return TreasureHuntDigRequestAnswerMessage.ID;
        };
        TreasureHuntDigRequestAnswerMessage.prototype.reset = function () {
            this.questType = 0;
            this.result = 0;
        };
        TreasureHuntDigRequestAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntDigRequestAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntDigRequestAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntDigRequestAnswerMessage(param1);
        };
        TreasureHuntDigRequestAnswerMessage.prototype.serializeAs_TreasureHuntDigRequestAnswerMessage = function (param1) {
            param1.writeByte(this.questType);
            param1.writeByte(this.result);
        };
        TreasureHuntDigRequestAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntDigRequestAnswerMessage(param1);
        };
        TreasureHuntDigRequestAnswerMessage.prototype.deserializeAs_TreasureHuntDigRequestAnswerMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntDigRequestAnswerMessage.questType.');
            }
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of TreasureHuntDigRequestAnswerMessage.result.');
            }
        };
        TreasureHuntDigRequestAnswerMessage.ID = 6484;
        return TreasureHuntDigRequestAnswerMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntDigRequestAnswerMessage = TreasureHuntDigRequestAnswerMessage;
    var TreasureHuntDigRequestMessage = (function (_super) {
        __extends(TreasureHuntDigRequestMessage, _super);
        function TreasureHuntDigRequestMessage() {
            this.questType = 0;
            _super.call(this);
        }
        TreasureHuntDigRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntDigRequestMessage.ID;
        };
        TreasureHuntDigRequestMessage.prototype.reset = function () {
            this.questType = 0;
        };
        TreasureHuntDigRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntDigRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntDigRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntDigRequestMessage(param1);
        };
        TreasureHuntDigRequestMessage.prototype.serializeAs_TreasureHuntDigRequestMessage = function (param1) {
            param1.writeByte(this.questType);
        };
        TreasureHuntDigRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntDigRequestMessage(param1);
        };
        TreasureHuntDigRequestMessage.prototype.deserializeAs_TreasureHuntDigRequestMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntDigRequestMessage.questType.');
            }
        };
        TreasureHuntDigRequestMessage.ID = 6485;
        return TreasureHuntDigRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntDigRequestMessage = TreasureHuntDigRequestMessage;
    var TreasureHuntFinishedMessage = (function (_super) {
        __extends(TreasureHuntFinishedMessage, _super);
        function TreasureHuntFinishedMessage() {
            this.questType = 0;
            _super.call(this);
        }
        TreasureHuntFinishedMessage.prototype.getMessageId = function () {
            return TreasureHuntFinishedMessage.ID;
        };
        TreasureHuntFinishedMessage.prototype.reset = function () {
            this.questType = 0;
        };
        TreasureHuntFinishedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntFinishedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntFinishedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntFinishedMessage(param1);
        };
        TreasureHuntFinishedMessage.prototype.serializeAs_TreasureHuntFinishedMessage = function (param1) {
            param1.writeByte(this.questType);
        };
        TreasureHuntFinishedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntFinishedMessage(param1);
        };
        TreasureHuntFinishedMessage.prototype.deserializeAs_TreasureHuntFinishedMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntFinishedMessage.questType.');
            }
        };
        TreasureHuntFinishedMessage.ID = 6483;
        return TreasureHuntFinishedMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntFinishedMessage = TreasureHuntFinishedMessage;
    var TreasureHuntFlagRemoveRequestMessage = (function (_super) {
        __extends(TreasureHuntFlagRemoveRequestMessage, _super);
        function TreasureHuntFlagRemoveRequestMessage() {
            this.questType = 0;
            this.index = 0;
            _super.call(this);
        }
        TreasureHuntFlagRemoveRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntFlagRemoveRequestMessage.ID;
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.reset = function () {
            this.questType = 0;
            this.index = 0;
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntFlagRemoveRequestMessage(param1);
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.serializeAs_TreasureHuntFlagRemoveRequestMessage = function (param1) {
            param1.writeByte(this.questType);
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element index.');
            }
            param1.writeByte(this.index);
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntFlagRemoveRequestMessage(param1);
        };
        TreasureHuntFlagRemoveRequestMessage.prototype.deserializeAs_TreasureHuntFlagRemoveRequestMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntFlagRemoveRequestMessage.questType.');
            }
            this.index = param1.readByte();
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element of TreasureHuntFlagRemoveRequestMessage.index.');
            }
        };
        TreasureHuntFlagRemoveRequestMessage.ID = 6510;
        return TreasureHuntFlagRemoveRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntFlagRemoveRequestMessage = TreasureHuntFlagRemoveRequestMessage;
    var TreasureHuntFlagRequestAnswerMessage = (function (_super) {
        __extends(TreasureHuntFlagRequestAnswerMessage, _super);
        function TreasureHuntFlagRequestAnswerMessage() {
            this.questType = 0;
            this.result = 0;
            this.index = 0;
            _super.call(this);
        }
        TreasureHuntFlagRequestAnswerMessage.prototype.getMessageId = function () {
            return TreasureHuntFlagRequestAnswerMessage.ID;
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.reset = function () {
            this.questType = 0;
            this.result = 0;
            this.index = 0;
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntFlagRequestAnswerMessage(param1);
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.serializeAs_TreasureHuntFlagRequestAnswerMessage = function (param1) {
            param1.writeByte(this.questType);
            param1.writeByte(this.result);
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element index.');
            }
            param1.writeByte(this.index);
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntFlagRequestAnswerMessage(param1);
        };
        TreasureHuntFlagRequestAnswerMessage.prototype.deserializeAs_TreasureHuntFlagRequestAnswerMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntFlagRequestAnswerMessage.questType.');
            }
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of TreasureHuntFlagRequestAnswerMessage.result.');
            }
            this.index = param1.readByte();
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element of TreasureHuntFlagRequestAnswerMessage.index.');
            }
        };
        TreasureHuntFlagRequestAnswerMessage.ID = 6507;
        return TreasureHuntFlagRequestAnswerMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntFlagRequestAnswerMessage = TreasureHuntFlagRequestAnswerMessage;
    var TreasureHuntFlagRequestMessage = (function (_super) {
        __extends(TreasureHuntFlagRequestMessage, _super);
        function TreasureHuntFlagRequestMessage() {
            this.questType = 0;
            this.index = 0;
            _super.call(this);
        }
        TreasureHuntFlagRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntFlagRequestMessage.ID;
        };
        TreasureHuntFlagRequestMessage.prototype.reset = function () {
            this.questType = 0;
            this.index = 0;
        };
        TreasureHuntFlagRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntFlagRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntFlagRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntFlagRequestMessage(param1);
        };
        TreasureHuntFlagRequestMessage.prototype.serializeAs_TreasureHuntFlagRequestMessage = function (param1) {
            param1.writeByte(this.questType);
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element index.');
            }
            param1.writeByte(this.index);
        };
        TreasureHuntFlagRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntFlagRequestMessage(param1);
        };
        TreasureHuntFlagRequestMessage.prototype.deserializeAs_TreasureHuntFlagRequestMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntFlagRequestMessage.questType.');
            }
            this.index = param1.readByte();
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element of TreasureHuntFlagRequestMessage.index.');
            }
        };
        TreasureHuntFlagRequestMessage.ID = 6508;
        return TreasureHuntFlagRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntFlagRequestMessage = TreasureHuntFlagRequestMessage;
    var TreasureHuntGiveUpRequestMessage = (function (_super) {
        __extends(TreasureHuntGiveUpRequestMessage, _super);
        function TreasureHuntGiveUpRequestMessage() {
            this.questType = 0;
            _super.call(this);
        }
        TreasureHuntGiveUpRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntGiveUpRequestMessage.ID;
        };
        TreasureHuntGiveUpRequestMessage.prototype.reset = function () {
            this.questType = 0;
        };
        TreasureHuntGiveUpRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntGiveUpRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntGiveUpRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntGiveUpRequestMessage(param1);
        };
        TreasureHuntGiveUpRequestMessage.prototype.serializeAs_TreasureHuntGiveUpRequestMessage = function (param1) {
            param1.writeByte(this.questType);
        };
        TreasureHuntGiveUpRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntGiveUpRequestMessage(param1);
        };
        TreasureHuntGiveUpRequestMessage.prototype.deserializeAs_TreasureHuntGiveUpRequestMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntGiveUpRequestMessage.questType.');
            }
        };
        TreasureHuntGiveUpRequestMessage.ID = 6487;
        return TreasureHuntGiveUpRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntGiveUpRequestMessage = TreasureHuntGiveUpRequestMessage;
    var TreasureHuntLegendaryRequestMessage = (function (_super) {
        __extends(TreasureHuntLegendaryRequestMessage, _super);
        function TreasureHuntLegendaryRequestMessage() {
            this.legendaryId = 0;
            _super.call(this);
        }
        TreasureHuntLegendaryRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntLegendaryRequestMessage.ID;
        };
        TreasureHuntLegendaryRequestMessage.prototype.reset = function () {
            this.legendaryId = 0;
        };
        TreasureHuntLegendaryRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntLegendaryRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntLegendaryRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntLegendaryRequestMessage(param1);
        };
        TreasureHuntLegendaryRequestMessage.prototype.serializeAs_TreasureHuntLegendaryRequestMessage = function (param1) {
            if (this.legendaryId < 0) {
                throw new Error('Forbidden value (' + this.legendaryId + ') on element legendaryId.');
            }
            param1.writeVarShort(this.legendaryId);
        };
        TreasureHuntLegendaryRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntLegendaryRequestMessage(param1);
        };
        TreasureHuntLegendaryRequestMessage.prototype.deserializeAs_TreasureHuntLegendaryRequestMessage = function (param1) {
            this.legendaryId = param1.readVarUhShort();
            if (this.legendaryId < 0) {
                throw new Error('Forbidden value (' + this.legendaryId + ') on element of TreasureHuntLegendaryRequestMessage.legendaryId.');
            }
        };
        TreasureHuntLegendaryRequestMessage.ID = 6499;
        return TreasureHuntLegendaryRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntLegendaryRequestMessage = TreasureHuntLegendaryRequestMessage;
    var TreasureHuntMessage = (function (_super) {
        __extends(TreasureHuntMessage, _super);
        function TreasureHuntMessage() {
            this.questType = 0;
            this.startMapId = 0;
            this.knownStepsList = [];
            this.totalStepCount = 0;
            this.checkPointCurrent = 0;
            this.checkPointTotal = 0;
            this.availableRetryCount = 0;
            this.flags = [];
            _super.call(this);
        }
        TreasureHuntMessage.prototype.getMessageId = function () {
            return TreasureHuntMessage.ID;
        };
        TreasureHuntMessage.prototype.reset = function () {
            this.questType = 0;
            this.startMapId = 0;
            this.knownStepsList = [];
            this.totalStepCount = 0;
            this.checkPointCurrent = 0;
            this.checkPointTotal = 0;
            this.availableRetryCount = 0;
            this.flags = [];
        };
        TreasureHuntMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntMessage(param1);
        };
        TreasureHuntMessage.prototype.serializeAs_TreasureHuntMessage = function (param1) {
            param1.writeByte(this.questType);
            param1.writeInt(this.startMapId);
            param1.writeShort(this.knownStepsList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.knownStepsList.length) {
                param1.writeShort((this.knownStepsList[_loc2_]).getTypeId());
                (this.knownStepsList[_loc2_]).serialize(param1);
                _loc2_++;
            }
            if (this.totalStepCount < 0) {
                throw new Error('Forbidden value (' + this.totalStepCount + ') on element totalStepCount.');
            }
            param1.writeByte(this.totalStepCount);
            if (this.checkPointCurrent < 0) {
                throw new Error('Forbidden value (' + this.checkPointCurrent + ') on element checkPointCurrent.');
            }
            param1.writeVarInt(this.checkPointCurrent);
            if (this.checkPointTotal < 0) {
                throw new Error('Forbidden value (' + this.checkPointTotal + ') on element checkPointTotal.');
            }
            param1.writeVarInt(this.checkPointTotal);
            param1.writeInt(this.availableRetryCount);
            param1.writeShort(this.flags.length);
            var _loc3_ = 0;
            while (_loc3_ < this.flags.length) {
                (this.flags[_loc3_]).serializeAs_TreasureHuntFlag(param1);
                _loc3_++;
            }
        };
        TreasureHuntMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntMessage(param1);
        };
        TreasureHuntMessage.prototype.deserializeAs_TreasureHuntMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = null;
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntMessage.questType.');
            }
            this.startMapId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(TreasureHuntStep, _loc6_);
                _loc7_.deserialize(param1);
                this.knownStepsList.push(_loc7_);
                _loc3_++;
            }
            this.totalStepCount = param1.readByte();
            if (this.totalStepCount < 0) {
                throw new Error('Forbidden value (' + this.totalStepCount + ') on element of TreasureHuntMessage.totalStepCount.');
            }
            this.checkPointCurrent = param1.readVarUhInt();
            if (this.checkPointCurrent < 0) {
                throw new Error('Forbidden value (' + this.checkPointCurrent + ') on element of TreasureHuntMessage.checkPointCurrent.');
            }
            this.checkPointTotal = param1.readVarUhInt();
            if (this.checkPointTotal < 0) {
                throw new Error('Forbidden value (' + this.checkPointTotal + ') on element of TreasureHuntMessage.checkPointTotal.');
            }
            this.availableRetryCount = param1.readInt();
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = new TreasureHuntFlag();
                _loc8_.deserialize(param1);
                this.flags.push(_loc8_);
                _loc5_++;
            }
        };
        TreasureHuntMessage.ID = 6486;
        return TreasureHuntMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntMessage = TreasureHuntMessage;
    var TreasureHuntRequestAnswerMessage = (function (_super) {
        __extends(TreasureHuntRequestAnswerMessage, _super);
        function TreasureHuntRequestAnswerMessage() {
            this.questType = 0;
            this.result = 0;
            _super.call(this);
        }
        TreasureHuntRequestAnswerMessage.prototype.getMessageId = function () {
            return TreasureHuntRequestAnswerMessage.ID;
        };
        TreasureHuntRequestAnswerMessage.prototype.reset = function () {
            this.questType = 0;
            this.result = 0;
        };
        TreasureHuntRequestAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntRequestAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntRequestAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntRequestAnswerMessage(param1);
        };
        TreasureHuntRequestAnswerMessage.prototype.serializeAs_TreasureHuntRequestAnswerMessage = function (param1) {
            param1.writeByte(this.questType);
            param1.writeByte(this.result);
        };
        TreasureHuntRequestAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntRequestAnswerMessage(param1);
        };
        TreasureHuntRequestAnswerMessage.prototype.deserializeAs_TreasureHuntRequestAnswerMessage = function (param1) {
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntRequestAnswerMessage.questType.');
            }
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of TreasureHuntRequestAnswerMessage.result.');
            }
        };
        TreasureHuntRequestAnswerMessage.ID = 6489;
        return TreasureHuntRequestAnswerMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntRequestAnswerMessage = TreasureHuntRequestAnswerMessage;
    var TreasureHuntRequestMessage = (function (_super) {
        __extends(TreasureHuntRequestMessage, _super);
        function TreasureHuntRequestMessage() {
            this.questLevel = 0;
            this.questType = 0;
            _super.call(this);
        }
        TreasureHuntRequestMessage.prototype.getMessageId = function () {
            return TreasureHuntRequestMessage.ID;
        };
        TreasureHuntRequestMessage.prototype.reset = function () {
            this.questLevel = 0;
            this.questType = 0;
        };
        TreasureHuntRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntRequestMessage(param1);
        };
        TreasureHuntRequestMessage.prototype.serializeAs_TreasureHuntRequestMessage = function (param1) {
            if (this.questLevel < 1 || this.questLevel > 200) {
                throw new Error('Forbidden value (' + this.questLevel + ') on element questLevel.');
            }
            param1.writeByte(this.questLevel);
            param1.writeByte(this.questType);
        };
        TreasureHuntRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntRequestMessage(param1);
        };
        TreasureHuntRequestMessage.prototype.deserializeAs_TreasureHuntRequestMessage = function (param1) {
            this.questLevel = param1.readUnsignedByte();
            if (this.questLevel < 1 || this.questLevel > 200) {
                throw new Error('Forbidden value (' + this.questLevel + ') on element of TreasureHuntRequestMessage.questLevel.');
            }
            this.questType = param1.readByte();
            if (this.questType < 0) {
                throw new Error('Forbidden value (' + this.questType + ') on element of TreasureHuntRequestMessage.questType.');
            }
        };
        TreasureHuntRequestMessage.ID = 6488;
        return TreasureHuntRequestMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntRequestMessage = TreasureHuntRequestMessage;
    var TreasureHuntShowLegendaryUIMessage = (function (_super) {
        __extends(TreasureHuntShowLegendaryUIMessage, _super);
        function TreasureHuntShowLegendaryUIMessage() {
            this.availableLegendaryIds = [];
            _super.call(this);
        }
        TreasureHuntShowLegendaryUIMessage.prototype.getMessageId = function () {
            return TreasureHuntShowLegendaryUIMessage.ID;
        };
        TreasureHuntShowLegendaryUIMessage.prototype.reset = function () {
            this.availableLegendaryIds = [];
        };
        TreasureHuntShowLegendaryUIMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TreasureHuntShowLegendaryUIMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TreasureHuntShowLegendaryUIMessage.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntShowLegendaryUIMessage(param1);
        };
        TreasureHuntShowLegendaryUIMessage.prototype.serializeAs_TreasureHuntShowLegendaryUIMessage = function (param1) {
            param1.writeShort(this.availableLegendaryIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.availableLegendaryIds.length) {
                if (this.availableLegendaryIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.availableLegendaryIds[_loc2_] + ') on element 1 (starting at 1) of availableLegendaryIds.');
                }
                param1.writeVarShort(this.availableLegendaryIds[_loc2_]);
                _loc2_++;
            }
        };
        TreasureHuntShowLegendaryUIMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntShowLegendaryUIMessage(param1);
        };
        TreasureHuntShowLegendaryUIMessage.prototype.deserializeAs_TreasureHuntShowLegendaryUIMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of availableLegendaryIds.');
                }
                this.availableLegendaryIds.push(_loc4_);
                _loc3_++;
            }
        };
        TreasureHuntShowLegendaryUIMessage.ID = 6498;
        return TreasureHuntShowLegendaryUIMessage;
    })(NetworkMessage);
    Protocol.TreasureHuntShowLegendaryUIMessage = TreasureHuntShowLegendaryUIMessage;
    var GameRolePlaySpellAnimMessage = (function (_super) {
        __extends(GameRolePlaySpellAnimMessage, _super);
        function GameRolePlaySpellAnimMessage() {
            this.casterId = 0;
            this.targetCellId = 0;
            this.spellId = 0;
            this.spellLevel = 0;
            _super.call(this);
        }
        GameRolePlaySpellAnimMessage.prototype.getMessageId = function () {
            return GameRolePlaySpellAnimMessage.ID;
        };
        GameRolePlaySpellAnimMessage.prototype.reset = function () {
            this.casterId = 0;
            this.targetCellId = 0;
            this.spellId = 0;
            this.spellLevel = 0;
        };
        GameRolePlaySpellAnimMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlaySpellAnimMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlaySpellAnimMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlaySpellAnimMessage(param1);
        };
        GameRolePlaySpellAnimMessage.prototype.serializeAs_GameRolePlaySpellAnimMessage = function (param1) {
            param1.writeInt(this.casterId);
            if (this.targetCellId < 0 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element targetCellId.');
            }
            param1.writeVarShort(this.targetCellId);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element spellLevel.');
            }
            param1.writeByte(this.spellLevel);
        };
        GameRolePlaySpellAnimMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlaySpellAnimMessage(param1);
        };
        GameRolePlaySpellAnimMessage.prototype.deserializeAs_GameRolePlaySpellAnimMessage = function (param1) {
            this.casterId = param1.readInt();
            this.targetCellId = param1.readVarUhShort();
            if (this.targetCellId < 0 || this.targetCellId > 559) {
                throw new Error('Forbidden value (' + this.targetCellId + ') on element of GameRolePlaySpellAnimMessage.targetCellId.');
            }
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GameRolePlaySpellAnimMessage.spellId.');
            }
            this.spellLevel = param1.readByte();
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element of GameRolePlaySpellAnimMessage.spellLevel.');
            }
        };
        GameRolePlaySpellAnimMessage.ID = 6114;
        return GameRolePlaySpellAnimMessage;
    })(NetworkMessage);
    Protocol.GameRolePlaySpellAnimMessage = GameRolePlaySpellAnimMessage;
    var LeaveDialogMessage = (function (_super) {
        __extends(LeaveDialogMessage, _super);
        function LeaveDialogMessage() {
            this.dialogType = 0;
            _super.call(this);
        }
        LeaveDialogMessage.prototype.getMessageId = function () {
            return LeaveDialogMessage.ID;
        };
        LeaveDialogMessage.prototype.reset = function () {
            this.dialogType = 0;
        };
        LeaveDialogMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LeaveDialogMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LeaveDialogMessage.prototype.serialize = function (param1) {
            this.serializeAs_LeaveDialogMessage(param1);
        };
        LeaveDialogMessage.prototype.serializeAs_LeaveDialogMessage = function (param1) {
            param1.writeByte(this.dialogType);
        };
        LeaveDialogMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LeaveDialogMessage(param1);
        };
        LeaveDialogMessage.prototype.deserializeAs_LeaveDialogMessage = function (param1) {
            this.dialogType = param1.readByte();
            if (this.dialogType < 0) {
                throw new Error('Forbidden value (' + this.dialogType + ') on element of LeaveDialogMessage.dialogType.');
            }
        };
        LeaveDialogMessage.ID = 5502;
        return LeaveDialogMessage;
    })(NetworkMessage);
    Protocol.LeaveDialogMessage = LeaveDialogMessage;
    var LeaveDialogRequestMessage = (function (_super) {
        __extends(LeaveDialogRequestMessage, _super);
        function LeaveDialogRequestMessage() {
            _super.call(this);
        }
        LeaveDialogRequestMessage.prototype.getMessageId = function () {
            return LeaveDialogRequestMessage.ID;
        };
        LeaveDialogRequestMessage.prototype.reset = function () {
        };
        LeaveDialogRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LeaveDialogRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LeaveDialogRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_LeaveDialogRequestMessage(param1);
        };
        LeaveDialogRequestMessage.prototype.serializeAs_LeaveDialogRequestMessage = function (param1) {
        };
        LeaveDialogRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LeaveDialogRequestMessage(param1);
        };
        LeaveDialogRequestMessage.prototype.deserializeAs_LeaveDialogRequestMessage = function (param1) {
        };
        LeaveDialogRequestMessage.ID = 5501;
        return LeaveDialogRequestMessage;
    })(NetworkMessage);
    Protocol.LeaveDialogRequestMessage = LeaveDialogRequestMessage;
    var PauseDialogMessage = (function (_super) {
        __extends(PauseDialogMessage, _super);
        function PauseDialogMessage() {
            this.dialogType = 0;
            _super.call(this);
        }
        PauseDialogMessage.prototype.getMessageId = function () {
            return PauseDialogMessage.ID;
        };
        PauseDialogMessage.prototype.reset = function () {
            this.dialogType = 0;
        };
        PauseDialogMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PauseDialogMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PauseDialogMessage.prototype.serialize = function (param1) {
            this.serializeAs_PauseDialogMessage(param1);
        };
        PauseDialogMessage.prototype.serializeAs_PauseDialogMessage = function (param1) {
            param1.writeByte(this.dialogType);
        };
        PauseDialogMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PauseDialogMessage(param1);
        };
        PauseDialogMessage.prototype.deserializeAs_PauseDialogMessage = function (param1) {
            this.dialogType = param1.readByte();
            if (this.dialogType < 0) {
                throw new Error('Forbidden value (' + this.dialogType + ') on element of PauseDialogMessage.dialogType.');
            }
        };
        PauseDialogMessage.ID = 6012;
        return PauseDialogMessage;
    })(NetworkMessage);
    Protocol.PauseDialogMessage = PauseDialogMessage;
    var FriendAddFailureMessage = (function (_super) {
        __extends(FriendAddFailureMessage, _super);
        function FriendAddFailureMessage() {
            this.reason = 0;
            _super.call(this);
        }
        FriendAddFailureMessage.prototype.getMessageId = function () {
            return FriendAddFailureMessage.ID;
        };
        FriendAddFailureMessage.prototype.reset = function () {
            this.reason = 0;
        };
        FriendAddFailureMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendAddFailureMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendAddFailureMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendAddFailureMessage(param1);
        };
        FriendAddFailureMessage.prototype.serializeAs_FriendAddFailureMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        FriendAddFailureMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendAddFailureMessage(param1);
        };
        FriendAddFailureMessage.prototype.deserializeAs_FriendAddFailureMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of FriendAddFailureMessage.reason.');
            }
        };
        FriendAddFailureMessage.ID = 5600;
        return FriendAddFailureMessage;
    })(NetworkMessage);
    Protocol.FriendAddFailureMessage = FriendAddFailureMessage;
    var FriendAddRequestMessage = (function (_super) {
        __extends(FriendAddRequestMessage, _super);
        function FriendAddRequestMessage() {
            this.name = '';
            _super.call(this);
        }
        FriendAddRequestMessage.prototype.getMessageId = function () {
            return FriendAddRequestMessage.ID;
        };
        FriendAddRequestMessage.prototype.reset = function () {
            this.name = '';
        };
        FriendAddRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendAddRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendAddRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendAddRequestMessage(param1);
        };
        FriendAddRequestMessage.prototype.serializeAs_FriendAddRequestMessage = function (param1) {
            param1.writeUTF(this.name);
        };
        FriendAddRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendAddRequestMessage(param1);
        };
        FriendAddRequestMessage.prototype.deserializeAs_FriendAddRequestMessage = function (param1) {
            this.name = param1.readUTF();
        };
        FriendAddRequestMessage.ID = 4004;
        return FriendAddRequestMessage;
    })(NetworkMessage);
    Protocol.FriendAddRequestMessage = FriendAddRequestMessage;
    var FriendAddedMessage = (function (_super) {
        __extends(FriendAddedMessage, _super);
        function FriendAddedMessage() {
            this.friendAdded = new FriendInformations();
            _super.call(this);
        }
        FriendAddedMessage.prototype.getMessageId = function () {
            return FriendAddedMessage.ID;
        };
        FriendAddedMessage.prototype.reset = function () {
            this.friendAdded = new FriendInformations();
        };
        FriendAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendAddedMessage(param1);
        };
        FriendAddedMessage.prototype.serializeAs_FriendAddedMessage = function (param1) {
            param1.writeShort(this.friendAdded.getTypeId());
            this.friendAdded.serialize(param1);
        };
        FriendAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendAddedMessage(param1);
        };
        FriendAddedMessage.prototype.deserializeAs_FriendAddedMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.friendAdded = ProtocolTypeManager.getInstance(FriendInformations, _loc2_);
            this.friendAdded.deserialize(param1);
        };
        FriendAddedMessage.ID = 5599;
        return FriendAddedMessage;
    })(NetworkMessage);
    Protocol.FriendAddedMessage = FriendAddedMessage;
    var FriendDeleteRequestMessage = (function (_super) {
        __extends(FriendDeleteRequestMessage, _super);
        function FriendDeleteRequestMessage() {
            this.accountId = 0;
            _super.call(this);
        }
        FriendDeleteRequestMessage.prototype.getMessageId = function () {
            return FriendDeleteRequestMessage.ID;
        };
        FriendDeleteRequestMessage.prototype.reset = function () {
            this.accountId = 0;
        };
        FriendDeleteRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendDeleteRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendDeleteRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendDeleteRequestMessage(param1);
        };
        FriendDeleteRequestMessage.prototype.serializeAs_FriendDeleteRequestMessage = function (param1) {
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
        };
        FriendDeleteRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendDeleteRequestMessage(param1);
        };
        FriendDeleteRequestMessage.prototype.deserializeAs_FriendDeleteRequestMessage = function (param1) {
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of FriendDeleteRequestMessage.accountId.');
            }
        };
        FriendDeleteRequestMessage.ID = 5603;
        return FriendDeleteRequestMessage;
    })(NetworkMessage);
    Protocol.FriendDeleteRequestMessage = FriendDeleteRequestMessage;
    var FriendDeleteResultMessage = (function (_super) {
        __extends(FriendDeleteResultMessage, _super);
        function FriendDeleteResultMessage() {
            this.success = false;
            this.name = '';
            _super.call(this);
        }
        FriendDeleteResultMessage.prototype.getMessageId = function () {
            return FriendDeleteResultMessage.ID;
        };
        FriendDeleteResultMessage.prototype.reset = function () {
            this.success = false;
            this.name = '';
        };
        FriendDeleteResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendDeleteResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendDeleteResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendDeleteResultMessage(param1);
        };
        FriendDeleteResultMessage.prototype.serializeAs_FriendDeleteResultMessage = function (param1) {
            param1.writeBoolean(this.success);
            param1.writeUTF(this.name);
        };
        FriendDeleteResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendDeleteResultMessage(param1);
        };
        FriendDeleteResultMessage.prototype.deserializeAs_FriendDeleteResultMessage = function (param1) {
            this.success = param1.readBoolean();
            this.name = param1.readUTF();
        };
        FriendDeleteResultMessage.ID = 5601;
        return FriendDeleteResultMessage;
    })(NetworkMessage);
    Protocol.FriendDeleteResultMessage = FriendDeleteResultMessage;
    var FriendJoinRequestMessage = (function (_super) {
        __extends(FriendJoinRequestMessage, _super);
        function FriendJoinRequestMessage() {
            this.name = '';
            _super.call(this);
        }
        FriendJoinRequestMessage.prototype.getMessageId = function () {
            return FriendJoinRequestMessage.ID;
        };
        FriendJoinRequestMessage.prototype.reset = function () {
            this.name = '';
        };
        FriendJoinRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendJoinRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendJoinRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendJoinRequestMessage(param1);
        };
        FriendJoinRequestMessage.prototype.serializeAs_FriendJoinRequestMessage = function (param1) {
            param1.writeUTF(this.name);
        };
        FriendJoinRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendJoinRequestMessage(param1);
        };
        FriendJoinRequestMessage.prototype.deserializeAs_FriendJoinRequestMessage = function (param1) {
            this.name = param1.readUTF();
        };
        FriendJoinRequestMessage.ID = 5605;
        return FriendJoinRequestMessage;
    })(NetworkMessage);
    Protocol.FriendJoinRequestMessage = FriendJoinRequestMessage;
    var FriendSetWarnOnConnectionMessage = (function (_super) {
        __extends(FriendSetWarnOnConnectionMessage, _super);
        function FriendSetWarnOnConnectionMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendSetWarnOnConnectionMessage.prototype.getMessageId = function () {
            return FriendSetWarnOnConnectionMessage.ID;
        };
        FriendSetWarnOnConnectionMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendSetWarnOnConnectionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendSetWarnOnConnectionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendSetWarnOnConnectionMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendSetWarnOnConnectionMessage(param1);
        };
        FriendSetWarnOnConnectionMessage.prototype.serializeAs_FriendSetWarnOnConnectionMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendSetWarnOnConnectionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSetWarnOnConnectionMessage(param1);
        };
        FriendSetWarnOnConnectionMessage.prototype.deserializeAs_FriendSetWarnOnConnectionMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendSetWarnOnConnectionMessage.ID = 5602;
        return FriendSetWarnOnConnectionMessage;
    })(NetworkMessage);
    Protocol.FriendSetWarnOnConnectionMessage = FriendSetWarnOnConnectionMessage;
    var FriendSetWarnOnLevelGainMessage = (function (_super) {
        __extends(FriendSetWarnOnLevelGainMessage, _super);
        function FriendSetWarnOnLevelGainMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendSetWarnOnLevelGainMessage.prototype.getMessageId = function () {
            return FriendSetWarnOnLevelGainMessage.ID;
        };
        FriendSetWarnOnLevelGainMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendSetWarnOnLevelGainMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendSetWarnOnLevelGainMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendSetWarnOnLevelGainMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendSetWarnOnLevelGainMessage(param1);
        };
        FriendSetWarnOnLevelGainMessage.prototype.serializeAs_FriendSetWarnOnLevelGainMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendSetWarnOnLevelGainMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSetWarnOnLevelGainMessage(param1);
        };
        FriendSetWarnOnLevelGainMessage.prototype.deserializeAs_FriendSetWarnOnLevelGainMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendSetWarnOnLevelGainMessage.ID = 6077;
        return FriendSetWarnOnLevelGainMessage;
    })(NetworkMessage);
    Protocol.FriendSetWarnOnLevelGainMessage = FriendSetWarnOnLevelGainMessage;
    var FriendSpouseFollowWithCompassRequestMessage = (function (_super) {
        __extends(FriendSpouseFollowWithCompassRequestMessage, _super);
        function FriendSpouseFollowWithCompassRequestMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendSpouseFollowWithCompassRequestMessage.prototype.getMessageId = function () {
            return FriendSpouseFollowWithCompassRequestMessage.ID;
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendSpouseFollowWithCompassRequestMessage(param1);
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.serializeAs_FriendSpouseFollowWithCompassRequestMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSpouseFollowWithCompassRequestMessage(param1);
        };
        FriendSpouseFollowWithCompassRequestMessage.prototype.deserializeAs_FriendSpouseFollowWithCompassRequestMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendSpouseFollowWithCompassRequestMessage.ID = 5606;
        return FriendSpouseFollowWithCompassRequestMessage;
    })(NetworkMessage);
    Protocol.FriendSpouseFollowWithCompassRequestMessage = FriendSpouseFollowWithCompassRequestMessage;
    var FriendSpouseJoinRequestMessage = (function (_super) {
        __extends(FriendSpouseJoinRequestMessage, _super);
        function FriendSpouseJoinRequestMessage() {
            _super.call(this);
        }
        FriendSpouseJoinRequestMessage.prototype.getMessageId = function () {
            return FriendSpouseJoinRequestMessage.ID;
        };
        FriendSpouseJoinRequestMessage.prototype.reset = function () {
        };
        FriendSpouseJoinRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendSpouseJoinRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendSpouseJoinRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendSpouseJoinRequestMessage(param1);
        };
        FriendSpouseJoinRequestMessage.prototype.serializeAs_FriendSpouseJoinRequestMessage = function (param1) {
        };
        FriendSpouseJoinRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSpouseJoinRequestMessage(param1);
        };
        FriendSpouseJoinRequestMessage.prototype.deserializeAs_FriendSpouseJoinRequestMessage = function (param1) {
        };
        FriendSpouseJoinRequestMessage.ID = 5604;
        return FriendSpouseJoinRequestMessage;
    })(NetworkMessage);
    Protocol.FriendSpouseJoinRequestMessage = FriendSpouseJoinRequestMessage;
    var FriendUpdateMessage = (function (_super) {
        __extends(FriendUpdateMessage, _super);
        function FriendUpdateMessage() {
            this.friendUpdated = new FriendInformations();
            _super.call(this);
        }
        FriendUpdateMessage.prototype.getMessageId = function () {
            return FriendUpdateMessage.ID;
        };
        FriendUpdateMessage.prototype.reset = function () {
            this.friendUpdated = new FriendInformations();
        };
        FriendUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendUpdateMessage(param1);
        };
        FriendUpdateMessage.prototype.serializeAs_FriendUpdateMessage = function (param1) {
            param1.writeShort(this.friendUpdated.getTypeId());
            this.friendUpdated.serialize(param1);
        };
        FriendUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendUpdateMessage(param1);
        };
        FriendUpdateMessage.prototype.deserializeAs_FriendUpdateMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.friendUpdated = ProtocolTypeManager.getInstance(FriendInformations, _loc2_);
            this.friendUpdated.deserialize(param1);
        };
        FriendUpdateMessage.ID = 5924;
        return FriendUpdateMessage;
    })(NetworkMessage);
    Protocol.FriendUpdateMessage = FriendUpdateMessage;
    var FriendWarnOnConnectionStateMessage = (function (_super) {
        __extends(FriendWarnOnConnectionStateMessage, _super);
        function FriendWarnOnConnectionStateMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendWarnOnConnectionStateMessage.prototype.getMessageId = function () {
            return FriendWarnOnConnectionStateMessage.ID;
        };
        FriendWarnOnConnectionStateMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendWarnOnConnectionStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendWarnOnConnectionStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendWarnOnConnectionStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendWarnOnConnectionStateMessage(param1);
        };
        FriendWarnOnConnectionStateMessage.prototype.serializeAs_FriendWarnOnConnectionStateMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendWarnOnConnectionStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendWarnOnConnectionStateMessage(param1);
        };
        FriendWarnOnConnectionStateMessage.prototype.deserializeAs_FriendWarnOnConnectionStateMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendWarnOnConnectionStateMessage.ID = 5630;
        return FriendWarnOnConnectionStateMessage;
    })(NetworkMessage);
    Protocol.FriendWarnOnConnectionStateMessage = FriendWarnOnConnectionStateMessage;
    var FriendWarnOnLevelGainStateMessage = (function (_super) {
        __extends(FriendWarnOnLevelGainStateMessage, _super);
        function FriendWarnOnLevelGainStateMessage() {
            this.enable = false;
            _super.call(this);
        }
        FriendWarnOnLevelGainStateMessage.prototype.getMessageId = function () {
            return FriendWarnOnLevelGainStateMessage.ID;
        };
        FriendWarnOnLevelGainStateMessage.prototype.reset = function () {
            this.enable = false;
        };
        FriendWarnOnLevelGainStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendWarnOnLevelGainStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendWarnOnLevelGainStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendWarnOnLevelGainStateMessage(param1);
        };
        FriendWarnOnLevelGainStateMessage.prototype.serializeAs_FriendWarnOnLevelGainStateMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        FriendWarnOnLevelGainStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendWarnOnLevelGainStateMessage(param1);
        };
        FriendWarnOnLevelGainStateMessage.prototype.deserializeAs_FriendWarnOnLevelGainStateMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        FriendWarnOnLevelGainStateMessage.ID = 6078;
        return FriendWarnOnLevelGainStateMessage;
    })(NetworkMessage);
    Protocol.FriendWarnOnLevelGainStateMessage = FriendWarnOnLevelGainStateMessage;
    var FriendsGetListMessage = (function (_super) {
        __extends(FriendsGetListMessage, _super);
        function FriendsGetListMessage() {
            _super.call(this);
        }
        FriendsGetListMessage.prototype.getMessageId = function () {
            return FriendsGetListMessage.ID;
        };
        FriendsGetListMessage.prototype.reset = function () {
        };
        FriendsGetListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendsGetListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendsGetListMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendsGetListMessage(param1);
        };
        FriendsGetListMessage.prototype.serializeAs_FriendsGetListMessage = function (param1) {
        };
        FriendsGetListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendsGetListMessage(param1);
        };
        FriendsGetListMessage.prototype.deserializeAs_FriendsGetListMessage = function (param1) {
        };
        FriendsGetListMessage.ID = 4001;
        return FriendsGetListMessage;
    })(NetworkMessage);
    Protocol.FriendsGetListMessage = FriendsGetListMessage;
    var FriendsListMessage = (function (_super) {
        __extends(FriendsListMessage, _super);
        function FriendsListMessage() {
            this.friendsList = [];
            _super.call(this);
        }
        FriendsListMessage.prototype.getMessageId = function () {
            return FriendsListMessage.ID;
        };
        FriendsListMessage.prototype.reset = function () {
            this.friendsList = [];
        };
        FriendsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        FriendsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        FriendsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_FriendsListMessage(param1);
        };
        FriendsListMessage.prototype.serializeAs_FriendsListMessage = function (param1) {
            param1.writeShort(this.friendsList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.friendsList.length) {
                param1.writeShort((this.friendsList[_loc2_]).getTypeId());
                (this.friendsList[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        FriendsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendsListMessage(param1);
        };
        FriendsListMessage.prototype.deserializeAs_FriendsListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(FriendInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.friendsList.push(_loc5_);
                _loc3_++;
            }
        };
        FriendsListMessage.ID = 4002;
        return FriendsListMessage;
    })(NetworkMessage);
    Protocol.FriendsListMessage = FriendsListMessage;
    var GuildMemberSetWarnOnConnectionMessage = (function (_super) {
        __extends(GuildMemberSetWarnOnConnectionMessage, _super);
        function GuildMemberSetWarnOnConnectionMessage() {
            this.enable = false;
            _super.call(this);
        }
        GuildMemberSetWarnOnConnectionMessage.prototype.getMessageId = function () {
            return GuildMemberSetWarnOnConnectionMessage.ID;
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.reset = function () {
            this.enable = false;
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMemberSetWarnOnConnectionMessage(param1);
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.serializeAs_GuildMemberSetWarnOnConnectionMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMemberSetWarnOnConnectionMessage(param1);
        };
        GuildMemberSetWarnOnConnectionMessage.prototype.deserializeAs_GuildMemberSetWarnOnConnectionMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        GuildMemberSetWarnOnConnectionMessage.ID = 6159;
        return GuildMemberSetWarnOnConnectionMessage;
    })(NetworkMessage);
    Protocol.GuildMemberSetWarnOnConnectionMessage = GuildMemberSetWarnOnConnectionMessage;
    var GuildMemberWarnOnConnectionStateMessage = (function (_super) {
        __extends(GuildMemberWarnOnConnectionStateMessage, _super);
        function GuildMemberWarnOnConnectionStateMessage() {
            this.enable = false;
            _super.call(this);
        }
        GuildMemberWarnOnConnectionStateMessage.prototype.getMessageId = function () {
            return GuildMemberWarnOnConnectionStateMessage.ID;
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.reset = function () {
            this.enable = false;
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMemberWarnOnConnectionStateMessage(param1);
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.serializeAs_GuildMemberWarnOnConnectionStateMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMemberWarnOnConnectionStateMessage(param1);
        };
        GuildMemberWarnOnConnectionStateMessage.prototype.deserializeAs_GuildMemberWarnOnConnectionStateMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        GuildMemberWarnOnConnectionStateMessage.ID = 6160;
        return GuildMemberWarnOnConnectionStateMessage;
    })(NetworkMessage);
    Protocol.GuildMemberWarnOnConnectionStateMessage = GuildMemberWarnOnConnectionStateMessage;
    var IgnoredAddFailureMessage = (function (_super) {
        __extends(IgnoredAddFailureMessage, _super);
        function IgnoredAddFailureMessage() {
            this.reason = 0;
            _super.call(this);
        }
        IgnoredAddFailureMessage.prototype.getMessageId = function () {
            return IgnoredAddFailureMessage.ID;
        };
        IgnoredAddFailureMessage.prototype.reset = function () {
            this.reason = 0;
        };
        IgnoredAddFailureMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredAddFailureMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredAddFailureMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredAddFailureMessage(param1);
        };
        IgnoredAddFailureMessage.prototype.serializeAs_IgnoredAddFailureMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        IgnoredAddFailureMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredAddFailureMessage(param1);
        };
        IgnoredAddFailureMessage.prototype.deserializeAs_IgnoredAddFailureMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of IgnoredAddFailureMessage.reason.');
            }
        };
        IgnoredAddFailureMessage.ID = 5679;
        return IgnoredAddFailureMessage;
    })(NetworkMessage);
    Protocol.IgnoredAddFailureMessage = IgnoredAddFailureMessage;
    var IgnoredAddRequestMessage = (function (_super) {
        __extends(IgnoredAddRequestMessage, _super);
        function IgnoredAddRequestMessage() {
            this.name = '';
            this.session = false;
            _super.call(this);
        }
        IgnoredAddRequestMessage.prototype.getMessageId = function () {
            return IgnoredAddRequestMessage.ID;
        };
        IgnoredAddRequestMessage.prototype.reset = function () {
            this.name = '';
            this.session = false;
        };
        IgnoredAddRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredAddRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredAddRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredAddRequestMessage(param1);
        };
        IgnoredAddRequestMessage.prototype.serializeAs_IgnoredAddRequestMessage = function (param1) {
            param1.writeUTF(this.name);
            param1.writeBoolean(this.session);
        };
        IgnoredAddRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredAddRequestMessage(param1);
        };
        IgnoredAddRequestMessage.prototype.deserializeAs_IgnoredAddRequestMessage = function (param1) {
            this.name = param1.readUTF();
            this.session = param1.readBoolean();
        };
        IgnoredAddRequestMessage.ID = 5673;
        return IgnoredAddRequestMessage;
    })(NetworkMessage);
    Protocol.IgnoredAddRequestMessage = IgnoredAddRequestMessage;
    var IgnoredAddedMessage = (function (_super) {
        __extends(IgnoredAddedMessage, _super);
        function IgnoredAddedMessage() {
            this.ignoreAdded = new IgnoredInformations();
            this.session = false;
            _super.call(this);
        }
        IgnoredAddedMessage.prototype.getMessageId = function () {
            return IgnoredAddedMessage.ID;
        };
        IgnoredAddedMessage.prototype.reset = function () {
            this.ignoreAdded = new IgnoredInformations();
            this.session = false;
        };
        IgnoredAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredAddedMessage(param1);
        };
        IgnoredAddedMessage.prototype.serializeAs_IgnoredAddedMessage = function (param1) {
            param1.writeShort(this.ignoreAdded.getTypeId());
            this.ignoreAdded.serialize(param1);
            param1.writeBoolean(this.session);
        };
        IgnoredAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredAddedMessage(param1);
        };
        IgnoredAddedMessage.prototype.deserializeAs_IgnoredAddedMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.ignoreAdded = ProtocolTypeManager.getInstance(IgnoredInformations, _loc2_);
            this.ignoreAdded.deserialize(param1);
            this.session = param1.readBoolean();
        };
        IgnoredAddedMessage.ID = 5678;
        return IgnoredAddedMessage;
    })(NetworkMessage);
    Protocol.IgnoredAddedMessage = IgnoredAddedMessage;
    var IgnoredDeleteRequestMessage = (function (_super) {
        __extends(IgnoredDeleteRequestMessage, _super);
        function IgnoredDeleteRequestMessage() {
            this.accountId = 0;
            this.session = false;
            _super.call(this);
        }
        IgnoredDeleteRequestMessage.prototype.getMessageId = function () {
            return IgnoredDeleteRequestMessage.ID;
        };
        IgnoredDeleteRequestMessage.prototype.reset = function () {
            this.accountId = 0;
            this.session = false;
        };
        IgnoredDeleteRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredDeleteRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredDeleteRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredDeleteRequestMessage(param1);
        };
        IgnoredDeleteRequestMessage.prototype.serializeAs_IgnoredDeleteRequestMessage = function (param1) {
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            param1.writeBoolean(this.session);
        };
        IgnoredDeleteRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredDeleteRequestMessage(param1);
        };
        IgnoredDeleteRequestMessage.prototype.deserializeAs_IgnoredDeleteRequestMessage = function (param1) {
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of IgnoredDeleteRequestMessage.accountId.');
            }
            this.session = param1.readBoolean();
        };
        IgnoredDeleteRequestMessage.ID = 5680;
        return IgnoredDeleteRequestMessage;
    })(NetworkMessage);
    Protocol.IgnoredDeleteRequestMessage = IgnoredDeleteRequestMessage;
    var IgnoredDeleteResultMessage = (function (_super) {
        __extends(IgnoredDeleteResultMessage, _super);
        function IgnoredDeleteResultMessage() {
            this.success = false;
            this.name = '';
            this.session = false;
            _super.call(this);
        }
        IgnoredDeleteResultMessage.prototype.getMessageId = function () {
            return IgnoredDeleteResultMessage.ID;
        };
        IgnoredDeleteResultMessage.prototype.reset = function () {
            this.success = false;
            this.name = '';
            this.session = false;
        };
        IgnoredDeleteResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredDeleteResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredDeleteResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredDeleteResultMessage(param1);
        };
        IgnoredDeleteResultMessage.prototype.serializeAs_IgnoredDeleteResultMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.success);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.session);
            param1.writeByte(_loc2_);
            param1.writeUTF(this.name);
        };
        IgnoredDeleteResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredDeleteResultMessage(param1);
        };
        IgnoredDeleteResultMessage.prototype.deserializeAs_IgnoredDeleteResultMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.success = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.session = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.name = param1.readUTF();
        };
        IgnoredDeleteResultMessage.ID = 5677;
        return IgnoredDeleteResultMessage;
    })(NetworkMessage);
    Protocol.IgnoredDeleteResultMessage = IgnoredDeleteResultMessage;
    var IgnoredGetListMessage = (function (_super) {
        __extends(IgnoredGetListMessage, _super);
        function IgnoredGetListMessage() {
            _super.call(this);
        }
        IgnoredGetListMessage.prototype.getMessageId = function () {
            return IgnoredGetListMessage.ID;
        };
        IgnoredGetListMessage.prototype.reset = function () {
        };
        IgnoredGetListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredGetListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredGetListMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredGetListMessage(param1);
        };
        IgnoredGetListMessage.prototype.serializeAs_IgnoredGetListMessage = function (param1) {
        };
        IgnoredGetListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredGetListMessage(param1);
        };
        IgnoredGetListMessage.prototype.deserializeAs_IgnoredGetListMessage = function (param1) {
        };
        IgnoredGetListMessage.ID = 5676;
        return IgnoredGetListMessage;
    })(NetworkMessage);
    Protocol.IgnoredGetListMessage = IgnoredGetListMessage;
    var IgnoredListMessage = (function (_super) {
        __extends(IgnoredListMessage, _super);
        function IgnoredListMessage() {
            this.ignoredList = [];
            _super.call(this);
        }
        IgnoredListMessage.prototype.getMessageId = function () {
            return IgnoredListMessage.ID;
        };
        IgnoredListMessage.prototype.reset = function () {
            this.ignoredList = [];
        };
        IgnoredListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IgnoredListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IgnoredListMessage.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredListMessage(param1);
        };
        IgnoredListMessage.prototype.serializeAs_IgnoredListMessage = function (param1) {
            param1.writeShort(this.ignoredList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ignoredList.length) {
                param1.writeShort((this.ignoredList[_loc2_]).getTypeId());
                (this.ignoredList[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        IgnoredListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredListMessage(param1);
        };
        IgnoredListMessage.prototype.deserializeAs_IgnoredListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(IgnoredInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.ignoredList.push(_loc5_);
                _loc3_++;
            }
        };
        IgnoredListMessage.ID = 5674;
        return IgnoredListMessage;
    })(NetworkMessage);
    Protocol.IgnoredListMessage = IgnoredListMessage;
    var SpouseGetInformationsMessage = (function (_super) {
        __extends(SpouseGetInformationsMessage, _super);
        function SpouseGetInformationsMessage() {
            _super.call(this);
        }
        SpouseGetInformationsMessage.prototype.getMessageId = function () {
            return SpouseGetInformationsMessage.ID;
        };
        SpouseGetInformationsMessage.prototype.reset = function () {
        };
        SpouseGetInformationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpouseGetInformationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpouseGetInformationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpouseGetInformationsMessage(param1);
        };
        SpouseGetInformationsMessage.prototype.serializeAs_SpouseGetInformationsMessage = function (param1) {
        };
        SpouseGetInformationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpouseGetInformationsMessage(param1);
        };
        SpouseGetInformationsMessage.prototype.deserializeAs_SpouseGetInformationsMessage = function (param1) {
        };
        SpouseGetInformationsMessage.ID = 6355;
        return SpouseGetInformationsMessage;
    })(NetworkMessage);
    Protocol.SpouseGetInformationsMessage = SpouseGetInformationsMessage;
    var SpouseInformationsMessage = (function (_super) {
        __extends(SpouseInformationsMessage, _super);
        function SpouseInformationsMessage() {
            this.spouse = new FriendSpouseInformations();
            _super.call(this);
        }
        SpouseInformationsMessage.prototype.getMessageId = function () {
            return SpouseInformationsMessage.ID;
        };
        SpouseInformationsMessage.prototype.reset = function () {
            this.spouse = new FriendSpouseInformations();
        };
        SpouseInformationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpouseInformationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpouseInformationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpouseInformationsMessage(param1);
        };
        SpouseInformationsMessage.prototype.serializeAs_SpouseInformationsMessage = function (param1) {
            param1.writeShort(this.spouse.getTypeId());
            this.spouse.serialize(param1);
        };
        SpouseInformationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpouseInformationsMessage(param1);
        };
        SpouseInformationsMessage.prototype.deserializeAs_SpouseInformationsMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.spouse = ProtocolTypeManager.getInstance(FriendSpouseInformations, _loc2_);
            this.spouse.deserialize(param1);
        };
        SpouseInformationsMessage.ID = 6356;
        return SpouseInformationsMessage;
    })(NetworkMessage);
    Protocol.SpouseInformationsMessage = SpouseInformationsMessage;
    var SpouseStatusMessage = (function (_super) {
        __extends(SpouseStatusMessage, _super);
        function SpouseStatusMessage() {
            this.hasSpouse = false;
            _super.call(this);
        }
        SpouseStatusMessage.prototype.getMessageId = function () {
            return SpouseStatusMessage.ID;
        };
        SpouseStatusMessage.prototype.reset = function () {
            this.hasSpouse = false;
        };
        SpouseStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpouseStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpouseStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpouseStatusMessage(param1);
        };
        SpouseStatusMessage.prototype.serializeAs_SpouseStatusMessage = function (param1) {
            param1.writeBoolean(this.hasSpouse);
        };
        SpouseStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpouseStatusMessage(param1);
        };
        SpouseStatusMessage.prototype.deserializeAs_SpouseStatusMessage = function (param1) {
            this.hasSpouse = param1.readBoolean();
        };
        SpouseStatusMessage.ID = 6265;
        return SpouseStatusMessage;
    })(NetworkMessage);
    Protocol.SpouseStatusMessage = SpouseStatusMessage;
    var WarnOnPermaDeathStateMessage = (function (_super) {
        __extends(WarnOnPermaDeathStateMessage, _super);
        function WarnOnPermaDeathStateMessage() {
            this.enable = false;
            _super.call(this);
        }
        WarnOnPermaDeathStateMessage.prototype.getMessageId = function () {
            return WarnOnPermaDeathStateMessage.ID;
        };
        WarnOnPermaDeathStateMessage.prototype.reset = function () {
            this.enable = false;
        };
        WarnOnPermaDeathStateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        WarnOnPermaDeathStateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        WarnOnPermaDeathStateMessage.prototype.serialize = function (param1) {
            this.serializeAs_WarnOnPermaDeathStateMessage(param1);
        };
        WarnOnPermaDeathStateMessage.prototype.serializeAs_WarnOnPermaDeathStateMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        WarnOnPermaDeathStateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_WarnOnPermaDeathStateMessage(param1);
        };
        WarnOnPermaDeathStateMessage.prototype.deserializeAs_WarnOnPermaDeathStateMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        WarnOnPermaDeathStateMessage.ID = 6513;
        return WarnOnPermaDeathStateMessage;
    })(NetworkMessage);
    Protocol.WarnOnPermaDeathStateMessage = WarnOnPermaDeathStateMessage;
    var GuestLimitationMessage = (function (_super) {
        __extends(GuestLimitationMessage, _super);
        function GuestLimitationMessage() {
            this.reason = 0;
            _super.call(this);
        }
        GuestLimitationMessage.prototype.getMessageId = function () {
            return GuestLimitationMessage.ID;
        };
        GuestLimitationMessage.prototype.reset = function () {
            this.reason = 0;
        };
        GuestLimitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuestLimitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuestLimitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuestLimitationMessage(param1);
        };
        GuestLimitationMessage.prototype.serializeAs_GuestLimitationMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        GuestLimitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuestLimitationMessage(param1);
        };
        GuestLimitationMessage.prototype.deserializeAs_GuestLimitationMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of GuestLimitationMessage.reason.');
            }
        };
        GuestLimitationMessage.ID = 6506;
        return GuestLimitationMessage;
    })(NetworkMessage);
    Protocol.GuestLimitationMessage = GuestLimitationMessage;
    var GuestModeMessage = (function (_super) {
        __extends(GuestModeMessage, _super);
        function GuestModeMessage() {
            this.active = false;
            _super.call(this);
        }
        GuestModeMessage.prototype.getMessageId = function () {
            return GuestModeMessage.ID;
        };
        GuestModeMessage.prototype.reset = function () {
            this.active = false;
        };
        GuestModeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuestModeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuestModeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuestModeMessage(param1);
        };
        GuestModeMessage.prototype.serializeAs_GuestModeMessage = function (param1) {
            param1.writeBoolean(this.active);
        };
        GuestModeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuestModeMessage(param1);
        };
        GuestModeMessage.prototype.deserializeAs_GuestModeMessage = function (param1) {
            this.active = param1.readBoolean();
        };
        GuestModeMessage.ID = 6505;
        return GuestModeMessage;
    })(NetworkMessage);
    Protocol.GuestModeMessage = GuestModeMessage;
    var ChallengeFightJoinRefusedMessage = (function (_super) {
        __extends(ChallengeFightJoinRefusedMessage, _super);
        function ChallengeFightJoinRefusedMessage() {
            this.playerId = 0;
            this.reason = 0;
            _super.call(this);
        }
        ChallengeFightJoinRefusedMessage.prototype.getMessageId = function () {
            return ChallengeFightJoinRefusedMessage.ID;
        };
        ChallengeFightJoinRefusedMessage.prototype.reset = function () {
            this.playerId = 0;
            this.reason = 0;
        };
        ChallengeFightJoinRefusedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ChallengeFightJoinRefusedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ChallengeFightJoinRefusedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ChallengeFightJoinRefusedMessage(param1);
        };
        ChallengeFightJoinRefusedMessage.prototype.serializeAs_ChallengeFightJoinRefusedMessage = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeByte(this.reason);
        };
        ChallengeFightJoinRefusedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ChallengeFightJoinRefusedMessage(param1);
        };
        ChallengeFightJoinRefusedMessage.prototype.deserializeAs_ChallengeFightJoinRefusedMessage = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of ChallengeFightJoinRefusedMessage.playerId.');
            }
            this.reason = param1.readByte();
        };
        ChallengeFightJoinRefusedMessage.ID = 5908;
        return ChallengeFightJoinRefusedMessage;
    })(NetworkMessage);
    Protocol.ChallengeFightJoinRefusedMessage = ChallengeFightJoinRefusedMessage;
    var GuildChangeMemberParametersMessage = (function (_super) {
        __extends(GuildChangeMemberParametersMessage, _super);
        function GuildChangeMemberParametersMessage() {
            this.memberId = 0;
            this.rank = 0;
            this.experienceGivenPercent = 0;
            this.rights = 0;
            _super.call(this);
        }
        GuildChangeMemberParametersMessage.prototype.getMessageId = function () {
            return GuildChangeMemberParametersMessage.ID;
        };
        GuildChangeMemberParametersMessage.prototype.reset = function () {
            this.memberId = 0;
            this.rank = 0;
            this.experienceGivenPercent = 0;
            this.rights = 0;
        };
        GuildChangeMemberParametersMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildChangeMemberParametersMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildChangeMemberParametersMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildChangeMemberParametersMessage(param1);
        };
        GuildChangeMemberParametersMessage.prototype.serializeAs_GuildChangeMemberParametersMessage = function (param1) {
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeVarInt(this.memberId);
            if (this.rank < 0) {
                throw new Error('Forbidden value (' + this.rank + ') on element rank.');
            }
            param1.writeVarShort(this.rank);
            if (this.experienceGivenPercent < 0 || this.experienceGivenPercent > 100) {
                throw new Error('Forbidden value (' + this.experienceGivenPercent + ') on element experienceGivenPercent.');
            }
            param1.writeByte(this.experienceGivenPercent);
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element rights.');
            }
            param1.writeVarInt(this.rights);
        };
        GuildChangeMemberParametersMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildChangeMemberParametersMessage(param1);
        };
        GuildChangeMemberParametersMessage.prototype.deserializeAs_GuildChangeMemberParametersMessage = function (param1) {
            this.memberId = param1.readVarUhInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of GuildChangeMemberParametersMessage.memberId.');
            }
            this.rank = param1.readVarUhShort();
            if (this.rank < 0) {
                throw new Error('Forbidden value (' + this.rank + ') on element of GuildChangeMemberParametersMessage.rank.');
            }
            this.experienceGivenPercent = param1.readByte();
            if (this.experienceGivenPercent < 0 || this.experienceGivenPercent > 100) {
                throw new Error('Forbidden value (' + this.experienceGivenPercent + ') on element of GuildChangeMemberParametersMessage.experienceGivenPercent.');
            }
            this.rights = param1.readVarUhInt();
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element of GuildChangeMemberParametersMessage.rights.');
            }
        };
        GuildChangeMemberParametersMessage.ID = 5549;
        return GuildChangeMemberParametersMessage;
    })(NetworkMessage);
    Protocol.GuildChangeMemberParametersMessage = GuildChangeMemberParametersMessage;
    var GuildCharacsUpgradeRequestMessage = (function (_super) {
        __extends(GuildCharacsUpgradeRequestMessage, _super);
        function GuildCharacsUpgradeRequestMessage() {
            this.charaTypeTarget = 0;
            _super.call(this);
        }
        GuildCharacsUpgradeRequestMessage.prototype.getMessageId = function () {
            return GuildCharacsUpgradeRequestMessage.ID;
        };
        GuildCharacsUpgradeRequestMessage.prototype.reset = function () {
            this.charaTypeTarget = 0;
        };
        GuildCharacsUpgradeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildCharacsUpgradeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildCharacsUpgradeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildCharacsUpgradeRequestMessage(param1);
        };
        GuildCharacsUpgradeRequestMessage.prototype.serializeAs_GuildCharacsUpgradeRequestMessage = function (param1) {
            param1.writeByte(this.charaTypeTarget);
        };
        GuildCharacsUpgradeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildCharacsUpgradeRequestMessage(param1);
        };
        GuildCharacsUpgradeRequestMessage.prototype.deserializeAs_GuildCharacsUpgradeRequestMessage = function (param1) {
            this.charaTypeTarget = param1.readByte();
            if (this.charaTypeTarget < 0) {
                throw new Error('Forbidden value (' + this.charaTypeTarget + ') on element of GuildCharacsUpgradeRequestMessage.charaTypeTarget.');
            }
        };
        GuildCharacsUpgradeRequestMessage.ID = 5706;
        return GuildCharacsUpgradeRequestMessage;
    })(NetworkMessage);
    Protocol.GuildCharacsUpgradeRequestMessage = GuildCharacsUpgradeRequestMessage;
    var GuildCreationResultMessage = (function (_super) {
        __extends(GuildCreationResultMessage, _super);
        function GuildCreationResultMessage() {
            this.result = 0;
            _super.call(this);
        }
        GuildCreationResultMessage.prototype.getMessageId = function () {
            return GuildCreationResultMessage.ID;
        };
        GuildCreationResultMessage.prototype.reset = function () {
            this.result = 0;
        };
        GuildCreationResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildCreationResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildCreationResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildCreationResultMessage(param1);
        };
        GuildCreationResultMessage.prototype.serializeAs_GuildCreationResultMessage = function (param1) {
            param1.writeByte(this.result);
        };
        GuildCreationResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildCreationResultMessage(param1);
        };
        GuildCreationResultMessage.prototype.deserializeAs_GuildCreationResultMessage = function (param1) {
            this.result = param1.readByte();
            if (this.result < 0) {
                throw new Error('Forbidden value (' + this.result + ') on element of GuildCreationResultMessage.result.');
            }
        };
        GuildCreationResultMessage.ID = 5554;
        return GuildCreationResultMessage;
    })(NetworkMessage);
    Protocol.GuildCreationResultMessage = GuildCreationResultMessage;
    var GuildCreationStartedMessage = (function (_super) {
        __extends(GuildCreationStartedMessage, _super);
        function GuildCreationStartedMessage() {
            _super.call(this);
        }
        GuildCreationStartedMessage.prototype.getMessageId = function () {
            return GuildCreationStartedMessage.ID;
        };
        GuildCreationStartedMessage.prototype.reset = function () {
        };
        GuildCreationStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildCreationStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildCreationStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildCreationStartedMessage(param1);
        };
        GuildCreationStartedMessage.prototype.serializeAs_GuildCreationStartedMessage = function (param1) {
        };
        GuildCreationStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildCreationStartedMessage(param1);
        };
        GuildCreationStartedMessage.prototype.deserializeAs_GuildCreationStartedMessage = function (param1) {
        };
        GuildCreationStartedMessage.ID = 5920;
        return GuildCreationStartedMessage;
    })(NetworkMessage);
    Protocol.GuildCreationStartedMessage = GuildCreationStartedMessage;
    var GuildCreationValidMessage = (function (_super) {
        __extends(GuildCreationValidMessage, _super);
        function GuildCreationValidMessage() {
            this.guildName = '';
            this.guildEmblem = new GuildEmblem();
            _super.call(this);
        }
        GuildCreationValidMessage.prototype.getMessageId = function () {
            return GuildCreationValidMessage.ID;
        };
        GuildCreationValidMessage.prototype.reset = function () {
            this.guildName = '';
            this.guildEmblem = new GuildEmblem();
        };
        GuildCreationValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildCreationValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildCreationValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildCreationValidMessage(param1);
        };
        GuildCreationValidMessage.prototype.serializeAs_GuildCreationValidMessage = function (param1) {
            param1.writeUTF(this.guildName);
            this.guildEmblem.serializeAs_GuildEmblem(param1);
        };
        GuildCreationValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildCreationValidMessage(param1);
        };
        GuildCreationValidMessage.prototype.deserializeAs_GuildCreationValidMessage = function (param1) {
            this.guildName = param1.readUTF();
            this.guildEmblem = new GuildEmblem();
            this.guildEmblem.deserialize(param1);
        };
        GuildCreationValidMessage.ID = 5546;
        return GuildCreationValidMessage;
    })(NetworkMessage);
    Protocol.GuildCreationValidMessage = GuildCreationValidMessage;
    var GuildFactsErrorMessage = (function (_super) {
        __extends(GuildFactsErrorMessage, _super);
        function GuildFactsErrorMessage() {
            this.guildId = 0;
            _super.call(this);
        }
        GuildFactsErrorMessage.prototype.getMessageId = function () {
            return GuildFactsErrorMessage.ID;
        };
        GuildFactsErrorMessage.prototype.reset = function () {
            this.guildId = 0;
        };
        GuildFactsErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFactsErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFactsErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFactsErrorMessage(param1);
        };
        GuildFactsErrorMessage.prototype.serializeAs_GuildFactsErrorMessage = function (param1) {
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
        };
        GuildFactsErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFactsErrorMessage(param1);
        };
        GuildFactsErrorMessage.prototype.deserializeAs_GuildFactsErrorMessage = function (param1) {
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of GuildFactsErrorMessage.guildId.');
            }
        };
        GuildFactsErrorMessage.ID = 6424;
        return GuildFactsErrorMessage;
    })(NetworkMessage);
    Protocol.GuildFactsErrorMessage = GuildFactsErrorMessage;
    var GuildFactsMessage = (function (_super) {
        __extends(GuildFactsMessage, _super);
        function GuildFactsMessage() {
            this.infos = new GuildFactSheetInformations();
            this.creationDate = 0;
            this.nbTaxCollectors = 0;
            this.enabled = false;
            this.members = [];
            _super.call(this);
        }
        GuildFactsMessage.prototype.getMessageId = function () {
            return GuildFactsMessage.ID;
        };
        GuildFactsMessage.prototype.reset = function () {
            this.infos = new GuildFactSheetInformations();
            this.creationDate = 0;
            this.nbTaxCollectors = 0;
            this.enabled = false;
            this.members = [];
        };
        GuildFactsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFactsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFactsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFactsMessage(param1);
        };
        GuildFactsMessage.prototype.serializeAs_GuildFactsMessage = function (param1) {
            param1.writeShort(this.infos.getTypeId());
            this.infos.serialize(param1);
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element creationDate.');
            }
            param1.writeInt(this.creationDate);
            if (this.nbTaxCollectors < 0) {
                throw new Error('Forbidden value (' + this.nbTaxCollectors + ') on element nbTaxCollectors.');
            }
            param1.writeVarShort(this.nbTaxCollectors);
            param1.writeBoolean(this.enabled);
            param1.writeShort(this.members.length);
            var _loc2_ = 0;
            while (_loc2_ < this.members.length) {
                (this.members[_loc2_]).serializeAs_CharacterMinimalInformations(param1);
                _loc2_++;
            }
        };
        GuildFactsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFactsMessage(param1);
        };
        GuildFactsMessage.prototype.deserializeAs_GuildFactsMessage = function (param1) {
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            this.infos = ProtocolTypeManager.getInstance(GuildFactSheetInformations, _loc2_);
            this.infos.deserialize(param1);
            this.creationDate = param1.readInt();
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element of GuildFactsMessage.creationDate.');
            }
            this.nbTaxCollectors = param1.readVarUhShort();
            if (this.nbTaxCollectors < 0) {
                throw new Error('Forbidden value (' + this.nbTaxCollectors + ') on element of GuildFactsMessage.nbTaxCollectors.');
            }
            this.enabled = param1.readBoolean();
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = new CharacterMinimalInformations();
                _loc5_.deserialize(param1);
                this.members.push(_loc5_);
                _loc4_++;
            }
        };
        GuildFactsMessage.ID = 6415;
        return GuildFactsMessage;
    })(NetworkMessage);
    Protocol.GuildFactsMessage = GuildFactsMessage;
    var GuildFactsRequestMessage = (function (_super) {
        __extends(GuildFactsRequestMessage, _super);
        function GuildFactsRequestMessage() {
            this.guildId = 0;
            _super.call(this);
        }
        GuildFactsRequestMessage.prototype.getMessageId = function () {
            return GuildFactsRequestMessage.ID;
        };
        GuildFactsRequestMessage.prototype.reset = function () {
            this.guildId = 0;
        };
        GuildFactsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFactsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFactsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFactsRequestMessage(param1);
        };
        GuildFactsRequestMessage.prototype.serializeAs_GuildFactsRequestMessage = function (param1) {
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
        };
        GuildFactsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFactsRequestMessage(param1);
        };
        GuildFactsRequestMessage.prototype.deserializeAs_GuildFactsRequestMessage = function (param1) {
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of GuildFactsRequestMessage.guildId.');
            }
        };
        GuildFactsRequestMessage.ID = 6404;
        return GuildFactsRequestMessage;
    })(NetworkMessage);
    Protocol.GuildFactsRequestMessage = GuildFactsRequestMessage;
    var GuildGetInformationsMessage = (function (_super) {
        __extends(GuildGetInformationsMessage, _super);
        function GuildGetInformationsMessage() {
            this.infoType = 0;
            _super.call(this);
        }
        GuildGetInformationsMessage.prototype.getMessageId = function () {
            return GuildGetInformationsMessage.ID;
        };
        GuildGetInformationsMessage.prototype.reset = function () {
            this.infoType = 0;
        };
        GuildGetInformationsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildGetInformationsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildGetInformationsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildGetInformationsMessage(param1);
        };
        GuildGetInformationsMessage.prototype.serializeAs_GuildGetInformationsMessage = function (param1) {
            param1.writeByte(this.infoType);
        };
        GuildGetInformationsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildGetInformationsMessage(param1);
        };
        GuildGetInformationsMessage.prototype.deserializeAs_GuildGetInformationsMessage = function (param1) {
            this.infoType = param1.readByte();
            if (this.infoType < 0) {
                throw new Error('Forbidden value (' + this.infoType + ') on element of GuildGetInformationsMessage.infoType.');
            }
        };
        GuildGetInformationsMessage.ID = 5550;
        return GuildGetInformationsMessage;
    })(NetworkMessage);
    Protocol.GuildGetInformationsMessage = GuildGetInformationsMessage;
    var GuildHouseRemoveMessage = (function (_super) {
        __extends(GuildHouseRemoveMessage, _super);
        function GuildHouseRemoveMessage() {
            this.houseId = 0;
            _super.call(this);
        }
        GuildHouseRemoveMessage.prototype.getMessageId = function () {
            return GuildHouseRemoveMessage.ID;
        };
        GuildHouseRemoveMessage.prototype.reset = function () {
            this.houseId = 0;
        };
        GuildHouseRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildHouseRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildHouseRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildHouseRemoveMessage(param1);
        };
        GuildHouseRemoveMessage.prototype.serializeAs_GuildHouseRemoveMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
        };
        GuildHouseRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildHouseRemoveMessage(param1);
        };
        GuildHouseRemoveMessage.prototype.deserializeAs_GuildHouseRemoveMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of GuildHouseRemoveMessage.houseId.');
            }
        };
        GuildHouseRemoveMessage.ID = 6180;
        return GuildHouseRemoveMessage;
    })(NetworkMessage);
    Protocol.GuildHouseRemoveMessage = GuildHouseRemoveMessage;
    var GuildHouseTeleportRequestMessage = (function (_super) {
        __extends(GuildHouseTeleportRequestMessage, _super);
        function GuildHouseTeleportRequestMessage() {
            this.houseId = 0;
            _super.call(this);
        }
        GuildHouseTeleportRequestMessage.prototype.getMessageId = function () {
            return GuildHouseTeleportRequestMessage.ID;
        };
        GuildHouseTeleportRequestMessage.prototype.reset = function () {
            this.houseId = 0;
        };
        GuildHouseTeleportRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildHouseTeleportRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildHouseTeleportRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildHouseTeleportRequestMessage(param1);
        };
        GuildHouseTeleportRequestMessage.prototype.serializeAs_GuildHouseTeleportRequestMessage = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
        };
        GuildHouseTeleportRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildHouseTeleportRequestMessage(param1);
        };
        GuildHouseTeleportRequestMessage.prototype.deserializeAs_GuildHouseTeleportRequestMessage = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of GuildHouseTeleportRequestMessage.houseId.');
            }
        };
        GuildHouseTeleportRequestMessage.ID = 5712;
        return GuildHouseTeleportRequestMessage;
    })(NetworkMessage);
    Protocol.GuildHouseTeleportRequestMessage = GuildHouseTeleportRequestMessage;
    var GuildHouseUpdateInformationMessage = (function (_super) {
        __extends(GuildHouseUpdateInformationMessage, _super);
        function GuildHouseUpdateInformationMessage() {
            this.housesInformations = new HouseInformationsForGuild();
            _super.call(this);
        }
        GuildHouseUpdateInformationMessage.prototype.getMessageId = function () {
            return GuildHouseUpdateInformationMessage.ID;
        };
        GuildHouseUpdateInformationMessage.prototype.reset = function () {
            this.housesInformations = new HouseInformationsForGuild();
        };
        GuildHouseUpdateInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildHouseUpdateInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildHouseUpdateInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildHouseUpdateInformationMessage(param1);
        };
        GuildHouseUpdateInformationMessage.prototype.serializeAs_GuildHouseUpdateInformationMessage = function (param1) {
            this.housesInformations.serializeAs_HouseInformationsForGuild(param1);
        };
        GuildHouseUpdateInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildHouseUpdateInformationMessage(param1);
        };
        GuildHouseUpdateInformationMessage.prototype.deserializeAs_GuildHouseUpdateInformationMessage = function (param1) {
            this.housesInformations = new HouseInformationsForGuild();
            this.housesInformations.deserialize(param1);
        };
        GuildHouseUpdateInformationMessage.ID = 6181;
        return GuildHouseUpdateInformationMessage;
    })(NetworkMessage);
    Protocol.GuildHouseUpdateInformationMessage = GuildHouseUpdateInformationMessage;
    var GuildHousesInformationMessage = (function (_super) {
        __extends(GuildHousesInformationMessage, _super);
        function GuildHousesInformationMessage() {
            this.housesInformations = [];
            _super.call(this);
        }
        GuildHousesInformationMessage.prototype.getMessageId = function () {
            return GuildHousesInformationMessage.ID;
        };
        GuildHousesInformationMessage.prototype.reset = function () {
            this.housesInformations = [];
        };
        GuildHousesInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildHousesInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildHousesInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildHousesInformationMessage(param1);
        };
        GuildHousesInformationMessage.prototype.serializeAs_GuildHousesInformationMessage = function (param1) {
            param1.writeShort(this.housesInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.housesInformations.length) {
                (this.housesInformations[_loc2_]).serializeAs_HouseInformationsForGuild(param1);
                _loc2_++;
            }
        };
        GuildHousesInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildHousesInformationMessage(param1);
        };
        GuildHousesInformationMessage.prototype.deserializeAs_GuildHousesInformationMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new HouseInformationsForGuild();
                _loc4_.deserialize(param1);
                this.housesInformations.push(_loc4_);
                _loc3_++;
            }
        };
        GuildHousesInformationMessage.ID = 5919;
        return GuildHousesInformationMessage;
    })(NetworkMessage);
    Protocol.GuildHousesInformationMessage = GuildHousesInformationMessage;
    var GuildInAllianceFactsMessage = (function (_super) {
        __extends(GuildInAllianceFactsMessage, _super);
        function GuildInAllianceFactsMessage() {
            this.allianceInfos = new BasicNamedAllianceInformations();
            _super.call(this);
        }
        GuildInAllianceFactsMessage.prototype.getMessageId = function () {
            return GuildInAllianceFactsMessage.ID;
        };
        GuildInAllianceFactsMessage.prototype.reset = function () {
            this.allianceInfos = new BasicNamedAllianceInformations();
        };
        GuildInAllianceFactsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInAllianceFactsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInAllianceFactsMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInAllianceFactsMessage(param1);
        };
        GuildInAllianceFactsMessage.prototype.serializeAs_GuildInAllianceFactsMessage = function (param1) {
            _super.prototype.serializeAs_GuildFactsMessage.call(this, param1);
            this.allianceInfos.serializeAs_BasicNamedAllianceInformations(param1);
        };
        GuildInAllianceFactsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInAllianceFactsMessage(param1);
        };
        GuildInAllianceFactsMessage.prototype.deserializeAs_GuildInAllianceFactsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceInfos = new BasicNamedAllianceInformations();
            this.allianceInfos.deserialize(param1);
        };
        GuildInAllianceFactsMessage.ID = 6422;
        return GuildInAllianceFactsMessage;
    })(GuildFactsMessage);
    Protocol.GuildInAllianceFactsMessage = GuildInAllianceFactsMessage;
    var GuildInformationsGeneralMessage = (function (_super) {
        __extends(GuildInformationsGeneralMessage, _super);
        function GuildInformationsGeneralMessage() {
            this.enabled = false;
            this.abandonnedPaddock = false;
            this.level = 0;
            this.expLevelFloor = 0;
            this.experience = 0;
            this.expNextLevelFloor = 0;
            this.creationDate = 0;
            this.nbTotalMembers = 0;
            this.nbConnectedMembers = 0;
            _super.call(this);
        }
        GuildInformationsGeneralMessage.prototype.getMessageId = function () {
            return GuildInformationsGeneralMessage.ID;
        };
        GuildInformationsGeneralMessage.prototype.reset = function () {
            this.enabled = false;
            this.abandonnedPaddock = false;
            this.level = 0;
            this.expLevelFloor = 0;
            this.experience = 0;
            this.expNextLevelFloor = 0;
            this.creationDate = 0;
            this.nbTotalMembers = 0;
            this.nbConnectedMembers = 0;
        };
        GuildInformationsGeneralMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInformationsGeneralMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInformationsGeneralMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInformationsGeneralMessage(param1);
        };
        GuildInformationsGeneralMessage.prototype.serializeAs_GuildInformationsGeneralMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.enabled);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.abandonnedPaddock);
            param1.writeByte(_loc2_);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            if (this.expLevelFloor < 0 || this.expLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.expLevelFloor + ') on element expLevelFloor.');
            }
            param1.writeVarLong(this.expLevelFloor);
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.expNextLevelFloor < 0 || this.expNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.expNextLevelFloor + ') on element expNextLevelFloor.');
            }
            param1.writeVarLong(this.expNextLevelFloor);
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element creationDate.');
            }
            param1.writeInt(this.creationDate);
            if (this.nbTotalMembers < 0) {
                throw new Error('Forbidden value (' + this.nbTotalMembers + ') on element nbTotalMembers.');
            }
            param1.writeVarShort(this.nbTotalMembers);
            if (this.nbConnectedMembers < 0) {
                throw new Error('Forbidden value (' + this.nbConnectedMembers + ') on element nbConnectedMembers.');
            }
            param1.writeVarShort(this.nbConnectedMembers);
        };
        GuildInformationsGeneralMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInformationsGeneralMessage(param1);
        };
        GuildInformationsGeneralMessage.prototype.deserializeAs_GuildInformationsGeneralMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.enabled = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.abandonnedPaddock = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of GuildInformationsGeneralMessage.level.');
            }
            this.expLevelFloor = param1.readVarUhLong();
            if (this.expLevelFloor < 0 || this.expLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.expLevelFloor + ') on element of GuildInformationsGeneralMessage.expLevelFloor.');
            }
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of GuildInformationsGeneralMessage.experience.');
            }
            this.expNextLevelFloor = param1.readVarUhLong();
            if (this.expNextLevelFloor < 0 || this.expNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.expNextLevelFloor + ') on element of GuildInformationsGeneralMessage.expNextLevelFloor.');
            }
            this.creationDate = param1.readInt();
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element of GuildInformationsGeneralMessage.creationDate.');
            }
            this.nbTotalMembers = param1.readVarUhShort();
            if (this.nbTotalMembers < 0) {
                throw new Error('Forbidden value (' + this.nbTotalMembers + ') on element of GuildInformationsGeneralMessage.nbTotalMembers.');
            }
            this.nbConnectedMembers = param1.readVarUhShort();
            if (this.nbConnectedMembers < 0) {
                throw new Error('Forbidden value (' + this.nbConnectedMembers + ') on element of GuildInformationsGeneralMessage.nbConnectedMembers.');
            }
        };
        GuildInformationsGeneralMessage.ID = 5557;
        return GuildInformationsGeneralMessage;
    })(NetworkMessage);
    Protocol.GuildInformationsGeneralMessage = GuildInformationsGeneralMessage;
    var GuildInformationsMemberUpdateMessage = (function (_super) {
        __extends(GuildInformationsMemberUpdateMessage, _super);
        function GuildInformationsMemberUpdateMessage() {
            this.member = new GuildMember();
            _super.call(this);
        }
        GuildInformationsMemberUpdateMessage.prototype.getMessageId = function () {
            return GuildInformationsMemberUpdateMessage.ID;
        };
        GuildInformationsMemberUpdateMessage.prototype.reset = function () {
            this.member = new GuildMember();
        };
        GuildInformationsMemberUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInformationsMemberUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInformationsMemberUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInformationsMemberUpdateMessage(param1);
        };
        GuildInformationsMemberUpdateMessage.prototype.serializeAs_GuildInformationsMemberUpdateMessage = function (param1) {
            this.member.serializeAs_GuildMember(param1);
        };
        GuildInformationsMemberUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInformationsMemberUpdateMessage(param1);
        };
        GuildInformationsMemberUpdateMessage.prototype.deserializeAs_GuildInformationsMemberUpdateMessage = function (param1) {
            this.member = new GuildMember();
            this.member.deserialize(param1);
        };
        GuildInformationsMemberUpdateMessage.ID = 5597;
        return GuildInformationsMemberUpdateMessage;
    })(NetworkMessage);
    Protocol.GuildInformationsMemberUpdateMessage = GuildInformationsMemberUpdateMessage;
    var GuildInformationsMembersMessage = (function (_super) {
        __extends(GuildInformationsMembersMessage, _super);
        function GuildInformationsMembersMessage() {
            this.members = [];
            _super.call(this);
        }
        GuildInformationsMembersMessage.prototype.getMessageId = function () {
            return GuildInformationsMembersMessage.ID;
        };
        GuildInformationsMembersMessage.prototype.reset = function () {
            this.members = [];
        };
        GuildInformationsMembersMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInformationsMembersMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInformationsMembersMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInformationsMembersMessage(param1);
        };
        GuildInformationsMembersMessage.prototype.serializeAs_GuildInformationsMembersMessage = function (param1) {
            param1.writeShort(this.members.length);
            var _loc2_ = 0;
            while (_loc2_ < this.members.length) {
                (this.members[_loc2_]).serializeAs_GuildMember(param1);
                _loc2_++;
            }
        };
        GuildInformationsMembersMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInformationsMembersMessage(param1);
        };
        GuildInformationsMembersMessage.prototype.deserializeAs_GuildInformationsMembersMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GuildMember();
                _loc4_.deserialize(param1);
                this.members.push(_loc4_);
                _loc3_++;
            }
        };
        GuildInformationsMembersMessage.ID = 5558;
        return GuildInformationsMembersMessage;
    })(NetworkMessage);
    Protocol.GuildInformationsMembersMessage = GuildInformationsMembersMessage;
    var GuildInformationsPaddocksMessage = (function (_super) {
        __extends(GuildInformationsPaddocksMessage, _super);
        function GuildInformationsPaddocksMessage() {
            this.nbPaddockMax = 0;
            this.paddocksInformations = [];
            _super.call(this);
        }
        GuildInformationsPaddocksMessage.prototype.getMessageId = function () {
            return GuildInformationsPaddocksMessage.ID;
        };
        GuildInformationsPaddocksMessage.prototype.reset = function () {
            this.nbPaddockMax = 0;
            this.paddocksInformations = [];
        };
        GuildInformationsPaddocksMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInformationsPaddocksMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInformationsPaddocksMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInformationsPaddocksMessage(param1);
        };
        GuildInformationsPaddocksMessage.prototype.serializeAs_GuildInformationsPaddocksMessage = function (param1) {
            if (this.nbPaddockMax < 0) {
                throw new Error('Forbidden value (' + this.nbPaddockMax + ') on element nbPaddockMax.');
            }
            param1.writeByte(this.nbPaddockMax);
            param1.writeShort(this.paddocksInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.paddocksInformations.length) {
                (this.paddocksInformations[_loc2_]).serializeAs_PaddockContentInformations(param1);
                _loc2_++;
            }
        };
        GuildInformationsPaddocksMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInformationsPaddocksMessage(param1);
        };
        GuildInformationsPaddocksMessage.prototype.deserializeAs_GuildInformationsPaddocksMessage = function (param1) {
            var _loc4_ = null;
            this.nbPaddockMax = param1.readByte();
            if (this.nbPaddockMax < 0) {
                throw new Error('Forbidden value (' + this.nbPaddockMax + ') on element of GuildInformationsPaddocksMessage.nbPaddockMax.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PaddockContentInformations();
                _loc4_.deserialize(param1);
                this.paddocksInformations.push(_loc4_);
                _loc3_++;
            }
        };
        GuildInformationsPaddocksMessage.ID = 5959;
        return GuildInformationsPaddocksMessage;
    })(NetworkMessage);
    Protocol.GuildInformationsPaddocksMessage = GuildInformationsPaddocksMessage;
    var GuildInfosUpgradeMessage = (function (_super) {
        __extends(GuildInfosUpgradeMessage, _super);
        function GuildInfosUpgradeMessage() {
            this.maxTaxCollectorsCount = 0;
            this.taxCollectorsCount = 0;
            this.taxCollectorLifePoints = 0;
            this.taxCollectorDamagesBonuses = 0;
            this.taxCollectorPods = 0;
            this.taxCollectorProspecting = 0;
            this.taxCollectorWisdom = 0;
            this.boostPoints = 0;
            this.spellId = [];
            this.spellLevel = [];
            _super.call(this);
        }
        GuildInfosUpgradeMessage.prototype.getMessageId = function () {
            return GuildInfosUpgradeMessage.ID;
        };
        GuildInfosUpgradeMessage.prototype.reset = function () {
            this.maxTaxCollectorsCount = 0;
            this.taxCollectorsCount = 0;
            this.taxCollectorLifePoints = 0;
            this.taxCollectorDamagesBonuses = 0;
            this.taxCollectorPods = 0;
            this.taxCollectorProspecting = 0;
            this.taxCollectorWisdom = 0;
            this.boostPoints = 0;
            this.spellId = [];
            this.spellLevel = [];
        };
        GuildInfosUpgradeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInfosUpgradeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInfosUpgradeMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInfosUpgradeMessage(param1);
        };
        GuildInfosUpgradeMessage.prototype.serializeAs_GuildInfosUpgradeMessage = function (param1) {
            if (this.maxTaxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.maxTaxCollectorsCount + ') on element maxTaxCollectorsCount.');
            }
            param1.writeByte(this.maxTaxCollectorsCount);
            if (this.taxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorsCount + ') on element taxCollectorsCount.');
            }
            param1.writeByte(this.taxCollectorsCount);
            if (this.taxCollectorLifePoints < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorLifePoints + ') on element taxCollectorLifePoints.');
            }
            param1.writeVarShort(this.taxCollectorLifePoints);
            if (this.taxCollectorDamagesBonuses < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorDamagesBonuses + ') on element taxCollectorDamagesBonuses.');
            }
            param1.writeVarShort(this.taxCollectorDamagesBonuses);
            if (this.taxCollectorPods < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorPods + ') on element taxCollectorPods.');
            }
            param1.writeVarShort(this.taxCollectorPods);
            if (this.taxCollectorProspecting < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorProspecting + ') on element taxCollectorProspecting.');
            }
            param1.writeVarShort(this.taxCollectorProspecting);
            if (this.taxCollectorWisdom < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorWisdom + ') on element taxCollectorWisdom.');
            }
            param1.writeVarShort(this.taxCollectorWisdom);
            if (this.boostPoints < 0) {
                throw new Error('Forbidden value (' + this.boostPoints + ') on element boostPoints.');
            }
            param1.writeVarShort(this.boostPoints);
            param1.writeShort(this.spellId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spellId.length) {
                if (this.spellId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.spellId[_loc2_] + ') on element 9 (starting at 1) of spellId.');
                }
                param1.writeVarShort(this.spellId[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.spellLevel.length);
            var _loc3_ = 0;
            while (_loc3_ < this.spellLevel.length) {
                if (this.spellLevel[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.spellLevel[_loc3_] + ') on element 10 (starting at 1) of spellLevel.');
                }
                param1.writeByte(this.spellLevel[_loc3_]);
                _loc3_++;
            }
        };
        GuildInfosUpgradeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInfosUpgradeMessage(param1);
        };
        GuildInfosUpgradeMessage.prototype.deserializeAs_GuildInfosUpgradeMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            this.maxTaxCollectorsCount = param1.readByte();
            if (this.maxTaxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.maxTaxCollectorsCount + ') on element of GuildInfosUpgradeMessage.maxTaxCollectorsCount.');
            }
            this.taxCollectorsCount = param1.readByte();
            if (this.taxCollectorsCount < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorsCount + ') on element of GuildInfosUpgradeMessage.taxCollectorsCount.');
            }
            this.taxCollectorLifePoints = param1.readVarUhShort();
            if (this.taxCollectorLifePoints < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorLifePoints + ') on element of GuildInfosUpgradeMessage.taxCollectorLifePoints.');
            }
            this.taxCollectorDamagesBonuses = param1.readVarUhShort();
            if (this.taxCollectorDamagesBonuses < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorDamagesBonuses + ') on element of GuildInfosUpgradeMessage.taxCollectorDamagesBonuses.');
            }
            this.taxCollectorPods = param1.readVarUhShort();
            if (this.taxCollectorPods < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorPods + ') on element of GuildInfosUpgradeMessage.taxCollectorPods.');
            }
            this.taxCollectorProspecting = param1.readVarUhShort();
            if (this.taxCollectorProspecting < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorProspecting + ') on element of GuildInfosUpgradeMessage.taxCollectorProspecting.');
            }
            this.taxCollectorWisdom = param1.readVarUhShort();
            if (this.taxCollectorWisdom < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorWisdom + ') on element of GuildInfosUpgradeMessage.taxCollectorWisdom.');
            }
            this.boostPoints = param1.readVarUhShort();
            if (this.boostPoints < 0) {
                throw new Error('Forbidden value (' + this.boostPoints + ') on element of GuildInfosUpgradeMessage.boostPoints.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of spellId.');
                }
                this.spellId.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readByte();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of spellLevel.');
                }
                this.spellLevel.push(_loc7_);
                _loc5_++;
            }
        };
        GuildInfosUpgradeMessage.ID = 5636;
        return GuildInfosUpgradeMessage;
    })(NetworkMessage);
    Protocol.GuildInfosUpgradeMessage = GuildInfosUpgradeMessage;
    var GuildInvitationAnswerMessage = (function (_super) {
        __extends(GuildInvitationAnswerMessage, _super);
        function GuildInvitationAnswerMessage() {
            this.accept = false;
            _super.call(this);
        }
        GuildInvitationAnswerMessage.prototype.getMessageId = function () {
            return GuildInvitationAnswerMessage.ID;
        };
        GuildInvitationAnswerMessage.prototype.reset = function () {
            this.accept = false;
        };
        GuildInvitationAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitationAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitationAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitationAnswerMessage(param1);
        };
        GuildInvitationAnswerMessage.prototype.serializeAs_GuildInvitationAnswerMessage = function (param1) {
            param1.writeBoolean(this.accept);
        };
        GuildInvitationAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitationAnswerMessage(param1);
        };
        GuildInvitationAnswerMessage.prototype.deserializeAs_GuildInvitationAnswerMessage = function (param1) {
            this.accept = param1.readBoolean();
        };
        GuildInvitationAnswerMessage.ID = 5556;
        return GuildInvitationAnswerMessage;
    })(NetworkMessage);
    Protocol.GuildInvitationAnswerMessage = GuildInvitationAnswerMessage;
    var GuildInvitationByNameMessage = (function (_super) {
        __extends(GuildInvitationByNameMessage, _super);
        function GuildInvitationByNameMessage() {
            this.name = '';
            _super.call(this);
        }
        GuildInvitationByNameMessage.prototype.getMessageId = function () {
            return GuildInvitationByNameMessage.ID;
        };
        GuildInvitationByNameMessage.prototype.reset = function () {
            this.name = '';
        };
        GuildInvitationByNameMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitationByNameMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitationByNameMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitationByNameMessage(param1);
        };
        GuildInvitationByNameMessage.prototype.serializeAs_GuildInvitationByNameMessage = function (param1) {
            param1.writeUTF(this.name);
        };
        GuildInvitationByNameMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitationByNameMessage(param1);
        };
        GuildInvitationByNameMessage.prototype.deserializeAs_GuildInvitationByNameMessage = function (param1) {
            this.name = param1.readUTF();
        };
        GuildInvitationByNameMessage.ID = 6115;
        return GuildInvitationByNameMessage;
    })(NetworkMessage);
    Protocol.GuildInvitationByNameMessage = GuildInvitationByNameMessage;
    var GuildInvitationMessage = (function (_super) {
        __extends(GuildInvitationMessage, _super);
        function GuildInvitationMessage() {
            this.targetId = 0;
            _super.call(this);
        }
        GuildInvitationMessage.prototype.getMessageId = function () {
            return GuildInvitationMessage.ID;
        };
        GuildInvitationMessage.prototype.reset = function () {
            this.targetId = 0;
        };
        GuildInvitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitationMessage(param1);
        };
        GuildInvitationMessage.prototype.serializeAs_GuildInvitationMessage = function (param1) {
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
        };
        GuildInvitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitationMessage(param1);
        };
        GuildInvitationMessage.prototype.deserializeAs_GuildInvitationMessage = function (param1) {
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of GuildInvitationMessage.targetId.');
            }
        };
        GuildInvitationMessage.ID = 5551;
        return GuildInvitationMessage;
    })(NetworkMessage);
    Protocol.GuildInvitationMessage = GuildInvitationMessage;
    var GuildInvitationStateRecrutedMessage = (function (_super) {
        __extends(GuildInvitationStateRecrutedMessage, _super);
        function GuildInvitationStateRecrutedMessage() {
            this.invitationState = 0;
            _super.call(this);
        }
        GuildInvitationStateRecrutedMessage.prototype.getMessageId = function () {
            return GuildInvitationStateRecrutedMessage.ID;
        };
        GuildInvitationStateRecrutedMessage.prototype.reset = function () {
            this.invitationState = 0;
        };
        GuildInvitationStateRecrutedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitationStateRecrutedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitationStateRecrutedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitationStateRecrutedMessage(param1);
        };
        GuildInvitationStateRecrutedMessage.prototype.serializeAs_GuildInvitationStateRecrutedMessage = function (param1) {
            param1.writeByte(this.invitationState);
        };
        GuildInvitationStateRecrutedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitationStateRecrutedMessage(param1);
        };
        GuildInvitationStateRecrutedMessage.prototype.deserializeAs_GuildInvitationStateRecrutedMessage = function (param1) {
            this.invitationState = param1.readByte();
            if (this.invitationState < 0) {
                throw new Error('Forbidden value (' + this.invitationState + ') on element of GuildInvitationStateRecrutedMessage.invitationState.');
            }
        };
        GuildInvitationStateRecrutedMessage.ID = 5548;
        return GuildInvitationStateRecrutedMessage;
    })(NetworkMessage);
    Protocol.GuildInvitationStateRecrutedMessage = GuildInvitationStateRecrutedMessage;
    var GuildInvitationStateRecruterMessage = (function (_super) {
        __extends(GuildInvitationStateRecruterMessage, _super);
        function GuildInvitationStateRecruterMessage() {
            this.recrutedName = '';
            this.invitationState = 0;
            _super.call(this);
        }
        GuildInvitationStateRecruterMessage.prototype.getMessageId = function () {
            return GuildInvitationStateRecruterMessage.ID;
        };
        GuildInvitationStateRecruterMessage.prototype.reset = function () {
            this.recrutedName = '';
            this.invitationState = 0;
        };
        GuildInvitationStateRecruterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitationStateRecruterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitationStateRecruterMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitationStateRecruterMessage(param1);
        };
        GuildInvitationStateRecruterMessage.prototype.serializeAs_GuildInvitationStateRecruterMessage = function (param1) {
            param1.writeUTF(this.recrutedName);
            param1.writeByte(this.invitationState);
        };
        GuildInvitationStateRecruterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitationStateRecruterMessage(param1);
        };
        GuildInvitationStateRecruterMessage.prototype.deserializeAs_GuildInvitationStateRecruterMessage = function (param1) {
            this.recrutedName = param1.readUTF();
            this.invitationState = param1.readByte();
            if (this.invitationState < 0) {
                throw new Error('Forbidden value (' + this.invitationState + ') on element of GuildInvitationStateRecruterMessage.invitationState.');
            }
        };
        GuildInvitationStateRecruterMessage.ID = 5563;
        return GuildInvitationStateRecruterMessage;
    })(NetworkMessage);
    Protocol.GuildInvitationStateRecruterMessage = GuildInvitationStateRecruterMessage;
    var GuildInvitedMessage = (function (_super) {
        __extends(GuildInvitedMessage, _super);
        function GuildInvitedMessage() {
            this.recruterId = 0;
            this.recruterName = '';
            this.guildInfo = new BasicGuildInformations();
            _super.call(this);
        }
        GuildInvitedMessage.prototype.getMessageId = function () {
            return GuildInvitedMessage.ID;
        };
        GuildInvitedMessage.prototype.reset = function () {
            this.recruterId = 0;
            this.recruterName = '';
            this.guildInfo = new BasicGuildInformations();
        };
        GuildInvitedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildInvitedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildInvitedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildInvitedMessage(param1);
        };
        GuildInvitedMessage.prototype.serializeAs_GuildInvitedMessage = function (param1) {
            if (this.recruterId < 0) {
                throw new Error('Forbidden value (' + this.recruterId + ') on element recruterId.');
            }
            param1.writeVarInt(this.recruterId);
            param1.writeUTF(this.recruterName);
            this.guildInfo.serializeAs_BasicGuildInformations(param1);
        };
        GuildInvitedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInvitedMessage(param1);
        };
        GuildInvitedMessage.prototype.deserializeAs_GuildInvitedMessage = function (param1) {
            this.recruterId = param1.readVarUhInt();
            if (this.recruterId < 0) {
                throw new Error('Forbidden value (' + this.recruterId + ') on element of GuildInvitedMessage.recruterId.');
            }
            this.recruterName = param1.readUTF();
            this.guildInfo = new BasicGuildInformations();
            this.guildInfo.deserialize(param1);
        };
        GuildInvitedMessage.ID = 5552;
        return GuildInvitedMessage;
    })(NetworkMessage);
    Protocol.GuildInvitedMessage = GuildInvitedMessage;
    var GuildJoinedMessage = (function (_super) {
        __extends(GuildJoinedMessage, _super);
        function GuildJoinedMessage() {
            this.guildInfo = new GuildInformations();
            this.memberRights = 0;
            this.enabled = false;
            _super.call(this);
        }
        GuildJoinedMessage.prototype.getMessageId = function () {
            return GuildJoinedMessage.ID;
        };
        GuildJoinedMessage.prototype.reset = function () {
            this.guildInfo = new GuildInformations();
            this.memberRights = 0;
            this.enabled = false;
        };
        GuildJoinedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildJoinedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildJoinedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildJoinedMessage(param1);
        };
        GuildJoinedMessage.prototype.serializeAs_GuildJoinedMessage = function (param1) {
            this.guildInfo.serializeAs_GuildInformations(param1);
            if (this.memberRights < 0) {
                throw new Error('Forbidden value (' + this.memberRights + ') on element memberRights.');
            }
            param1.writeVarInt(this.memberRights);
            param1.writeBoolean(this.enabled);
        };
        GuildJoinedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildJoinedMessage(param1);
        };
        GuildJoinedMessage.prototype.deserializeAs_GuildJoinedMessage = function (param1) {
            this.guildInfo = new GuildInformations();
            this.guildInfo.deserialize(param1);
            this.memberRights = param1.readVarUhInt();
            if (this.memberRights < 0) {
                throw new Error('Forbidden value (' + this.memberRights + ') on element of GuildJoinedMessage.memberRights.');
            }
            this.enabled = param1.readBoolean();
        };
        GuildJoinedMessage.ID = 5564;
        return GuildJoinedMessage;
    })(NetworkMessage);
    Protocol.GuildJoinedMessage = GuildJoinedMessage;
    var GuildKickRequestMessage = (function (_super) {
        __extends(GuildKickRequestMessage, _super);
        function GuildKickRequestMessage() {
            this.kickedId = 0;
            _super.call(this);
        }
        GuildKickRequestMessage.prototype.getMessageId = function () {
            return GuildKickRequestMessage.ID;
        };
        GuildKickRequestMessage.prototype.reset = function () {
            this.kickedId = 0;
        };
        GuildKickRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildKickRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildKickRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildKickRequestMessage(param1);
        };
        GuildKickRequestMessage.prototype.serializeAs_GuildKickRequestMessage = function (param1) {
            if (this.kickedId < 0) {
                throw new Error('Forbidden value (' + this.kickedId + ') on element kickedId.');
            }
            param1.writeVarInt(this.kickedId);
        };
        GuildKickRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildKickRequestMessage(param1);
        };
        GuildKickRequestMessage.prototype.deserializeAs_GuildKickRequestMessage = function (param1) {
            this.kickedId = param1.readVarUhInt();
            if (this.kickedId < 0) {
                throw new Error('Forbidden value (' + this.kickedId + ') on element of GuildKickRequestMessage.kickedId.');
            }
        };
        GuildKickRequestMessage.ID = 5887;
        return GuildKickRequestMessage;
    })(NetworkMessage);
    Protocol.GuildKickRequestMessage = GuildKickRequestMessage;
    var GuildLeftMessage = (function (_super) {
        __extends(GuildLeftMessage, _super);
        function GuildLeftMessage() {
            _super.call(this);
        }
        GuildLeftMessage.prototype.getMessageId = function () {
            return GuildLeftMessage.ID;
        };
        GuildLeftMessage.prototype.reset = function () {
        };
        GuildLeftMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildLeftMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildLeftMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildLeftMessage(param1);
        };
        GuildLeftMessage.prototype.serializeAs_GuildLeftMessage = function (param1) {
        };
        GuildLeftMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildLeftMessage(param1);
        };
        GuildLeftMessage.prototype.deserializeAs_GuildLeftMessage = function (param1) {
        };
        GuildLeftMessage.ID = 5562;
        return GuildLeftMessage;
    })(NetworkMessage);
    Protocol.GuildLeftMessage = GuildLeftMessage;
    var GuildLevelUpMessage = (function (_super) {
        __extends(GuildLevelUpMessage, _super);
        function GuildLevelUpMessage() {
            this.newLevel = 0;
            _super.call(this);
        }
        GuildLevelUpMessage.prototype.getMessageId = function () {
            return GuildLevelUpMessage.ID;
        };
        GuildLevelUpMessage.prototype.reset = function () {
            this.newLevel = 0;
        };
        GuildLevelUpMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildLevelUpMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildLevelUpMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildLevelUpMessage(param1);
        };
        GuildLevelUpMessage.prototype.serializeAs_GuildLevelUpMessage = function (param1) {
            if (this.newLevel < 2 || this.newLevel > 200) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element newLevel.');
            }
            param1.writeByte(this.newLevel);
        };
        GuildLevelUpMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildLevelUpMessage(param1);
        };
        GuildLevelUpMessage.prototype.deserializeAs_GuildLevelUpMessage = function (param1) {
            this.newLevel = param1.readUnsignedByte();
            if (this.newLevel < 2 || this.newLevel > 200) {
                throw new Error('Forbidden value (' + this.newLevel + ') on element of GuildLevelUpMessage.newLevel.');
            }
        };
        GuildLevelUpMessage.ID = 6062;
        return GuildLevelUpMessage;
    })(NetworkMessage);
    Protocol.GuildLevelUpMessage = GuildLevelUpMessage;
    var GuildListMessage = (function (_super) {
        __extends(GuildListMessage, _super);
        function GuildListMessage() {
            this.guilds = [];
            _super.call(this);
        }
        GuildListMessage.prototype.getMessageId = function () {
            return GuildListMessage.ID;
        };
        GuildListMessage.prototype.reset = function () {
            this.guilds = [];
        };
        GuildListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildListMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildListMessage(param1);
        };
        GuildListMessage.prototype.serializeAs_GuildListMessage = function (param1) {
            param1.writeShort(this.guilds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.guilds.length) {
                (this.guilds[_loc2_]).serializeAs_GuildInformations(param1);
                _loc2_++;
            }
        };
        GuildListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildListMessage(param1);
        };
        GuildListMessage.prototype.deserializeAs_GuildListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GuildInformations();
                _loc4_.deserialize(param1);
                this.guilds.push(_loc4_);
                _loc3_++;
            }
        };
        GuildListMessage.ID = 6413;
        return GuildListMessage;
    })(NetworkMessage);
    Protocol.GuildListMessage = GuildListMessage;
    var GuildMemberLeavingMessage = (function (_super) {
        __extends(GuildMemberLeavingMessage, _super);
        function GuildMemberLeavingMessage() {
            this.kicked = false;
            this.memberId = 0;
            _super.call(this);
        }
        GuildMemberLeavingMessage.prototype.getMessageId = function () {
            return GuildMemberLeavingMessage.ID;
        };
        GuildMemberLeavingMessage.prototype.reset = function () {
            this.kicked = false;
            this.memberId = 0;
        };
        GuildMemberLeavingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMemberLeavingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMemberLeavingMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMemberLeavingMessage(param1);
        };
        GuildMemberLeavingMessage.prototype.serializeAs_GuildMemberLeavingMessage = function (param1) {
            param1.writeBoolean(this.kicked);
            param1.writeInt(this.memberId);
        };
        GuildMemberLeavingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMemberLeavingMessage(param1);
        };
        GuildMemberLeavingMessage.prototype.deserializeAs_GuildMemberLeavingMessage = function (param1) {
            this.kicked = param1.readBoolean();
            this.memberId = param1.readInt();
        };
        GuildMemberLeavingMessage.ID = 5923;
        return GuildMemberLeavingMessage;
    })(NetworkMessage);
    Protocol.GuildMemberLeavingMessage = GuildMemberLeavingMessage;
    var GuildMemberOnlineStatusMessage = (function (_super) {
        __extends(GuildMemberOnlineStatusMessage, _super);
        function GuildMemberOnlineStatusMessage() {
            this.memberId = 0;
            this.online = false;
            _super.call(this);
        }
        GuildMemberOnlineStatusMessage.prototype.getMessageId = function () {
            return GuildMemberOnlineStatusMessage.ID;
        };
        GuildMemberOnlineStatusMessage.prototype.reset = function () {
            this.memberId = 0;
            this.online = false;
        };
        GuildMemberOnlineStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMemberOnlineStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMemberOnlineStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMemberOnlineStatusMessage(param1);
        };
        GuildMemberOnlineStatusMessage.prototype.serializeAs_GuildMemberOnlineStatusMessage = function (param1) {
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeVarInt(this.memberId);
            param1.writeBoolean(this.online);
        };
        GuildMemberOnlineStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMemberOnlineStatusMessage(param1);
        };
        GuildMemberOnlineStatusMessage.prototype.deserializeAs_GuildMemberOnlineStatusMessage = function (param1) {
            this.memberId = param1.readVarUhInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of GuildMemberOnlineStatusMessage.memberId.');
            }
            this.online = param1.readBoolean();
        };
        GuildMemberOnlineStatusMessage.ID = 6061;
        return GuildMemberOnlineStatusMessage;
    })(NetworkMessage);
    Protocol.GuildMemberOnlineStatusMessage = GuildMemberOnlineStatusMessage;
    var GuildMembershipMessage = (function (_super) {
        __extends(GuildMembershipMessage, _super);
        function GuildMembershipMessage() {
            _super.call(this);
        }
        GuildMembershipMessage.prototype.getMessageId = function () {
            return GuildMembershipMessage.ID;
        };
        GuildMembershipMessage.prototype.reset = function () {
        };
        GuildMembershipMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMembershipMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMembershipMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMembershipMessage(param1);
        };
        GuildMembershipMessage.prototype.serializeAs_GuildMembershipMessage = function (param1) {
            _super.prototype.serializeAs_GuildJoinedMessage.call(this, param1);
        };
        GuildMembershipMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMembershipMessage(param1);
        };
        GuildMembershipMessage.prototype.deserializeAs_GuildMembershipMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GuildMembershipMessage.ID = 5835;
        return GuildMembershipMessage;
    })(GuildJoinedMessage);
    Protocol.GuildMembershipMessage = GuildMembershipMessage;
    var GuildModificationEmblemValidMessage = (function (_super) {
        __extends(GuildModificationEmblemValidMessage, _super);
        function GuildModificationEmblemValidMessage() {
            this.guildEmblem = new GuildEmblem();
            _super.call(this);
        }
        GuildModificationEmblemValidMessage.prototype.getMessageId = function () {
            return GuildModificationEmblemValidMessage.ID;
        };
        GuildModificationEmblemValidMessage.prototype.reset = function () {
            this.guildEmblem = new GuildEmblem();
        };
        GuildModificationEmblemValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildModificationEmblemValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildModificationEmblemValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildModificationEmblemValidMessage(param1);
        };
        GuildModificationEmblemValidMessage.prototype.serializeAs_GuildModificationEmblemValidMessage = function (param1) {
            this.guildEmblem.serializeAs_GuildEmblem(param1);
        };
        GuildModificationEmblemValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildModificationEmblemValidMessage(param1);
        };
        GuildModificationEmblemValidMessage.prototype.deserializeAs_GuildModificationEmblemValidMessage = function (param1) {
            this.guildEmblem = new GuildEmblem();
            this.guildEmblem.deserialize(param1);
        };
        GuildModificationEmblemValidMessage.ID = 6328;
        return GuildModificationEmblemValidMessage;
    })(NetworkMessage);
    Protocol.GuildModificationEmblemValidMessage = GuildModificationEmblemValidMessage;
    var GuildModificationNameValidMessage = (function (_super) {
        __extends(GuildModificationNameValidMessage, _super);
        function GuildModificationNameValidMessage() {
            this.guildName = '';
            _super.call(this);
        }
        GuildModificationNameValidMessage.prototype.getMessageId = function () {
            return GuildModificationNameValidMessage.ID;
        };
        GuildModificationNameValidMessage.prototype.reset = function () {
            this.guildName = '';
        };
        GuildModificationNameValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildModificationNameValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildModificationNameValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildModificationNameValidMessage(param1);
        };
        GuildModificationNameValidMessage.prototype.serializeAs_GuildModificationNameValidMessage = function (param1) {
            param1.writeUTF(this.guildName);
        };
        GuildModificationNameValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildModificationNameValidMessage(param1);
        };
        GuildModificationNameValidMessage.prototype.deserializeAs_GuildModificationNameValidMessage = function (param1) {
            this.guildName = param1.readUTF();
        };
        GuildModificationNameValidMessage.ID = 6327;
        return GuildModificationNameValidMessage;
    })(NetworkMessage);
    Protocol.GuildModificationNameValidMessage = GuildModificationNameValidMessage;
    var GuildModificationStartedMessage = (function (_super) {
        __extends(GuildModificationStartedMessage, _super);
        function GuildModificationStartedMessage() {
            this.canChangeName = false;
            this.canChangeEmblem = false;
            _super.call(this);
        }
        GuildModificationStartedMessage.prototype.getMessageId = function () {
            return GuildModificationStartedMessage.ID;
        };
        GuildModificationStartedMessage.prototype.reset = function () {
            this.canChangeName = false;
            this.canChangeEmblem = false;
        };
        GuildModificationStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildModificationStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildModificationStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildModificationStartedMessage(param1);
        };
        GuildModificationStartedMessage.prototype.serializeAs_GuildModificationStartedMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.canChangeName);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.canChangeEmblem);
            param1.writeByte(_loc2_);
        };
        GuildModificationStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildModificationStartedMessage(param1);
        };
        GuildModificationStartedMessage.prototype.deserializeAs_GuildModificationStartedMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.canChangeName = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.canChangeEmblem = BooleanByteWrapper.getFlag(_loc2_, 1);
        };
        GuildModificationStartedMessage.ID = 6324;
        return GuildModificationStartedMessage;
    })(NetworkMessage);
    Protocol.GuildModificationStartedMessage = GuildModificationStartedMessage;
    var GuildModificationValidMessage = (function (_super) {
        __extends(GuildModificationValidMessage, _super);
        function GuildModificationValidMessage() {
            this.guildName = '';
            this.guildEmblem = new GuildEmblem();
            _super.call(this);
        }
        GuildModificationValidMessage.prototype.getMessageId = function () {
            return GuildModificationValidMessage.ID;
        };
        GuildModificationValidMessage.prototype.reset = function () {
            this.guildName = '';
            this.guildEmblem = new GuildEmblem();
        };
        GuildModificationValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildModificationValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildModificationValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildModificationValidMessage(param1);
        };
        GuildModificationValidMessage.prototype.serializeAs_GuildModificationValidMessage = function (param1) {
            param1.writeUTF(this.guildName);
            this.guildEmblem.serializeAs_GuildEmblem(param1);
        };
        GuildModificationValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildModificationValidMessage(param1);
        };
        GuildModificationValidMessage.prototype.deserializeAs_GuildModificationValidMessage = function (param1) {
            this.guildName = param1.readUTF();
            this.guildEmblem = new GuildEmblem();
            this.guildEmblem.deserialize(param1);
        };
        GuildModificationValidMessage.ID = 6323;
        return GuildModificationValidMessage;
    })(NetworkMessage);
    Protocol.GuildModificationValidMessage = GuildModificationValidMessage;
    var GuildMotdMessage = (function (_super) {
        __extends(GuildMotdMessage, _super);
        function GuildMotdMessage() {
            this.content = '';
            this.timestamp = 0;
            _super.call(this);
        }
        GuildMotdMessage.prototype.getMessageId = function () {
            return GuildMotdMessage.ID;
        };
        GuildMotdMessage.prototype.reset = function () {
            this.content = '';
            this.timestamp = 0;
        };
        GuildMotdMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMotdMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMotdMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMotdMessage(param1);
        };
        GuildMotdMessage.prototype.serializeAs_GuildMotdMessage = function (param1) {
            param1.writeUTF(this.content);
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element timestamp.');
            }
            param1.writeInt(this.timestamp);
        };
        GuildMotdMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMotdMessage(param1);
        };
        GuildMotdMessage.prototype.deserializeAs_GuildMotdMessage = function (param1) {
            this.content = param1.readUTF();
            this.timestamp = param1.readInt();
            if (this.timestamp < 0) {
                throw new Error('Forbidden value (' + this.timestamp + ') on element of GuildMotdMessage.timestamp.');
            }
        };
        GuildMotdMessage.ID = 6590;
        return GuildMotdMessage;
    })(NetworkMessage);
    Protocol.GuildMotdMessage = GuildMotdMessage;
    var GuildMotdSetErrorMessage = (function (_super) {
        __extends(GuildMotdSetErrorMessage, _super);
        function GuildMotdSetErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        GuildMotdSetErrorMessage.prototype.getMessageId = function () {
            return GuildMotdSetErrorMessage.ID;
        };
        GuildMotdSetErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        GuildMotdSetErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildMotdSetErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildMotdSetErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildMotdSetErrorMessage(param1);
        };
        GuildMotdSetErrorMessage.prototype.serializeAs_GuildMotdSetErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        GuildMotdSetErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMotdSetErrorMessage(param1);
        };
        GuildMotdSetErrorMessage.prototype.deserializeAs_GuildMotdSetErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of GuildMotdSetErrorMessage.reason.');
            }
        };
        GuildMotdSetErrorMessage.ID = 6591;
        return GuildMotdSetErrorMessage;
    })(NetworkMessage);
    Protocol.GuildMotdSetErrorMessage = GuildMotdSetErrorMessage;
    var GuildPaddockBoughtMessage = (function (_super) {
        __extends(GuildPaddockBoughtMessage, _super);
        function GuildPaddockBoughtMessage() {
            this.paddockInfo = new PaddockContentInformations();
            _super.call(this);
        }
        GuildPaddockBoughtMessage.prototype.getMessageId = function () {
            return GuildPaddockBoughtMessage.ID;
        };
        GuildPaddockBoughtMessage.prototype.reset = function () {
            this.paddockInfo = new PaddockContentInformations();
        };
        GuildPaddockBoughtMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildPaddockBoughtMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildPaddockBoughtMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildPaddockBoughtMessage(param1);
        };
        GuildPaddockBoughtMessage.prototype.serializeAs_GuildPaddockBoughtMessage = function (param1) {
            this.paddockInfo.serializeAs_PaddockContentInformations(param1);
        };
        GuildPaddockBoughtMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildPaddockBoughtMessage(param1);
        };
        GuildPaddockBoughtMessage.prototype.deserializeAs_GuildPaddockBoughtMessage = function (param1) {
            this.paddockInfo = new PaddockContentInformations();
            this.paddockInfo.deserialize(param1);
        };
        GuildPaddockBoughtMessage.ID = 5952;
        return GuildPaddockBoughtMessage;
    })(NetworkMessage);
    Protocol.GuildPaddockBoughtMessage = GuildPaddockBoughtMessage;
    var GuildPaddockRemovedMessage = (function (_super) {
        __extends(GuildPaddockRemovedMessage, _super);
        function GuildPaddockRemovedMessage() {
            this.paddockId = 0;
            _super.call(this);
        }
        GuildPaddockRemovedMessage.prototype.getMessageId = function () {
            return GuildPaddockRemovedMessage.ID;
        };
        GuildPaddockRemovedMessage.prototype.reset = function () {
            this.paddockId = 0;
        };
        GuildPaddockRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildPaddockRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildPaddockRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildPaddockRemovedMessage(param1);
        };
        GuildPaddockRemovedMessage.prototype.serializeAs_GuildPaddockRemovedMessage = function (param1) {
            param1.writeInt(this.paddockId);
        };
        GuildPaddockRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildPaddockRemovedMessage(param1);
        };
        GuildPaddockRemovedMessage.prototype.deserializeAs_GuildPaddockRemovedMessage = function (param1) {
            this.paddockId = param1.readInt();
        };
        GuildPaddockRemovedMessage.ID = 5955;
        return GuildPaddockRemovedMessage;
    })(NetworkMessage);
    Protocol.GuildPaddockRemovedMessage = GuildPaddockRemovedMessage;
    var GuildPaddockTeleportRequestMessage = (function (_super) {
        __extends(GuildPaddockTeleportRequestMessage, _super);
        function GuildPaddockTeleportRequestMessage() {
            this.paddockId = 0;
            _super.call(this);
        }
        GuildPaddockTeleportRequestMessage.prototype.getMessageId = function () {
            return GuildPaddockTeleportRequestMessage.ID;
        };
        GuildPaddockTeleportRequestMessage.prototype.reset = function () {
            this.paddockId = 0;
        };
        GuildPaddockTeleportRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildPaddockTeleportRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildPaddockTeleportRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildPaddockTeleportRequestMessage(param1);
        };
        GuildPaddockTeleportRequestMessage.prototype.serializeAs_GuildPaddockTeleportRequestMessage = function (param1) {
            param1.writeInt(this.paddockId);
        };
        GuildPaddockTeleportRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildPaddockTeleportRequestMessage(param1);
        };
        GuildPaddockTeleportRequestMessage.prototype.deserializeAs_GuildPaddockTeleportRequestMessage = function (param1) {
            this.paddockId = param1.readInt();
        };
        GuildPaddockTeleportRequestMessage.ID = 5957;
        return GuildPaddockTeleportRequestMessage;
    })(NetworkMessage);
    Protocol.GuildPaddockTeleportRequestMessage = GuildPaddockTeleportRequestMessage;
    var GuildSpellUpgradeRequestMessage = (function (_super) {
        __extends(GuildSpellUpgradeRequestMessage, _super);
        function GuildSpellUpgradeRequestMessage() {
            this.spellId = 0;
            _super.call(this);
        }
        GuildSpellUpgradeRequestMessage.prototype.getMessageId = function () {
            return GuildSpellUpgradeRequestMessage.ID;
        };
        GuildSpellUpgradeRequestMessage.prototype.reset = function () {
            this.spellId = 0;
        };
        GuildSpellUpgradeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildSpellUpgradeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildSpellUpgradeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildSpellUpgradeRequestMessage(param1);
        };
        GuildSpellUpgradeRequestMessage.prototype.serializeAs_GuildSpellUpgradeRequestMessage = function (param1) {
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeInt(this.spellId);
        };
        GuildSpellUpgradeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildSpellUpgradeRequestMessage(param1);
        };
        GuildSpellUpgradeRequestMessage.prototype.deserializeAs_GuildSpellUpgradeRequestMessage = function (param1) {
            this.spellId = param1.readInt();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of GuildSpellUpgradeRequestMessage.spellId.');
            }
        };
        GuildSpellUpgradeRequestMessage.ID = 5699;
        return GuildSpellUpgradeRequestMessage;
    })(NetworkMessage);
    Protocol.GuildSpellUpgradeRequestMessage = GuildSpellUpgradeRequestMessage;
    var GuildVersatileInfoListMessage = (function (_super) {
        __extends(GuildVersatileInfoListMessage, _super);
        function GuildVersatileInfoListMessage() {
            this.guilds = [];
            _super.call(this);
        }
        GuildVersatileInfoListMessage.prototype.getMessageId = function () {
            return GuildVersatileInfoListMessage.ID;
        };
        GuildVersatileInfoListMessage.prototype.reset = function () {
            this.guilds = [];
        };
        GuildVersatileInfoListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildVersatileInfoListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildVersatileInfoListMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildVersatileInfoListMessage(param1);
        };
        GuildVersatileInfoListMessage.prototype.serializeAs_GuildVersatileInfoListMessage = function (param1) {
            param1.writeShort(this.guilds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.guilds.length) {
                param1.writeShort((this.guilds[_loc2_]).getTypeId());
                (this.guilds[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        GuildVersatileInfoListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildVersatileInfoListMessage(param1);
        };
        GuildVersatileInfoListMessage.prototype.deserializeAs_GuildVersatileInfoListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(GuildVersatileInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.guilds.push(_loc5_);
                _loc3_++;
            }
        };
        GuildVersatileInfoListMessage.ID = 6435;
        return GuildVersatileInfoListMessage;
    })(NetworkMessage);
    Protocol.GuildVersatileInfoListMessage = GuildVersatileInfoListMessage;
    var AbstractTaxCollectorListMessage = (function (_super) {
        __extends(AbstractTaxCollectorListMessage, _super);
        function AbstractTaxCollectorListMessage() {
            this.informations = [];
            _super.call(this);
        }
        AbstractTaxCollectorListMessage.prototype.getMessageId = function () {
            return AbstractTaxCollectorListMessage.ID;
        };
        AbstractTaxCollectorListMessage.prototype.reset = function () {
            this.informations = [];
        };
        AbstractTaxCollectorListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AbstractTaxCollectorListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AbstractTaxCollectorListMessage.prototype.serialize = function (param1) {
            this.serializeAs_AbstractTaxCollectorListMessage(param1);
        };
        AbstractTaxCollectorListMessage.prototype.serializeAs_AbstractTaxCollectorListMessage = function (param1) {
            param1.writeShort(this.informations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.informations.length) {
                param1.writeShort((this.informations[_loc2_]).getTypeId());
                (this.informations[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        AbstractTaxCollectorListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractTaxCollectorListMessage(param1);
        };
        AbstractTaxCollectorListMessage.prototype.deserializeAs_AbstractTaxCollectorListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(TaxCollectorInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.informations.push(_loc5_);
                _loc3_++;
            }
        };
        AbstractTaxCollectorListMessage.ID = 6568;
        return AbstractTaxCollectorListMessage;
    })(NetworkMessage);
    Protocol.AbstractTaxCollectorListMessage = AbstractTaxCollectorListMessage;
    var GameRolePlayTaxCollectorFightRequestMessage = (function (_super) {
        __extends(GameRolePlayTaxCollectorFightRequestMessage, _super);
        function GameRolePlayTaxCollectorFightRequestMessage() {
            this.taxCollectorId = 0;
            _super.call(this);
        }
        GameRolePlayTaxCollectorFightRequestMessage.prototype.getMessageId = function () {
            return GameRolePlayTaxCollectorFightRequestMessage.ID;
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.reset = function () {
            this.taxCollectorId = 0;
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayTaxCollectorFightRequestMessage(param1);
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.serializeAs_GameRolePlayTaxCollectorFightRequestMessage = function (param1) {
            param1.writeInt(this.taxCollectorId);
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayTaxCollectorFightRequestMessage(param1);
        };
        GameRolePlayTaxCollectorFightRequestMessage.prototype.deserializeAs_GameRolePlayTaxCollectorFightRequestMessage = function (param1) {
            this.taxCollectorId = param1.readInt();
        };
        GameRolePlayTaxCollectorFightRequestMessage.ID = 5954;
        return GameRolePlayTaxCollectorFightRequestMessage;
    })(NetworkMessage);
    Protocol.GameRolePlayTaxCollectorFightRequestMessage = GameRolePlayTaxCollectorFightRequestMessage;
    var GuildFightJoinRequestMessage = (function (_super) {
        __extends(GuildFightJoinRequestMessage, _super);
        function GuildFightJoinRequestMessage() {
            this.taxCollectorId = 0;
            _super.call(this);
        }
        GuildFightJoinRequestMessage.prototype.getMessageId = function () {
            return GuildFightJoinRequestMessage.ID;
        };
        GuildFightJoinRequestMessage.prototype.reset = function () {
            this.taxCollectorId = 0;
        };
        GuildFightJoinRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightJoinRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightJoinRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightJoinRequestMessage(param1);
        };
        GuildFightJoinRequestMessage.prototype.serializeAs_GuildFightJoinRequestMessage = function (param1) {
            param1.writeInt(this.taxCollectorId);
        };
        GuildFightJoinRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightJoinRequestMessage(param1);
        };
        GuildFightJoinRequestMessage.prototype.deserializeAs_GuildFightJoinRequestMessage = function (param1) {
            this.taxCollectorId = param1.readInt();
        };
        GuildFightJoinRequestMessage.ID = 5717;
        return GuildFightJoinRequestMessage;
    })(NetworkMessage);
    Protocol.GuildFightJoinRequestMessage = GuildFightJoinRequestMessage;
    var GuildFightLeaveRequestMessage = (function (_super) {
        __extends(GuildFightLeaveRequestMessage, _super);
        function GuildFightLeaveRequestMessage() {
            this.taxCollectorId = 0;
            this.characterId = 0;
            _super.call(this);
        }
        GuildFightLeaveRequestMessage.prototype.getMessageId = function () {
            return GuildFightLeaveRequestMessage.ID;
        };
        GuildFightLeaveRequestMessage.prototype.reset = function () {
            this.taxCollectorId = 0;
            this.characterId = 0;
        };
        GuildFightLeaveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightLeaveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightLeaveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightLeaveRequestMessage(param1);
        };
        GuildFightLeaveRequestMessage.prototype.serializeAs_GuildFightLeaveRequestMessage = function (param1) {
            if (this.taxCollectorId < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorId + ') on element taxCollectorId.');
            }
            param1.writeInt(this.taxCollectorId);
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeVarInt(this.characterId);
        };
        GuildFightLeaveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightLeaveRequestMessage(param1);
        };
        GuildFightLeaveRequestMessage.prototype.deserializeAs_GuildFightLeaveRequestMessage = function (param1) {
            this.taxCollectorId = param1.readInt();
            if (this.taxCollectorId < 0) {
                throw new Error('Forbidden value (' + this.taxCollectorId + ') on element of GuildFightLeaveRequestMessage.taxCollectorId.');
            }
            this.characterId = param1.readVarUhInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of GuildFightLeaveRequestMessage.characterId.');
            }
        };
        GuildFightLeaveRequestMessage.ID = 5715;
        return GuildFightLeaveRequestMessage;
    })(NetworkMessage);
    Protocol.GuildFightLeaveRequestMessage = GuildFightLeaveRequestMessage;
    var GuildFightPlayersEnemiesListMessage = (function (_super) {
        __extends(GuildFightPlayersEnemiesListMessage, _super);
        function GuildFightPlayersEnemiesListMessage() {
            this.fightId = 0;
            this.playerInfo = [];
            _super.call(this);
        }
        GuildFightPlayersEnemiesListMessage.prototype.getMessageId = function () {
            return GuildFightPlayersEnemiesListMessage.ID;
        };
        GuildFightPlayersEnemiesListMessage.prototype.reset = function () {
            this.fightId = 0;
            this.playerInfo = [];
        };
        GuildFightPlayersEnemiesListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightPlayersEnemiesListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightPlayersEnemiesListMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightPlayersEnemiesListMessage(param1);
        };
        GuildFightPlayersEnemiesListMessage.prototype.serializeAs_GuildFightPlayersEnemiesListMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            param1.writeShort(this.playerInfo.length);
            var _loc2_ = 0;
            while (_loc2_ < this.playerInfo.length) {
                (this.playerInfo[_loc2_]).serializeAs_CharacterMinimalPlusLookInformations(param1);
                _loc2_++;
            }
        };
        GuildFightPlayersEnemiesListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightPlayersEnemiesListMessage(param1);
        };
        GuildFightPlayersEnemiesListMessage.prototype.deserializeAs_GuildFightPlayersEnemiesListMessage = function (param1) {
            var _loc4_ = null;
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GuildFightPlayersEnemiesListMessage.fightId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new CharacterMinimalPlusLookInformations();
                _loc4_.deserialize(param1);
                this.playerInfo.push(_loc4_);
                _loc3_++;
            }
        };
        GuildFightPlayersEnemiesListMessage.ID = 5928;
        return GuildFightPlayersEnemiesListMessage;
    })(NetworkMessage);
    Protocol.GuildFightPlayersEnemiesListMessage = GuildFightPlayersEnemiesListMessage;
    var GuildFightPlayersEnemyRemoveMessage = (function (_super) {
        __extends(GuildFightPlayersEnemyRemoveMessage, _super);
        function GuildFightPlayersEnemyRemoveMessage() {
            this.fightId = 0;
            this.playerId = 0;
            _super.call(this);
        }
        GuildFightPlayersEnemyRemoveMessage.prototype.getMessageId = function () {
            return GuildFightPlayersEnemyRemoveMessage.ID;
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.reset = function () {
            this.fightId = 0;
            this.playerId = 0;
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightPlayersEnemyRemoveMessage(param1);
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.serializeAs_GuildFightPlayersEnemyRemoveMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightPlayersEnemyRemoveMessage(param1);
        };
        GuildFightPlayersEnemyRemoveMessage.prototype.deserializeAs_GuildFightPlayersEnemyRemoveMessage = function (param1) {
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GuildFightPlayersEnemyRemoveMessage.fightId.');
            }
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of GuildFightPlayersEnemyRemoveMessage.playerId.');
            }
        };
        GuildFightPlayersEnemyRemoveMessage.ID = 5929;
        return GuildFightPlayersEnemyRemoveMessage;
    })(NetworkMessage);
    Protocol.GuildFightPlayersEnemyRemoveMessage = GuildFightPlayersEnemyRemoveMessage;
    var GuildFightPlayersHelpersJoinMessage = (function (_super) {
        __extends(GuildFightPlayersHelpersJoinMessage, _super);
        function GuildFightPlayersHelpersJoinMessage() {
            this.fightId = 0;
            this.playerInfo = new CharacterMinimalPlusLookInformations();
            _super.call(this);
        }
        GuildFightPlayersHelpersJoinMessage.prototype.getMessageId = function () {
            return GuildFightPlayersHelpersJoinMessage.ID;
        };
        GuildFightPlayersHelpersJoinMessage.prototype.reset = function () {
            this.fightId = 0;
            this.playerInfo = new CharacterMinimalPlusLookInformations();
        };
        GuildFightPlayersHelpersJoinMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightPlayersHelpersJoinMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightPlayersHelpersJoinMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightPlayersHelpersJoinMessage(param1);
        };
        GuildFightPlayersHelpersJoinMessage.prototype.serializeAs_GuildFightPlayersHelpersJoinMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            this.playerInfo.serializeAs_CharacterMinimalPlusLookInformations(param1);
        };
        GuildFightPlayersHelpersJoinMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightPlayersHelpersJoinMessage(param1);
        };
        GuildFightPlayersHelpersJoinMessage.prototype.deserializeAs_GuildFightPlayersHelpersJoinMessage = function (param1) {
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GuildFightPlayersHelpersJoinMessage.fightId.');
            }
            this.playerInfo = new CharacterMinimalPlusLookInformations();
            this.playerInfo.deserialize(param1);
        };
        GuildFightPlayersHelpersJoinMessage.ID = 5720;
        return GuildFightPlayersHelpersJoinMessage;
    })(NetworkMessage);
    Protocol.GuildFightPlayersHelpersJoinMessage = GuildFightPlayersHelpersJoinMessage;
    var GuildFightPlayersHelpersLeaveMessage = (function (_super) {
        __extends(GuildFightPlayersHelpersLeaveMessage, _super);
        function GuildFightPlayersHelpersLeaveMessage() {
            this.fightId = 0;
            this.playerId = 0;
            _super.call(this);
        }
        GuildFightPlayersHelpersLeaveMessage.prototype.getMessageId = function () {
            return GuildFightPlayersHelpersLeaveMessage.ID;
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.reset = function () {
            this.fightId = 0;
            this.playerId = 0;
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightPlayersHelpersLeaveMessage(param1);
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.serializeAs_GuildFightPlayersHelpersLeaveMessage = function (param1) {
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeInt(this.fightId);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightPlayersHelpersLeaveMessage(param1);
        };
        GuildFightPlayersHelpersLeaveMessage.prototype.deserializeAs_GuildFightPlayersHelpersLeaveMessage = function (param1) {
            this.fightId = param1.readInt();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of GuildFightPlayersHelpersLeaveMessage.fightId.');
            }
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of GuildFightPlayersHelpersLeaveMessage.playerId.');
            }
        };
        GuildFightPlayersHelpersLeaveMessage.ID = 5719;
        return GuildFightPlayersHelpersLeaveMessage;
    })(NetworkMessage);
    Protocol.GuildFightPlayersHelpersLeaveMessage = GuildFightPlayersHelpersLeaveMessage;
    var GuildFightTakePlaceRequestMessage = (function (_super) {
        __extends(GuildFightTakePlaceRequestMessage, _super);
        function GuildFightTakePlaceRequestMessage() {
            this.replacedCharacterId = 0;
            _super.call(this);
        }
        GuildFightTakePlaceRequestMessage.prototype.getMessageId = function () {
            return GuildFightTakePlaceRequestMessage.ID;
        };
        GuildFightTakePlaceRequestMessage.prototype.reset = function () {
            this.replacedCharacterId = 0;
        };
        GuildFightTakePlaceRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GuildFightTakePlaceRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GuildFightTakePlaceRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_GuildFightTakePlaceRequestMessage(param1);
        };
        GuildFightTakePlaceRequestMessage.prototype.serializeAs_GuildFightTakePlaceRequestMessage = function (param1) {
            _super.prototype.serializeAs_GuildFightJoinRequestMessage.call(this, param1);
            param1.writeInt(this.replacedCharacterId);
        };
        GuildFightTakePlaceRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFightTakePlaceRequestMessage(param1);
        };
        GuildFightTakePlaceRequestMessage.prototype.deserializeAs_GuildFightTakePlaceRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.replacedCharacterId = param1.readInt();
        };
        GuildFightTakePlaceRequestMessage.ID = 6235;
        return GuildFightTakePlaceRequestMessage;
    })(GuildFightJoinRequestMessage);
    Protocol.GuildFightTakePlaceRequestMessage = GuildFightTakePlaceRequestMessage;
    var TaxCollectorAttackedMessage = (function (_super) {
        __extends(TaxCollectorAttackedMessage, _super);
        function TaxCollectorAttackedMessage() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.guild = new BasicGuildInformations();
            _super.call(this);
        }
        TaxCollectorAttackedMessage.prototype.getMessageId = function () {
            return TaxCollectorAttackedMessage.ID;
        };
        TaxCollectorAttackedMessage.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.guild = new BasicGuildInformations();
        };
        TaxCollectorAttackedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorAttackedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorAttackedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorAttackedMessage(param1);
        };
        TaxCollectorAttackedMessage.prototype.serializeAs_TaxCollectorAttackedMessage = function (param1) {
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            this.guild.serializeAs_BasicGuildInformations(param1);
        };
        TaxCollectorAttackedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorAttackedMessage(param1);
        };
        TaxCollectorAttackedMessage.prototype.deserializeAs_TaxCollectorAttackedMessage = function (param1) {
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of TaxCollectorAttackedMessage.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of TaxCollectorAttackedMessage.lastNameId.');
            }
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of TaxCollectorAttackedMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of TaxCollectorAttackedMessage.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of TaxCollectorAttackedMessage.subAreaId.');
            }
            this.guild = new BasicGuildInformations();
            this.guild.deserialize(param1);
        };
        TaxCollectorAttackedMessage.ID = 5918;
        return TaxCollectorAttackedMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorAttackedMessage = TaxCollectorAttackedMessage;
    var TaxCollectorAttackedResultMessage = (function (_super) {
        __extends(TaxCollectorAttackedResultMessage, _super);
        function TaxCollectorAttackedResultMessage() {
            this.deadOrAlive = false;
            this.basicInfos = new TaxCollectorBasicInformations();
            this.guild = new BasicGuildInformations();
            _super.call(this);
        }
        TaxCollectorAttackedResultMessage.prototype.getMessageId = function () {
            return TaxCollectorAttackedResultMessage.ID;
        };
        TaxCollectorAttackedResultMessage.prototype.reset = function () {
            this.deadOrAlive = false;
            this.basicInfos = new TaxCollectorBasicInformations();
            this.guild = new BasicGuildInformations();
        };
        TaxCollectorAttackedResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorAttackedResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorAttackedResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorAttackedResultMessage(param1);
        };
        TaxCollectorAttackedResultMessage.prototype.serializeAs_TaxCollectorAttackedResultMessage = function (param1) {
            param1.writeBoolean(this.deadOrAlive);
            this.basicInfos.serializeAs_TaxCollectorBasicInformations(param1);
            this.guild.serializeAs_BasicGuildInformations(param1);
        };
        TaxCollectorAttackedResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorAttackedResultMessage(param1);
        };
        TaxCollectorAttackedResultMessage.prototype.deserializeAs_TaxCollectorAttackedResultMessage = function (param1) {
            this.deadOrAlive = param1.readBoolean();
            this.basicInfos = new TaxCollectorBasicInformations();
            this.basicInfos.deserialize(param1);
            this.guild = new BasicGuildInformations();
            this.guild.deserialize(param1);
        };
        TaxCollectorAttackedResultMessage.ID = 5635;
        return TaxCollectorAttackedResultMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorAttackedResultMessage = TaxCollectorAttackedResultMessage;
    var TaxCollectorErrorMessage = (function (_super) {
        __extends(TaxCollectorErrorMessage, _super);
        function TaxCollectorErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        TaxCollectorErrorMessage.prototype.getMessageId = function () {
            return TaxCollectorErrorMessage.ID;
        };
        TaxCollectorErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        TaxCollectorErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorErrorMessage(param1);
        };
        TaxCollectorErrorMessage.prototype.serializeAs_TaxCollectorErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        TaxCollectorErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorErrorMessage(param1);
        };
        TaxCollectorErrorMessage.prototype.deserializeAs_TaxCollectorErrorMessage = function (param1) {
            this.reason = param1.readByte();
        };
        TaxCollectorErrorMessage.ID = 5634;
        return TaxCollectorErrorMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorErrorMessage = TaxCollectorErrorMessage;
    var TaxCollectorListMessage = (function (_super) {
        __extends(TaxCollectorListMessage, _super);
        function TaxCollectorListMessage() {
            this.nbcollectorMax = 0;
            this.fightersInformations = [];
            _super.call(this);
        }
        TaxCollectorListMessage.prototype.getMessageId = function () {
            return TaxCollectorListMessage.ID;
        };
        TaxCollectorListMessage.prototype.reset = function () {
            this.nbcollectorMax = 0;
            this.fightersInformations = [];
        };
        TaxCollectorListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorListMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorListMessage(param1);
        };
        TaxCollectorListMessage.prototype.serializeAs_TaxCollectorListMessage = function (param1) {
            _super.prototype.serializeAs_AbstractTaxCollectorListMessage.call(this, param1);
            if (this.nbcollectorMax < 0) {
                throw new Error('Forbidden value (' + this.nbcollectorMax + ') on element nbcollectorMax.');
            }
            param1.writeByte(this.nbcollectorMax);
            param1.writeShort(this.fightersInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.fightersInformations.length) {
                (this.fightersInformations[_loc2_]).serializeAs_TaxCollectorFightersInformation(param1);
                _loc2_++;
            }
        };
        TaxCollectorListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorListMessage(param1);
        };
        TaxCollectorListMessage.prototype.deserializeAs_TaxCollectorListMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.nbcollectorMax = param1.readByte();
            if (this.nbcollectorMax < 0) {
                throw new Error('Forbidden value (' + this.nbcollectorMax + ') on element of TaxCollectorListMessage.nbcollectorMax.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new TaxCollectorFightersInformation();
                _loc4_.deserialize(param1);
                this.fightersInformations.push(_loc4_);
                _loc3_++;
            }
        };
        TaxCollectorListMessage.ID = 5930;
        return TaxCollectorListMessage;
    })(AbstractTaxCollectorListMessage);
    Protocol.TaxCollectorListMessage = TaxCollectorListMessage;
    var TaxCollectorMovementAddMessage = (function (_super) {
        __extends(TaxCollectorMovementAddMessage, _super);
        function TaxCollectorMovementAddMessage() {
            this.informations = new TaxCollectorInformations();
            _super.call(this);
        }
        TaxCollectorMovementAddMessage.prototype.getMessageId = function () {
            return TaxCollectorMovementAddMessage.ID;
        };
        TaxCollectorMovementAddMessage.prototype.reset = function () {
            this.informations = new TaxCollectorInformations();
        };
        TaxCollectorMovementAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorMovementAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorMovementAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorMovementAddMessage(param1);
        };
        TaxCollectorMovementAddMessage.prototype.serializeAs_TaxCollectorMovementAddMessage = function (param1) {
            param1.writeShort(this.informations.getTypeId());
            this.informations.serialize(param1);
        };
        TaxCollectorMovementAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorMovementAddMessage(param1);
        };
        TaxCollectorMovementAddMessage.prototype.deserializeAs_TaxCollectorMovementAddMessage = function (param1) {
            var _loc2_ = param1.readUnsignedShort();
            this.informations = ProtocolTypeManager.getInstance(TaxCollectorInformations, _loc2_);
            this.informations.deserialize(param1);
        };
        TaxCollectorMovementAddMessage.ID = 5917;
        return TaxCollectorMovementAddMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorMovementAddMessage = TaxCollectorMovementAddMessage;
    var TaxCollectorMovementMessage = (function (_super) {
        __extends(TaxCollectorMovementMessage, _super);
        function TaxCollectorMovementMessage() {
            this.hireOrFire = false;
            this.basicInfos = new TaxCollectorBasicInformations();
            this.playerId = 0;
            this.playerName = '';
            _super.call(this);
        }
        TaxCollectorMovementMessage.prototype.getMessageId = function () {
            return TaxCollectorMovementMessage.ID;
        };
        TaxCollectorMovementMessage.prototype.reset = function () {
            this.hireOrFire = false;
            this.basicInfos = new TaxCollectorBasicInformations();
            this.playerId = 0;
            this.playerName = '';
        };
        TaxCollectorMovementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorMovementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorMovementMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorMovementMessage(param1);
        };
        TaxCollectorMovementMessage.prototype.serializeAs_TaxCollectorMovementMessage = function (param1) {
            param1.writeBoolean(this.hireOrFire);
            this.basicInfos.serializeAs_TaxCollectorBasicInformations(param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeUTF(this.playerName);
        };
        TaxCollectorMovementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorMovementMessage(param1);
        };
        TaxCollectorMovementMessage.prototype.deserializeAs_TaxCollectorMovementMessage = function (param1) {
            this.hireOrFire = param1.readBoolean();
            this.basicInfos = new TaxCollectorBasicInformations();
            this.basicInfos.deserialize(param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of TaxCollectorMovementMessage.playerId.');
            }
            this.playerName = param1.readUTF();
        };
        TaxCollectorMovementMessage.ID = 5633;
        return TaxCollectorMovementMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorMovementMessage = TaxCollectorMovementMessage;
    var TaxCollectorMovementRemoveMessage = (function (_super) {
        __extends(TaxCollectorMovementRemoveMessage, _super);
        function TaxCollectorMovementRemoveMessage() {
            this.collectorId = 0;
            _super.call(this);
        }
        TaxCollectorMovementRemoveMessage.prototype.getMessageId = function () {
            return TaxCollectorMovementRemoveMessage.ID;
        };
        TaxCollectorMovementRemoveMessage.prototype.reset = function () {
            this.collectorId = 0;
        };
        TaxCollectorMovementRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorMovementRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorMovementRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorMovementRemoveMessage(param1);
        };
        TaxCollectorMovementRemoveMessage.prototype.serializeAs_TaxCollectorMovementRemoveMessage = function (param1) {
            param1.writeInt(this.collectorId);
        };
        TaxCollectorMovementRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorMovementRemoveMessage(param1);
        };
        TaxCollectorMovementRemoveMessage.prototype.deserializeAs_TaxCollectorMovementRemoveMessage = function (param1) {
            this.collectorId = param1.readInt();
        };
        TaxCollectorMovementRemoveMessage.ID = 5915;
        return TaxCollectorMovementRemoveMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorMovementRemoveMessage = TaxCollectorMovementRemoveMessage;
    var TaxCollectorStateUpdateMessage = (function (_super) {
        __extends(TaxCollectorStateUpdateMessage, _super);
        function TaxCollectorStateUpdateMessage() {
            this.uniqueId = 0;
            this.state = 0;
            _super.call(this);
        }
        TaxCollectorStateUpdateMessage.prototype.getMessageId = function () {
            return TaxCollectorStateUpdateMessage.ID;
        };
        TaxCollectorStateUpdateMessage.prototype.reset = function () {
            this.uniqueId = 0;
            this.state = 0;
        };
        TaxCollectorStateUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TaxCollectorStateUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TaxCollectorStateUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorStateUpdateMessage(param1);
        };
        TaxCollectorStateUpdateMessage.prototype.serializeAs_TaxCollectorStateUpdateMessage = function (param1) {
            param1.writeInt(this.uniqueId);
            param1.writeByte(this.state);
        };
        TaxCollectorStateUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorStateUpdateMessage(param1);
        };
        TaxCollectorStateUpdateMessage.prototype.deserializeAs_TaxCollectorStateUpdateMessage = function (param1) {
            this.uniqueId = param1.readInt();
            this.state = param1.readByte();
        };
        TaxCollectorStateUpdateMessage.ID = 6455;
        return TaxCollectorStateUpdateMessage;
    })(NetworkMessage);
    Protocol.TaxCollectorStateUpdateMessage = TaxCollectorStateUpdateMessage;
    var TopTaxCollectorListMessage = (function (_super) {
        __extends(TopTaxCollectorListMessage, _super);
        function TopTaxCollectorListMessage() {
            this.isDungeon = false;
            _super.call(this);
        }
        TopTaxCollectorListMessage.prototype.getMessageId = function () {
            return TopTaxCollectorListMessage.ID;
        };
        TopTaxCollectorListMessage.prototype.reset = function () {
            this.isDungeon = false;
        };
        TopTaxCollectorListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TopTaxCollectorListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TopTaxCollectorListMessage.prototype.serialize = function (param1) {
            this.serializeAs_TopTaxCollectorListMessage(param1);
        };
        TopTaxCollectorListMessage.prototype.serializeAs_TopTaxCollectorListMessage = function (param1) {
            _super.prototype.serializeAs_AbstractTaxCollectorListMessage.call(this, param1);
            param1.writeBoolean(this.isDungeon);
        };
        TopTaxCollectorListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TopTaxCollectorListMessage(param1);
        };
        TopTaxCollectorListMessage.prototype.deserializeAs_TopTaxCollectorListMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.isDungeon = param1.readBoolean();
        };
        TopTaxCollectorListMessage.ID = 6565;
        return TopTaxCollectorListMessage;
    })(AbstractTaxCollectorListMessage);
    Protocol.TopTaxCollectorListMessage = TopTaxCollectorListMessage;
    var IdolFightPreparationUpdateMessage = (function (_super) {
        __extends(IdolFightPreparationUpdateMessage, _super);
        function IdolFightPreparationUpdateMessage() {
            this.idolSource = 0;
            this.idols = [];
            _super.call(this);
        }
        IdolFightPreparationUpdateMessage.prototype.getMessageId = function () {
            return IdolFightPreparationUpdateMessage.ID;
        };
        IdolFightPreparationUpdateMessage.prototype.reset = function () {
            this.idolSource = 0;
            this.idols = [];
        };
        IdolFightPreparationUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolFightPreparationUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolFightPreparationUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolFightPreparationUpdateMessage(param1);
        };
        IdolFightPreparationUpdateMessage.prototype.serializeAs_IdolFightPreparationUpdateMessage = function (param1) {
            param1.writeByte(this.idolSource);
            param1.writeShort(this.idols.length);
            var _loc2_ = 0;
            while (_loc2_ < this.idols.length) {
                param1.writeShort((this.idols[_loc2_]).getTypeId());
                (this.idols[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        IdolFightPreparationUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolFightPreparationUpdateMessage(param1);
        };
        IdolFightPreparationUpdateMessage.prototype.deserializeAs_IdolFightPreparationUpdateMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.idolSource = param1.readByte();
            if (this.idolSource < 0) {
                throw new Error('Forbidden value (' + this.idolSource + ') on element of IdolFightPreparationUpdateMessage.idolSource.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(Idol, _loc4_);
                _loc5_.deserialize(param1);
                this.idols.push(_loc5_);
                _loc3_++;
            }
        };
        IdolFightPreparationUpdateMessage.ID = 6586;
        return IdolFightPreparationUpdateMessage;
    })(NetworkMessage);
    Protocol.IdolFightPreparationUpdateMessage = IdolFightPreparationUpdateMessage;
    var IdolListMessage = (function (_super) {
        __extends(IdolListMessage, _super);
        function IdolListMessage() {
            this.chosenIdols = [];
            this.partyChosenIdols = [];
            this.partyIdols = [];
            _super.call(this);
        }
        IdolListMessage.prototype.getMessageId = function () {
            return IdolListMessage.ID;
        };
        IdolListMessage.prototype.reset = function () {
            this.chosenIdols = [];
            this.partyChosenIdols = [];
            this.partyIdols = [];
        };
        IdolListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolListMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolListMessage(param1);
        };
        IdolListMessage.prototype.serializeAs_IdolListMessage = function (param1) {
            param1.writeShort(this.chosenIdols.length);
            var _loc2_ = 0;
            while (_loc2_ < this.chosenIdols.length) {
                if (this.chosenIdols[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.chosenIdols[_loc2_] + ') on element 1 (starting at 1) of chosenIdols.');
                }
                param1.writeVarShort(this.chosenIdols[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.partyChosenIdols.length);
            var _loc3_ = 0;
            while (_loc3_ < this.partyChosenIdols.length) {
                if (this.partyChosenIdols[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.partyChosenIdols[_loc3_] + ') on element 2 (starting at 1) of partyChosenIdols.');
                }
                param1.writeVarShort(this.partyChosenIdols[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.partyIdols.length);
            var _loc4_ = 0;
            while (_loc4_ < this.partyIdols.length) {
                param1.writeShort((this.partyIdols[_loc4_]).getTypeId());
                (this.partyIdols[_loc4_]).serialize(param1);
                _loc4_++;
            }
        };
        IdolListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolListMessage(param1);
        };
        IdolListMessage.prototype.deserializeAs_IdolListMessage = function (param1) {
            var _loc8_ = 0;
            var _loc9_ = 0;
            var _loc10_ = 0;
            var _loc11_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc8_ = param1.readVarUhShort();
                if (_loc8_ < 0) {
                    throw new Error('Forbidden value (' + _loc8_ + ') on elements of chosenIdols.');
                }
                this.chosenIdols.push(_loc8_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc9_ = param1.readVarUhShort();
                if (_loc9_ < 0) {
                    throw new Error('Forbidden value (' + _loc9_ + ') on elements of partyChosenIdols.');
                }
                this.partyChosenIdols.push(_loc9_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc10_ = param1.readUnsignedShort();
                _loc11_ = ProtocolTypeManager.getInstance(PartyIdol, _loc10_);
                _loc11_.deserialize(param1);
                this.partyIdols.push(_loc11_);
                _loc7_++;
            }
        };
        IdolListMessage.ID = 6585;
        return IdolListMessage;
    })(NetworkMessage);
    Protocol.IdolListMessage = IdolListMessage;
    var IdolPartyLostMessage = (function (_super) {
        __extends(IdolPartyLostMessage, _super);
        function IdolPartyLostMessage() {
            this.idolId = 0;
            _super.call(this);
        }
        IdolPartyLostMessage.prototype.getMessageId = function () {
            return IdolPartyLostMessage.ID;
        };
        IdolPartyLostMessage.prototype.reset = function () {
            this.idolId = 0;
        };
        IdolPartyLostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolPartyLostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolPartyLostMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolPartyLostMessage(param1);
        };
        IdolPartyLostMessage.prototype.serializeAs_IdolPartyLostMessage = function (param1) {
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element idolId.');
            }
            param1.writeVarShort(this.idolId);
        };
        IdolPartyLostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolPartyLostMessage(param1);
        };
        IdolPartyLostMessage.prototype.deserializeAs_IdolPartyLostMessage = function (param1) {
            this.idolId = param1.readVarUhShort();
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element of IdolPartyLostMessage.idolId.');
            }
        };
        IdolPartyLostMessage.ID = 6580;
        return IdolPartyLostMessage;
    })(NetworkMessage);
    Protocol.IdolPartyLostMessage = IdolPartyLostMessage;
    var IdolPartyRefreshMessage = (function (_super) {
        __extends(IdolPartyRefreshMessage, _super);
        function IdolPartyRefreshMessage() {
            this.partyIdol = new PartyIdol();
            _super.call(this);
        }
        IdolPartyRefreshMessage.prototype.getMessageId = function () {
            return IdolPartyRefreshMessage.ID;
        };
        IdolPartyRefreshMessage.prototype.reset = function () {
            this.partyIdol = new PartyIdol();
        };
        IdolPartyRefreshMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolPartyRefreshMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolPartyRefreshMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolPartyRefreshMessage(param1);
        };
        IdolPartyRefreshMessage.prototype.serializeAs_IdolPartyRefreshMessage = function (param1) {
            this.partyIdol.serializeAs_PartyIdol(param1);
        };
        IdolPartyRefreshMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolPartyRefreshMessage(param1);
        };
        IdolPartyRefreshMessage.prototype.deserializeAs_IdolPartyRefreshMessage = function (param1) {
            this.partyIdol = new PartyIdol();
            this.partyIdol.deserialize(param1);
        };
        IdolPartyRefreshMessage.ID = 6583;
        return IdolPartyRefreshMessage;
    })(NetworkMessage);
    Protocol.IdolPartyRefreshMessage = IdolPartyRefreshMessage;
    var IdolPartyRegisterRequestMessage = (function (_super) {
        __extends(IdolPartyRegisterRequestMessage, _super);
        function IdolPartyRegisterRequestMessage() {
            this.register = false;
            _super.call(this);
        }
        IdolPartyRegisterRequestMessage.prototype.getMessageId = function () {
            return IdolPartyRegisterRequestMessage.ID;
        };
        IdolPartyRegisterRequestMessage.prototype.reset = function () {
            this.register = false;
        };
        IdolPartyRegisterRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolPartyRegisterRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolPartyRegisterRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolPartyRegisterRequestMessage(param1);
        };
        IdolPartyRegisterRequestMessage.prototype.serializeAs_IdolPartyRegisterRequestMessage = function (param1) {
            param1.writeBoolean(this.register);
        };
        IdolPartyRegisterRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolPartyRegisterRequestMessage(param1);
        };
        IdolPartyRegisterRequestMessage.prototype.deserializeAs_IdolPartyRegisterRequestMessage = function (param1) {
            this.register = param1.readBoolean();
        };
        IdolPartyRegisterRequestMessage.ID = 6582;
        return IdolPartyRegisterRequestMessage;
    })(NetworkMessage);
    Protocol.IdolPartyRegisterRequestMessage = IdolPartyRegisterRequestMessage;
    var IdolSelectErrorMessage = (function (_super) {
        __extends(IdolSelectErrorMessage, _super);
        function IdolSelectErrorMessage() {
            this.reason = 0;
            this.idolId = 0;
            this.activate = false;
            this.party = false;
            _super.call(this);
        }
        IdolSelectErrorMessage.prototype.getMessageId = function () {
            return IdolSelectErrorMessage.ID;
        };
        IdolSelectErrorMessage.prototype.reset = function () {
            this.reason = 0;
            this.idolId = 0;
            this.activate = false;
            this.party = false;
        };
        IdolSelectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolSelectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolSelectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolSelectErrorMessage(param1);
        };
        IdolSelectErrorMessage.prototype.serializeAs_IdolSelectErrorMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.activate);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.party);
            param1.writeByte(_loc2_);
            param1.writeByte(this.reason);
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element idolId.');
            }
            param1.writeVarShort(this.idolId);
        };
        IdolSelectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolSelectErrorMessage(param1);
        };
        IdolSelectErrorMessage.prototype.deserializeAs_IdolSelectErrorMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.activate = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.party = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of IdolSelectErrorMessage.reason.');
            }
            this.idolId = param1.readVarUhShort();
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element of IdolSelectErrorMessage.idolId.');
            }
        };
        IdolSelectErrorMessage.ID = 6584;
        return IdolSelectErrorMessage;
    })(NetworkMessage);
    Protocol.IdolSelectErrorMessage = IdolSelectErrorMessage;
    var IdolSelectRequestMessage = (function (_super) {
        __extends(IdolSelectRequestMessage, _super);
        function IdolSelectRequestMessage() {
            this.idolId = 0;
            this.activate = false;
            this.party = false;
            _super.call(this);
        }
        IdolSelectRequestMessage.prototype.getMessageId = function () {
            return IdolSelectRequestMessage.ID;
        };
        IdolSelectRequestMessage.prototype.reset = function () {
            this.idolId = 0;
            this.activate = false;
            this.party = false;
        };
        IdolSelectRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolSelectRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolSelectRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolSelectRequestMessage(param1);
        };
        IdolSelectRequestMessage.prototype.serializeAs_IdolSelectRequestMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.activate);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.party);
            param1.writeByte(_loc2_);
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element idolId.');
            }
            param1.writeVarShort(this.idolId);
        };
        IdolSelectRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolSelectRequestMessage(param1);
        };
        IdolSelectRequestMessage.prototype.deserializeAs_IdolSelectRequestMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.activate = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.party = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.idolId = param1.readVarUhShort();
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element of IdolSelectRequestMessage.idolId.');
            }
        };
        IdolSelectRequestMessage.ID = 6587;
        return IdolSelectRequestMessage;
    })(NetworkMessage);
    Protocol.IdolSelectRequestMessage = IdolSelectRequestMessage;
    var IdolSelectedMessage = (function (_super) {
        __extends(IdolSelectedMessage, _super);
        function IdolSelectedMessage() {
            this.idolId = 0;
            this.activate = false;
            this.party = false;
            _super.call(this);
        }
        IdolSelectedMessage.prototype.getMessageId = function () {
            return IdolSelectedMessage.ID;
        };
        IdolSelectedMessage.prototype.reset = function () {
            this.idolId = 0;
            this.activate = false;
            this.party = false;
        };
        IdolSelectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolSelectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolSelectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolSelectedMessage(param1);
        };
        IdolSelectedMessage.prototype.serializeAs_IdolSelectedMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.activate);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.party);
            param1.writeByte(_loc2_);
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element idolId.');
            }
            param1.writeVarShort(this.idolId);
        };
        IdolSelectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolSelectedMessage(param1);
        };
        IdolSelectedMessage.prototype.deserializeAs_IdolSelectedMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.activate = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.party = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.idolId = param1.readVarUhShort();
            if (this.idolId < 0) {
                throw new Error('Forbidden value (' + this.idolId + ') on element of IdolSelectedMessage.idolId.');
            }
        };
        IdolSelectedMessage.ID = 6581;
        return IdolSelectedMessage;
    })(NetworkMessage);
    Protocol.IdolSelectedMessage = IdolSelectedMessage;
    var CharacterCapabilitiesMessage = (function (_super) {
        __extends(CharacterCapabilitiesMessage, _super);
        function CharacterCapabilitiesMessage() {
            this.guildEmblemSymbolCategories = 0;
            _super.call(this);
        }
        CharacterCapabilitiesMessage.prototype.getMessageId = function () {
            return CharacterCapabilitiesMessage.ID;
        };
        CharacterCapabilitiesMessage.prototype.reset = function () {
            this.guildEmblemSymbolCategories = 0;
        };
        CharacterCapabilitiesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterCapabilitiesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterCapabilitiesMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterCapabilitiesMessage(param1);
        };
        CharacterCapabilitiesMessage.prototype.serializeAs_CharacterCapabilitiesMessage = function (param1) {
            if (this.guildEmblemSymbolCategories < 0) {
                throw new Error('Forbidden value (' + this.guildEmblemSymbolCategories + ') on element guildEmblemSymbolCategories.');
            }
            param1.writeVarInt(this.guildEmblemSymbolCategories);
        };
        CharacterCapabilitiesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterCapabilitiesMessage(param1);
        };
        CharacterCapabilitiesMessage.prototype.deserializeAs_CharacterCapabilitiesMessage = function (param1) {
            this.guildEmblemSymbolCategories = param1.readVarUhInt();
            if (this.guildEmblemSymbolCategories < 0) {
                throw new Error('Forbidden value (' + this.guildEmblemSymbolCategories + ') on element of CharacterCapabilitiesMessage.guildEmblemSymbolCategories.');
            }
        };
        CharacterCapabilitiesMessage.ID = 6339;
        return CharacterCapabilitiesMessage;
    })(NetworkMessage);
    Protocol.CharacterCapabilitiesMessage = CharacterCapabilitiesMessage;
    var CharacterLoadingCompleteMessage = (function (_super) {
        __extends(CharacterLoadingCompleteMessage, _super);
        function CharacterLoadingCompleteMessage() {
            _super.call(this);
        }
        CharacterLoadingCompleteMessage.prototype.getMessageId = function () {
            return CharacterLoadingCompleteMessage.ID;
        };
        CharacterLoadingCompleteMessage.prototype.reset = function () {
        };
        CharacterLoadingCompleteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterLoadingCompleteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterLoadingCompleteMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterLoadingCompleteMessage(param1);
        };
        CharacterLoadingCompleteMessage.prototype.serializeAs_CharacterLoadingCompleteMessage = function (param1) {
        };
        CharacterLoadingCompleteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterLoadingCompleteMessage(param1);
        };
        CharacterLoadingCompleteMessage.prototype.deserializeAs_CharacterLoadingCompleteMessage = function (param1) {
        };
        CharacterLoadingCompleteMessage.ID = 6471;
        return CharacterLoadingCompleteMessage;
    })(NetworkMessage);
    Protocol.CharacterLoadingCompleteMessage = CharacterLoadingCompleteMessage;
    var OnConnectionEventMessage = (function (_super) {
        __extends(OnConnectionEventMessage, _super);
        function OnConnectionEventMessage() {
            this.eventType = 0;
            _super.call(this);
        }
        OnConnectionEventMessage.prototype.getMessageId = function () {
            return OnConnectionEventMessage.ID;
        };
        OnConnectionEventMessage.prototype.reset = function () {
            this.eventType = 0;
        };
        OnConnectionEventMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        OnConnectionEventMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        OnConnectionEventMessage.prototype.serialize = function (param1) {
            this.serializeAs_OnConnectionEventMessage(param1);
        };
        OnConnectionEventMessage.prototype.serializeAs_OnConnectionEventMessage = function (param1) {
            param1.writeByte(this.eventType);
        };
        OnConnectionEventMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_OnConnectionEventMessage(param1);
        };
        OnConnectionEventMessage.prototype.deserializeAs_OnConnectionEventMessage = function (param1) {
            this.eventType = param1.readByte();
            if (this.eventType < 0) {
                throw new Error('Forbidden value (' + this.eventType + ') on element of OnConnectionEventMessage.eventType.');
            }
        };
        OnConnectionEventMessage.ID = 5726;
        return OnConnectionEventMessage;
    })(NetworkMessage);
    Protocol.OnConnectionEventMessage = OnConnectionEventMessage;
    var ServerExperienceModificatorMessage = (function (_super) {
        __extends(ServerExperienceModificatorMessage, _super);
        function ServerExperienceModificatorMessage() {
            this.experiencePercent = 0;
            _super.call(this);
        }
        ServerExperienceModificatorMessage.prototype.getMessageId = function () {
            return ServerExperienceModificatorMessage.ID;
        };
        ServerExperienceModificatorMessage.prototype.reset = function () {
            this.experiencePercent = 0;
        };
        ServerExperienceModificatorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ServerExperienceModificatorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ServerExperienceModificatorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ServerExperienceModificatorMessage(param1);
        };
        ServerExperienceModificatorMessage.prototype.serializeAs_ServerExperienceModificatorMessage = function (param1) {
            if (this.experiencePercent < 0) {
                throw new Error('Forbidden value (' + this.experiencePercent + ') on element experiencePercent.');
            }
            param1.writeVarShort(this.experiencePercent);
        };
        ServerExperienceModificatorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerExperienceModificatorMessage(param1);
        };
        ServerExperienceModificatorMessage.prototype.deserializeAs_ServerExperienceModificatorMessage = function (param1) {
            this.experiencePercent = param1.readVarUhShort();
            if (this.experiencePercent < 0) {
                throw new Error('Forbidden value (' + this.experiencePercent + ') on element of ServerExperienceModificatorMessage.experiencePercent.');
            }
        };
        ServerExperienceModificatorMessage.ID = 6237;
        return ServerExperienceModificatorMessage;
    })(NetworkMessage);
    Protocol.ServerExperienceModificatorMessage = ServerExperienceModificatorMessage;
    var SetCharacterRestrictionsMessage = (function (_super) {
        __extends(SetCharacterRestrictionsMessage, _super);
        function SetCharacterRestrictionsMessage() {
            this.actorId = 0;
            this.restrictions = new ActorRestrictionsInformations();
            _super.call(this);
        }
        SetCharacterRestrictionsMessage.prototype.getMessageId = function () {
            return SetCharacterRestrictionsMessage.ID;
        };
        SetCharacterRestrictionsMessage.prototype.reset = function () {
            this.actorId = 0;
            this.restrictions = new ActorRestrictionsInformations();
        };
        SetCharacterRestrictionsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SetCharacterRestrictionsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SetCharacterRestrictionsMessage.prototype.serialize = function (param1) {
            this.serializeAs_SetCharacterRestrictionsMessage(param1);
        };
        SetCharacterRestrictionsMessage.prototype.serializeAs_SetCharacterRestrictionsMessage = function (param1) {
            param1.writeInt(this.actorId);
            this.restrictions.serializeAs_ActorRestrictionsInformations(param1);
        };
        SetCharacterRestrictionsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SetCharacterRestrictionsMessage(param1);
        };
        SetCharacterRestrictionsMessage.prototype.deserializeAs_SetCharacterRestrictionsMessage = function (param1) {
            this.actorId = param1.readInt();
            this.restrictions = new ActorRestrictionsInformations();
            this.restrictions.deserialize(param1);
        };
        SetCharacterRestrictionsMessage.ID = 170;
        return SetCharacterRestrictionsMessage;
    })(NetworkMessage);
    Protocol.SetCharacterRestrictionsMessage = SetCharacterRestrictionsMessage;
    var InteractiveElementUpdatedMessage = (function (_super) {
        __extends(InteractiveElementUpdatedMessage, _super);
        function InteractiveElementUpdatedMessage() {
            this.interactiveElement = new InteractiveElement();
            _super.call(this);
        }
        InteractiveElementUpdatedMessage.prototype.getMessageId = function () {
            return InteractiveElementUpdatedMessage.ID;
        };
        InteractiveElementUpdatedMessage.prototype.reset = function () {
            this.interactiveElement = new InteractiveElement();
        };
        InteractiveElementUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveElementUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveElementUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveElementUpdatedMessage(param1);
        };
        InteractiveElementUpdatedMessage.prototype.serializeAs_InteractiveElementUpdatedMessage = function (param1) {
            this.interactiveElement.serializeAs_InteractiveElement(param1);
        };
        InteractiveElementUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveElementUpdatedMessage(param1);
        };
        InteractiveElementUpdatedMessage.prototype.deserializeAs_InteractiveElementUpdatedMessage = function (param1) {
            this.interactiveElement = new InteractiveElement();
            this.interactiveElement.deserialize(param1);
        };
        InteractiveElementUpdatedMessage.ID = 5708;
        return InteractiveElementUpdatedMessage;
    })(NetworkMessage);
    Protocol.InteractiveElementUpdatedMessage = InteractiveElementUpdatedMessage;
    var InteractiveMapUpdateMessage = (function (_super) {
        __extends(InteractiveMapUpdateMessage, _super);
        function InteractiveMapUpdateMessage() {
            this.interactiveElements = [];
            _super.call(this);
        }
        InteractiveMapUpdateMessage.prototype.getMessageId = function () {
            return InteractiveMapUpdateMessage.ID;
        };
        InteractiveMapUpdateMessage.prototype.reset = function () {
            this.interactiveElements = [];
        };
        InteractiveMapUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveMapUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveMapUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveMapUpdateMessage(param1);
        };
        InteractiveMapUpdateMessage.prototype.serializeAs_InteractiveMapUpdateMessage = function (param1) {
            param1.writeShort(this.interactiveElements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.interactiveElements.length) {
                param1.writeShort((this.interactiveElements[_loc2_]).getTypeId());
                (this.interactiveElements[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        InteractiveMapUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveMapUpdateMessage(param1);
        };
        InteractiveMapUpdateMessage.prototype.deserializeAs_InteractiveMapUpdateMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(InteractiveElement, _loc4_);
                _loc5_.deserialize(param1);
                this.interactiveElements.push(_loc5_);
                _loc3_++;
            }
        };
        InteractiveMapUpdateMessage.ID = 5002;
        return InteractiveMapUpdateMessage;
    })(NetworkMessage);
    Protocol.InteractiveMapUpdateMessage = InteractiveMapUpdateMessage;
    var InteractiveUseEndedMessage = (function (_super) {
        __extends(InteractiveUseEndedMessage, _super);
        function InteractiveUseEndedMessage() {
            this.elemId = 0;
            this.skillId = 0;
            _super.call(this);
        }
        InteractiveUseEndedMessage.prototype.getMessageId = function () {
            return InteractiveUseEndedMessage.ID;
        };
        InteractiveUseEndedMessage.prototype.reset = function () {
            this.elemId = 0;
            this.skillId = 0;
        };
        InteractiveUseEndedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveUseEndedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveUseEndedMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveUseEndedMessage(param1);
        };
        InteractiveUseEndedMessage.prototype.serializeAs_InteractiveUseEndedMessage = function (param1) {
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element elemId.');
            }
            param1.writeVarInt(this.elemId);
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarShort(this.skillId);
        };
        InteractiveUseEndedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveUseEndedMessage(param1);
        };
        InteractiveUseEndedMessage.prototype.deserializeAs_InteractiveUseEndedMessage = function (param1) {
            this.elemId = param1.readVarUhInt();
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element of InteractiveUseEndedMessage.elemId.');
            }
            this.skillId = param1.readVarUhShort();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of InteractiveUseEndedMessage.skillId.');
            }
        };
        InteractiveUseEndedMessage.ID = 6112;
        return InteractiveUseEndedMessage;
    })(NetworkMessage);
    Protocol.InteractiveUseEndedMessage = InteractiveUseEndedMessage;
    var InteractiveUseErrorMessage = (function (_super) {
        __extends(InteractiveUseErrorMessage, _super);
        function InteractiveUseErrorMessage() {
            this.elemId = 0;
            this.skillInstanceUid = 0;
            _super.call(this);
        }
        InteractiveUseErrorMessage.prototype.getMessageId = function () {
            return InteractiveUseErrorMessage.ID;
        };
        InteractiveUseErrorMessage.prototype.reset = function () {
            this.elemId = 0;
            this.skillInstanceUid = 0;
        };
        InteractiveUseErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveUseErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveUseErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveUseErrorMessage(param1);
        };
        InteractiveUseErrorMessage.prototype.serializeAs_InteractiveUseErrorMessage = function (param1) {
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element elemId.');
            }
            param1.writeVarInt(this.elemId);
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element skillInstanceUid.');
            }
            param1.writeVarInt(this.skillInstanceUid);
        };
        InteractiveUseErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveUseErrorMessage(param1);
        };
        InteractiveUseErrorMessage.prototype.deserializeAs_InteractiveUseErrorMessage = function (param1) {
            this.elemId = param1.readVarUhInt();
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element of InteractiveUseErrorMessage.elemId.');
            }
            this.skillInstanceUid = param1.readVarUhInt();
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element of InteractiveUseErrorMessage.skillInstanceUid.');
            }
        };
        InteractiveUseErrorMessage.ID = 6384;
        return InteractiveUseErrorMessage;
    })(NetworkMessage);
    Protocol.InteractiveUseErrorMessage = InteractiveUseErrorMessage;
    var InteractiveUseRequestMessage = (function (_super) {
        __extends(InteractiveUseRequestMessage, _super);
        function InteractiveUseRequestMessage() {
            this.elemId = 0;
            this.skillInstanceUid = 0;
            _super.call(this);
        }
        InteractiveUseRequestMessage.prototype.getMessageId = function () {
            return InteractiveUseRequestMessage.ID;
        };
        InteractiveUseRequestMessage.prototype.reset = function () {
            this.elemId = 0;
            this.skillInstanceUid = 0;
        };
        InteractiveUseRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveUseRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveUseRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveUseRequestMessage(param1);
        };
        InteractiveUseRequestMessage.prototype.serializeAs_InteractiveUseRequestMessage = function (param1) {
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element elemId.');
            }
            param1.writeVarInt(this.elemId);
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element skillInstanceUid.');
            }
            param1.writeVarInt(this.skillInstanceUid);
        };
        InteractiveUseRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveUseRequestMessage(param1);
        };
        InteractiveUseRequestMessage.prototype.deserializeAs_InteractiveUseRequestMessage = function (param1) {
            this.elemId = param1.readVarUhInt();
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element of InteractiveUseRequestMessage.elemId.');
            }
            this.skillInstanceUid = param1.readVarUhInt();
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element of InteractiveUseRequestMessage.skillInstanceUid.');
            }
        };
        InteractiveUseRequestMessage.ID = 5001;
        return InteractiveUseRequestMessage;
    })(NetworkMessage);
    Protocol.InteractiveUseRequestMessage = InteractiveUseRequestMessage;
    var InteractiveUsedMessage = (function (_super) {
        __extends(InteractiveUsedMessage, _super);
        function InteractiveUsedMessage() {
            this.entityId = 0;
            this.elemId = 0;
            this.skillId = 0;
            this.duration = 0;
            _super.call(this);
        }
        InteractiveUsedMessage.prototype.getMessageId = function () {
            return InteractiveUsedMessage.ID;
        };
        InteractiveUsedMessage.prototype.reset = function () {
            this.entityId = 0;
            this.elemId = 0;
            this.skillId = 0;
            this.duration = 0;
        };
        InteractiveUsedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InteractiveUsedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InteractiveUsedMessage.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveUsedMessage(param1);
        };
        InteractiveUsedMessage.prototype.serializeAs_InteractiveUsedMessage = function (param1) {
            if (this.entityId < 0) {
                throw new Error('Forbidden value (' + this.entityId + ') on element entityId.');
            }
            param1.writeVarInt(this.entityId);
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element elemId.');
            }
            param1.writeVarInt(this.elemId);
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarShort(this.skillId);
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element duration.');
            }
            param1.writeVarShort(this.duration);
        };
        InteractiveUsedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveUsedMessage(param1);
        };
        InteractiveUsedMessage.prototype.deserializeAs_InteractiveUsedMessage = function (param1) {
            this.entityId = param1.readVarUhInt();
            if (this.entityId < 0) {
                throw new Error('Forbidden value (' + this.entityId + ') on element of InteractiveUsedMessage.entityId.');
            }
            this.elemId = param1.readVarUhInt();
            if (this.elemId < 0) {
                throw new Error('Forbidden value (' + this.elemId + ') on element of InteractiveUsedMessage.elemId.');
            }
            this.skillId = param1.readVarUhShort();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of InteractiveUsedMessage.skillId.');
            }
            this.duration = param1.readVarUhShort();
            if (this.duration < 0) {
                throw new Error('Forbidden value (' + this.duration + ') on element of InteractiveUsedMessage.duration.');
            }
        };
        InteractiveUsedMessage.ID = 5745;
        return InteractiveUsedMessage;
    })(NetworkMessage);
    Protocol.InteractiveUsedMessage = InteractiveUsedMessage;
    var StatedElementUpdatedMessage = (function (_super) {
        __extends(StatedElementUpdatedMessage, _super);
        function StatedElementUpdatedMessage() {
            this.statedElement = new StatedElement();
            _super.call(this);
        }
        StatedElementUpdatedMessage.prototype.getMessageId = function () {
            return StatedElementUpdatedMessage.ID;
        };
        StatedElementUpdatedMessage.prototype.reset = function () {
            this.statedElement = new StatedElement();
        };
        StatedElementUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StatedElementUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StatedElementUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_StatedElementUpdatedMessage(param1);
        };
        StatedElementUpdatedMessage.prototype.serializeAs_StatedElementUpdatedMessage = function (param1) {
            this.statedElement.serializeAs_StatedElement(param1);
        };
        StatedElementUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StatedElementUpdatedMessage(param1);
        };
        StatedElementUpdatedMessage.prototype.deserializeAs_StatedElementUpdatedMessage = function (param1) {
            this.statedElement = new StatedElement();
            this.statedElement.deserialize(param1);
        };
        StatedElementUpdatedMessage.ID = 5709;
        return StatedElementUpdatedMessage;
    })(NetworkMessage);
    Protocol.StatedElementUpdatedMessage = StatedElementUpdatedMessage;
    var StatedMapUpdateMessage = (function (_super) {
        __extends(StatedMapUpdateMessage, _super);
        function StatedMapUpdateMessage() {
            this.statedElements = [];
            _super.call(this);
        }
        StatedMapUpdateMessage.prototype.getMessageId = function () {
            return StatedMapUpdateMessage.ID;
        };
        StatedMapUpdateMessage.prototype.reset = function () {
            this.statedElements = [];
        };
        StatedMapUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StatedMapUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StatedMapUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_StatedMapUpdateMessage(param1);
        };
        StatedMapUpdateMessage.prototype.serializeAs_StatedMapUpdateMessage = function (param1) {
            param1.writeShort(this.statedElements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.statedElements.length) {
                (this.statedElements[_loc2_]).serializeAs_StatedElement(param1);
                _loc2_++;
            }
        };
        StatedMapUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StatedMapUpdateMessage(param1);
        };
        StatedMapUpdateMessage.prototype.deserializeAs_StatedMapUpdateMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new StatedElement();
                _loc4_.deserialize(param1);
                this.statedElements.push(_loc4_);
                _loc3_++;
            }
        };
        StatedMapUpdateMessage.ID = 5716;
        return StatedMapUpdateMessage;
    })(NetworkMessage);
    Protocol.StatedMapUpdateMessage = StatedMapUpdateMessage;
    var TeleportBuddiesAnswerMessage = (function (_super) {
        __extends(TeleportBuddiesAnswerMessage, _super);
        function TeleportBuddiesAnswerMessage() {
            this.accept = false;
            _super.call(this);
        }
        TeleportBuddiesAnswerMessage.prototype.getMessageId = function () {
            return TeleportBuddiesAnswerMessage.ID;
        };
        TeleportBuddiesAnswerMessage.prototype.reset = function () {
            this.accept = false;
        };
        TeleportBuddiesAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportBuddiesAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportBuddiesAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportBuddiesAnswerMessage(param1);
        };
        TeleportBuddiesAnswerMessage.prototype.serializeAs_TeleportBuddiesAnswerMessage = function (param1) {
            param1.writeBoolean(this.accept);
        };
        TeleportBuddiesAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportBuddiesAnswerMessage(param1);
        };
        TeleportBuddiesAnswerMessage.prototype.deserializeAs_TeleportBuddiesAnswerMessage = function (param1) {
            this.accept = param1.readBoolean();
        };
        TeleportBuddiesAnswerMessage.ID = 6294;
        return TeleportBuddiesAnswerMessage;
    })(NetworkMessage);
    Protocol.TeleportBuddiesAnswerMessage = TeleportBuddiesAnswerMessage;
    var TeleportBuddiesMessage = (function (_super) {
        __extends(TeleportBuddiesMessage, _super);
        function TeleportBuddiesMessage() {
            this.dungeonId = 0;
            _super.call(this);
        }
        TeleportBuddiesMessage.prototype.getMessageId = function () {
            return TeleportBuddiesMessage.ID;
        };
        TeleportBuddiesMessage.prototype.reset = function () {
            this.dungeonId = 0;
        };
        TeleportBuddiesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportBuddiesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportBuddiesMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportBuddiesMessage(param1);
        };
        TeleportBuddiesMessage.prototype.serializeAs_TeleportBuddiesMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
        };
        TeleportBuddiesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportBuddiesMessage(param1);
        };
        TeleportBuddiesMessage.prototype.deserializeAs_TeleportBuddiesMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of TeleportBuddiesMessage.dungeonId.');
            }
        };
        TeleportBuddiesMessage.ID = 6289;
        return TeleportBuddiesMessage;
    })(NetworkMessage);
    Protocol.TeleportBuddiesMessage = TeleportBuddiesMessage;
    var TeleportBuddiesRequestedMessage = (function (_super) {
        __extends(TeleportBuddiesRequestedMessage, _super);
        function TeleportBuddiesRequestedMessage() {
            this.dungeonId = 0;
            this.inviterId = 0;
            this.invalidBuddiesIds = [];
            _super.call(this);
        }
        TeleportBuddiesRequestedMessage.prototype.getMessageId = function () {
            return TeleportBuddiesRequestedMessage.ID;
        };
        TeleportBuddiesRequestedMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.inviterId = 0;
            this.invalidBuddiesIds = [];
        };
        TeleportBuddiesRequestedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportBuddiesRequestedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportBuddiesRequestedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportBuddiesRequestedMessage(param1);
        };
        TeleportBuddiesRequestedMessage.prototype.serializeAs_TeleportBuddiesRequestedMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            if (this.inviterId < 0) {
                throw new Error('Forbidden value (' + this.inviterId + ') on element inviterId.');
            }
            param1.writeVarInt(this.inviterId);
            param1.writeShort(this.invalidBuddiesIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.invalidBuddiesIds.length) {
                if (this.invalidBuddiesIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.invalidBuddiesIds[_loc2_] + ') on element 3 (starting at 1) of invalidBuddiesIds.');
                }
                param1.writeVarInt(this.invalidBuddiesIds[_loc2_]);
                _loc2_++;
            }
        };
        TeleportBuddiesRequestedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportBuddiesRequestedMessage(param1);
        };
        TeleportBuddiesRequestedMessage.prototype.deserializeAs_TeleportBuddiesRequestedMessage = function (param1) {
            var _loc4_ = 0;
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of TeleportBuddiesRequestedMessage.dungeonId.');
            }
            this.inviterId = param1.readVarUhInt();
            if (this.inviterId < 0) {
                throw new Error('Forbidden value (' + this.inviterId + ') on element of TeleportBuddiesRequestedMessage.inviterId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of invalidBuddiesIds.');
                }
                this.invalidBuddiesIds.push(_loc4_);
                _loc3_++;
            }
        };
        TeleportBuddiesRequestedMessage.ID = 6302;
        return TeleportBuddiesRequestedMessage;
    })(NetworkMessage);
    Protocol.TeleportBuddiesRequestedMessage = TeleportBuddiesRequestedMessage;
    var TeleportToBuddyAnswerMessage = (function (_super) {
        __extends(TeleportToBuddyAnswerMessage, _super);
        function TeleportToBuddyAnswerMessage() {
            this.dungeonId = 0;
            this.buddyId = 0;
            this.accept = false;
            _super.call(this);
        }
        TeleportToBuddyAnswerMessage.prototype.getMessageId = function () {
            return TeleportToBuddyAnswerMessage.ID;
        };
        TeleportToBuddyAnswerMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.buddyId = 0;
            this.accept = false;
        };
        TeleportToBuddyAnswerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportToBuddyAnswerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportToBuddyAnswerMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportToBuddyAnswerMessage(param1);
        };
        TeleportToBuddyAnswerMessage.prototype.serializeAs_TeleportToBuddyAnswerMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element buddyId.');
            }
            param1.writeVarInt(this.buddyId);
            param1.writeBoolean(this.accept);
        };
        TeleportToBuddyAnswerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportToBuddyAnswerMessage(param1);
        };
        TeleportToBuddyAnswerMessage.prototype.deserializeAs_TeleportToBuddyAnswerMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of TeleportToBuddyAnswerMessage.dungeonId.');
            }
            this.buddyId = param1.readVarUhInt();
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element of TeleportToBuddyAnswerMessage.buddyId.');
            }
            this.accept = param1.readBoolean();
        };
        TeleportToBuddyAnswerMessage.ID = 6293;
        return TeleportToBuddyAnswerMessage;
    })(NetworkMessage);
    Protocol.TeleportToBuddyAnswerMessage = TeleportToBuddyAnswerMessage;
    var TeleportToBuddyCloseMessage = (function (_super) {
        __extends(TeleportToBuddyCloseMessage, _super);
        function TeleportToBuddyCloseMessage() {
            this.dungeonId = 0;
            this.buddyId = 0;
            _super.call(this);
        }
        TeleportToBuddyCloseMessage.prototype.getMessageId = function () {
            return TeleportToBuddyCloseMessage.ID;
        };
        TeleportToBuddyCloseMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.buddyId = 0;
        };
        TeleportToBuddyCloseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportToBuddyCloseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportToBuddyCloseMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportToBuddyCloseMessage(param1);
        };
        TeleportToBuddyCloseMessage.prototype.serializeAs_TeleportToBuddyCloseMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element buddyId.');
            }
            param1.writeVarInt(this.buddyId);
        };
        TeleportToBuddyCloseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportToBuddyCloseMessage(param1);
        };
        TeleportToBuddyCloseMessage.prototype.deserializeAs_TeleportToBuddyCloseMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of TeleportToBuddyCloseMessage.dungeonId.');
            }
            this.buddyId = param1.readVarUhInt();
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element of TeleportToBuddyCloseMessage.buddyId.');
            }
        };
        TeleportToBuddyCloseMessage.ID = 6303;
        return TeleportToBuddyCloseMessage;
    })(NetworkMessage);
    Protocol.TeleportToBuddyCloseMessage = TeleportToBuddyCloseMessage;
    var TeleportToBuddyOfferMessage = (function (_super) {
        __extends(TeleportToBuddyOfferMessage, _super);
        function TeleportToBuddyOfferMessage() {
            this.dungeonId = 0;
            this.buddyId = 0;
            this.timeLeft = 0;
            _super.call(this);
        }
        TeleportToBuddyOfferMessage.prototype.getMessageId = function () {
            return TeleportToBuddyOfferMessage.ID;
        };
        TeleportToBuddyOfferMessage.prototype.reset = function () {
            this.dungeonId = 0;
            this.buddyId = 0;
            this.timeLeft = 0;
        };
        TeleportToBuddyOfferMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportToBuddyOfferMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportToBuddyOfferMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportToBuddyOfferMessage(param1);
        };
        TeleportToBuddyOfferMessage.prototype.serializeAs_TeleportToBuddyOfferMessage = function (param1) {
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element dungeonId.');
            }
            param1.writeVarShort(this.dungeonId);
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element buddyId.');
            }
            param1.writeVarInt(this.buddyId);
            if (this.timeLeft < 0) {
                throw new Error('Forbidden value (' + this.timeLeft + ') on element timeLeft.');
            }
            param1.writeVarInt(this.timeLeft);
        };
        TeleportToBuddyOfferMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportToBuddyOfferMessage(param1);
        };
        TeleportToBuddyOfferMessage.prototype.deserializeAs_TeleportToBuddyOfferMessage = function (param1) {
            this.dungeonId = param1.readVarUhShort();
            if (this.dungeonId < 0) {
                throw new Error('Forbidden value (' + this.dungeonId + ') on element of TeleportToBuddyOfferMessage.dungeonId.');
            }
            this.buddyId = param1.readVarUhInt();
            if (this.buddyId < 0) {
                throw new Error('Forbidden value (' + this.buddyId + ') on element of TeleportToBuddyOfferMessage.buddyId.');
            }
            this.timeLeft = param1.readVarUhInt();
            if (this.timeLeft < 0) {
                throw new Error('Forbidden value (' + this.timeLeft + ') on element of TeleportToBuddyOfferMessage.timeLeft.');
            }
        };
        TeleportToBuddyOfferMessage.ID = 6287;
        return TeleportToBuddyOfferMessage;
    })(NetworkMessage);
    Protocol.TeleportToBuddyOfferMessage = TeleportToBuddyOfferMessage;
    var TeleportDestinationsListMessage = (function (_super) {
        __extends(TeleportDestinationsListMessage, _super);
        function TeleportDestinationsListMessage() {
            this.teleporterType = 0;
            this.mapIds = [];
            this.subAreaIds = [];
            this.costs = [];
            this.destTeleporterType = [];
            _super.call(this);
        }
        TeleportDestinationsListMessage.prototype.getMessageId = function () {
            return TeleportDestinationsListMessage.ID;
        };
        TeleportDestinationsListMessage.prototype.reset = function () {
            this.teleporterType = 0;
            this.mapIds = [];
            this.subAreaIds = [];
            this.costs = [];
            this.destTeleporterType = [];
        };
        TeleportDestinationsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportDestinationsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportDestinationsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportDestinationsListMessage(param1);
        };
        TeleportDestinationsListMessage.prototype.serializeAs_TeleportDestinationsListMessage = function (param1) {
            param1.writeByte(this.teleporterType);
            param1.writeShort(this.mapIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mapIds.length) {
                if (this.mapIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.mapIds[_loc2_] + ') on element 2 (starting at 1) of mapIds.');
                }
                param1.writeInt(this.mapIds[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.subAreaIds.length);
            var _loc3_ = 0;
            while (_loc3_ < this.subAreaIds.length) {
                if (this.subAreaIds[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.subAreaIds[_loc3_] + ') on element 3 (starting at 1) of subAreaIds.');
                }
                param1.writeVarShort(this.subAreaIds[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.costs.length);
            var _loc4_ = 0;
            while (_loc4_ < this.costs.length) {
                if (this.costs[_loc4_] < 0) {
                    throw new Error('Forbidden value (' + this.costs[_loc4_] + ') on element 4 (starting at 1) of costs.');
                }
                param1.writeVarShort(this.costs[_loc4_]);
                _loc4_++;
            }
            param1.writeShort(this.destTeleporterType.length);
            var _loc5_ = 0;
            while (_loc5_ < this.destTeleporterType.length) {
                param1.writeByte(this.destTeleporterType[_loc5_]);
                _loc5_++;
            }
        };
        TeleportDestinationsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportDestinationsListMessage(param1);
        };
        TeleportDestinationsListMessage.prototype.deserializeAs_TeleportDestinationsListMessage = function (param1) {
            var _loc10_ = 0;
            var _loc11_ = 0;
            var _loc12_ = 0;
            var _loc13_ = 0;
            this.teleporterType = param1.readByte();
            if (this.teleporterType < 0) {
                throw new Error('Forbidden value (' + this.teleporterType + ') on element of TeleportDestinationsListMessage.teleporterType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc10_ = param1.readInt();
                if (_loc10_ < 0) {
                    throw new Error('Forbidden value (' + _loc10_ + ') on elements of mapIds.');
                }
                this.mapIds.push(_loc10_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc11_ = param1.readVarUhShort();
                if (_loc11_ < 0) {
                    throw new Error('Forbidden value (' + _loc11_ + ') on elements of subAreaIds.');
                }
                this.subAreaIds.push(_loc11_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc12_ = param1.readVarUhShort();
                if (_loc12_ < 0) {
                    throw new Error('Forbidden value (' + _loc12_ + ') on elements of costs.');
                }
                this.costs.push(_loc12_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc13_ = param1.readByte();
                if (_loc13_ < 0) {
                    throw new Error('Forbidden value (' + _loc13_ + ') on elements of destTeleporterType.');
                }
                this.destTeleporterType.push(_loc13_);
                _loc9_++;
            }
        };
        TeleportDestinationsListMessage.ID = 5960;
        return TeleportDestinationsListMessage;
    })(NetworkMessage);
    Protocol.TeleportDestinationsListMessage = TeleportDestinationsListMessage;
    var TeleportRequestMessage = (function (_super) {
        __extends(TeleportRequestMessage, _super);
        function TeleportRequestMessage() {
            this.teleporterType = 0;
            this.mapId = 0;
            _super.call(this);
        }
        TeleportRequestMessage.prototype.getMessageId = function () {
            return TeleportRequestMessage.ID;
        };
        TeleportRequestMessage.prototype.reset = function () {
            this.teleporterType = 0;
            this.mapId = 0;
        };
        TeleportRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TeleportRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TeleportRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TeleportRequestMessage(param1);
        };
        TeleportRequestMessage.prototype.serializeAs_TeleportRequestMessage = function (param1) {
            param1.writeByte(this.teleporterType);
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        TeleportRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TeleportRequestMessage(param1);
        };
        TeleportRequestMessage.prototype.deserializeAs_TeleportRequestMessage = function (param1) {
            this.teleporterType = param1.readByte();
            if (this.teleporterType < 0) {
                throw new Error('Forbidden value (' + this.teleporterType + ') on element of TeleportRequestMessage.teleporterType.');
            }
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of TeleportRequestMessage.mapId.');
            }
        };
        TeleportRequestMessage.ID = 5961;
        return TeleportRequestMessage;
    })(NetworkMessage);
    Protocol.TeleportRequestMessage = TeleportRequestMessage;
    var ZaapListMessage = (function (_super) {
        __extends(ZaapListMessage, _super);
        function ZaapListMessage() {
            this.spawnMapId = 0;
            _super.call(this);
        }
        ZaapListMessage.prototype.getMessageId = function () {
            return ZaapListMessage.ID;
        };
        ZaapListMessage.prototype.reset = function () {
            this.spawnMapId = 0;
        };
        ZaapListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ZaapListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ZaapListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ZaapListMessage(param1);
        };
        ZaapListMessage.prototype.serializeAs_ZaapListMessage = function (param1) {
            _super.prototype.serializeAs_TeleportDestinationsListMessage.call(this, param1);
            if (this.spawnMapId < 0) {
                throw new Error('Forbidden value (' + this.spawnMapId + ') on element spawnMapId.');
            }
            param1.writeInt(this.spawnMapId);
        };
        ZaapListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ZaapListMessage(param1);
        };
        ZaapListMessage.prototype.deserializeAs_ZaapListMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.spawnMapId = param1.readInt();
            if (this.spawnMapId < 0) {
                throw new Error('Forbidden value (' + this.spawnMapId + ') on element of ZaapListMessage.spawnMapId.');
            }
        };
        ZaapListMessage.ID = 1604;
        return ZaapListMessage;
    })(TeleportDestinationsListMessage);
    Protocol.ZaapListMessage = ZaapListMessage;
    var ZaapRespawnSaveRequestMessage = (function (_super) {
        __extends(ZaapRespawnSaveRequestMessage, _super);
        function ZaapRespawnSaveRequestMessage() {
            _super.call(this);
        }
        ZaapRespawnSaveRequestMessage.prototype.getMessageId = function () {
            return ZaapRespawnSaveRequestMessage.ID;
        };
        ZaapRespawnSaveRequestMessage.prototype.reset = function () {
        };
        ZaapRespawnSaveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ZaapRespawnSaveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ZaapRespawnSaveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ZaapRespawnSaveRequestMessage(param1);
        };
        ZaapRespawnSaveRequestMessage.prototype.serializeAs_ZaapRespawnSaveRequestMessage = function (param1) {
        };
        ZaapRespawnSaveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ZaapRespawnSaveRequestMessage(param1);
        };
        ZaapRespawnSaveRequestMessage.prototype.deserializeAs_ZaapRespawnSaveRequestMessage = function (param1) {
        };
        ZaapRespawnSaveRequestMessage.ID = 6572;
        return ZaapRespawnSaveRequestMessage;
    })(NetworkMessage);
    Protocol.ZaapRespawnSaveRequestMessage = ZaapRespawnSaveRequestMessage;
    var ZaapRespawnUpdatedMessage = (function (_super) {
        __extends(ZaapRespawnUpdatedMessage, _super);
        function ZaapRespawnUpdatedMessage() {
            this.mapId = 0;
            _super.call(this);
        }
        ZaapRespawnUpdatedMessage.prototype.getMessageId = function () {
            return ZaapRespawnUpdatedMessage.ID;
        };
        ZaapRespawnUpdatedMessage.prototype.reset = function () {
            this.mapId = 0;
        };
        ZaapRespawnUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ZaapRespawnUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ZaapRespawnUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ZaapRespawnUpdatedMessage(param1);
        };
        ZaapRespawnUpdatedMessage.prototype.serializeAs_ZaapRespawnUpdatedMessage = function (param1) {
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
        };
        ZaapRespawnUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ZaapRespawnUpdatedMessage(param1);
        };
        ZaapRespawnUpdatedMessage.prototype.deserializeAs_ZaapRespawnUpdatedMessage = function (param1) {
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of ZaapRespawnUpdatedMessage.mapId.');
            }
        };
        ZaapRespawnUpdatedMessage.ID = 6571;
        return ZaapRespawnUpdatedMessage;
    })(NetworkMessage);
    Protocol.ZaapRespawnUpdatedMessage = ZaapRespawnUpdatedMessage;
    var KamasUpdateMessage = (function (_super) {
        __extends(KamasUpdateMessage, _super);
        function KamasUpdateMessage() {
            this.kamasTotal = 0;
            _super.call(this);
        }
        KamasUpdateMessage.prototype.getMessageId = function () {
            return KamasUpdateMessage.ID;
        };
        KamasUpdateMessage.prototype.reset = function () {
            this.kamasTotal = 0;
        };
        KamasUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KamasUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KamasUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_KamasUpdateMessage(param1);
        };
        KamasUpdateMessage.prototype.serializeAs_KamasUpdateMessage = function (param1) {
            param1.writeVarInt(this.kamasTotal);
        };
        KamasUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KamasUpdateMessage(param1);
        };
        KamasUpdateMessage.prototype.deserializeAs_KamasUpdateMessage = function (param1) {
            this.kamasTotal = param1.readVarInt();
        };
        KamasUpdateMessage.ID = 5537;
        return KamasUpdateMessage;
    })(NetworkMessage);
    Protocol.KamasUpdateMessage = KamasUpdateMessage;
    var ObjectAveragePricesErrorMessage = (function (_super) {
        __extends(ObjectAveragePricesErrorMessage, _super);
        function ObjectAveragePricesErrorMessage() {
            _super.call(this);
        }
        ObjectAveragePricesErrorMessage.prototype.getMessageId = function () {
            return ObjectAveragePricesErrorMessage.ID;
        };
        ObjectAveragePricesErrorMessage.prototype.reset = function () {
        };
        ObjectAveragePricesErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectAveragePricesErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectAveragePricesErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectAveragePricesErrorMessage(param1);
        };
        ObjectAveragePricesErrorMessage.prototype.serializeAs_ObjectAveragePricesErrorMessage = function (param1) {
        };
        ObjectAveragePricesErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectAveragePricesErrorMessage(param1);
        };
        ObjectAveragePricesErrorMessage.prototype.deserializeAs_ObjectAveragePricesErrorMessage = function (param1) {
        };
        ObjectAveragePricesErrorMessage.ID = 6336;
        return ObjectAveragePricesErrorMessage;
    })(NetworkMessage);
    Protocol.ObjectAveragePricesErrorMessage = ObjectAveragePricesErrorMessage;
    var ObjectAveragePricesGetMessage = (function (_super) {
        __extends(ObjectAveragePricesGetMessage, _super);
        function ObjectAveragePricesGetMessage() {
            _super.call(this);
        }
        ObjectAveragePricesGetMessage.prototype.getMessageId = function () {
            return ObjectAveragePricesGetMessage.ID;
        };
        ObjectAveragePricesGetMessage.prototype.reset = function () {
        };
        ObjectAveragePricesGetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectAveragePricesGetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectAveragePricesGetMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectAveragePricesGetMessage(param1);
        };
        ObjectAveragePricesGetMessage.prototype.serializeAs_ObjectAveragePricesGetMessage = function (param1) {
        };
        ObjectAveragePricesGetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectAveragePricesGetMessage(param1);
        };
        ObjectAveragePricesGetMessage.prototype.deserializeAs_ObjectAveragePricesGetMessage = function (param1) {
        };
        ObjectAveragePricesGetMessage.ID = 6334;
        return ObjectAveragePricesGetMessage;
    })(NetworkMessage);
    Protocol.ObjectAveragePricesGetMessage = ObjectAveragePricesGetMessage;
    var ObjectAveragePricesMessage = (function (_super) {
        __extends(ObjectAveragePricesMessage, _super);
        function ObjectAveragePricesMessage() {
            this.ids = [];
            this.avgPrices = [];
            _super.call(this);
        }
        ObjectAveragePricesMessage.prototype.getMessageId = function () {
            return ObjectAveragePricesMessage.ID;
        };
        ObjectAveragePricesMessage.prototype.reset = function () {
            this.ids = [];
            this.avgPrices = [];
        };
        ObjectAveragePricesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectAveragePricesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectAveragePricesMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectAveragePricesMessage(param1);
        };
        ObjectAveragePricesMessage.prototype.serializeAs_ObjectAveragePricesMessage = function (param1) {
            param1.writeShort(this.ids.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ids.length) {
                if (this.ids[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.ids[_loc2_] + ') on element 1 (starting at 1) of ids.');
                }
                param1.writeVarShort(this.ids[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.avgPrices.length);
            var _loc3_ = 0;
            while (_loc3_ < this.avgPrices.length) {
                if (this.avgPrices[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.avgPrices[_loc3_] + ') on element 2 (starting at 1) of avgPrices.');
                }
                param1.writeVarInt(this.avgPrices[_loc3_]);
                _loc3_++;
            }
        };
        ObjectAveragePricesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectAveragePricesMessage(param1);
        };
        ObjectAveragePricesMessage.prototype.deserializeAs_ObjectAveragePricesMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of ids.');
                }
                this.ids.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of avgPrices.');
                }
                this.avgPrices.push(_loc7_);
                _loc5_++;
            }
        };
        ObjectAveragePricesMessage.ID = 6335;
        return ObjectAveragePricesMessage;
    })(NetworkMessage);
    Protocol.ObjectAveragePricesMessage = ObjectAveragePricesMessage;
    var DecraftResultMessage = (function (_super) {
        __extends(DecraftResultMessage, _super);
        function DecraftResultMessage() {
            this.results = [];
            _super.call(this);
        }
        DecraftResultMessage.prototype.getMessageId = function () {
            return DecraftResultMessage.ID;
        };
        DecraftResultMessage.prototype.reset = function () {
            this.results = [];
        };
        DecraftResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DecraftResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DecraftResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_DecraftResultMessage(param1);
        };
        DecraftResultMessage.prototype.serializeAs_DecraftResultMessage = function (param1) {
            param1.writeShort(this.results.length);
            var _loc2_ = 0;
            while (_loc2_ < this.results.length) {
                (this.results[_loc2_]).serializeAs_DecraftedItemStackInfo(param1);
                _loc2_++;
            }
        };
        DecraftResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DecraftResultMessage(param1);
        };
        DecraftResultMessage.prototype.deserializeAs_DecraftResultMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new DecraftedItemStackInfo();
                _loc4_.deserialize(param1);
                this.results.push(_loc4_);
                _loc3_++;
            }
        };
        DecraftResultMessage.ID = 6569;
        return DecraftResultMessage;
    })(NetworkMessage);
    Protocol.DecraftResultMessage = DecraftResultMessage;
    var ExchangeAcceptMessage = (function (_super) {
        __extends(ExchangeAcceptMessage, _super);
        function ExchangeAcceptMessage() {
            _super.call(this);
        }
        ExchangeAcceptMessage.prototype.getMessageId = function () {
            return ExchangeAcceptMessage.ID;
        };
        ExchangeAcceptMessage.prototype.reset = function () {
        };
        ExchangeAcceptMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeAcceptMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeAcceptMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeAcceptMessage(param1);
        };
        ExchangeAcceptMessage.prototype.serializeAs_ExchangeAcceptMessage = function (param1) {
        };
        ExchangeAcceptMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeAcceptMessage(param1);
        };
        ExchangeAcceptMessage.prototype.deserializeAs_ExchangeAcceptMessage = function (param1) {
        };
        ExchangeAcceptMessage.ID = 5508;
        return ExchangeAcceptMessage;
    })(NetworkMessage);
    Protocol.ExchangeAcceptMessage = ExchangeAcceptMessage;
    var ExchangeBidHouseBuyMessage = (function (_super) {
        __extends(ExchangeBidHouseBuyMessage, _super);
        function ExchangeBidHouseBuyMessage() {
            this.uid = 0;
            this.qty = 0;
            this.price = 0;
            _super.call(this);
        }
        ExchangeBidHouseBuyMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseBuyMessage.ID;
        };
        ExchangeBidHouseBuyMessage.prototype.reset = function () {
            this.uid = 0;
            this.qty = 0;
            this.price = 0;
        };
        ExchangeBidHouseBuyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseBuyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseBuyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseBuyMessage(param1);
        };
        ExchangeBidHouseBuyMessage.prototype.serializeAs_ExchangeBidHouseBuyMessage = function (param1) {
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeVarInt(this.uid);
            if (this.qty < 0) {
                throw new Error('Forbidden value (' + this.qty + ') on element qty.');
            }
            param1.writeVarInt(this.qty);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        ExchangeBidHouseBuyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseBuyMessage(param1);
        };
        ExchangeBidHouseBuyMessage.prototype.deserializeAs_ExchangeBidHouseBuyMessage = function (param1) {
            this.uid = param1.readVarUhInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of ExchangeBidHouseBuyMessage.uid.');
            }
            this.qty = param1.readVarUhInt();
            if (this.qty < 0) {
                throw new Error('Forbidden value (' + this.qty + ') on element of ExchangeBidHouseBuyMessage.qty.');
            }
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of ExchangeBidHouseBuyMessage.price.');
            }
        };
        ExchangeBidHouseBuyMessage.ID = 5804;
        return ExchangeBidHouseBuyMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseBuyMessage = ExchangeBidHouseBuyMessage;
    var ExchangeBidHouseBuyResultMessage = (function (_super) {
        __extends(ExchangeBidHouseBuyResultMessage, _super);
        function ExchangeBidHouseBuyResultMessage() {
            this.uid = 0;
            this.bought = false;
            _super.call(this);
        }
        ExchangeBidHouseBuyResultMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseBuyResultMessage.ID;
        };
        ExchangeBidHouseBuyResultMessage.prototype.reset = function () {
            this.uid = 0;
            this.bought = false;
        };
        ExchangeBidHouseBuyResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseBuyResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseBuyResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseBuyResultMessage(param1);
        };
        ExchangeBidHouseBuyResultMessage.prototype.serializeAs_ExchangeBidHouseBuyResultMessage = function (param1) {
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeVarInt(this.uid);
            param1.writeBoolean(this.bought);
        };
        ExchangeBidHouseBuyResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseBuyResultMessage(param1);
        };
        ExchangeBidHouseBuyResultMessage.prototype.deserializeAs_ExchangeBidHouseBuyResultMessage = function (param1) {
            this.uid = param1.readVarUhInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of ExchangeBidHouseBuyResultMessage.uid.');
            }
            this.bought = param1.readBoolean();
        };
        ExchangeBidHouseBuyResultMessage.ID = 6272;
        return ExchangeBidHouseBuyResultMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseBuyResultMessage = ExchangeBidHouseBuyResultMessage;
    var ExchangeBidHouseGenericItemAddedMessage = (function (_super) {
        __extends(ExchangeBidHouseGenericItemAddedMessage, _super);
        function ExchangeBidHouseGenericItemAddedMessage() {
            this.objGenericId = 0;
            _super.call(this);
        }
        ExchangeBidHouseGenericItemAddedMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseGenericItemAddedMessage.ID;
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.reset = function () {
            this.objGenericId = 0;
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseGenericItemAddedMessage(param1);
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.serializeAs_ExchangeBidHouseGenericItemAddedMessage = function (param1) {
            if (this.objGenericId < 0) {
                throw new Error('Forbidden value (' + this.objGenericId + ') on element objGenericId.');
            }
            param1.writeVarShort(this.objGenericId);
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseGenericItemAddedMessage(param1);
        };
        ExchangeBidHouseGenericItemAddedMessage.prototype.deserializeAs_ExchangeBidHouseGenericItemAddedMessage = function (param1) {
            this.objGenericId = param1.readVarUhShort();
            if (this.objGenericId < 0) {
                throw new Error('Forbidden value (' + this.objGenericId + ') on element of ExchangeBidHouseGenericItemAddedMessage.objGenericId.');
            }
        };
        ExchangeBidHouseGenericItemAddedMessage.ID = 5947;
        return ExchangeBidHouseGenericItemAddedMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseGenericItemAddedMessage = ExchangeBidHouseGenericItemAddedMessage;
    var ExchangeBidHouseGenericItemRemovedMessage = (function (_super) {
        __extends(ExchangeBidHouseGenericItemRemovedMessage, _super);
        function ExchangeBidHouseGenericItemRemovedMessage() {
            this.objGenericId = 0;
            _super.call(this);
        }
        ExchangeBidHouseGenericItemRemovedMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseGenericItemRemovedMessage.ID;
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.reset = function () {
            this.objGenericId = 0;
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseGenericItemRemovedMessage(param1);
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.serializeAs_ExchangeBidHouseGenericItemRemovedMessage = function (param1) {
            if (this.objGenericId < 0) {
                throw new Error('Forbidden value (' + this.objGenericId + ') on element objGenericId.');
            }
            param1.writeVarShort(this.objGenericId);
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseGenericItemRemovedMessage(param1);
        };
        ExchangeBidHouseGenericItemRemovedMessage.prototype.deserializeAs_ExchangeBidHouseGenericItemRemovedMessage = function (param1) {
            this.objGenericId = param1.readVarUhShort();
            if (this.objGenericId < 0) {
                throw new Error('Forbidden value (' + this.objGenericId + ') on element of ExchangeBidHouseGenericItemRemovedMessage.objGenericId.');
            }
        };
        ExchangeBidHouseGenericItemRemovedMessage.ID = 5948;
        return ExchangeBidHouseGenericItemRemovedMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseGenericItemRemovedMessage = ExchangeBidHouseGenericItemRemovedMessage;
    var ExchangeBidHouseInListAddedMessage = (function (_super) {
        __extends(ExchangeBidHouseInListAddedMessage, _super);
        function ExchangeBidHouseInListAddedMessage() {
            this.itemUID = 0;
            this.objGenericId = 0;
            this.effects = [];
            this.prices = [];
            _super.call(this);
        }
        ExchangeBidHouseInListAddedMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseInListAddedMessage.ID;
        };
        ExchangeBidHouseInListAddedMessage.prototype.reset = function () {
            this.itemUID = 0;
            this.objGenericId = 0;
            this.effects = [];
            this.prices = [];
        };
        ExchangeBidHouseInListAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseInListAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseInListAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseInListAddedMessage(param1);
        };
        ExchangeBidHouseInListAddedMessage.prototype.serializeAs_ExchangeBidHouseInListAddedMessage = function (param1) {
            param1.writeInt(this.itemUID);
            param1.writeInt(this.objGenericId);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.prices.length);
            var _loc3_ = 0;
            while (_loc3_ < this.prices.length) {
                if (this.prices[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.prices[_loc3_] + ') on element 4 (starting at 1) of prices.');
                }
                param1.writeVarInt(this.prices[_loc3_]);
                _loc3_++;
            }
        };
        ExchangeBidHouseInListAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseInListAddedMessage(param1);
        };
        ExchangeBidHouseInListAddedMessage.prototype.deserializeAs_ExchangeBidHouseInListAddedMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            this.itemUID = param1.readInt();
            this.objGenericId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc6_);
                _loc7_.deserialize(param1);
                this.effects.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readVarUhInt();
                if (_loc8_ < 0) {
                    throw new Error('Forbidden value (' + _loc8_ + ') on elements of prices.');
                }
                this.prices.push(_loc8_);
                _loc5_++;
            }
        };
        ExchangeBidHouseInListAddedMessage.ID = 5949;
        return ExchangeBidHouseInListAddedMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseInListAddedMessage = ExchangeBidHouseInListAddedMessage;
    var ExchangeBidHouseInListRemovedMessage = (function (_super) {
        __extends(ExchangeBidHouseInListRemovedMessage, _super);
        function ExchangeBidHouseInListRemovedMessage() {
            this.itemUID = 0;
            _super.call(this);
        }
        ExchangeBidHouseInListRemovedMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseInListRemovedMessage.ID;
        };
        ExchangeBidHouseInListRemovedMessage.prototype.reset = function () {
            this.itemUID = 0;
        };
        ExchangeBidHouseInListRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseInListRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseInListRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseInListRemovedMessage(param1);
        };
        ExchangeBidHouseInListRemovedMessage.prototype.serializeAs_ExchangeBidHouseInListRemovedMessage = function (param1) {
            param1.writeInt(this.itemUID);
        };
        ExchangeBidHouseInListRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseInListRemovedMessage(param1);
        };
        ExchangeBidHouseInListRemovedMessage.prototype.deserializeAs_ExchangeBidHouseInListRemovedMessage = function (param1) {
            this.itemUID = param1.readInt();
        };
        ExchangeBidHouseInListRemovedMessage.ID = 5950;
        return ExchangeBidHouseInListRemovedMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseInListRemovedMessage = ExchangeBidHouseInListRemovedMessage;
    var ExchangeBidHouseInListUpdatedMessage = (function (_super) {
        __extends(ExchangeBidHouseInListUpdatedMessage, _super);
        function ExchangeBidHouseInListUpdatedMessage() {
            _super.call(this);
        }
        ExchangeBidHouseInListUpdatedMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseInListUpdatedMessage.ID;
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.reset = function () {
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseInListUpdatedMessage(param1);
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.serializeAs_ExchangeBidHouseInListUpdatedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeBidHouseInListAddedMessage.call(this, param1);
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseInListUpdatedMessage(param1);
        };
        ExchangeBidHouseInListUpdatedMessage.prototype.deserializeAs_ExchangeBidHouseInListUpdatedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ExchangeBidHouseInListUpdatedMessage.ID = 6337;
        return ExchangeBidHouseInListUpdatedMessage;
    })(ExchangeBidHouseInListAddedMessage);
    Protocol.ExchangeBidHouseInListUpdatedMessage = ExchangeBidHouseInListUpdatedMessage;
    var ExchangeBidHouseItemAddOkMessage = (function (_super) {
        __extends(ExchangeBidHouseItemAddOkMessage, _super);
        function ExchangeBidHouseItemAddOkMessage() {
            this.itemInfo = new ObjectItemToSellInBid();
            _super.call(this);
        }
        ExchangeBidHouseItemAddOkMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseItemAddOkMessage.ID;
        };
        ExchangeBidHouseItemAddOkMessage.prototype.reset = function () {
            this.itemInfo = new ObjectItemToSellInBid();
        };
        ExchangeBidHouseItemAddOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseItemAddOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseItemAddOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseItemAddOkMessage(param1);
        };
        ExchangeBidHouseItemAddOkMessage.prototype.serializeAs_ExchangeBidHouseItemAddOkMessage = function (param1) {
            this.itemInfo.serializeAs_ObjectItemToSellInBid(param1);
        };
        ExchangeBidHouseItemAddOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseItemAddOkMessage(param1);
        };
        ExchangeBidHouseItemAddOkMessage.prototype.deserializeAs_ExchangeBidHouseItemAddOkMessage = function (param1) {
            this.itemInfo = new ObjectItemToSellInBid();
            this.itemInfo.deserialize(param1);
        };
        ExchangeBidHouseItemAddOkMessage.ID = 5945;
        return ExchangeBidHouseItemAddOkMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseItemAddOkMessage = ExchangeBidHouseItemAddOkMessage;
    var ExchangeBidHouseItemRemoveOkMessage = (function (_super) {
        __extends(ExchangeBidHouseItemRemoveOkMessage, _super);
        function ExchangeBidHouseItemRemoveOkMessage() {
            this.sellerId = 0;
            _super.call(this);
        }
        ExchangeBidHouseItemRemoveOkMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseItemRemoveOkMessage.ID;
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.reset = function () {
            this.sellerId = 0;
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseItemRemoveOkMessage(param1);
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.serializeAs_ExchangeBidHouseItemRemoveOkMessage = function (param1) {
            param1.writeInt(this.sellerId);
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseItemRemoveOkMessage(param1);
        };
        ExchangeBidHouseItemRemoveOkMessage.prototype.deserializeAs_ExchangeBidHouseItemRemoveOkMessage = function (param1) {
            this.sellerId = param1.readInt();
        };
        ExchangeBidHouseItemRemoveOkMessage.ID = 5946;
        return ExchangeBidHouseItemRemoveOkMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseItemRemoveOkMessage = ExchangeBidHouseItemRemoveOkMessage;
    var ExchangeBidHouseListMessage = (function (_super) {
        __extends(ExchangeBidHouseListMessage, _super);
        function ExchangeBidHouseListMessage() {
            this.id = 0;
            _super.call(this);
        }
        ExchangeBidHouseListMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseListMessage.ID;
        };
        ExchangeBidHouseListMessage.prototype.reset = function () {
            this.id = 0;
        };
        ExchangeBidHouseListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseListMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseListMessage(param1);
        };
        ExchangeBidHouseListMessage.prototype.serializeAs_ExchangeBidHouseListMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
        };
        ExchangeBidHouseListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseListMessage(param1);
        };
        ExchangeBidHouseListMessage.prototype.deserializeAs_ExchangeBidHouseListMessage = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of ExchangeBidHouseListMessage.id.');
            }
        };
        ExchangeBidHouseListMessage.ID = 5807;
        return ExchangeBidHouseListMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseListMessage = ExchangeBidHouseListMessage;
    var ExchangeBidHousePriceMessage = (function (_super) {
        __extends(ExchangeBidHousePriceMessage, _super);
        function ExchangeBidHousePriceMessage() {
            this.genId = 0;
            _super.call(this);
        }
        ExchangeBidHousePriceMessage.prototype.getMessageId = function () {
            return ExchangeBidHousePriceMessage.ID;
        };
        ExchangeBidHousePriceMessage.prototype.reset = function () {
            this.genId = 0;
        };
        ExchangeBidHousePriceMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHousePriceMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHousePriceMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHousePriceMessage(param1);
        };
        ExchangeBidHousePriceMessage.prototype.serializeAs_ExchangeBidHousePriceMessage = function (param1) {
            if (this.genId < 0) {
                throw new Error('Forbidden value (' + this.genId + ') on element genId.');
            }
            param1.writeVarShort(this.genId);
        };
        ExchangeBidHousePriceMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHousePriceMessage(param1);
        };
        ExchangeBidHousePriceMessage.prototype.deserializeAs_ExchangeBidHousePriceMessage = function (param1) {
            this.genId = param1.readVarUhShort();
            if (this.genId < 0) {
                throw new Error('Forbidden value (' + this.genId + ') on element of ExchangeBidHousePriceMessage.genId.');
            }
        };
        ExchangeBidHousePriceMessage.ID = 5805;
        return ExchangeBidHousePriceMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHousePriceMessage = ExchangeBidHousePriceMessage;
    var ExchangeBidHouseSearchMessage = (function (_super) {
        __extends(ExchangeBidHouseSearchMessage, _super);
        function ExchangeBidHouseSearchMessage() {
            this.type = 0;
            this.genId = 0;
            _super.call(this);
        }
        ExchangeBidHouseSearchMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseSearchMessage.ID;
        };
        ExchangeBidHouseSearchMessage.prototype.reset = function () {
            this.type = 0;
            this.genId = 0;
        };
        ExchangeBidHouseSearchMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseSearchMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseSearchMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseSearchMessage(param1);
        };
        ExchangeBidHouseSearchMessage.prototype.serializeAs_ExchangeBidHouseSearchMessage = function (param1) {
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element type.');
            }
            param1.writeVarInt(this.type);
            if (this.genId < 0) {
                throw new Error('Forbidden value (' + this.genId + ') on element genId.');
            }
            param1.writeVarShort(this.genId);
        };
        ExchangeBidHouseSearchMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseSearchMessage(param1);
        };
        ExchangeBidHouseSearchMessage.prototype.deserializeAs_ExchangeBidHouseSearchMessage = function (param1) {
            this.type = param1.readVarUhInt();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of ExchangeBidHouseSearchMessage.type.');
            }
            this.genId = param1.readVarUhShort();
            if (this.genId < 0) {
                throw new Error('Forbidden value (' + this.genId + ') on element of ExchangeBidHouseSearchMessage.genId.');
            }
        };
        ExchangeBidHouseSearchMessage.ID = 5806;
        return ExchangeBidHouseSearchMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseSearchMessage = ExchangeBidHouseSearchMessage;
    var ExchangeBidHouseTypeMessage = (function (_super) {
        __extends(ExchangeBidHouseTypeMessage, _super);
        function ExchangeBidHouseTypeMessage() {
            this.type = 0;
            _super.call(this);
        }
        ExchangeBidHouseTypeMessage.prototype.getMessageId = function () {
            return ExchangeBidHouseTypeMessage.ID;
        };
        ExchangeBidHouseTypeMessage.prototype.reset = function () {
            this.type = 0;
        };
        ExchangeBidHouseTypeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidHouseTypeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidHouseTypeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidHouseTypeMessage(param1);
        };
        ExchangeBidHouseTypeMessage.prototype.serializeAs_ExchangeBidHouseTypeMessage = function (param1) {
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element type.');
            }
            param1.writeVarInt(this.type);
        };
        ExchangeBidHouseTypeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidHouseTypeMessage(param1);
        };
        ExchangeBidHouseTypeMessage.prototype.deserializeAs_ExchangeBidHouseTypeMessage = function (param1) {
            this.type = param1.readVarUhInt();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of ExchangeBidHouseTypeMessage.type.');
            }
        };
        ExchangeBidHouseTypeMessage.ID = 5803;
        return ExchangeBidHouseTypeMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidHouseTypeMessage = ExchangeBidHouseTypeMessage;
    var ExchangeBidPriceForSellerMessage = (function (_super) {
        __extends(ExchangeBidPriceForSellerMessage, _super);
        function ExchangeBidPriceForSellerMessage() {
            this.allIdentical = false;
            this.minimalPrices = [];
            _super.call(this);
        }
        ExchangeBidPriceForSellerMessage.prototype.getMessageId = function () {
            return ExchangeBidPriceForSellerMessage.ID;
        };
        ExchangeBidPriceForSellerMessage.prototype.reset = function () {
            this.allIdentical = false;
            this.minimalPrices = [];
        };
        ExchangeBidPriceForSellerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidPriceForSellerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidPriceForSellerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidPriceForSellerMessage(param1);
        };
        ExchangeBidPriceForSellerMessage.prototype.serializeAs_ExchangeBidPriceForSellerMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeBidPriceMessage.call(this, param1);
            param1.writeBoolean(this.allIdentical);
            param1.writeShort(this.minimalPrices.length);
            var _loc2_ = 0;
            while (_loc2_ < this.minimalPrices.length) {
                if (this.minimalPrices[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.minimalPrices[_loc2_] + ') on element 2 (starting at 1) of minimalPrices.');
                }
                param1.writeVarInt(this.minimalPrices[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeBidPriceForSellerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidPriceForSellerMessage(param1);
        };
        ExchangeBidPriceForSellerMessage.prototype.deserializeAs_ExchangeBidPriceForSellerMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            this.allIdentical = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of minimalPrices.');
                }
                this.minimalPrices.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeBidPriceForSellerMessage.ID = 6464;
        return ExchangeBidPriceForSellerMessage;
    })(ExchangeBidPriceMessage);
    Protocol.ExchangeBidPriceForSellerMessage = ExchangeBidPriceForSellerMessage;
    var ExchangeBidPriceMessage = (function (_super) {
        __extends(ExchangeBidPriceMessage, _super);
        function ExchangeBidPriceMessage() {
            this.genericId = 0;
            this.averagePrice = 0;
            _super.call(this);
        }
        ExchangeBidPriceMessage.prototype.getMessageId = function () {
            return ExchangeBidPriceMessage.ID;
        };
        ExchangeBidPriceMessage.prototype.reset = function () {
            this.genericId = 0;
            this.averagePrice = 0;
        };
        ExchangeBidPriceMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidPriceMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidPriceMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidPriceMessage(param1);
        };
        ExchangeBidPriceMessage.prototype.serializeAs_ExchangeBidPriceMessage = function (param1) {
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element genericId.');
            }
            param1.writeVarShort(this.genericId);
            param1.writeVarInt(this.averagePrice);
        };
        ExchangeBidPriceMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidPriceMessage(param1);
        };
        ExchangeBidPriceMessage.prototype.deserializeAs_ExchangeBidPriceMessage = function (param1) {
            this.genericId = param1.readVarUhShort();
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element of ExchangeBidPriceMessage.genericId.');
            }
            this.averagePrice = param1.readVarInt();
        };
        ExchangeBidPriceMessage.ID = 5755;
        return ExchangeBidPriceMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidPriceMessage = ExchangeBidPriceMessage;
    var ExchangeBidSearchOkMessage = (function (_super) {
        __extends(ExchangeBidSearchOkMessage, _super);
        function ExchangeBidSearchOkMessage() {
            _super.call(this);
        }
        ExchangeBidSearchOkMessage.prototype.getMessageId = function () {
            return ExchangeBidSearchOkMessage.ID;
        };
        ExchangeBidSearchOkMessage.prototype.reset = function () {
        };
        ExchangeBidSearchOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBidSearchOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBidSearchOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBidSearchOkMessage(param1);
        };
        ExchangeBidSearchOkMessage.prototype.serializeAs_ExchangeBidSearchOkMessage = function (param1) {
        };
        ExchangeBidSearchOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBidSearchOkMessage(param1);
        };
        ExchangeBidSearchOkMessage.prototype.deserializeAs_ExchangeBidSearchOkMessage = function (param1) {
        };
        ExchangeBidSearchOkMessage.ID = 5802;
        return ExchangeBidSearchOkMessage;
    })(NetworkMessage);
    Protocol.ExchangeBidSearchOkMessage = ExchangeBidSearchOkMessage;
    var ExchangeBuyMessage = (function (_super) {
        __extends(ExchangeBuyMessage, _super);
        function ExchangeBuyMessage() {
            this.objectToBuyId = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeBuyMessage.prototype.getMessageId = function () {
            return ExchangeBuyMessage.ID;
        };
        ExchangeBuyMessage.prototype.reset = function () {
            this.objectToBuyId = 0;
            this.quantity = 0;
        };
        ExchangeBuyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBuyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBuyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBuyMessage(param1);
        };
        ExchangeBuyMessage.prototype.serializeAs_ExchangeBuyMessage = function (param1) {
            if (this.objectToBuyId < 0) {
                throw new Error('Forbidden value (' + this.objectToBuyId + ') on element objectToBuyId.');
            }
            param1.writeVarInt(this.objectToBuyId);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ExchangeBuyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBuyMessage(param1);
        };
        ExchangeBuyMessage.prototype.deserializeAs_ExchangeBuyMessage = function (param1) {
            this.objectToBuyId = param1.readVarUhInt();
            if (this.objectToBuyId < 0) {
                throw new Error('Forbidden value (' + this.objectToBuyId + ') on element of ExchangeBuyMessage.objectToBuyId.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ExchangeBuyMessage.quantity.');
            }
        };
        ExchangeBuyMessage.ID = 5774;
        return ExchangeBuyMessage;
    })(NetworkMessage);
    Protocol.ExchangeBuyMessage = ExchangeBuyMessage;
    var ExchangeBuyOkMessage = (function (_super) {
        __extends(ExchangeBuyOkMessage, _super);
        function ExchangeBuyOkMessage() {
            _super.call(this);
        }
        ExchangeBuyOkMessage.prototype.getMessageId = function () {
            return ExchangeBuyOkMessage.ID;
        };
        ExchangeBuyOkMessage.prototype.reset = function () {
        };
        ExchangeBuyOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeBuyOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeBuyOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeBuyOkMessage(param1);
        };
        ExchangeBuyOkMessage.prototype.serializeAs_ExchangeBuyOkMessage = function (param1) {
        };
        ExchangeBuyOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeBuyOkMessage(param1);
        };
        ExchangeBuyOkMessage.prototype.deserializeAs_ExchangeBuyOkMessage = function (param1) {
        };
        ExchangeBuyOkMessage.ID = 5759;
        return ExchangeBuyOkMessage;
    })(NetworkMessage);
    Protocol.ExchangeBuyOkMessage = ExchangeBuyOkMessage;
    var ExchangeCraftCountModifiedMessage = (function (_super) {
        __extends(ExchangeCraftCountModifiedMessage, _super);
        function ExchangeCraftCountModifiedMessage() {
            this.count = 0;
            _super.call(this);
        }
        ExchangeCraftCountModifiedMessage.prototype.getMessageId = function () {
            return ExchangeCraftCountModifiedMessage.ID;
        };
        ExchangeCraftCountModifiedMessage.prototype.reset = function () {
            this.count = 0;
        };
        ExchangeCraftCountModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftCountModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftCountModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftCountModifiedMessage(param1);
        };
        ExchangeCraftCountModifiedMessage.prototype.serializeAs_ExchangeCraftCountModifiedMessage = function (param1) {
            param1.writeVarInt(this.count);
        };
        ExchangeCraftCountModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftCountModifiedMessage(param1);
        };
        ExchangeCraftCountModifiedMessage.prototype.deserializeAs_ExchangeCraftCountModifiedMessage = function (param1) {
            this.count = param1.readVarInt();
        };
        ExchangeCraftCountModifiedMessage.ID = 6595;
        return ExchangeCraftCountModifiedMessage;
    })(NetworkMessage);
    Protocol.ExchangeCraftCountModifiedMessage = ExchangeCraftCountModifiedMessage;
    var ExchangeCraftCountRequestMessage = (function (_super) {
        __extends(ExchangeCraftCountRequestMessage, _super);
        function ExchangeCraftCountRequestMessage() {
            this.count = 0;
            _super.call(this);
        }
        ExchangeCraftCountRequestMessage.prototype.getMessageId = function () {
            return ExchangeCraftCountRequestMessage.ID;
        };
        ExchangeCraftCountRequestMessage.prototype.reset = function () {
            this.count = 0;
        };
        ExchangeCraftCountRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftCountRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftCountRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftCountRequestMessage(param1);
        };
        ExchangeCraftCountRequestMessage.prototype.serializeAs_ExchangeCraftCountRequestMessage = function (param1) {
            param1.writeVarInt(this.count);
        };
        ExchangeCraftCountRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftCountRequestMessage(param1);
        };
        ExchangeCraftCountRequestMessage.prototype.deserializeAs_ExchangeCraftCountRequestMessage = function (param1) {
            this.count = param1.readVarInt();
        };
        ExchangeCraftCountRequestMessage.ID = 6597;
        return ExchangeCraftCountRequestMessage;
    })(NetworkMessage);
    Protocol.ExchangeCraftCountRequestMessage = ExchangeCraftCountRequestMessage;
    var ExchangeCraftInformationObjectMessage = (function (_super) {
        __extends(ExchangeCraftInformationObjectMessage, _super);
        function ExchangeCraftInformationObjectMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        ExchangeCraftInformationObjectMessage.prototype.getMessageId = function () {
            return ExchangeCraftInformationObjectMessage.ID;
        };
        ExchangeCraftInformationObjectMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        ExchangeCraftInformationObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftInformationObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftInformationObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftInformationObjectMessage(param1);
        };
        ExchangeCraftInformationObjectMessage.prototype.serializeAs_ExchangeCraftInformationObjectMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeCraftResultWithObjectIdMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        ExchangeCraftInformationObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftInformationObjectMessage(param1);
        };
        ExchangeCraftInformationObjectMessage.prototype.deserializeAs_ExchangeCraftInformationObjectMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of ExchangeCraftInformationObjectMessage.playerId.');
            }
        };
        ExchangeCraftInformationObjectMessage.ID = 5794;
        return ExchangeCraftInformationObjectMessage;
    })(ExchangeCraftResultWithObjectIdMessage);
    Protocol.ExchangeCraftInformationObjectMessage = ExchangeCraftInformationObjectMessage;
    var ExchangeCraftPaymentModificationRequestMessage = (function (_super) {
        __extends(ExchangeCraftPaymentModificationRequestMessage, _super);
        function ExchangeCraftPaymentModificationRequestMessage() {
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeCraftPaymentModificationRequestMessage.prototype.getMessageId = function () {
            return ExchangeCraftPaymentModificationRequestMessage.ID;
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.reset = function () {
            this.quantity = 0;
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftPaymentModificationRequestMessage(param1);
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.serializeAs_ExchangeCraftPaymentModificationRequestMessage = function (param1) {
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftPaymentModificationRequestMessage(param1);
        };
        ExchangeCraftPaymentModificationRequestMessage.prototype.deserializeAs_ExchangeCraftPaymentModificationRequestMessage = function (param1) {
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ExchangeCraftPaymentModificationRequestMessage.quantity.');
            }
        };
        ExchangeCraftPaymentModificationRequestMessage.ID = 6579;
        return ExchangeCraftPaymentModificationRequestMessage;
    })(NetworkMessage);
    Protocol.ExchangeCraftPaymentModificationRequestMessage = ExchangeCraftPaymentModificationRequestMessage;
    var ExchangeCraftPaymentModifiedMessage = (function (_super) {
        __extends(ExchangeCraftPaymentModifiedMessage, _super);
        function ExchangeCraftPaymentModifiedMessage() {
            this.goldSum = 0;
            _super.call(this);
        }
        ExchangeCraftPaymentModifiedMessage.prototype.getMessageId = function () {
            return ExchangeCraftPaymentModifiedMessage.ID;
        };
        ExchangeCraftPaymentModifiedMessage.prototype.reset = function () {
            this.goldSum = 0;
        };
        ExchangeCraftPaymentModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftPaymentModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftPaymentModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftPaymentModifiedMessage(param1);
        };
        ExchangeCraftPaymentModifiedMessage.prototype.serializeAs_ExchangeCraftPaymentModifiedMessage = function (param1) {
            if (this.goldSum < 0) {
                throw new Error('Forbidden value (' + this.goldSum + ') on element goldSum.');
            }
            param1.writeVarInt(this.goldSum);
        };
        ExchangeCraftPaymentModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftPaymentModifiedMessage(param1);
        };
        ExchangeCraftPaymentModifiedMessage.prototype.deserializeAs_ExchangeCraftPaymentModifiedMessage = function (param1) {
            this.goldSum = param1.readVarUhInt();
            if (this.goldSum < 0) {
                throw new Error('Forbidden value (' + this.goldSum + ') on element of ExchangeCraftPaymentModifiedMessage.goldSum.');
            }
        };
        ExchangeCraftPaymentModifiedMessage.ID = 6578;
        return ExchangeCraftPaymentModifiedMessage;
    })(NetworkMessage);
    Protocol.ExchangeCraftPaymentModifiedMessage = ExchangeCraftPaymentModifiedMessage;
    var ExchangeCraftResultMagicWithObjectDescMessage = (function (_super) {
        __extends(ExchangeCraftResultMagicWithObjectDescMessage, _super);
        function ExchangeCraftResultMagicWithObjectDescMessage() {
            this.magicPoolStatus = 0;
            _super.call(this);
        }
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.getMessageId = function () {
            return ExchangeCraftResultMagicWithObjectDescMessage.ID;
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.reset = function () {
            this.magicPoolStatus = 0;
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftResultMagicWithObjectDescMessage(param1);
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.serializeAs_ExchangeCraftResultMagicWithObjectDescMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeCraftResultWithObjectDescMessage.call(this, param1);
            param1.writeByte(this.magicPoolStatus);
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftResultMagicWithObjectDescMessage(param1);
        };
        ExchangeCraftResultMagicWithObjectDescMessage.prototype.deserializeAs_ExchangeCraftResultMagicWithObjectDescMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.magicPoolStatus = param1.readByte();
        };
        ExchangeCraftResultMagicWithObjectDescMessage.ID = 6188;
        return ExchangeCraftResultMagicWithObjectDescMessage;
    })(ExchangeCraftResultWithObjectDescMessage);
    Protocol.ExchangeCraftResultMagicWithObjectDescMessage = ExchangeCraftResultMagicWithObjectDescMessage;
    var ExchangeCraftResultMessage = (function (_super) {
        __extends(ExchangeCraftResultMessage, _super);
        function ExchangeCraftResultMessage() {
            this.craftResult = 0;
            _super.call(this);
        }
        ExchangeCraftResultMessage.prototype.getMessageId = function () {
            return ExchangeCraftResultMessage.ID;
        };
        ExchangeCraftResultMessage.prototype.reset = function () {
            this.craftResult = 0;
        };
        ExchangeCraftResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftResultMessage(param1);
        };
        ExchangeCraftResultMessage.prototype.serializeAs_ExchangeCraftResultMessage = function (param1) {
            param1.writeByte(this.craftResult);
        };
        ExchangeCraftResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftResultMessage(param1);
        };
        ExchangeCraftResultMessage.prototype.deserializeAs_ExchangeCraftResultMessage = function (param1) {
            this.craftResult = param1.readByte();
            if (this.craftResult < 0) {
                throw new Error('Forbidden value (' + this.craftResult + ') on element of ExchangeCraftResultMessage.craftResult.');
            }
        };
        ExchangeCraftResultMessage.ID = 5790;
        return ExchangeCraftResultMessage;
    })(NetworkMessage);
    Protocol.ExchangeCraftResultMessage = ExchangeCraftResultMessage;
    var ExchangeCraftResultWithObjectDescMessage = (function (_super) {
        __extends(ExchangeCraftResultWithObjectDescMessage, _super);
        function ExchangeCraftResultWithObjectDescMessage() {
            this.objectInfo = new ObjectItemNotInContainer();
            _super.call(this);
        }
        ExchangeCraftResultWithObjectDescMessage.prototype.getMessageId = function () {
            return ExchangeCraftResultWithObjectDescMessage.ID;
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.reset = function () {
            this.objectInfo = new ObjectItemNotInContainer();
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftResultWithObjectDescMessage(param1);
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.serializeAs_ExchangeCraftResultWithObjectDescMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeCraftResultMessage.call(this, param1);
            this.objectInfo.serializeAs_ObjectItemNotInContainer(param1);
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftResultWithObjectDescMessage(param1);
        };
        ExchangeCraftResultWithObjectDescMessage.prototype.deserializeAs_ExchangeCraftResultWithObjectDescMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectInfo = new ObjectItemNotInContainer();
            this.objectInfo.deserialize(param1);
        };
        ExchangeCraftResultWithObjectDescMessage.ID = 5999;
        return ExchangeCraftResultWithObjectDescMessage;
    })(ExchangeCraftResultMessage);
    Protocol.ExchangeCraftResultWithObjectDescMessage = ExchangeCraftResultWithObjectDescMessage;
    var ExchangeCraftResultWithObjectIdMessage = (function (_super) {
        __extends(ExchangeCraftResultWithObjectIdMessage, _super);
        function ExchangeCraftResultWithObjectIdMessage() {
            this.objectGenericId = 0;
            _super.call(this);
        }
        ExchangeCraftResultWithObjectIdMessage.prototype.getMessageId = function () {
            return ExchangeCraftResultWithObjectIdMessage.ID;
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.reset = function () {
            this.objectGenericId = 0;
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCraftResultWithObjectIdMessage(param1);
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.serializeAs_ExchangeCraftResultWithObjectIdMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeCraftResultMessage.call(this, param1);
            if (this.objectGenericId < 0) {
                throw new Error('Forbidden value (' + this.objectGenericId + ') on element objectGenericId.');
            }
            param1.writeVarShort(this.objectGenericId);
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCraftResultWithObjectIdMessage(param1);
        };
        ExchangeCraftResultWithObjectIdMessage.prototype.deserializeAs_ExchangeCraftResultWithObjectIdMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectGenericId = param1.readVarUhShort();
            if (this.objectGenericId < 0) {
                throw new Error('Forbidden value (' + this.objectGenericId + ') on element of ExchangeCraftResultWithObjectIdMessage.objectGenericId.');
            }
        };
        ExchangeCraftResultWithObjectIdMessage.ID = 6000;
        return ExchangeCraftResultWithObjectIdMessage;
    })(ExchangeCraftResultMessage);
    Protocol.ExchangeCraftResultWithObjectIdMessage = ExchangeCraftResultWithObjectIdMessage;
    var ExchangeCrafterJobLevelupMessage = (function (_super) {
        __extends(ExchangeCrafterJobLevelupMessage, _super);
        function ExchangeCrafterJobLevelupMessage() {
            this.crafterJobLevel = 0;
            _super.call(this);
        }
        ExchangeCrafterJobLevelupMessage.prototype.getMessageId = function () {
            return ExchangeCrafterJobLevelupMessage.ID;
        };
        ExchangeCrafterJobLevelupMessage.prototype.reset = function () {
            this.crafterJobLevel = 0;
        };
        ExchangeCrafterJobLevelupMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeCrafterJobLevelupMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeCrafterJobLevelupMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeCrafterJobLevelupMessage(param1);
        };
        ExchangeCrafterJobLevelupMessage.prototype.serializeAs_ExchangeCrafterJobLevelupMessage = function (param1) {
            if (this.crafterJobLevel < 0 || this.crafterJobLevel > 255) {
                throw new Error('Forbidden value (' + this.crafterJobLevel + ') on element crafterJobLevel.');
            }
            param1.writeByte(this.crafterJobLevel);
        };
        ExchangeCrafterJobLevelupMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeCrafterJobLevelupMessage(param1);
        };
        ExchangeCrafterJobLevelupMessage.prototype.deserializeAs_ExchangeCrafterJobLevelupMessage = function (param1) {
            this.crafterJobLevel = param1.readUnsignedByte();
            if (this.crafterJobLevel < 0 || this.crafterJobLevel > 255) {
                throw new Error('Forbidden value (' + this.crafterJobLevel + ') on element of ExchangeCrafterJobLevelupMessage.crafterJobLevel.');
            }
        };
        ExchangeCrafterJobLevelupMessage.ID = 6598;
        return ExchangeCrafterJobLevelupMessage;
    })(NetworkMessage);
    Protocol.ExchangeCrafterJobLevelupMessage = ExchangeCrafterJobLevelupMessage;
    var ExchangeErrorMessage = (function (_super) {
        __extends(ExchangeErrorMessage, _super);
        function ExchangeErrorMessage() {
            this.errorType = 0;
            _super.call(this);
        }
        ExchangeErrorMessage.prototype.getMessageId = function () {
            return ExchangeErrorMessage.ID;
        };
        ExchangeErrorMessage.prototype.reset = function () {
            this.errorType = 0;
        };
        ExchangeErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeErrorMessage(param1);
        };
        ExchangeErrorMessage.prototype.serializeAs_ExchangeErrorMessage = function (param1) {
            param1.writeByte(this.errorType);
        };
        ExchangeErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeErrorMessage(param1);
        };
        ExchangeErrorMessage.prototype.deserializeAs_ExchangeErrorMessage = function (param1) {
            this.errorType = param1.readByte();
        };
        ExchangeErrorMessage.ID = 5513;
        return ExchangeErrorMessage;
    })(NetworkMessage);
    Protocol.ExchangeErrorMessage = ExchangeErrorMessage;
    var ExchangeGuildTaxCollectorGetMessage = (function (_super) {
        __extends(ExchangeGuildTaxCollectorGetMessage, _super);
        function ExchangeGuildTaxCollectorGetMessage() {
            this.collectorName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.userName = '';
            this.experience = 0;
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeGuildTaxCollectorGetMessage.prototype.getMessageId = function () {
            return ExchangeGuildTaxCollectorGetMessage.ID;
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.reset = function () {
            this.collectorName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.userName = '';
            this.experience = 0;
            this.objectsInfos = [];
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeGuildTaxCollectorGetMessage(param1);
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.serializeAs_ExchangeGuildTaxCollectorGetMessage = function (param1) {
            param1.writeUTF(this.collectorName);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeUTF(this.userName);
            if (this.experience < -9.007199254740992E15 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeDouble(this.experience);
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItemGenericQuantity(param1);
                _loc2_++;
            }
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeGuildTaxCollectorGetMessage(param1);
        };
        ExchangeGuildTaxCollectorGetMessage.prototype.deserializeAs_ExchangeGuildTaxCollectorGetMessage = function (param1) {
            var _loc4_ = null;
            this.collectorName = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of ExchangeGuildTaxCollectorGetMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of ExchangeGuildTaxCollectorGetMessage.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of ExchangeGuildTaxCollectorGetMessage.subAreaId.');
            }
            this.userName = param1.readUTF();
            this.experience = param1.readDouble();
            if (this.experience < -9.007199254740992E15 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of ExchangeGuildTaxCollectorGetMessage.experience.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemGenericQuantity();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeGuildTaxCollectorGetMessage.ID = 5762;
        return ExchangeGuildTaxCollectorGetMessage;
    })(NetworkMessage);
    Protocol.ExchangeGuildTaxCollectorGetMessage = ExchangeGuildTaxCollectorGetMessage;
    var ExchangeHandleMountsStableMessage = (function (_super) {
        __extends(ExchangeHandleMountsStableMessage, _super);
        function ExchangeHandleMountsStableMessage() {
            this.actionType = 0;
            this.ridesId = [];
            _super.call(this);
        }
        ExchangeHandleMountsStableMessage.prototype.getMessageId = function () {
            return ExchangeHandleMountsStableMessage.ID;
        };
        ExchangeHandleMountsStableMessage.prototype.reset = function () {
            this.actionType = 0;
            this.ridesId = [];
        };
        ExchangeHandleMountsStableMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeHandleMountsStableMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeHandleMountsStableMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeHandleMountsStableMessage(param1);
        };
        ExchangeHandleMountsStableMessage.prototype.serializeAs_ExchangeHandleMountsStableMessage = function (param1) {
            param1.writeByte(this.actionType);
            param1.writeShort(this.ridesId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ridesId.length) {
                if (this.ridesId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.ridesId[_loc2_] + ') on element 2 (starting at 1) of ridesId.');
                }
                param1.writeVarInt(this.ridesId[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeHandleMountsStableMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeHandleMountsStableMessage(param1);
        };
        ExchangeHandleMountsStableMessage.prototype.deserializeAs_ExchangeHandleMountsStableMessage = function (param1) {
            var _loc4_ = 0;
            this.actionType = param1.readByte();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of ridesId.');
                }
                this.ridesId.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeHandleMountsStableMessage.ID = 6562;
        return ExchangeHandleMountsStableMessage;
    })(NetworkMessage);
    Protocol.ExchangeHandleMountsStableMessage = ExchangeHandleMountsStableMessage;
    var ExchangeIsReadyMessage = (function (_super) {
        __extends(ExchangeIsReadyMessage, _super);
        function ExchangeIsReadyMessage() {
            this.id = 0;
            this.ready = false;
            _super.call(this);
        }
        ExchangeIsReadyMessage.prototype.getMessageId = function () {
            return ExchangeIsReadyMessage.ID;
        };
        ExchangeIsReadyMessage.prototype.reset = function () {
            this.id = 0;
            this.ready = false;
        };
        ExchangeIsReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeIsReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeIsReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeIsReadyMessage(param1);
        };
        ExchangeIsReadyMessage.prototype.serializeAs_ExchangeIsReadyMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
            param1.writeBoolean(this.ready);
        };
        ExchangeIsReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeIsReadyMessage(param1);
        };
        ExchangeIsReadyMessage.prototype.deserializeAs_ExchangeIsReadyMessage = function (param1) {
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of ExchangeIsReadyMessage.id.');
            }
            this.ready = param1.readBoolean();
        };
        ExchangeIsReadyMessage.ID = 5509;
        return ExchangeIsReadyMessage;
    })(NetworkMessage);
    Protocol.ExchangeIsReadyMessage = ExchangeIsReadyMessage;
    var ExchangeItemAutoCraftStopedMessage = (function (_super) {
        __extends(ExchangeItemAutoCraftStopedMessage, _super);
        function ExchangeItemAutoCraftStopedMessage() {
            this.reason = 0;
            _super.call(this);
        }
        ExchangeItemAutoCraftStopedMessage.prototype.getMessageId = function () {
            return ExchangeItemAutoCraftStopedMessage.ID;
        };
        ExchangeItemAutoCraftStopedMessage.prototype.reset = function () {
            this.reason = 0;
        };
        ExchangeItemAutoCraftStopedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeItemAutoCraftStopedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeItemAutoCraftStopedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeItemAutoCraftStopedMessage(param1);
        };
        ExchangeItemAutoCraftStopedMessage.prototype.serializeAs_ExchangeItemAutoCraftStopedMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        ExchangeItemAutoCraftStopedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeItemAutoCraftStopedMessage(param1);
        };
        ExchangeItemAutoCraftStopedMessage.prototype.deserializeAs_ExchangeItemAutoCraftStopedMessage = function (param1) {
            this.reason = param1.readByte();
        };
        ExchangeItemAutoCraftStopedMessage.ID = 5810;
        return ExchangeItemAutoCraftStopedMessage;
    })(NetworkMessage);
    Protocol.ExchangeItemAutoCraftStopedMessage = ExchangeItemAutoCraftStopedMessage;
    var ExchangeLeaveMessage = (function (_super) {
        __extends(ExchangeLeaveMessage, _super);
        function ExchangeLeaveMessage() {
            this.success = false;
            _super.call(this);
        }
        ExchangeLeaveMessage.prototype.getMessageId = function () {
            return ExchangeLeaveMessage.ID;
        };
        ExchangeLeaveMessage.prototype.reset = function () {
            this.success = false;
        };
        ExchangeLeaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeLeaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeLeaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeLeaveMessage(param1);
        };
        ExchangeLeaveMessage.prototype.serializeAs_ExchangeLeaveMessage = function (param1) {
            _super.prototype.serializeAs_LeaveDialogMessage.call(this, param1);
            param1.writeBoolean(this.success);
        };
        ExchangeLeaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeLeaveMessage(param1);
        };
        ExchangeLeaveMessage.prototype.deserializeAs_ExchangeLeaveMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.success = param1.readBoolean();
        };
        ExchangeLeaveMessage.ID = 5628;
        return ExchangeLeaveMessage;
    })(LeaveDialogMessage);
    Protocol.ExchangeLeaveMessage = ExchangeLeaveMessage;
    var ExchangeMountFreeFromPaddockMessage = (function (_super) {
        __extends(ExchangeMountFreeFromPaddockMessage, _super);
        function ExchangeMountFreeFromPaddockMessage() {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.liberator = '';
            _super.call(this);
        }
        ExchangeMountFreeFromPaddockMessage.prototype.getMessageId = function () {
            return ExchangeMountFreeFromPaddockMessage.ID;
        };
        ExchangeMountFreeFromPaddockMessage.prototype.reset = function () {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.liberator = '';
        };
        ExchangeMountFreeFromPaddockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountFreeFromPaddockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountFreeFromPaddockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountFreeFromPaddockMessage(param1);
        };
        ExchangeMountFreeFromPaddockMessage.prototype.serializeAs_ExchangeMountFreeFromPaddockMessage = function (param1) {
            param1.writeUTF(this.name);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeUTF(this.liberator);
        };
        ExchangeMountFreeFromPaddockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountFreeFromPaddockMessage(param1);
        };
        ExchangeMountFreeFromPaddockMessage.prototype.deserializeAs_ExchangeMountFreeFromPaddockMessage = function (param1) {
            this.name = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of ExchangeMountFreeFromPaddockMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of ExchangeMountFreeFromPaddockMessage.worldY.');
            }
            this.liberator = param1.readUTF();
        };
        ExchangeMountFreeFromPaddockMessage.ID = 6055;
        return ExchangeMountFreeFromPaddockMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountFreeFromPaddockMessage = ExchangeMountFreeFromPaddockMessage;
    var ExchangeMountStableErrorMessage = (function (_super) {
        __extends(ExchangeMountStableErrorMessage, _super);
        function ExchangeMountStableErrorMessage() {
            _super.call(this);
        }
        ExchangeMountStableErrorMessage.prototype.getMessageId = function () {
            return ExchangeMountStableErrorMessage.ID;
        };
        ExchangeMountStableErrorMessage.prototype.reset = function () {
        };
        ExchangeMountStableErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountStableErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountStableErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountStableErrorMessage(param1);
        };
        ExchangeMountStableErrorMessage.prototype.serializeAs_ExchangeMountStableErrorMessage = function (param1) {
        };
        ExchangeMountStableErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountStableErrorMessage(param1);
        };
        ExchangeMountStableErrorMessage.prototype.deserializeAs_ExchangeMountStableErrorMessage = function (param1) {
        };
        ExchangeMountStableErrorMessage.ID = 5981;
        return ExchangeMountStableErrorMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountStableErrorMessage = ExchangeMountStableErrorMessage;
    var ExchangeMountSterilizeFromPaddockMessage = (function (_super) {
        __extends(ExchangeMountSterilizeFromPaddockMessage, _super);
        function ExchangeMountSterilizeFromPaddockMessage() {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.sterilizator = '';
            _super.call(this);
        }
        ExchangeMountSterilizeFromPaddockMessage.prototype.getMessageId = function () {
            return ExchangeMountSterilizeFromPaddockMessage.ID;
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.reset = function () {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.sterilizator = '';
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountSterilizeFromPaddockMessage(param1);
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.serializeAs_ExchangeMountSterilizeFromPaddockMessage = function (param1) {
            param1.writeUTF(this.name);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeUTF(this.sterilizator);
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountSterilizeFromPaddockMessage(param1);
        };
        ExchangeMountSterilizeFromPaddockMessage.prototype.deserializeAs_ExchangeMountSterilizeFromPaddockMessage = function (param1) {
            this.name = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of ExchangeMountSterilizeFromPaddockMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of ExchangeMountSterilizeFromPaddockMessage.worldY.');
            }
            this.sterilizator = param1.readUTF();
        };
        ExchangeMountSterilizeFromPaddockMessage.ID = 6056;
        return ExchangeMountSterilizeFromPaddockMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountSterilizeFromPaddockMessage = ExchangeMountSterilizeFromPaddockMessage;
    var ExchangeMountsPaddockAddMessage = (function (_super) {
        __extends(ExchangeMountsPaddockAddMessage, _super);
        function ExchangeMountsPaddockAddMessage() {
            this.mountDescription = [];
            _super.call(this);
        }
        ExchangeMountsPaddockAddMessage.prototype.getMessageId = function () {
            return ExchangeMountsPaddockAddMessage.ID;
        };
        ExchangeMountsPaddockAddMessage.prototype.reset = function () {
            this.mountDescription = [];
        };
        ExchangeMountsPaddockAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsPaddockAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsPaddockAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsPaddockAddMessage(param1);
        };
        ExchangeMountsPaddockAddMessage.prototype.serializeAs_ExchangeMountsPaddockAddMessage = function (param1) {
            param1.writeShort(this.mountDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mountDescription.length) {
                (this.mountDescription[_loc2_]).serializeAs_MountClientData(param1);
                _loc2_++;
            }
        };
        ExchangeMountsPaddockAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsPaddockAddMessage(param1);
        };
        ExchangeMountsPaddockAddMessage.prototype.deserializeAs_ExchangeMountsPaddockAddMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MountClientData();
                _loc4_.deserialize(param1);
                this.mountDescription.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeMountsPaddockAddMessage.ID = 6561;
        return ExchangeMountsPaddockAddMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountsPaddockAddMessage = ExchangeMountsPaddockAddMessage;
    var ExchangeMountsPaddockRemoveMessage = (function (_super) {
        __extends(ExchangeMountsPaddockRemoveMessage, _super);
        function ExchangeMountsPaddockRemoveMessage() {
            this.mountsId = [];
            _super.call(this);
        }
        ExchangeMountsPaddockRemoveMessage.prototype.getMessageId = function () {
            return ExchangeMountsPaddockRemoveMessage.ID;
        };
        ExchangeMountsPaddockRemoveMessage.prototype.reset = function () {
            this.mountsId = [];
        };
        ExchangeMountsPaddockRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsPaddockRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsPaddockRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsPaddockRemoveMessage(param1);
        };
        ExchangeMountsPaddockRemoveMessage.prototype.serializeAs_ExchangeMountsPaddockRemoveMessage = function (param1) {
            param1.writeShort(this.mountsId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mountsId.length) {
                param1.writeVarInt(this.mountsId[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeMountsPaddockRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsPaddockRemoveMessage(param1);
        };
        ExchangeMountsPaddockRemoveMessage.prototype.deserializeAs_ExchangeMountsPaddockRemoveMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarInt();
                this.mountsId.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeMountsPaddockRemoveMessage.ID = 6559;
        return ExchangeMountsPaddockRemoveMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountsPaddockRemoveMessage = ExchangeMountsPaddockRemoveMessage;
    var ExchangeMountsStableAddMessage = (function (_super) {
        __extends(ExchangeMountsStableAddMessage, _super);
        function ExchangeMountsStableAddMessage() {
            this.mountDescription = [];
            _super.call(this);
        }
        ExchangeMountsStableAddMessage.prototype.getMessageId = function () {
            return ExchangeMountsStableAddMessage.ID;
        };
        ExchangeMountsStableAddMessage.prototype.reset = function () {
            this.mountDescription = [];
        };
        ExchangeMountsStableAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsStableAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsStableAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsStableAddMessage(param1);
        };
        ExchangeMountsStableAddMessage.prototype.serializeAs_ExchangeMountsStableAddMessage = function (param1) {
            param1.writeShort(this.mountDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mountDescription.length) {
                (this.mountDescription[_loc2_]).serializeAs_MountClientData(param1);
                _loc2_++;
            }
        };
        ExchangeMountsStableAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsStableAddMessage(param1);
        };
        ExchangeMountsStableAddMessage.prototype.deserializeAs_ExchangeMountsStableAddMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MountClientData();
                _loc4_.deserialize(param1);
                this.mountDescription.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeMountsStableAddMessage.ID = 6555;
        return ExchangeMountsStableAddMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountsStableAddMessage = ExchangeMountsStableAddMessage;
    var ExchangeMountsStableBornAddMessage = (function (_super) {
        __extends(ExchangeMountsStableBornAddMessage, _super);
        function ExchangeMountsStableBornAddMessage() {
            _super.call(this);
        }
        ExchangeMountsStableBornAddMessage.prototype.getMessageId = function () {
            return ExchangeMountsStableBornAddMessage.ID;
        };
        ExchangeMountsStableBornAddMessage.prototype.reset = function () {
        };
        ExchangeMountsStableBornAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsStableBornAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsStableBornAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsStableBornAddMessage(param1);
        };
        ExchangeMountsStableBornAddMessage.prototype.serializeAs_ExchangeMountsStableBornAddMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeMountsStableAddMessage.call(this, param1);
        };
        ExchangeMountsStableBornAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsStableBornAddMessage(param1);
        };
        ExchangeMountsStableBornAddMessage.prototype.deserializeAs_ExchangeMountsStableBornAddMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ExchangeMountsStableBornAddMessage.ID = 6557;
        return ExchangeMountsStableBornAddMessage;
    })(ExchangeMountsStableAddMessage);
    Protocol.ExchangeMountsStableBornAddMessage = ExchangeMountsStableBornAddMessage;
    var ExchangeMountsStableRemoveMessage = (function (_super) {
        __extends(ExchangeMountsStableRemoveMessage, _super);
        function ExchangeMountsStableRemoveMessage() {
            this.mountsId = [];
            _super.call(this);
        }
        ExchangeMountsStableRemoveMessage.prototype.getMessageId = function () {
            return ExchangeMountsStableRemoveMessage.ID;
        };
        ExchangeMountsStableRemoveMessage.prototype.reset = function () {
            this.mountsId = [];
        };
        ExchangeMountsStableRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsStableRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsStableRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsStableRemoveMessage(param1);
        };
        ExchangeMountsStableRemoveMessage.prototype.serializeAs_ExchangeMountsStableRemoveMessage = function (param1) {
            param1.writeShort(this.mountsId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mountsId.length) {
                param1.writeVarInt(this.mountsId[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeMountsStableRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsStableRemoveMessage(param1);
        };
        ExchangeMountsStableRemoveMessage.prototype.deserializeAs_ExchangeMountsStableRemoveMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarInt();
                this.mountsId.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeMountsStableRemoveMessage.ID = 6556;
        return ExchangeMountsStableRemoveMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountsStableRemoveMessage = ExchangeMountsStableRemoveMessage;
    var ExchangeMountsTakenFromPaddockMessage = (function (_super) {
        __extends(ExchangeMountsTakenFromPaddockMessage, _super);
        function ExchangeMountsTakenFromPaddockMessage() {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.ownername = '';
            _super.call(this);
        }
        ExchangeMountsTakenFromPaddockMessage.prototype.getMessageId = function () {
            return ExchangeMountsTakenFromPaddockMessage.ID;
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.reset = function () {
            this.name = '';
            this.worldX = 0;
            this.worldY = 0;
            this.ownername = '';
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMountsTakenFromPaddockMessage(param1);
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.serializeAs_ExchangeMountsTakenFromPaddockMessage = function (param1) {
            param1.writeUTF(this.name);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeUTF(this.ownername);
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMountsTakenFromPaddockMessage(param1);
        };
        ExchangeMountsTakenFromPaddockMessage.prototype.deserializeAs_ExchangeMountsTakenFromPaddockMessage = function (param1) {
            this.name = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of ExchangeMountsTakenFromPaddockMessage.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of ExchangeMountsTakenFromPaddockMessage.worldY.');
            }
            this.ownername = param1.readUTF();
        };
        ExchangeMountsTakenFromPaddockMessage.ID = 6554;
        return ExchangeMountsTakenFromPaddockMessage;
    })(NetworkMessage);
    Protocol.ExchangeMountsTakenFromPaddockMessage = ExchangeMountsTakenFromPaddockMessage;
    var ExchangeObjectAddedMessage = (function (_super) {
        __extends(ExchangeObjectAddedMessage, _super);
        function ExchangeObjectAddedMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ExchangeObjectAddedMessage.prototype.getMessageId = function () {
            return ExchangeObjectAddedMessage.ID;
        };
        ExchangeObjectAddedMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ExchangeObjectAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectAddedMessage(param1);
        };
        ExchangeObjectAddedMessage.prototype.serializeAs_ExchangeObjectAddedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            this.object.serializeAs_ObjectItem(param1);
        };
        ExchangeObjectAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectAddedMessage(param1);
        };
        ExchangeObjectAddedMessage.prototype.deserializeAs_ExchangeObjectAddedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ExchangeObjectAddedMessage.ID = 5516;
        return ExchangeObjectAddedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectAddedMessage = ExchangeObjectAddedMessage;
    var ExchangeObjectMessage = (function (_super) {
        __extends(ExchangeObjectMessage, _super);
        function ExchangeObjectMessage() {
            this.remote = false;
            _super.call(this);
        }
        ExchangeObjectMessage.prototype.getMessageId = function () {
            return ExchangeObjectMessage.ID;
        };
        ExchangeObjectMessage.prototype.reset = function () {
            this.remote = false;
        };
        ExchangeObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectMessage(param1);
        };
        ExchangeObjectMessage.prototype.serializeAs_ExchangeObjectMessage = function (param1) {
            param1.writeBoolean(this.remote);
        };
        ExchangeObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectMessage(param1);
        };
        ExchangeObjectMessage.prototype.deserializeAs_ExchangeObjectMessage = function (param1) {
            this.remote = param1.readBoolean();
        };
        ExchangeObjectMessage.ID = 5515;
        return ExchangeObjectMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectMessage = ExchangeObjectMessage;
    var ExchangeObjectModifyPricedMessage = (function (_super) {
        __extends(ExchangeObjectModifyPricedMessage, _super);
        function ExchangeObjectModifyPricedMessage() {
            _super.call(this);
        }
        ExchangeObjectModifyPricedMessage.prototype.getMessageId = function () {
            return ExchangeObjectModifyPricedMessage.ID;
        };
        ExchangeObjectModifyPricedMessage.prototype.reset = function () {
        };
        ExchangeObjectModifyPricedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectModifyPricedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectModifyPricedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectModifyPricedMessage(param1);
        };
        ExchangeObjectModifyPricedMessage.prototype.serializeAs_ExchangeObjectModifyPricedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMovePricedMessage.call(this, param1);
        };
        ExchangeObjectModifyPricedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectModifyPricedMessage(param1);
        };
        ExchangeObjectModifyPricedMessage.prototype.deserializeAs_ExchangeObjectModifyPricedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ExchangeObjectModifyPricedMessage.ID = 6238;
        return ExchangeObjectModifyPricedMessage;
    })(ExchangeObjectMovePricedMessage);
    Protocol.ExchangeObjectModifyPricedMessage = ExchangeObjectModifyPricedMessage;
    var ExchangeObjectMoveKamaMessage = (function (_super) {
        __extends(ExchangeObjectMoveKamaMessage, _super);
        function ExchangeObjectMoveKamaMessage() {
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeObjectMoveKamaMessage.prototype.getMessageId = function () {
            return ExchangeObjectMoveKamaMessage.ID;
        };
        ExchangeObjectMoveKamaMessage.prototype.reset = function () {
            this.quantity = 0;
        };
        ExchangeObjectMoveKamaMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectMoveKamaMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectMoveKamaMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectMoveKamaMessage(param1);
        };
        ExchangeObjectMoveKamaMessage.prototype.serializeAs_ExchangeObjectMoveKamaMessage = function (param1) {
            param1.writeVarInt(this.quantity);
        };
        ExchangeObjectMoveKamaMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectMoveKamaMessage(param1);
        };
        ExchangeObjectMoveKamaMessage.prototype.deserializeAs_ExchangeObjectMoveKamaMessage = function (param1) {
            this.quantity = param1.readVarInt();
        };
        ExchangeObjectMoveKamaMessage.ID = 5520;
        return ExchangeObjectMoveKamaMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectMoveKamaMessage = ExchangeObjectMoveKamaMessage;
    var ExchangeObjectMoveMessage = (function (_super) {
        __extends(ExchangeObjectMoveMessage, _super);
        function ExchangeObjectMoveMessage() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeObjectMoveMessage.prototype.getMessageId = function () {
            return ExchangeObjectMoveMessage.ID;
        };
        ExchangeObjectMoveMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ExchangeObjectMoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectMoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectMoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectMoveMessage(param1);
        };
        ExchangeObjectMoveMessage.prototype.serializeAs_ExchangeObjectMoveMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeVarInt(this.quantity);
        };
        ExchangeObjectMoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectMoveMessage(param1);
        };
        ExchangeObjectMoveMessage.prototype.deserializeAs_ExchangeObjectMoveMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ExchangeObjectMoveMessage.objectUID.');
            }
            this.quantity = param1.readVarInt();
        };
        ExchangeObjectMoveMessage.ID = 5518;
        return ExchangeObjectMoveMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectMoveMessage = ExchangeObjectMoveMessage;
    var ExchangeObjectMovePricedMessage = (function (_super) {
        __extends(ExchangeObjectMovePricedMessage, _super);
        function ExchangeObjectMovePricedMessage() {
            this.price = 0;
            _super.call(this);
        }
        ExchangeObjectMovePricedMessage.prototype.getMessageId = function () {
            return ExchangeObjectMovePricedMessage.ID;
        };
        ExchangeObjectMovePricedMessage.prototype.reset = function () {
            this.price = 0;
        };
        ExchangeObjectMovePricedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectMovePricedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectMovePricedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectMovePricedMessage(param1);
        };
        ExchangeObjectMovePricedMessage.prototype.serializeAs_ExchangeObjectMovePricedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMoveMessage.call(this, param1);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        ExchangeObjectMovePricedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectMovePricedMessage(param1);
        };
        ExchangeObjectMovePricedMessage.prototype.deserializeAs_ExchangeObjectMovePricedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of ExchangeObjectMovePricedMessage.price.');
            }
        };
        ExchangeObjectMovePricedMessage.ID = 5514;
        return ExchangeObjectMovePricedMessage;
    })(ExchangeObjectMoveMessage);
    Protocol.ExchangeObjectMovePricedMessage = ExchangeObjectMovePricedMessage;
    var ExchangeObjectTransfertAllFromInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertAllFromInvMessage, _super);
        function ExchangeObjectTransfertAllFromInvMessage() {
            _super.call(this);
        }
        ExchangeObjectTransfertAllFromInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertAllFromInvMessage.ID;
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.reset = function () {
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertAllFromInvMessage(param1);
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.serializeAs_ExchangeObjectTransfertAllFromInvMessage = function (param1) {
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertAllFromInvMessage(param1);
        };
        ExchangeObjectTransfertAllFromInvMessage.prototype.deserializeAs_ExchangeObjectTransfertAllFromInvMessage = function (param1) {
        };
        ExchangeObjectTransfertAllFromInvMessage.ID = 6184;
        return ExchangeObjectTransfertAllFromInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertAllFromInvMessage = ExchangeObjectTransfertAllFromInvMessage;
    var ExchangeObjectTransfertAllToInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertAllToInvMessage, _super);
        function ExchangeObjectTransfertAllToInvMessage() {
            _super.call(this);
        }
        ExchangeObjectTransfertAllToInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertAllToInvMessage.ID;
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.reset = function () {
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertAllToInvMessage(param1);
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.serializeAs_ExchangeObjectTransfertAllToInvMessage = function (param1) {
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertAllToInvMessage(param1);
        };
        ExchangeObjectTransfertAllToInvMessage.prototype.deserializeAs_ExchangeObjectTransfertAllToInvMessage = function (param1) {
        };
        ExchangeObjectTransfertAllToInvMessage.ID = 6032;
        return ExchangeObjectTransfertAllToInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertAllToInvMessage = ExchangeObjectTransfertAllToInvMessage;
    var ExchangeObjectTransfertExistingFromInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertExistingFromInvMessage, _super);
        function ExchangeObjectTransfertExistingFromInvMessage() {
            _super.call(this);
        }
        ExchangeObjectTransfertExistingFromInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertExistingFromInvMessage.ID;
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.reset = function () {
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertExistingFromInvMessage(param1);
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.serializeAs_ExchangeObjectTransfertExistingFromInvMessage = function (param1) {
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertExistingFromInvMessage(param1);
        };
        ExchangeObjectTransfertExistingFromInvMessage.prototype.deserializeAs_ExchangeObjectTransfertExistingFromInvMessage = function (param1) {
        };
        ExchangeObjectTransfertExistingFromInvMessage.ID = 6325;
        return ExchangeObjectTransfertExistingFromInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertExistingFromInvMessage = ExchangeObjectTransfertExistingFromInvMessage;
    var ExchangeObjectTransfertExistingToInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertExistingToInvMessage, _super);
        function ExchangeObjectTransfertExistingToInvMessage() {
            _super.call(this);
        }
        ExchangeObjectTransfertExistingToInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertExistingToInvMessage.ID;
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.reset = function () {
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertExistingToInvMessage(param1);
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.serializeAs_ExchangeObjectTransfertExistingToInvMessage = function (param1) {
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertExistingToInvMessage(param1);
        };
        ExchangeObjectTransfertExistingToInvMessage.prototype.deserializeAs_ExchangeObjectTransfertExistingToInvMessage = function (param1) {
        };
        ExchangeObjectTransfertExistingToInvMessage.ID = 6326;
        return ExchangeObjectTransfertExistingToInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertExistingToInvMessage = ExchangeObjectTransfertExistingToInvMessage;
    var ExchangeObjectTransfertListFromInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertListFromInvMessage, _super);
        function ExchangeObjectTransfertListFromInvMessage() {
            this.ids = [];
            _super.call(this);
        }
        ExchangeObjectTransfertListFromInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertListFromInvMessage.ID;
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.reset = function () {
            this.ids = [];
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertListFromInvMessage(param1);
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.serializeAs_ExchangeObjectTransfertListFromInvMessage = function (param1) {
            param1.writeShort(this.ids.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ids.length) {
                if (this.ids[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.ids[_loc2_] + ') on element 1 (starting at 1) of ids.');
                }
                param1.writeVarInt(this.ids[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertListFromInvMessage(param1);
        };
        ExchangeObjectTransfertListFromInvMessage.prototype.deserializeAs_ExchangeObjectTransfertListFromInvMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of ids.');
                }
                this.ids.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeObjectTransfertListFromInvMessage.ID = 6183;
        return ExchangeObjectTransfertListFromInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertListFromInvMessage = ExchangeObjectTransfertListFromInvMessage;
    var ExchangeObjectTransfertListToInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertListToInvMessage, _super);
        function ExchangeObjectTransfertListToInvMessage() {
            this.ids = [];
            _super.call(this);
        }
        ExchangeObjectTransfertListToInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertListToInvMessage.ID;
        };
        ExchangeObjectTransfertListToInvMessage.prototype.reset = function () {
            this.ids = [];
        };
        ExchangeObjectTransfertListToInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertListToInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertListToInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertListToInvMessage(param1);
        };
        ExchangeObjectTransfertListToInvMessage.prototype.serializeAs_ExchangeObjectTransfertListToInvMessage = function (param1) {
            param1.writeShort(this.ids.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ids.length) {
                if (this.ids[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.ids[_loc2_] + ') on element 1 (starting at 1) of ids.');
                }
                param1.writeVarInt(this.ids[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeObjectTransfertListToInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertListToInvMessage(param1);
        };
        ExchangeObjectTransfertListToInvMessage.prototype.deserializeAs_ExchangeObjectTransfertListToInvMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of ids.');
                }
                this.ids.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeObjectTransfertListToInvMessage.ID = 6039;
        return ExchangeObjectTransfertListToInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertListToInvMessage = ExchangeObjectTransfertListToInvMessage;
    var ExchangeObjectTransfertListWithQuantityToInvMessage = (function (_super) {
        __extends(ExchangeObjectTransfertListWithQuantityToInvMessage, _super);
        function ExchangeObjectTransfertListWithQuantityToInvMessage() {
            this.ids = [];
            this.qtys = [];
            _super.call(this);
        }
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.getMessageId = function () {
            return ExchangeObjectTransfertListWithQuantityToInvMessage.ID;
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.reset = function () {
            this.ids = [];
            this.qtys = [];
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectTransfertListWithQuantityToInvMessage(param1);
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.serializeAs_ExchangeObjectTransfertListWithQuantityToInvMessage = function (param1) {
            param1.writeShort(this.ids.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ids.length) {
                if (this.ids[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.ids[_loc2_] + ') on element 1 (starting at 1) of ids.');
                }
                param1.writeVarInt(this.ids[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.qtys.length);
            var _loc3_ = 0;
            while (_loc3_ < this.qtys.length) {
                if (this.qtys[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.qtys[_loc3_] + ') on element 2 (starting at 1) of qtys.');
                }
                param1.writeVarInt(this.qtys[_loc3_]);
                _loc3_++;
            }
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectTransfertListWithQuantityToInvMessage(param1);
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.prototype.deserializeAs_ExchangeObjectTransfertListWithQuantityToInvMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhInt();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of ids.');
                }
                this.ids.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of qtys.');
                }
                this.qtys.push(_loc7_);
                _loc5_++;
            }
        };
        ExchangeObjectTransfertListWithQuantityToInvMessage.ID = 6470;
        return ExchangeObjectTransfertListWithQuantityToInvMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectTransfertListWithQuantityToInvMessage = ExchangeObjectTransfertListWithQuantityToInvMessage;
    var ExchangeObjectUseInWorkshopMessage = (function (_super) {
        __extends(ExchangeObjectUseInWorkshopMessage, _super);
        function ExchangeObjectUseInWorkshopMessage() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeObjectUseInWorkshopMessage.prototype.getMessageId = function () {
            return ExchangeObjectUseInWorkshopMessage.ID;
        };
        ExchangeObjectUseInWorkshopMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ExchangeObjectUseInWorkshopMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectUseInWorkshopMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectUseInWorkshopMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectUseInWorkshopMessage(param1);
        };
        ExchangeObjectUseInWorkshopMessage.prototype.serializeAs_ExchangeObjectUseInWorkshopMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeVarInt(this.quantity);
        };
        ExchangeObjectUseInWorkshopMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectUseInWorkshopMessage(param1);
        };
        ExchangeObjectUseInWorkshopMessage.prototype.deserializeAs_ExchangeObjectUseInWorkshopMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ExchangeObjectUseInWorkshopMessage.objectUID.');
            }
            this.quantity = param1.readVarInt();
        };
        ExchangeObjectUseInWorkshopMessage.ID = 6004;
        return ExchangeObjectUseInWorkshopMessage;
    })(NetworkMessage);
    Protocol.ExchangeObjectUseInWorkshopMessage = ExchangeObjectUseInWorkshopMessage;
    var ExchangeObjectsAddedMessage = (function (_super) {
        __extends(ExchangeObjectsAddedMessage, _super);
        function ExchangeObjectsAddedMessage() {
            this.object = [];
            _super.call(this);
        }
        ExchangeObjectsAddedMessage.prototype.getMessageId = function () {
            return ExchangeObjectsAddedMessage.ID;
        };
        ExchangeObjectsAddedMessage.prototype.reset = function () {
            this.object = [];
        };
        ExchangeObjectsAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectsAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectsAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectsAddedMessage(param1);
        };
        ExchangeObjectsAddedMessage.prototype.serializeAs_ExchangeObjectsAddedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            param1.writeShort(this.object.length);
            var _loc2_ = 0;
            while (_loc2_ < this.object.length) {
                (this.object[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ExchangeObjectsAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectsAddedMessage(param1);
        };
        ExchangeObjectsAddedMessage.prototype.deserializeAs_ExchangeObjectsAddedMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.object.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeObjectsAddedMessage.ID = 6535;
        return ExchangeObjectsAddedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectsAddedMessage = ExchangeObjectsAddedMessage;
    var ExchangeOkMultiCraftMessage = (function (_super) {
        __extends(ExchangeOkMultiCraftMessage, _super);
        function ExchangeOkMultiCraftMessage() {
            this.initiatorId = 0;
            this.otherId = 0;
            this.role = 0;
            _super.call(this);
        }
        ExchangeOkMultiCraftMessage.prototype.getMessageId = function () {
            return ExchangeOkMultiCraftMessage.ID;
        };
        ExchangeOkMultiCraftMessage.prototype.reset = function () {
            this.initiatorId = 0;
            this.otherId = 0;
            this.role = 0;
        };
        ExchangeOkMultiCraftMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeOkMultiCraftMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeOkMultiCraftMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeOkMultiCraftMessage(param1);
        };
        ExchangeOkMultiCraftMessage.prototype.serializeAs_ExchangeOkMultiCraftMessage = function (param1) {
            if (this.initiatorId < 0) {
                throw new Error('Forbidden value (' + this.initiatorId + ') on element initiatorId.');
            }
            param1.writeVarInt(this.initiatorId);
            if (this.otherId < 0) {
                throw new Error('Forbidden value (' + this.otherId + ') on element otherId.');
            }
            param1.writeVarInt(this.otherId);
            param1.writeByte(this.role);
        };
        ExchangeOkMultiCraftMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeOkMultiCraftMessage(param1);
        };
        ExchangeOkMultiCraftMessage.prototype.deserializeAs_ExchangeOkMultiCraftMessage = function (param1) {
            this.initiatorId = param1.readVarUhInt();
            if (this.initiatorId < 0) {
                throw new Error('Forbidden value (' + this.initiatorId + ') on element of ExchangeOkMultiCraftMessage.initiatorId.');
            }
            this.otherId = param1.readVarUhInt();
            if (this.otherId < 0) {
                throw new Error('Forbidden value (' + this.otherId + ') on element of ExchangeOkMultiCraftMessage.otherId.');
            }
            this.role = param1.readByte();
        };
        ExchangeOkMultiCraftMessage.ID = 5768;
        return ExchangeOkMultiCraftMessage;
    })(NetworkMessage);
    Protocol.ExchangeOkMultiCraftMessage = ExchangeOkMultiCraftMessage;
    var ExchangeOnHumanVendorRequestMessage = (function (_super) {
        __extends(ExchangeOnHumanVendorRequestMessage, _super);
        function ExchangeOnHumanVendorRequestMessage() {
            this.humanVendorId = 0;
            this.humanVendorCell = 0;
            _super.call(this);
        }
        ExchangeOnHumanVendorRequestMessage.prototype.getMessageId = function () {
            return ExchangeOnHumanVendorRequestMessage.ID;
        };
        ExchangeOnHumanVendorRequestMessage.prototype.reset = function () {
            this.humanVendorId = 0;
            this.humanVendorCell = 0;
        };
        ExchangeOnHumanVendorRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeOnHumanVendorRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeOnHumanVendorRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeOnHumanVendorRequestMessage(param1);
        };
        ExchangeOnHumanVendorRequestMessage.prototype.serializeAs_ExchangeOnHumanVendorRequestMessage = function (param1) {
            if (this.humanVendorId < 0) {
                throw new Error('Forbidden value (' + this.humanVendorId + ') on element humanVendorId.');
            }
            param1.writeVarInt(this.humanVendorId);
            if (this.humanVendorCell < 0 || this.humanVendorCell > 559) {
                throw new Error('Forbidden value (' + this.humanVendorCell + ') on element humanVendorCell.');
            }
            param1.writeVarShort(this.humanVendorCell);
        };
        ExchangeOnHumanVendorRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeOnHumanVendorRequestMessage(param1);
        };
        ExchangeOnHumanVendorRequestMessage.prototype.deserializeAs_ExchangeOnHumanVendorRequestMessage = function (param1) {
            this.humanVendorId = param1.readVarUhInt();
            if (this.humanVendorId < 0) {
                throw new Error('Forbidden value (' + this.humanVendorId + ') on element of ExchangeOnHumanVendorRequestMessage.humanVendorId.');
            }
            this.humanVendorCell = param1.readVarUhShort();
            if (this.humanVendorCell < 0 || this.humanVendorCell > 559) {
                throw new Error('Forbidden value (' + this.humanVendorCell + ') on element of ExchangeOnHumanVendorRequestMessage.humanVendorCell.');
            }
        };
        ExchangeOnHumanVendorRequestMessage.ID = 5772;
        return ExchangeOnHumanVendorRequestMessage;
    })(NetworkMessage);
    Protocol.ExchangeOnHumanVendorRequestMessage = ExchangeOnHumanVendorRequestMessage;
    var ExchangePlayerMultiCraftRequestMessage = (function (_super) {
        __extends(ExchangePlayerMultiCraftRequestMessage, _super);
        function ExchangePlayerMultiCraftRequestMessage() {
            this.target = 0;
            this.skillId = 0;
            _super.call(this);
        }
        ExchangePlayerMultiCraftRequestMessage.prototype.getMessageId = function () {
            return ExchangePlayerMultiCraftRequestMessage.ID;
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.reset = function () {
            this.target = 0;
            this.skillId = 0;
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangePlayerMultiCraftRequestMessage(param1);
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.serializeAs_ExchangePlayerMultiCraftRequestMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeRequestMessage.call(this, param1);
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element target.');
            }
            param1.writeVarInt(this.target);
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarInt(this.skillId);
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangePlayerMultiCraftRequestMessage(param1);
        };
        ExchangePlayerMultiCraftRequestMessage.prototype.deserializeAs_ExchangePlayerMultiCraftRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.target = param1.readVarUhInt();
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element of ExchangePlayerMultiCraftRequestMessage.target.');
            }
            this.skillId = param1.readVarUhInt();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of ExchangePlayerMultiCraftRequestMessage.skillId.');
            }
        };
        ExchangePlayerMultiCraftRequestMessage.ID = 5784;
        return ExchangePlayerMultiCraftRequestMessage;
    })(ExchangeRequestMessage);
    Protocol.ExchangePlayerMultiCraftRequestMessage = ExchangePlayerMultiCraftRequestMessage;
    var ExchangePlayerRequestMessage = (function (_super) {
        __extends(ExchangePlayerRequestMessage, _super);
        function ExchangePlayerRequestMessage() {
            this.target = 0;
            _super.call(this);
        }
        ExchangePlayerRequestMessage.prototype.getMessageId = function () {
            return ExchangePlayerRequestMessage.ID;
        };
        ExchangePlayerRequestMessage.prototype.reset = function () {
            this.target = 0;
        };
        ExchangePlayerRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangePlayerRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangePlayerRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangePlayerRequestMessage(param1);
        };
        ExchangePlayerRequestMessage.prototype.serializeAs_ExchangePlayerRequestMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeRequestMessage.call(this, param1);
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element target.');
            }
            param1.writeVarInt(this.target);
        };
        ExchangePlayerRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangePlayerRequestMessage(param1);
        };
        ExchangePlayerRequestMessage.prototype.deserializeAs_ExchangePlayerRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.target = param1.readVarUhInt();
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element of ExchangePlayerRequestMessage.target.');
            }
        };
        ExchangePlayerRequestMessage.ID = 5773;
        return ExchangePlayerRequestMessage;
    })(ExchangeRequestMessage);
    Protocol.ExchangePlayerRequestMessage = ExchangePlayerRequestMessage;
    var ExchangeReadyMessage = (function (_super) {
        __extends(ExchangeReadyMessage, _super);
        function ExchangeReadyMessage() {
            this.ready = false;
            this.step = 0;
            _super.call(this);
        }
        ExchangeReadyMessage.prototype.getMessageId = function () {
            return ExchangeReadyMessage.ID;
        };
        ExchangeReadyMessage.prototype.reset = function () {
            this.ready = false;
            this.step = 0;
        };
        ExchangeReadyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeReadyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeReadyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeReadyMessage(param1);
        };
        ExchangeReadyMessage.prototype.serializeAs_ExchangeReadyMessage = function (param1) {
            param1.writeBoolean(this.ready);
            if (this.step < 0) {
                throw new Error('Forbidden value (' + this.step + ') on element step.');
            }
            param1.writeVarShort(this.step);
        };
        ExchangeReadyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeReadyMessage(param1);
        };
        ExchangeReadyMessage.prototype.deserializeAs_ExchangeReadyMessage = function (param1) {
            this.ready = param1.readBoolean();
            this.step = param1.readVarUhShort();
            if (this.step < 0) {
                throw new Error('Forbidden value (' + this.step + ') on element of ExchangeReadyMessage.step.');
            }
        };
        ExchangeReadyMessage.ID = 5511;
        return ExchangeReadyMessage;
    })(NetworkMessage);
    Protocol.ExchangeReadyMessage = ExchangeReadyMessage;
    var ExchangeReplayStopMessage = (function (_super) {
        __extends(ExchangeReplayStopMessage, _super);
        function ExchangeReplayStopMessage() {
            _super.call(this);
        }
        ExchangeReplayStopMessage.prototype.getMessageId = function () {
            return ExchangeReplayStopMessage.ID;
        };
        ExchangeReplayStopMessage.prototype.reset = function () {
        };
        ExchangeReplayStopMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeReplayStopMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeReplayStopMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeReplayStopMessage(param1);
        };
        ExchangeReplayStopMessage.prototype.serializeAs_ExchangeReplayStopMessage = function (param1) {
        };
        ExchangeReplayStopMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeReplayStopMessage(param1);
        };
        ExchangeReplayStopMessage.prototype.deserializeAs_ExchangeReplayStopMessage = function (param1) {
        };
        ExchangeReplayStopMessage.ID = 6001;
        return ExchangeReplayStopMessage;
    })(NetworkMessage);
    Protocol.ExchangeReplayStopMessage = ExchangeReplayStopMessage;
    var ExchangeReplyTaxVendorMessage = (function (_super) {
        __extends(ExchangeReplyTaxVendorMessage, _super);
        function ExchangeReplyTaxVendorMessage() {
            this.objectValue = 0;
            this.totalTaxValue = 0;
            _super.call(this);
        }
        ExchangeReplyTaxVendorMessage.prototype.getMessageId = function () {
            return ExchangeReplyTaxVendorMessage.ID;
        };
        ExchangeReplyTaxVendorMessage.prototype.reset = function () {
            this.objectValue = 0;
            this.totalTaxValue = 0;
        };
        ExchangeReplyTaxVendorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeReplyTaxVendorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeReplyTaxVendorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeReplyTaxVendorMessage(param1);
        };
        ExchangeReplyTaxVendorMessage.prototype.serializeAs_ExchangeReplyTaxVendorMessage = function (param1) {
            if (this.objectValue < 0) {
                throw new Error('Forbidden value (' + this.objectValue + ') on element objectValue.');
            }
            param1.writeVarInt(this.objectValue);
            if (this.totalTaxValue < 0) {
                throw new Error('Forbidden value (' + this.totalTaxValue + ') on element totalTaxValue.');
            }
            param1.writeVarInt(this.totalTaxValue);
        };
        ExchangeReplyTaxVendorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeReplyTaxVendorMessage(param1);
        };
        ExchangeReplyTaxVendorMessage.prototype.deserializeAs_ExchangeReplyTaxVendorMessage = function (param1) {
            this.objectValue = param1.readVarUhInt();
            if (this.objectValue < 0) {
                throw new Error('Forbidden value (' + this.objectValue + ') on element of ExchangeReplyTaxVendorMessage.objectValue.');
            }
            this.totalTaxValue = param1.readVarUhInt();
            if (this.totalTaxValue < 0) {
                throw new Error('Forbidden value (' + this.totalTaxValue + ') on element of ExchangeReplyTaxVendorMessage.totalTaxValue.');
            }
        };
        ExchangeReplyTaxVendorMessage.ID = 5787;
        return ExchangeReplyTaxVendorMessage;
    })(NetworkMessage);
    Protocol.ExchangeReplyTaxVendorMessage = ExchangeReplyTaxVendorMessage;
    var ExchangeRequestMessage = (function (_super) {
        __extends(ExchangeRequestMessage, _super);
        function ExchangeRequestMessage() {
            this.exchangeType = 0;
            _super.call(this);
        }
        ExchangeRequestMessage.prototype.getMessageId = function () {
            return ExchangeRequestMessage.ID;
        };
        ExchangeRequestMessage.prototype.reset = function () {
            this.exchangeType = 0;
        };
        ExchangeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestMessage(param1);
        };
        ExchangeRequestMessage.prototype.serializeAs_ExchangeRequestMessage = function (param1) {
            param1.writeByte(this.exchangeType);
        };
        ExchangeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestMessage(param1);
        };
        ExchangeRequestMessage.prototype.deserializeAs_ExchangeRequestMessage = function (param1) {
            this.exchangeType = param1.readByte();
        };
        ExchangeRequestMessage.ID = 5505;
        return ExchangeRequestMessage;
    })(NetworkMessage);
    Protocol.ExchangeRequestMessage = ExchangeRequestMessage;
    var ExchangeRequestOnMountStockMessage = (function (_super) {
        __extends(ExchangeRequestOnMountStockMessage, _super);
        function ExchangeRequestOnMountStockMessage() {
            _super.call(this);
        }
        ExchangeRequestOnMountStockMessage.prototype.getMessageId = function () {
            return ExchangeRequestOnMountStockMessage.ID;
        };
        ExchangeRequestOnMountStockMessage.prototype.reset = function () {
        };
        ExchangeRequestOnMountStockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestOnMountStockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestOnMountStockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestOnMountStockMessage(param1);
        };
        ExchangeRequestOnMountStockMessage.prototype.serializeAs_ExchangeRequestOnMountStockMessage = function (param1) {
        };
        ExchangeRequestOnMountStockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestOnMountStockMessage(param1);
        };
        ExchangeRequestOnMountStockMessage.prototype.deserializeAs_ExchangeRequestOnMountStockMessage = function (param1) {
        };
        ExchangeRequestOnMountStockMessage.ID = 5986;
        return ExchangeRequestOnMountStockMessage;
    })(NetworkMessage);
    Protocol.ExchangeRequestOnMountStockMessage = ExchangeRequestOnMountStockMessage;
    var ExchangeRequestOnShopStockMessage = (function (_super) {
        __extends(ExchangeRequestOnShopStockMessage, _super);
        function ExchangeRequestOnShopStockMessage() {
            _super.call(this);
        }
        ExchangeRequestOnShopStockMessage.prototype.getMessageId = function () {
            return ExchangeRequestOnShopStockMessage.ID;
        };
        ExchangeRequestOnShopStockMessage.prototype.reset = function () {
        };
        ExchangeRequestOnShopStockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestOnShopStockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestOnShopStockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestOnShopStockMessage(param1);
        };
        ExchangeRequestOnShopStockMessage.prototype.serializeAs_ExchangeRequestOnShopStockMessage = function (param1) {
        };
        ExchangeRequestOnShopStockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestOnShopStockMessage(param1);
        };
        ExchangeRequestOnShopStockMessage.prototype.deserializeAs_ExchangeRequestOnShopStockMessage = function (param1) {
        };
        ExchangeRequestOnShopStockMessage.ID = 5753;
        return ExchangeRequestOnShopStockMessage;
    })(NetworkMessage);
    Protocol.ExchangeRequestOnShopStockMessage = ExchangeRequestOnShopStockMessage;
    var ExchangeRequestOnTaxCollectorMessage = (function (_super) {
        __extends(ExchangeRequestOnTaxCollectorMessage, _super);
        function ExchangeRequestOnTaxCollectorMessage() {
            this.taxCollectorId = 0;
            _super.call(this);
        }
        ExchangeRequestOnTaxCollectorMessage.prototype.getMessageId = function () {
            return ExchangeRequestOnTaxCollectorMessage.ID;
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.reset = function () {
            this.taxCollectorId = 0;
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestOnTaxCollectorMessage(param1);
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.serializeAs_ExchangeRequestOnTaxCollectorMessage = function (param1) {
            param1.writeInt(this.taxCollectorId);
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestOnTaxCollectorMessage(param1);
        };
        ExchangeRequestOnTaxCollectorMessage.prototype.deserializeAs_ExchangeRequestOnTaxCollectorMessage = function (param1) {
            this.taxCollectorId = param1.readInt();
        };
        ExchangeRequestOnTaxCollectorMessage.ID = 5779;
        return ExchangeRequestOnTaxCollectorMessage;
    })(NetworkMessage);
    Protocol.ExchangeRequestOnTaxCollectorMessage = ExchangeRequestOnTaxCollectorMessage;
    var ExchangeRequestedMessage = (function (_super) {
        __extends(ExchangeRequestedMessage, _super);
        function ExchangeRequestedMessage() {
            this.exchangeType = 0;
            _super.call(this);
        }
        ExchangeRequestedMessage.prototype.getMessageId = function () {
            return ExchangeRequestedMessage.ID;
        };
        ExchangeRequestedMessage.prototype.reset = function () {
            this.exchangeType = 0;
        };
        ExchangeRequestedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestedMessage(param1);
        };
        ExchangeRequestedMessage.prototype.serializeAs_ExchangeRequestedMessage = function (param1) {
            param1.writeByte(this.exchangeType);
        };
        ExchangeRequestedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestedMessage(param1);
        };
        ExchangeRequestedMessage.prototype.deserializeAs_ExchangeRequestedMessage = function (param1) {
            this.exchangeType = param1.readByte();
        };
        ExchangeRequestedMessage.ID = 5522;
        return ExchangeRequestedMessage;
    })(NetworkMessage);
    Protocol.ExchangeRequestedMessage = ExchangeRequestedMessage;
    var ExchangeRequestedTradeMessage = (function (_super) {
        __extends(ExchangeRequestedTradeMessage, _super);
        function ExchangeRequestedTradeMessage() {
            this.source = 0;
            this.target = 0;
            _super.call(this);
        }
        ExchangeRequestedTradeMessage.prototype.getMessageId = function () {
            return ExchangeRequestedTradeMessage.ID;
        };
        ExchangeRequestedTradeMessage.prototype.reset = function () {
            this.source = 0;
            this.target = 0;
        };
        ExchangeRequestedTradeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeRequestedTradeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeRequestedTradeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeRequestedTradeMessage(param1);
        };
        ExchangeRequestedTradeMessage.prototype.serializeAs_ExchangeRequestedTradeMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeRequestedMessage.call(this, param1);
            if (this.source < 0) {
                throw new Error('Forbidden value (' + this.source + ') on element source.');
            }
            param1.writeVarInt(this.source);
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element target.');
            }
            param1.writeVarInt(this.target);
        };
        ExchangeRequestedTradeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeRequestedTradeMessage(param1);
        };
        ExchangeRequestedTradeMessage.prototype.deserializeAs_ExchangeRequestedTradeMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.source = param1.readVarUhInt();
            if (this.source < 0) {
                throw new Error('Forbidden value (' + this.source + ') on element of ExchangeRequestedTradeMessage.source.');
            }
            this.target = param1.readVarUhInt();
            if (this.target < 0) {
                throw new Error('Forbidden value (' + this.target + ') on element of ExchangeRequestedTradeMessage.target.');
            }
        };
        ExchangeRequestedTradeMessage.ID = 5523;
        return ExchangeRequestedTradeMessage;
    })(ExchangeRequestedMessage);
    Protocol.ExchangeRequestedTradeMessage = ExchangeRequestedTradeMessage;
    var ExchangeSellMessage = (function (_super) {
        __extends(ExchangeSellMessage, _super);
        function ExchangeSellMessage() {
            this.objectToSellId = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeSellMessage.prototype.getMessageId = function () {
            return ExchangeSellMessage.ID;
        };
        ExchangeSellMessage.prototype.reset = function () {
            this.objectToSellId = 0;
            this.quantity = 0;
        };
        ExchangeSellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeSellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeSellMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeSellMessage(param1);
        };
        ExchangeSellMessage.prototype.serializeAs_ExchangeSellMessage = function (param1) {
            if (this.objectToSellId < 0) {
                throw new Error('Forbidden value (' + this.objectToSellId + ') on element objectToSellId.');
            }
            param1.writeVarInt(this.objectToSellId);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ExchangeSellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeSellMessage(param1);
        };
        ExchangeSellMessage.prototype.deserializeAs_ExchangeSellMessage = function (param1) {
            this.objectToSellId = param1.readVarUhInt();
            if (this.objectToSellId < 0) {
                throw new Error('Forbidden value (' + this.objectToSellId + ') on element of ExchangeSellMessage.objectToSellId.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ExchangeSellMessage.quantity.');
            }
        };
        ExchangeSellMessage.ID = 5778;
        return ExchangeSellMessage;
    })(NetworkMessage);
    Protocol.ExchangeSellMessage = ExchangeSellMessage;
    var ExchangeSellOkMessage = (function (_super) {
        __extends(ExchangeSellOkMessage, _super);
        function ExchangeSellOkMessage() {
            _super.call(this);
        }
        ExchangeSellOkMessage.prototype.getMessageId = function () {
            return ExchangeSellOkMessage.ID;
        };
        ExchangeSellOkMessage.prototype.reset = function () {
        };
        ExchangeSellOkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeSellOkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeSellOkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeSellOkMessage(param1);
        };
        ExchangeSellOkMessage.prototype.serializeAs_ExchangeSellOkMessage = function (param1) {
        };
        ExchangeSellOkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeSellOkMessage(param1);
        };
        ExchangeSellOkMessage.prototype.deserializeAs_ExchangeSellOkMessage = function (param1) {
        };
        ExchangeSellOkMessage.ID = 5792;
        return ExchangeSellOkMessage;
    })(NetworkMessage);
    Protocol.ExchangeSellOkMessage = ExchangeSellOkMessage;
    var ExchangeSetCraftRecipeMessage = (function (_super) {
        __extends(ExchangeSetCraftRecipeMessage, _super);
        function ExchangeSetCraftRecipeMessage() {
            this.objectGID = 0;
            _super.call(this);
        }
        ExchangeSetCraftRecipeMessage.prototype.getMessageId = function () {
            return ExchangeSetCraftRecipeMessage.ID;
        };
        ExchangeSetCraftRecipeMessage.prototype.reset = function () {
            this.objectGID = 0;
        };
        ExchangeSetCraftRecipeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeSetCraftRecipeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeSetCraftRecipeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeSetCraftRecipeMessage(param1);
        };
        ExchangeSetCraftRecipeMessage.prototype.serializeAs_ExchangeSetCraftRecipeMessage = function (param1) {
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
        };
        ExchangeSetCraftRecipeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeSetCraftRecipeMessage(param1);
        };
        ExchangeSetCraftRecipeMessage.prototype.deserializeAs_ExchangeSetCraftRecipeMessage = function (param1) {
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ExchangeSetCraftRecipeMessage.objectGID.');
            }
        };
        ExchangeSetCraftRecipeMessage.ID = 6389;
        return ExchangeSetCraftRecipeMessage;
    })(NetworkMessage);
    Protocol.ExchangeSetCraftRecipeMessage = ExchangeSetCraftRecipeMessage;
    var ExchangeShopStockMovementRemovedMessage = (function (_super) {
        __extends(ExchangeShopStockMovementRemovedMessage, _super);
        function ExchangeShopStockMovementRemovedMessage() {
            this.objectId = 0;
            _super.call(this);
        }
        ExchangeShopStockMovementRemovedMessage.prototype.getMessageId = function () {
            return ExchangeShopStockMovementRemovedMessage.ID;
        };
        ExchangeShopStockMovementRemovedMessage.prototype.reset = function () {
            this.objectId = 0;
        };
        ExchangeShopStockMovementRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShopStockMovementRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShopStockMovementRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShopStockMovementRemovedMessage(param1);
        };
        ExchangeShopStockMovementRemovedMessage.prototype.serializeAs_ExchangeShopStockMovementRemovedMessage = function (param1) {
            if (this.objectId < 0) {
                throw new Error('Forbidden value (' + this.objectId + ') on element objectId.');
            }
            param1.writeVarInt(this.objectId);
        };
        ExchangeShopStockMovementRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShopStockMovementRemovedMessage(param1);
        };
        ExchangeShopStockMovementRemovedMessage.prototype.deserializeAs_ExchangeShopStockMovementRemovedMessage = function (param1) {
            this.objectId = param1.readVarUhInt();
            if (this.objectId < 0) {
                throw new Error('Forbidden value (' + this.objectId + ') on element of ExchangeShopStockMovementRemovedMessage.objectId.');
            }
        };
        ExchangeShopStockMovementRemovedMessage.ID = 5907;
        return ExchangeShopStockMovementRemovedMessage;
    })(NetworkMessage);
    Protocol.ExchangeShopStockMovementRemovedMessage = ExchangeShopStockMovementRemovedMessage;
    var ExchangeShopStockMovementUpdatedMessage = (function (_super) {
        __extends(ExchangeShopStockMovementUpdatedMessage, _super);
        function ExchangeShopStockMovementUpdatedMessage() {
            this.objectInfo = new ObjectItemToSell();
            _super.call(this);
        }
        ExchangeShopStockMovementUpdatedMessage.prototype.getMessageId = function () {
            return ExchangeShopStockMovementUpdatedMessage.ID;
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.reset = function () {
            this.objectInfo = new ObjectItemToSell();
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShopStockMovementUpdatedMessage(param1);
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.serializeAs_ExchangeShopStockMovementUpdatedMessage = function (param1) {
            this.objectInfo.serializeAs_ObjectItemToSell(param1);
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShopStockMovementUpdatedMessage(param1);
        };
        ExchangeShopStockMovementUpdatedMessage.prototype.deserializeAs_ExchangeShopStockMovementUpdatedMessage = function (param1) {
            this.objectInfo = new ObjectItemToSell();
            this.objectInfo.deserialize(param1);
        };
        ExchangeShopStockMovementUpdatedMessage.ID = 5909;
        return ExchangeShopStockMovementUpdatedMessage;
    })(NetworkMessage);
    Protocol.ExchangeShopStockMovementUpdatedMessage = ExchangeShopStockMovementUpdatedMessage;
    var ExchangeShopStockMultiMovementRemovedMessage = (function (_super) {
        __extends(ExchangeShopStockMultiMovementRemovedMessage, _super);
        function ExchangeShopStockMultiMovementRemovedMessage() {
            this.objectIdList = [];
            _super.call(this);
        }
        ExchangeShopStockMultiMovementRemovedMessage.prototype.getMessageId = function () {
            return ExchangeShopStockMultiMovementRemovedMessage.ID;
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.reset = function () {
            this.objectIdList = [];
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShopStockMultiMovementRemovedMessage(param1);
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.serializeAs_ExchangeShopStockMultiMovementRemovedMessage = function (param1) {
            param1.writeShort(this.objectIdList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectIdList.length) {
                if (this.objectIdList[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.objectIdList[_loc2_] + ') on element 1 (starting at 1) of objectIdList.');
                }
                param1.writeVarInt(this.objectIdList[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShopStockMultiMovementRemovedMessage(param1);
        };
        ExchangeShopStockMultiMovementRemovedMessage.prototype.deserializeAs_ExchangeShopStockMultiMovementRemovedMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of objectIdList.');
                }
                this.objectIdList.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeShopStockMultiMovementRemovedMessage.ID = 6037;
        return ExchangeShopStockMultiMovementRemovedMessage;
    })(NetworkMessage);
    Protocol.ExchangeShopStockMultiMovementRemovedMessage = ExchangeShopStockMultiMovementRemovedMessage;
    var ExchangeShopStockMultiMovementUpdatedMessage = (function (_super) {
        __extends(ExchangeShopStockMultiMovementUpdatedMessage, _super);
        function ExchangeShopStockMultiMovementUpdatedMessage() {
            this.objectInfoList = [];
            _super.call(this);
        }
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.getMessageId = function () {
            return ExchangeShopStockMultiMovementUpdatedMessage.ID;
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.reset = function () {
            this.objectInfoList = [];
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShopStockMultiMovementUpdatedMessage(param1);
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.serializeAs_ExchangeShopStockMultiMovementUpdatedMessage = function (param1) {
            param1.writeShort(this.objectInfoList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectInfoList.length) {
                (this.objectInfoList[_loc2_]).serializeAs_ObjectItemToSell(param1);
                _loc2_++;
            }
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShopStockMultiMovementUpdatedMessage(param1);
        };
        ExchangeShopStockMultiMovementUpdatedMessage.prototype.deserializeAs_ExchangeShopStockMultiMovementUpdatedMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemToSell();
                _loc4_.deserialize(param1);
                this.objectInfoList.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeShopStockMultiMovementUpdatedMessage.ID = 6038;
        return ExchangeShopStockMultiMovementUpdatedMessage;
    })(NetworkMessage);
    Protocol.ExchangeShopStockMultiMovementUpdatedMessage = ExchangeShopStockMultiMovementUpdatedMessage;
    var ExchangeShopStockStartedMessage = (function (_super) {
        __extends(ExchangeShopStockStartedMessage, _super);
        function ExchangeShopStockStartedMessage() {
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeShopStockStartedMessage.prototype.getMessageId = function () {
            return ExchangeShopStockStartedMessage.ID;
        };
        ExchangeShopStockStartedMessage.prototype.reset = function () {
            this.objectsInfos = [];
        };
        ExchangeShopStockStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShopStockStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShopStockStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShopStockStartedMessage(param1);
        };
        ExchangeShopStockStartedMessage.prototype.serializeAs_ExchangeShopStockStartedMessage = function (param1) {
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItemToSell(param1);
                _loc2_++;
            }
        };
        ExchangeShopStockStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShopStockStartedMessage(param1);
        };
        ExchangeShopStockStartedMessage.prototype.deserializeAs_ExchangeShopStockStartedMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemToSell();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeShopStockStartedMessage.ID = 5910;
        return ExchangeShopStockStartedMessage;
    })(NetworkMessage);
    Protocol.ExchangeShopStockStartedMessage = ExchangeShopStockStartedMessage;
    var ExchangeShowVendorTaxMessage = (function (_super) {
        __extends(ExchangeShowVendorTaxMessage, _super);
        function ExchangeShowVendorTaxMessage() {
            _super.call(this);
        }
        ExchangeShowVendorTaxMessage.prototype.getMessageId = function () {
            return ExchangeShowVendorTaxMessage.ID;
        };
        ExchangeShowVendorTaxMessage.prototype.reset = function () {
        };
        ExchangeShowVendorTaxMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeShowVendorTaxMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeShowVendorTaxMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeShowVendorTaxMessage(param1);
        };
        ExchangeShowVendorTaxMessage.prototype.serializeAs_ExchangeShowVendorTaxMessage = function (param1) {
        };
        ExchangeShowVendorTaxMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeShowVendorTaxMessage(param1);
        };
        ExchangeShowVendorTaxMessage.prototype.deserializeAs_ExchangeShowVendorTaxMessage = function (param1) {
        };
        ExchangeShowVendorTaxMessage.ID = 5783;
        return ExchangeShowVendorTaxMessage;
    })(NetworkMessage);
    Protocol.ExchangeShowVendorTaxMessage = ExchangeShowVendorTaxMessage;
    var ExchangeStartAsVendorMessage = (function (_super) {
        __extends(ExchangeStartAsVendorMessage, _super);
        function ExchangeStartAsVendorMessage() {
            _super.call(this);
        }
        ExchangeStartAsVendorMessage.prototype.getMessageId = function () {
            return ExchangeStartAsVendorMessage.ID;
        };
        ExchangeStartAsVendorMessage.prototype.reset = function () {
        };
        ExchangeStartAsVendorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartAsVendorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartAsVendorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartAsVendorMessage(param1);
        };
        ExchangeStartAsVendorMessage.prototype.serializeAs_ExchangeStartAsVendorMessage = function (param1) {
        };
        ExchangeStartAsVendorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartAsVendorMessage(param1);
        };
        ExchangeStartAsVendorMessage.prototype.deserializeAs_ExchangeStartAsVendorMessage = function (param1) {
        };
        ExchangeStartAsVendorMessage.ID = 5775;
        return ExchangeStartAsVendorMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartAsVendorMessage = ExchangeStartAsVendorMessage;
    var ExchangeStartOkCraftMessage = (function (_super) {
        __extends(ExchangeStartOkCraftMessage, _super);
        function ExchangeStartOkCraftMessage() {
            _super.call(this);
        }
        ExchangeStartOkCraftMessage.prototype.getMessageId = function () {
            return ExchangeStartOkCraftMessage.ID;
        };
        ExchangeStartOkCraftMessage.prototype.reset = function () {
        };
        ExchangeStartOkCraftMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkCraftMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkCraftMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkCraftMessage(param1);
        };
        ExchangeStartOkCraftMessage.prototype.serializeAs_ExchangeStartOkCraftMessage = function (param1) {
        };
        ExchangeStartOkCraftMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkCraftMessage(param1);
        };
        ExchangeStartOkCraftMessage.prototype.deserializeAs_ExchangeStartOkCraftMessage = function (param1) {
        };
        ExchangeStartOkCraftMessage.ID = 5813;
        return ExchangeStartOkCraftMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkCraftMessage = ExchangeStartOkCraftMessage;
    var ExchangeStartOkCraftWithInformationMessage = (function (_super) {
        __extends(ExchangeStartOkCraftWithInformationMessage, _super);
        function ExchangeStartOkCraftWithInformationMessage() {
            this.skillId = 0;
            _super.call(this);
        }
        ExchangeStartOkCraftWithInformationMessage.prototype.getMessageId = function () {
            return ExchangeStartOkCraftWithInformationMessage.ID;
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.reset = function () {
            this.skillId = 0;
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkCraftWithInformationMessage(param1);
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.serializeAs_ExchangeStartOkCraftWithInformationMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeStartOkCraftMessage.call(this, param1);
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarInt(this.skillId);
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkCraftWithInformationMessage(param1);
        };
        ExchangeStartOkCraftWithInformationMessage.prototype.deserializeAs_ExchangeStartOkCraftWithInformationMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.skillId = param1.readVarUhInt();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of ExchangeStartOkCraftWithInformationMessage.skillId.');
            }
        };
        ExchangeStartOkCraftWithInformationMessage.ID = 5941;
        return ExchangeStartOkCraftWithInformationMessage;
    })(ExchangeStartOkCraftMessage);
    Protocol.ExchangeStartOkCraftWithInformationMessage = ExchangeStartOkCraftWithInformationMessage;
    var ExchangeStartOkHumanVendorMessage = (function (_super) {
        __extends(ExchangeStartOkHumanVendorMessage, _super);
        function ExchangeStartOkHumanVendorMessage() {
            this.sellerId = 0;
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeStartOkHumanVendorMessage.prototype.getMessageId = function () {
            return ExchangeStartOkHumanVendorMessage.ID;
        };
        ExchangeStartOkHumanVendorMessage.prototype.reset = function () {
            this.sellerId = 0;
            this.objectsInfos = [];
        };
        ExchangeStartOkHumanVendorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkHumanVendorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkHumanVendorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkHumanVendorMessage(param1);
        };
        ExchangeStartOkHumanVendorMessage.prototype.serializeAs_ExchangeStartOkHumanVendorMessage = function (param1) {
            if (this.sellerId < 0) {
                throw new Error('Forbidden value (' + this.sellerId + ') on element sellerId.');
            }
            param1.writeVarInt(this.sellerId);
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItemToSellInHumanVendorShop(param1);
                _loc2_++;
            }
        };
        ExchangeStartOkHumanVendorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkHumanVendorMessage(param1);
        };
        ExchangeStartOkHumanVendorMessage.prototype.deserializeAs_ExchangeStartOkHumanVendorMessage = function (param1) {
            var _loc4_ = null;
            this.sellerId = param1.readVarUhInt();
            if (this.sellerId < 0) {
                throw new Error('Forbidden value (' + this.sellerId + ') on element of ExchangeStartOkHumanVendorMessage.sellerId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemToSellInHumanVendorShop();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartOkHumanVendorMessage.ID = 5767;
        return ExchangeStartOkHumanVendorMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkHumanVendorMessage = ExchangeStartOkHumanVendorMessage;
    var ExchangeStartOkJobIndexMessage = (function (_super) {
        __extends(ExchangeStartOkJobIndexMessage, _super);
        function ExchangeStartOkJobIndexMessage() {
            this.jobs = [];
            _super.call(this);
        }
        ExchangeStartOkJobIndexMessage.prototype.getMessageId = function () {
            return ExchangeStartOkJobIndexMessage.ID;
        };
        ExchangeStartOkJobIndexMessage.prototype.reset = function () {
            this.jobs = [];
        };
        ExchangeStartOkJobIndexMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkJobIndexMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkJobIndexMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkJobIndexMessage(param1);
        };
        ExchangeStartOkJobIndexMessage.prototype.serializeAs_ExchangeStartOkJobIndexMessage = function (param1) {
            param1.writeShort(this.jobs.length);
            var _loc2_ = 0;
            while (_loc2_ < this.jobs.length) {
                if (this.jobs[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.jobs[_loc2_] + ') on element 1 (starting at 1) of jobs.');
                }
                param1.writeVarInt(this.jobs[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeStartOkJobIndexMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkJobIndexMessage(param1);
        };
        ExchangeStartOkJobIndexMessage.prototype.deserializeAs_ExchangeStartOkJobIndexMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of jobs.');
                }
                this.jobs.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartOkJobIndexMessage.ID = 5819;
        return ExchangeStartOkJobIndexMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkJobIndexMessage = ExchangeStartOkJobIndexMessage;
    var ExchangeStartOkMountMessage = (function (_super) {
        __extends(ExchangeStartOkMountMessage, _super);
        function ExchangeStartOkMountMessage() {
            this.paddockedMountsDescription = [];
            _super.call(this);
        }
        ExchangeStartOkMountMessage.prototype.getMessageId = function () {
            return ExchangeStartOkMountMessage.ID;
        };
        ExchangeStartOkMountMessage.prototype.reset = function () {
            this.paddockedMountsDescription = [];
        };
        ExchangeStartOkMountMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkMountMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkMountMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkMountMessage(param1);
        };
        ExchangeStartOkMountMessage.prototype.serializeAs_ExchangeStartOkMountMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeStartOkMountWithOutPaddockMessage.call(this, param1);
            param1.writeShort(this.paddockedMountsDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.paddockedMountsDescription.length) {
                (this.paddockedMountsDescription[_loc2_]).serializeAs_MountClientData(param1);
                _loc2_++;
            }
        };
        ExchangeStartOkMountMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkMountMessage(param1);
        };
        ExchangeStartOkMountMessage.prototype.deserializeAs_ExchangeStartOkMountMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MountClientData();
                _loc4_.deserialize(param1);
                this.paddockedMountsDescription.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartOkMountMessage.ID = 5979;
        return ExchangeStartOkMountMessage;
    })(ExchangeStartOkMountWithOutPaddockMessage);
    Protocol.ExchangeStartOkMountMessage = ExchangeStartOkMountMessage;
    var ExchangeStartOkMountWithOutPaddockMessage = (function (_super) {
        __extends(ExchangeStartOkMountWithOutPaddockMessage, _super);
        function ExchangeStartOkMountWithOutPaddockMessage() {
            this.stabledMountsDescription = [];
            _super.call(this);
        }
        ExchangeStartOkMountWithOutPaddockMessage.prototype.getMessageId = function () {
            return ExchangeStartOkMountWithOutPaddockMessage.ID;
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.reset = function () {
            this.stabledMountsDescription = [];
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkMountWithOutPaddockMessage(param1);
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.serializeAs_ExchangeStartOkMountWithOutPaddockMessage = function (param1) {
            param1.writeShort(this.stabledMountsDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.stabledMountsDescription.length) {
                (this.stabledMountsDescription[_loc2_]).serializeAs_MountClientData(param1);
                _loc2_++;
            }
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkMountWithOutPaddockMessage(param1);
        };
        ExchangeStartOkMountWithOutPaddockMessage.prototype.deserializeAs_ExchangeStartOkMountWithOutPaddockMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MountClientData();
                _loc4_.deserialize(param1);
                this.stabledMountsDescription.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartOkMountWithOutPaddockMessage.ID = 5991;
        return ExchangeStartOkMountWithOutPaddockMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkMountWithOutPaddockMessage = ExchangeStartOkMountWithOutPaddockMessage;
    var ExchangeStartOkMulticraftCrafterMessage = (function (_super) {
        __extends(ExchangeStartOkMulticraftCrafterMessage, _super);
        function ExchangeStartOkMulticraftCrafterMessage() {
            this.skillId = 0;
            _super.call(this);
        }
        ExchangeStartOkMulticraftCrafterMessage.prototype.getMessageId = function () {
            return ExchangeStartOkMulticraftCrafterMessage.ID;
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.reset = function () {
            this.skillId = 0;
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkMulticraftCrafterMessage(param1);
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.serializeAs_ExchangeStartOkMulticraftCrafterMessage = function (param1) {
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarInt(this.skillId);
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkMulticraftCrafterMessage(param1);
        };
        ExchangeStartOkMulticraftCrafterMessage.prototype.deserializeAs_ExchangeStartOkMulticraftCrafterMessage = function (param1) {
            this.skillId = param1.readVarUhInt();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of ExchangeStartOkMulticraftCrafterMessage.skillId.');
            }
        };
        ExchangeStartOkMulticraftCrafterMessage.ID = 5818;
        return ExchangeStartOkMulticraftCrafterMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkMulticraftCrafterMessage = ExchangeStartOkMulticraftCrafterMessage;
    var ExchangeStartOkMulticraftCustomerMessage = (function (_super) {
        __extends(ExchangeStartOkMulticraftCustomerMessage, _super);
        function ExchangeStartOkMulticraftCustomerMessage() {
            this.skillId = 0;
            this.crafterJobLevel = 0;
            _super.call(this);
        }
        ExchangeStartOkMulticraftCustomerMessage.prototype.getMessageId = function () {
            return ExchangeStartOkMulticraftCustomerMessage.ID;
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.reset = function () {
            this.skillId = 0;
            this.crafterJobLevel = 0;
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkMulticraftCustomerMessage(param1);
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.serializeAs_ExchangeStartOkMulticraftCustomerMessage = function (param1) {
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarInt(this.skillId);
            if (this.crafterJobLevel < 0 || this.crafterJobLevel > 255) {
                throw new Error('Forbidden value (' + this.crafterJobLevel + ') on element crafterJobLevel.');
            }
            param1.writeByte(this.crafterJobLevel);
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkMulticraftCustomerMessage(param1);
        };
        ExchangeStartOkMulticraftCustomerMessage.prototype.deserializeAs_ExchangeStartOkMulticraftCustomerMessage = function (param1) {
            this.skillId = param1.readVarUhInt();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of ExchangeStartOkMulticraftCustomerMessage.skillId.');
            }
            this.crafterJobLevel = param1.readUnsignedByte();
            if (this.crafterJobLevel < 0 || this.crafterJobLevel > 255) {
                throw new Error('Forbidden value (' + this.crafterJobLevel + ') on element of ExchangeStartOkMulticraftCustomerMessage.crafterJobLevel.');
            }
        };
        ExchangeStartOkMulticraftCustomerMessage.ID = 5817;
        return ExchangeStartOkMulticraftCustomerMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkMulticraftCustomerMessage = ExchangeStartOkMulticraftCustomerMessage;
    var ExchangeStartOkNpcShopMessage = (function (_super) {
        __extends(ExchangeStartOkNpcShopMessage, _super);
        function ExchangeStartOkNpcShopMessage() {
            this.npcSellerId = 0;
            this.tokenId = 0;
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeStartOkNpcShopMessage.prototype.getMessageId = function () {
            return ExchangeStartOkNpcShopMessage.ID;
        };
        ExchangeStartOkNpcShopMessage.prototype.reset = function () {
            this.npcSellerId = 0;
            this.tokenId = 0;
            this.objectsInfos = [];
        };
        ExchangeStartOkNpcShopMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkNpcShopMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkNpcShopMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkNpcShopMessage(param1);
        };
        ExchangeStartOkNpcShopMessage.prototype.serializeAs_ExchangeStartOkNpcShopMessage = function (param1) {
            param1.writeInt(this.npcSellerId);
            if (this.tokenId < 0) {
                throw new Error('Forbidden value (' + this.tokenId + ') on element tokenId.');
            }
            param1.writeVarShort(this.tokenId);
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItemToSellInNpcShop(param1);
                _loc2_++;
            }
        };
        ExchangeStartOkNpcShopMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkNpcShopMessage(param1);
        };
        ExchangeStartOkNpcShopMessage.prototype.deserializeAs_ExchangeStartOkNpcShopMessage = function (param1) {
            var _loc4_ = null;
            this.npcSellerId = param1.readInt();
            this.tokenId = param1.readVarUhShort();
            if (this.tokenId < 0) {
                throw new Error('Forbidden value (' + this.tokenId + ') on element of ExchangeStartOkNpcShopMessage.tokenId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemToSellInNpcShop();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartOkNpcShopMessage.ID = 5761;
        return ExchangeStartOkNpcShopMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkNpcShopMessage = ExchangeStartOkNpcShopMessage;
    var ExchangeStartOkNpcTradeMessage = (function (_super) {
        __extends(ExchangeStartOkNpcTradeMessage, _super);
        function ExchangeStartOkNpcTradeMessage() {
            this.npcId = 0;
            _super.call(this);
        }
        ExchangeStartOkNpcTradeMessage.prototype.getMessageId = function () {
            return ExchangeStartOkNpcTradeMessage.ID;
        };
        ExchangeStartOkNpcTradeMessage.prototype.reset = function () {
            this.npcId = 0;
        };
        ExchangeStartOkNpcTradeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkNpcTradeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkNpcTradeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkNpcTradeMessage(param1);
        };
        ExchangeStartOkNpcTradeMessage.prototype.serializeAs_ExchangeStartOkNpcTradeMessage = function (param1) {
            param1.writeInt(this.npcId);
        };
        ExchangeStartOkNpcTradeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkNpcTradeMessage(param1);
        };
        ExchangeStartOkNpcTradeMessage.prototype.deserializeAs_ExchangeStartOkNpcTradeMessage = function (param1) {
            this.npcId = param1.readInt();
        };
        ExchangeStartOkNpcTradeMessage.ID = 5785;
        return ExchangeStartOkNpcTradeMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkNpcTradeMessage = ExchangeStartOkNpcTradeMessage;
    var ExchangeStartOkRecycleTradeMessage = (function (_super) {
        __extends(ExchangeStartOkRecycleTradeMessage, _super);
        function ExchangeStartOkRecycleTradeMessage() {
            this.percentToPrism = 0;
            this.percentToPlayer = 0;
            _super.call(this);
        }
        ExchangeStartOkRecycleTradeMessage.prototype.getMessageId = function () {
            return ExchangeStartOkRecycleTradeMessage.ID;
        };
        ExchangeStartOkRecycleTradeMessage.prototype.reset = function () {
            this.percentToPrism = 0;
            this.percentToPlayer = 0;
        };
        ExchangeStartOkRecycleTradeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkRecycleTradeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkRecycleTradeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkRecycleTradeMessage(param1);
        };
        ExchangeStartOkRecycleTradeMessage.prototype.serializeAs_ExchangeStartOkRecycleTradeMessage = function (param1) {
            if (this.percentToPrism < 0) {
                throw new Error('Forbidden value (' + this.percentToPrism + ') on element percentToPrism.');
            }
            param1.writeShort(this.percentToPrism);
            if (this.percentToPlayer < 0) {
                throw new Error('Forbidden value (' + this.percentToPlayer + ') on element percentToPlayer.');
            }
            param1.writeShort(this.percentToPlayer);
        };
        ExchangeStartOkRecycleTradeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkRecycleTradeMessage(param1);
        };
        ExchangeStartOkRecycleTradeMessage.prototype.deserializeAs_ExchangeStartOkRecycleTradeMessage = function (param1) {
            this.percentToPrism = param1.readShort();
            if (this.percentToPrism < 0) {
                throw new Error('Forbidden value (' + this.percentToPrism + ') on element of ExchangeStartOkRecycleTradeMessage.percentToPrism.');
            }
            this.percentToPlayer = param1.readShort();
            if (this.percentToPlayer < 0) {
                throw new Error('Forbidden value (' + this.percentToPlayer + ') on element of ExchangeStartOkRecycleTradeMessage.percentToPlayer.');
            }
        };
        ExchangeStartOkRecycleTradeMessage.ID = 6600;
        return ExchangeStartOkRecycleTradeMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkRecycleTradeMessage = ExchangeStartOkRecycleTradeMessage;
    var ExchangeStartOkRunesTradeMessage = (function (_super) {
        __extends(ExchangeStartOkRunesTradeMessage, _super);
        function ExchangeStartOkRunesTradeMessage() {
            _super.call(this);
        }
        ExchangeStartOkRunesTradeMessage.prototype.getMessageId = function () {
            return ExchangeStartOkRunesTradeMessage.ID;
        };
        ExchangeStartOkRunesTradeMessage.prototype.reset = function () {
        };
        ExchangeStartOkRunesTradeMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartOkRunesTradeMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartOkRunesTradeMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartOkRunesTradeMessage(param1);
        };
        ExchangeStartOkRunesTradeMessage.prototype.serializeAs_ExchangeStartOkRunesTradeMessage = function (param1) {
        };
        ExchangeStartOkRunesTradeMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartOkRunesTradeMessage(param1);
        };
        ExchangeStartOkRunesTradeMessage.prototype.deserializeAs_ExchangeStartOkRunesTradeMessage = function (param1) {
        };
        ExchangeStartOkRunesTradeMessage.ID = 6567;
        return ExchangeStartOkRunesTradeMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartOkRunesTradeMessage = ExchangeStartOkRunesTradeMessage;
    var ExchangeStartedBidBuyerMessage = (function (_super) {
        __extends(ExchangeStartedBidBuyerMessage, _super);
        function ExchangeStartedBidBuyerMessage() {
            this.buyerDescriptor = new SellerBuyerDescriptor();
            _super.call(this);
        }
        ExchangeStartedBidBuyerMessage.prototype.getMessageId = function () {
            return ExchangeStartedBidBuyerMessage.ID;
        };
        ExchangeStartedBidBuyerMessage.prototype.reset = function () {
            this.buyerDescriptor = new SellerBuyerDescriptor();
        };
        ExchangeStartedBidBuyerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedBidBuyerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedBidBuyerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedBidBuyerMessage(param1);
        };
        ExchangeStartedBidBuyerMessage.prototype.serializeAs_ExchangeStartedBidBuyerMessage = function (param1) {
            this.buyerDescriptor.serializeAs_SellerBuyerDescriptor(param1);
        };
        ExchangeStartedBidBuyerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedBidBuyerMessage(param1);
        };
        ExchangeStartedBidBuyerMessage.prototype.deserializeAs_ExchangeStartedBidBuyerMessage = function (param1) {
            this.buyerDescriptor = new SellerBuyerDescriptor();
            this.buyerDescriptor.deserialize(param1);
        };
        ExchangeStartedBidBuyerMessage.ID = 5904;
        return ExchangeStartedBidBuyerMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartedBidBuyerMessage = ExchangeStartedBidBuyerMessage;
    var ExchangeStartedBidSellerMessage = (function (_super) {
        __extends(ExchangeStartedBidSellerMessage, _super);
        function ExchangeStartedBidSellerMessage() {
            this.sellerDescriptor = new SellerBuyerDescriptor();
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeStartedBidSellerMessage.prototype.getMessageId = function () {
            return ExchangeStartedBidSellerMessage.ID;
        };
        ExchangeStartedBidSellerMessage.prototype.reset = function () {
            this.sellerDescriptor = new SellerBuyerDescriptor();
            this.objectsInfos = [];
        };
        ExchangeStartedBidSellerMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedBidSellerMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedBidSellerMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedBidSellerMessage(param1);
        };
        ExchangeStartedBidSellerMessage.prototype.serializeAs_ExchangeStartedBidSellerMessage = function (param1) {
            this.sellerDescriptor.serializeAs_SellerBuyerDescriptor(param1);
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItemToSellInBid(param1);
                _loc2_++;
            }
        };
        ExchangeStartedBidSellerMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedBidSellerMessage(param1);
        };
        ExchangeStartedBidSellerMessage.prototype.deserializeAs_ExchangeStartedBidSellerMessage = function (param1) {
            var _loc4_ = null;
            this.sellerDescriptor = new SellerBuyerDescriptor();
            this.sellerDescriptor.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemToSellInBid();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartedBidSellerMessage.ID = 5905;
        return ExchangeStartedBidSellerMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartedBidSellerMessage = ExchangeStartedBidSellerMessage;
    var ExchangeStartedMessage = (function (_super) {
        __extends(ExchangeStartedMessage, _super);
        function ExchangeStartedMessage() {
            this.exchangeType = 0;
            _super.call(this);
        }
        ExchangeStartedMessage.prototype.getMessageId = function () {
            return ExchangeStartedMessage.ID;
        };
        ExchangeStartedMessage.prototype.reset = function () {
            this.exchangeType = 0;
        };
        ExchangeStartedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedMessage(param1);
        };
        ExchangeStartedMessage.prototype.serializeAs_ExchangeStartedMessage = function (param1) {
            param1.writeByte(this.exchangeType);
        };
        ExchangeStartedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedMessage(param1);
        };
        ExchangeStartedMessage.prototype.deserializeAs_ExchangeStartedMessage = function (param1) {
            this.exchangeType = param1.readByte();
        };
        ExchangeStartedMessage.ID = 5512;
        return ExchangeStartedMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartedMessage = ExchangeStartedMessage;
    var ExchangeStartedMountStockMessage = (function (_super) {
        __extends(ExchangeStartedMountStockMessage, _super);
        function ExchangeStartedMountStockMessage() {
            this.objectsInfos = [];
            _super.call(this);
        }
        ExchangeStartedMountStockMessage.prototype.getMessageId = function () {
            return ExchangeStartedMountStockMessage.ID;
        };
        ExchangeStartedMountStockMessage.prototype.reset = function () {
            this.objectsInfos = [];
        };
        ExchangeStartedMountStockMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedMountStockMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedMountStockMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedMountStockMessage(param1);
        };
        ExchangeStartedMountStockMessage.prototype.serializeAs_ExchangeStartedMountStockMessage = function (param1) {
            param1.writeShort(this.objectsInfos.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsInfos.length) {
                (this.objectsInfos[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ExchangeStartedMountStockMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedMountStockMessage(param1);
        };
        ExchangeStartedMountStockMessage.prototype.deserializeAs_ExchangeStartedMountStockMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objectsInfos.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeStartedMountStockMessage.ID = 5984;
        return ExchangeStartedMountStockMessage;
    })(NetworkMessage);
    Protocol.ExchangeStartedMountStockMessage = ExchangeStartedMountStockMessage;
    var ExchangeStartedWithPodsMessage = (function (_super) {
        __extends(ExchangeStartedWithPodsMessage, _super);
        function ExchangeStartedWithPodsMessage() {
            this.firstCharacterId = 0;
            this.firstCharacterCurrentWeight = 0;
            this.firstCharacterMaxWeight = 0;
            this.secondCharacterId = 0;
            this.secondCharacterCurrentWeight = 0;
            this.secondCharacterMaxWeight = 0;
            _super.call(this);
        }
        ExchangeStartedWithPodsMessage.prototype.getMessageId = function () {
            return ExchangeStartedWithPodsMessage.ID;
        };
        ExchangeStartedWithPodsMessage.prototype.reset = function () {
            this.firstCharacterId = 0;
            this.firstCharacterCurrentWeight = 0;
            this.firstCharacterMaxWeight = 0;
            this.secondCharacterId = 0;
            this.secondCharacterCurrentWeight = 0;
            this.secondCharacterMaxWeight = 0;
        };
        ExchangeStartedWithPodsMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedWithPodsMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedWithPodsMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedWithPodsMessage(param1);
        };
        ExchangeStartedWithPodsMessage.prototype.serializeAs_ExchangeStartedWithPodsMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeStartedMessage.call(this, param1);
            param1.writeInt(this.firstCharacterId);
            if (this.firstCharacterCurrentWeight < 0) {
                throw new Error('Forbidden value (' + this.firstCharacterCurrentWeight + ') on element firstCharacterCurrentWeight.');
            }
            param1.writeVarInt(this.firstCharacterCurrentWeight);
            if (this.firstCharacterMaxWeight < 0) {
                throw new Error('Forbidden value (' + this.firstCharacterMaxWeight + ') on element firstCharacterMaxWeight.');
            }
            param1.writeVarInt(this.firstCharacterMaxWeight);
            param1.writeInt(this.secondCharacterId);
            if (this.secondCharacterCurrentWeight < 0) {
                throw new Error('Forbidden value (' + this.secondCharacterCurrentWeight + ') on element secondCharacterCurrentWeight.');
            }
            param1.writeVarInt(this.secondCharacterCurrentWeight);
            if (this.secondCharacterMaxWeight < 0) {
                throw new Error('Forbidden value (' + this.secondCharacterMaxWeight + ') on element secondCharacterMaxWeight.');
            }
            param1.writeVarInt(this.secondCharacterMaxWeight);
        };
        ExchangeStartedWithPodsMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedWithPodsMessage(param1);
        };
        ExchangeStartedWithPodsMessage.prototype.deserializeAs_ExchangeStartedWithPodsMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.firstCharacterId = param1.readInt();
            this.firstCharacterCurrentWeight = param1.readVarUhInt();
            if (this.firstCharacterCurrentWeight < 0) {
                throw new Error('Forbidden value (' + this.firstCharacterCurrentWeight + ') on element of ExchangeStartedWithPodsMessage.firstCharacterCurrentWeight.');
            }
            this.firstCharacterMaxWeight = param1.readVarUhInt();
            if (this.firstCharacterMaxWeight < 0) {
                throw new Error('Forbidden value (' + this.firstCharacterMaxWeight + ') on element of ExchangeStartedWithPodsMessage.firstCharacterMaxWeight.');
            }
            this.secondCharacterId = param1.readInt();
            this.secondCharacterCurrentWeight = param1.readVarUhInt();
            if (this.secondCharacterCurrentWeight < 0) {
                throw new Error('Forbidden value (' + this.secondCharacterCurrentWeight + ') on element of ExchangeStartedWithPodsMessage.secondCharacterCurrentWeight.');
            }
            this.secondCharacterMaxWeight = param1.readVarUhInt();
            if (this.secondCharacterMaxWeight < 0) {
                throw new Error('Forbidden value (' + this.secondCharacterMaxWeight + ') on element of ExchangeStartedWithPodsMessage.secondCharacterMaxWeight.');
            }
        };
        ExchangeStartedWithPodsMessage.ID = 6129;
        return ExchangeStartedWithPodsMessage;
    })(ExchangeStartedMessage);
    Protocol.ExchangeStartedWithPodsMessage = ExchangeStartedWithPodsMessage;
    var ExchangeStartedWithStorageMessage = (function (_super) {
        __extends(ExchangeStartedWithStorageMessage, _super);
        function ExchangeStartedWithStorageMessage() {
            this.storageMaxSlot = 0;
            _super.call(this);
        }
        ExchangeStartedWithStorageMessage.prototype.getMessageId = function () {
            return ExchangeStartedWithStorageMessage.ID;
        };
        ExchangeStartedWithStorageMessage.prototype.reset = function () {
            this.storageMaxSlot = 0;
        };
        ExchangeStartedWithStorageMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStartedWithStorageMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStartedWithStorageMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStartedWithStorageMessage(param1);
        };
        ExchangeStartedWithStorageMessage.prototype.serializeAs_ExchangeStartedWithStorageMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeStartedMessage.call(this, param1);
            if (this.storageMaxSlot < 0) {
                throw new Error('Forbidden value (' + this.storageMaxSlot + ') on element storageMaxSlot.');
            }
            param1.writeVarInt(this.storageMaxSlot);
        };
        ExchangeStartedWithStorageMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStartedWithStorageMessage(param1);
        };
        ExchangeStartedWithStorageMessage.prototype.deserializeAs_ExchangeStartedWithStorageMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.storageMaxSlot = param1.readVarUhInt();
            if (this.storageMaxSlot < 0) {
                throw new Error('Forbidden value (' + this.storageMaxSlot + ') on element of ExchangeStartedWithStorageMessage.storageMaxSlot.');
            }
        };
        ExchangeStartedWithStorageMessage.ID = 6236;
        return ExchangeStartedWithStorageMessage;
    })(ExchangeStartedMessage);
    Protocol.ExchangeStartedWithStorageMessage = ExchangeStartedWithStorageMessage;
    var ExchangeStoppedMessage = (function (_super) {
        __extends(ExchangeStoppedMessage, _super);
        function ExchangeStoppedMessage() {
            this.id = 0;
            _super.call(this);
        }
        ExchangeStoppedMessage.prototype.getMessageId = function () {
            return ExchangeStoppedMessage.ID;
        };
        ExchangeStoppedMessage.prototype.reset = function () {
            this.id = 0;
        };
        ExchangeStoppedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeStoppedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeStoppedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeStoppedMessage(param1);
        };
        ExchangeStoppedMessage.prototype.serializeAs_ExchangeStoppedMessage = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
        };
        ExchangeStoppedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeStoppedMessage(param1);
        };
        ExchangeStoppedMessage.prototype.deserializeAs_ExchangeStoppedMessage = function (param1) {
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of ExchangeStoppedMessage.id.');
            }
        };
        ExchangeStoppedMessage.ID = 6589;
        return ExchangeStoppedMessage;
    })(NetworkMessage);
    Protocol.ExchangeStoppedMessage = ExchangeStoppedMessage;
    var ExchangeTypesExchangerDescriptionForUserMessage = (function (_super) {
        __extends(ExchangeTypesExchangerDescriptionForUserMessage, _super);
        function ExchangeTypesExchangerDescriptionForUserMessage() {
            this.typeDescription = [];
            _super.call(this);
        }
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.getMessageId = function () {
            return ExchangeTypesExchangerDescriptionForUserMessage.ID;
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.reset = function () {
            this.typeDescription = [];
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeTypesExchangerDescriptionForUserMessage(param1);
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.serializeAs_ExchangeTypesExchangerDescriptionForUserMessage = function (param1) {
            param1.writeShort(this.typeDescription.length);
            var _loc2_ = 0;
            while (_loc2_ < this.typeDescription.length) {
                if (this.typeDescription[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.typeDescription[_loc2_] + ') on element 1 (starting at 1) of typeDescription.');
                }
                param1.writeVarInt(this.typeDescription[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeTypesExchangerDescriptionForUserMessage(param1);
        };
        ExchangeTypesExchangerDescriptionForUserMessage.prototype.deserializeAs_ExchangeTypesExchangerDescriptionForUserMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of typeDescription.');
                }
                this.typeDescription.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeTypesExchangerDescriptionForUserMessage.ID = 5765;
        return ExchangeTypesExchangerDescriptionForUserMessage;
    })(NetworkMessage);
    Protocol.ExchangeTypesExchangerDescriptionForUserMessage = ExchangeTypesExchangerDescriptionForUserMessage;
    var ExchangeTypesItemsExchangerDescriptionForUserMessage = (function (_super) {
        __extends(ExchangeTypesItemsExchangerDescriptionForUserMessage, _super);
        function ExchangeTypesItemsExchangerDescriptionForUserMessage() {
            this.itemTypeDescriptions = [];
            _super.call(this);
        }
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.getMessageId = function () {
            return ExchangeTypesItemsExchangerDescriptionForUserMessage.ID;
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.reset = function () {
            this.itemTypeDescriptions = [];
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeTypesItemsExchangerDescriptionForUserMessage(param1);
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.serializeAs_ExchangeTypesItemsExchangerDescriptionForUserMessage = function (param1) {
            param1.writeShort(this.itemTypeDescriptions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.itemTypeDescriptions.length) {
                (this.itemTypeDescriptions[_loc2_]).serializeAs_BidExchangerObjectInfo(param1);
                _loc2_++;
            }
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeTypesItemsExchangerDescriptionForUserMessage(param1);
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.prototype.deserializeAs_ExchangeTypesItemsExchangerDescriptionForUserMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new BidExchangerObjectInfo();
                _loc4_.deserialize(param1);
                this.itemTypeDescriptions.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeTypesItemsExchangerDescriptionForUserMessage.ID = 5752;
        return ExchangeTypesItemsExchangerDescriptionForUserMessage;
    })(NetworkMessage);
    Protocol.ExchangeTypesItemsExchangerDescriptionForUserMessage = ExchangeTypesItemsExchangerDescriptionForUserMessage;
    var ExchangeWaitingResultMessage = (function (_super) {
        __extends(ExchangeWaitingResultMessage, _super);
        function ExchangeWaitingResultMessage() {
            this.bwait = false;
            _super.call(this);
        }
        ExchangeWaitingResultMessage.prototype.getMessageId = function () {
            return ExchangeWaitingResultMessage.ID;
        };
        ExchangeWaitingResultMessage.prototype.reset = function () {
            this.bwait = false;
        };
        ExchangeWaitingResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeWaitingResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeWaitingResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeWaitingResultMessage(param1);
        };
        ExchangeWaitingResultMessage.prototype.serializeAs_ExchangeWaitingResultMessage = function (param1) {
            param1.writeBoolean(this.bwait);
        };
        ExchangeWaitingResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeWaitingResultMessage(param1);
        };
        ExchangeWaitingResultMessage.prototype.deserializeAs_ExchangeWaitingResultMessage = function (param1) {
            this.bwait = param1.readBoolean();
        };
        ExchangeWaitingResultMessage.ID = 5786;
        return ExchangeWaitingResultMessage;
    })(NetworkMessage);
    Protocol.ExchangeWaitingResultMessage = ExchangeWaitingResultMessage;
    var ExchangeWeightMessage = (function (_super) {
        __extends(ExchangeWeightMessage, _super);
        function ExchangeWeightMessage() {
            this.currentWeight = 0;
            this.maxWeight = 0;
            _super.call(this);
        }
        ExchangeWeightMessage.prototype.getMessageId = function () {
            return ExchangeWeightMessage.ID;
        };
        ExchangeWeightMessage.prototype.reset = function () {
            this.currentWeight = 0;
            this.maxWeight = 0;
        };
        ExchangeWeightMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeWeightMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeWeightMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeWeightMessage(param1);
        };
        ExchangeWeightMessage.prototype.serializeAs_ExchangeWeightMessage = function (param1) {
            if (this.currentWeight < 0) {
                throw new Error('Forbidden value (' + this.currentWeight + ') on element currentWeight.');
            }
            param1.writeVarInt(this.currentWeight);
            if (this.maxWeight < 0) {
                throw new Error('Forbidden value (' + this.maxWeight + ') on element maxWeight.');
            }
            param1.writeVarInt(this.maxWeight);
        };
        ExchangeWeightMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeWeightMessage(param1);
        };
        ExchangeWeightMessage.prototype.deserializeAs_ExchangeWeightMessage = function (param1) {
            this.currentWeight = param1.readVarUhInt();
            if (this.currentWeight < 0) {
                throw new Error('Forbidden value (' + this.currentWeight + ') on element of ExchangeWeightMessage.currentWeight.');
            }
            this.maxWeight = param1.readVarUhInt();
            if (this.maxWeight < 0) {
                throw new Error('Forbidden value (' + this.maxWeight + ') on element of ExchangeWeightMessage.maxWeight.');
            }
        };
        ExchangeWeightMessage.ID = 5793;
        return ExchangeWeightMessage;
    })(NetworkMessage);
    Protocol.ExchangeWeightMessage = ExchangeWeightMessage;
    var ItemNoMoreAvailableMessage = (function (_super) {
        __extends(ItemNoMoreAvailableMessage, _super);
        function ItemNoMoreAvailableMessage() {
            _super.call(this);
        }
        ItemNoMoreAvailableMessage.prototype.getMessageId = function () {
            return ItemNoMoreAvailableMessage.ID;
        };
        ItemNoMoreAvailableMessage.prototype.reset = function () {
        };
        ItemNoMoreAvailableMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ItemNoMoreAvailableMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ItemNoMoreAvailableMessage.prototype.serialize = function (param1) {
            this.serializeAs_ItemNoMoreAvailableMessage(param1);
        };
        ItemNoMoreAvailableMessage.prototype.serializeAs_ItemNoMoreAvailableMessage = function (param1) {
        };
        ItemNoMoreAvailableMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ItemNoMoreAvailableMessage(param1);
        };
        ItemNoMoreAvailableMessage.prototype.deserializeAs_ItemNoMoreAvailableMessage = function (param1) {
        };
        ItemNoMoreAvailableMessage.ID = 5769;
        return ItemNoMoreAvailableMessage;
    })(NetworkMessage);
    Protocol.ItemNoMoreAvailableMessage = ItemNoMoreAvailableMessage;
    var JobBookSubscribeRequestMessage = (function (_super) {
        __extends(JobBookSubscribeRequestMessage, _super);
        function JobBookSubscribeRequestMessage() {
            this.jobId = 0;
            _super.call(this);
        }
        JobBookSubscribeRequestMessage.prototype.getMessageId = function () {
            return JobBookSubscribeRequestMessage.ID;
        };
        JobBookSubscribeRequestMessage.prototype.reset = function () {
            this.jobId = 0;
        };
        JobBookSubscribeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        JobBookSubscribeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        JobBookSubscribeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_JobBookSubscribeRequestMessage(param1);
        };
        JobBookSubscribeRequestMessage.prototype.serializeAs_JobBookSubscribeRequestMessage = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
        };
        JobBookSubscribeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_JobBookSubscribeRequestMessage(param1);
        };
        JobBookSubscribeRequestMessage.prototype.deserializeAs_JobBookSubscribeRequestMessage = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobBookSubscribeRequestMessage.jobId.');
            }
        };
        JobBookSubscribeRequestMessage.ID = 6592;
        return JobBookSubscribeRequestMessage;
    })(NetworkMessage);
    Protocol.JobBookSubscribeRequestMessage = JobBookSubscribeRequestMessage;
    var RecycleResultMessage = (function (_super) {
        __extends(RecycleResultMessage, _super);
        function RecycleResultMessage() {
            this.nuggetsForPrism = 0;
            this.nuggetsForPlayer = 0;
            _super.call(this);
        }
        RecycleResultMessage.prototype.getMessageId = function () {
            return RecycleResultMessage.ID;
        };
        RecycleResultMessage.prototype.reset = function () {
            this.nuggetsForPrism = 0;
            this.nuggetsForPlayer = 0;
        };
        RecycleResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        RecycleResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        RecycleResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_RecycleResultMessage(param1);
        };
        RecycleResultMessage.prototype.serializeAs_RecycleResultMessage = function (param1) {
            if (this.nuggetsForPrism < 0) {
                throw new Error('Forbidden value (' + this.nuggetsForPrism + ') on element nuggetsForPrism.');
            }
            param1.writeVarInt(this.nuggetsForPrism);
            if (this.nuggetsForPlayer < 0) {
                throw new Error('Forbidden value (' + this.nuggetsForPlayer + ') on element nuggetsForPlayer.');
            }
            param1.writeVarInt(this.nuggetsForPlayer);
        };
        RecycleResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_RecycleResultMessage(param1);
        };
        RecycleResultMessage.prototype.deserializeAs_RecycleResultMessage = function (param1) {
            this.nuggetsForPrism = param1.readVarUhInt();
            if (this.nuggetsForPrism < 0) {
                throw new Error('Forbidden value (' + this.nuggetsForPrism + ') on element of RecycleResultMessage.nuggetsForPrism.');
            }
            this.nuggetsForPlayer = param1.readVarUhInt();
            if (this.nuggetsForPlayer < 0) {
                throw new Error('Forbidden value (' + this.nuggetsForPlayer + ') on element of RecycleResultMessage.nuggetsForPlayer.');
            }
        };
        RecycleResultMessage.ID = 6601;
        return RecycleResultMessage;
    })(NetworkMessage);
    Protocol.RecycleResultMessage = RecycleResultMessage;
    var UpdateMountBoostMessage = (function (_super) {
        __extends(UpdateMountBoostMessage, _super);
        function UpdateMountBoostMessage() {
            this.rideId = 0;
            this.boostToUpdateList = [];
            _super.call(this);
        }
        UpdateMountBoostMessage.prototype.getMessageId = function () {
            return UpdateMountBoostMessage.ID;
        };
        UpdateMountBoostMessage.prototype.reset = function () {
            this.rideId = 0;
            this.boostToUpdateList = [];
        };
        UpdateMountBoostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        UpdateMountBoostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        UpdateMountBoostMessage.prototype.serialize = function (param1) {
            this.serializeAs_UpdateMountBoostMessage(param1);
        };
        UpdateMountBoostMessage.prototype.serializeAs_UpdateMountBoostMessage = function (param1) {
            param1.writeVarInt(this.rideId);
            param1.writeShort(this.boostToUpdateList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.boostToUpdateList.length) {
                param1.writeShort((this.boostToUpdateList[_loc2_]).getTypeId());
                (this.boostToUpdateList[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        UpdateMountBoostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateMountBoostMessage(param1);
        };
        UpdateMountBoostMessage.prototype.deserializeAs_UpdateMountBoostMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.rideId = param1.readVarInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(UpdateMountBoost, _loc4_);
                _loc5_.deserialize(param1);
                this.boostToUpdateList.push(_loc5_);
                _loc3_++;
            }
        };
        UpdateMountBoostMessage.ID = 6179;
        return UpdateMountBoostMessage;
    })(NetworkMessage);
    Protocol.UpdateMountBoostMessage = UpdateMountBoostMessage;
    var ExchangeKamaModifiedMessage = (function (_super) {
        __extends(ExchangeKamaModifiedMessage, _super);
        function ExchangeKamaModifiedMessage() {
            this.quantity = 0;
            _super.call(this);
        }
        ExchangeKamaModifiedMessage.prototype.getMessageId = function () {
            return ExchangeKamaModifiedMessage.ID;
        };
        ExchangeKamaModifiedMessage.prototype.reset = function () {
            this.quantity = 0;
        };
        ExchangeKamaModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeKamaModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeKamaModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeKamaModifiedMessage(param1);
        };
        ExchangeKamaModifiedMessage.prototype.serializeAs_ExchangeKamaModifiedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ExchangeKamaModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeKamaModifiedMessage(param1);
        };
        ExchangeKamaModifiedMessage.prototype.deserializeAs_ExchangeKamaModifiedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ExchangeKamaModifiedMessage.quantity.');
            }
        };
        ExchangeKamaModifiedMessage.ID = 5521;
        return ExchangeKamaModifiedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeKamaModifiedMessage = ExchangeKamaModifiedMessage;
    var ExchangeMultiCraftCrafterCanUseHisRessourcesMessage = (function (_super) {
        __extends(ExchangeMultiCraftCrafterCanUseHisRessourcesMessage, _super);
        function ExchangeMultiCraftCrafterCanUseHisRessourcesMessage() {
            this.allowed = false;
            _super.call(this);
        }
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.getMessageId = function () {
            return ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.ID;
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.reset = function () {
            this.allowed = false;
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMultiCraftCrafterCanUseHisRessourcesMessage(param1);
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.serializeAs_ExchangeMultiCraftCrafterCanUseHisRessourcesMessage = function (param1) {
            param1.writeBoolean(this.allowed);
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMultiCraftCrafterCanUseHisRessourcesMessage(param1);
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.prototype.deserializeAs_ExchangeMultiCraftCrafterCanUseHisRessourcesMessage = function (param1) {
            this.allowed = param1.readBoolean();
        };
        ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.ID = 6020;
        return ExchangeMultiCraftCrafterCanUseHisRessourcesMessage;
    })(NetworkMessage);
    Protocol.ExchangeMultiCraftCrafterCanUseHisRessourcesMessage = ExchangeMultiCraftCrafterCanUseHisRessourcesMessage;
    var ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage = (function (_super) {
        __extends(ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage, _super);
        function ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage() {
            this.allow = false;
            _super.call(this);
        }
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.getMessageId = function () {
            return ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.ID;
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.reset = function () {
            this.allow = false;
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage(param1);
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.serializeAs_ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage = function (param1) {
            param1.writeBoolean(this.allow);
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage(param1);
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.prototype.deserializeAs_ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage = function (param1) {
            this.allow = param1.readBoolean();
        };
        ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.ID = 6021;
        return ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage;
    })(NetworkMessage);
    Protocol.ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage = ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage;
    var ExchangeObjectModifiedInBagMessage = (function (_super) {
        __extends(ExchangeObjectModifiedInBagMessage, _super);
        function ExchangeObjectModifiedInBagMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ExchangeObjectModifiedInBagMessage.prototype.getMessageId = function () {
            return ExchangeObjectModifiedInBagMessage.ID;
        };
        ExchangeObjectModifiedInBagMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ExchangeObjectModifiedInBagMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectModifiedInBagMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectModifiedInBagMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectModifiedInBagMessage(param1);
        };
        ExchangeObjectModifiedInBagMessage.prototype.serializeAs_ExchangeObjectModifiedInBagMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            this.object.serializeAs_ObjectItem(param1);
        };
        ExchangeObjectModifiedInBagMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectModifiedInBagMessage(param1);
        };
        ExchangeObjectModifiedInBagMessage.prototype.deserializeAs_ExchangeObjectModifiedInBagMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ExchangeObjectModifiedInBagMessage.ID = 6008;
        return ExchangeObjectModifiedInBagMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectModifiedInBagMessage = ExchangeObjectModifiedInBagMessage;
    var ExchangeObjectModifiedMessage = (function (_super) {
        __extends(ExchangeObjectModifiedMessage, _super);
        function ExchangeObjectModifiedMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ExchangeObjectModifiedMessage.prototype.getMessageId = function () {
            return ExchangeObjectModifiedMessage.ID;
        };
        ExchangeObjectModifiedMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ExchangeObjectModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectModifiedMessage(param1);
        };
        ExchangeObjectModifiedMessage.prototype.serializeAs_ExchangeObjectModifiedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            this.object.serializeAs_ObjectItem(param1);
        };
        ExchangeObjectModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectModifiedMessage(param1);
        };
        ExchangeObjectModifiedMessage.prototype.deserializeAs_ExchangeObjectModifiedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ExchangeObjectModifiedMessage.ID = 5519;
        return ExchangeObjectModifiedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectModifiedMessage = ExchangeObjectModifiedMessage;
    var ExchangeObjectPutInBagMessage = (function (_super) {
        __extends(ExchangeObjectPutInBagMessage, _super);
        function ExchangeObjectPutInBagMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ExchangeObjectPutInBagMessage.prototype.getMessageId = function () {
            return ExchangeObjectPutInBagMessage.ID;
        };
        ExchangeObjectPutInBagMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ExchangeObjectPutInBagMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectPutInBagMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectPutInBagMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectPutInBagMessage(param1);
        };
        ExchangeObjectPutInBagMessage.prototype.serializeAs_ExchangeObjectPutInBagMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            this.object.serializeAs_ObjectItem(param1);
        };
        ExchangeObjectPutInBagMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectPutInBagMessage(param1);
        };
        ExchangeObjectPutInBagMessage.prototype.deserializeAs_ExchangeObjectPutInBagMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ExchangeObjectPutInBagMessage.ID = 6009;
        return ExchangeObjectPutInBagMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectPutInBagMessage = ExchangeObjectPutInBagMessage;
    var ExchangeObjectRemovedFromBagMessage = (function (_super) {
        __extends(ExchangeObjectRemovedFromBagMessage, _super);
        function ExchangeObjectRemovedFromBagMessage() {
            this.objectUID = 0;
            _super.call(this);
        }
        ExchangeObjectRemovedFromBagMessage.prototype.getMessageId = function () {
            return ExchangeObjectRemovedFromBagMessage.ID;
        };
        ExchangeObjectRemovedFromBagMessage.prototype.reset = function () {
            this.objectUID = 0;
        };
        ExchangeObjectRemovedFromBagMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectRemovedFromBagMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectRemovedFromBagMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectRemovedFromBagMessage(param1);
        };
        ExchangeObjectRemovedFromBagMessage.prototype.serializeAs_ExchangeObjectRemovedFromBagMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
        };
        ExchangeObjectRemovedFromBagMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectRemovedFromBagMessage(param1);
        };
        ExchangeObjectRemovedFromBagMessage.prototype.deserializeAs_ExchangeObjectRemovedFromBagMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ExchangeObjectRemovedFromBagMessage.objectUID.');
            }
        };
        ExchangeObjectRemovedFromBagMessage.ID = 6010;
        return ExchangeObjectRemovedFromBagMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectRemovedFromBagMessage = ExchangeObjectRemovedFromBagMessage;
    var ExchangeObjectRemovedMessage = (function (_super) {
        __extends(ExchangeObjectRemovedMessage, _super);
        function ExchangeObjectRemovedMessage() {
            this.objectUID = 0;
            _super.call(this);
        }
        ExchangeObjectRemovedMessage.prototype.getMessageId = function () {
            return ExchangeObjectRemovedMessage.ID;
        };
        ExchangeObjectRemovedMessage.prototype.reset = function () {
            this.objectUID = 0;
        };
        ExchangeObjectRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectRemovedMessage(param1);
        };
        ExchangeObjectRemovedMessage.prototype.serializeAs_ExchangeObjectRemovedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
        };
        ExchangeObjectRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectRemovedMessage(param1);
        };
        ExchangeObjectRemovedMessage.prototype.deserializeAs_ExchangeObjectRemovedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ExchangeObjectRemovedMessage.objectUID.');
            }
        };
        ExchangeObjectRemovedMessage.ID = 5517;
        return ExchangeObjectRemovedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectRemovedMessage = ExchangeObjectRemovedMessage;
    var ExchangeObjectsModifiedMessage = (function (_super) {
        __extends(ExchangeObjectsModifiedMessage, _super);
        function ExchangeObjectsModifiedMessage() {
            this.object = [];
            _super.call(this);
        }
        ExchangeObjectsModifiedMessage.prototype.getMessageId = function () {
            return ExchangeObjectsModifiedMessage.ID;
        };
        ExchangeObjectsModifiedMessage.prototype.reset = function () {
            this.object = [];
        };
        ExchangeObjectsModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectsModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectsModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectsModifiedMessage(param1);
        };
        ExchangeObjectsModifiedMessage.prototype.serializeAs_ExchangeObjectsModifiedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            param1.writeShort(this.object.length);
            var _loc2_ = 0;
            while (_loc2_ < this.object.length) {
                (this.object[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ExchangeObjectsModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectsModifiedMessage(param1);
        };
        ExchangeObjectsModifiedMessage.prototype.deserializeAs_ExchangeObjectsModifiedMessage = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.object.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeObjectsModifiedMessage.ID = 6533;
        return ExchangeObjectsModifiedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectsModifiedMessage = ExchangeObjectsModifiedMessage;
    var ExchangeObjectsRemovedMessage = (function (_super) {
        __extends(ExchangeObjectsRemovedMessage, _super);
        function ExchangeObjectsRemovedMessage() {
            this.objectUID = [];
            _super.call(this);
        }
        ExchangeObjectsRemovedMessage.prototype.getMessageId = function () {
            return ExchangeObjectsRemovedMessage.ID;
        };
        ExchangeObjectsRemovedMessage.prototype.reset = function () {
            this.objectUID = [];
        };
        ExchangeObjectsRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ExchangeObjectsRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ExchangeObjectsRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ExchangeObjectsRemovedMessage(param1);
        };
        ExchangeObjectsRemovedMessage.prototype.serializeAs_ExchangeObjectsRemovedMessage = function (param1) {
            _super.prototype.serializeAs_ExchangeObjectMessage.call(this, param1);
            param1.writeShort(this.objectUID.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectUID.length) {
                if (this.objectUID[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.objectUID[_loc2_] + ') on element 1 (starting at 1) of objectUID.');
                }
                param1.writeVarInt(this.objectUID[_loc2_]);
                _loc2_++;
            }
        };
        ExchangeObjectsRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ExchangeObjectsRemovedMessage(param1);
        };
        ExchangeObjectsRemovedMessage.prototype.deserializeAs_ExchangeObjectsRemovedMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of objectUID.');
                }
                this.objectUID.push(_loc4_);
                _loc3_++;
            }
        };
        ExchangeObjectsRemovedMessage.ID = 6532;
        return ExchangeObjectsRemovedMessage;
    })(ExchangeObjectMessage);
    Protocol.ExchangeObjectsRemovedMessage = ExchangeObjectsRemovedMessage;
    var GoldAddedMessage = (function (_super) {
        __extends(GoldAddedMessage, _super);
        function GoldAddedMessage() {
            this.gold = new GoldItem();
            _super.call(this);
        }
        GoldAddedMessage.prototype.getMessageId = function () {
            return GoldAddedMessage.ID;
        };
        GoldAddedMessage.prototype.reset = function () {
            this.gold = new GoldItem();
        };
        GoldAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GoldAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GoldAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_GoldAddedMessage(param1);
        };
        GoldAddedMessage.prototype.serializeAs_GoldAddedMessage = function (param1) {
            this.gold.serializeAs_GoldItem(param1);
        };
        GoldAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GoldAddedMessage(param1);
        };
        GoldAddedMessage.prototype.deserializeAs_GoldAddedMessage = function (param1) {
            this.gold = new GoldItem();
            this.gold.deserialize(param1);
        };
        GoldAddedMessage.ID = 6030;
        return GoldAddedMessage;
    })(NetworkMessage);
    Protocol.GoldAddedMessage = GoldAddedMessage;
    var InventoryContentAndPresetMessage = (function (_super) {
        __extends(InventoryContentAndPresetMessage, _super);
        function InventoryContentAndPresetMessage() {
            this.presets = [];
            this.idolsPresets = [];
            _super.call(this);
        }
        InventoryContentAndPresetMessage.prototype.getMessageId = function () {
            return InventoryContentAndPresetMessage.ID;
        };
        InventoryContentAndPresetMessage.prototype.reset = function () {
            this.presets = [];
            this.idolsPresets = [];
        };
        InventoryContentAndPresetMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryContentAndPresetMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryContentAndPresetMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryContentAndPresetMessage(param1);
        };
        InventoryContentAndPresetMessage.prototype.serializeAs_InventoryContentAndPresetMessage = function (param1) {
            _super.prototype.serializeAs_InventoryContentMessage.call(this, param1);
            param1.writeShort(this.presets.length);
            var _loc2_ = 0;
            while (_loc2_ < this.presets.length) {
                (this.presets[_loc2_]).serializeAs_Preset(param1);
                _loc2_++;
            }
            param1.writeShort(this.idolsPresets.length);
            var _loc3_ = 0;
            while (_loc3_ < this.idolsPresets.length) {
                (this.idolsPresets[_loc3_]).serializeAs_IdolsPreset(param1);
                _loc3_++;
            }
        };
        InventoryContentAndPresetMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryContentAndPresetMessage(param1);
        };
        InventoryContentAndPresetMessage.prototype.deserializeAs_InventoryContentAndPresetMessage = function (param1) {
            var _loc6_ = null;
            var _loc7_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new Preset();
                _loc6_.deserialize(param1);
                this.presets.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = new IdolsPreset();
                _loc7_.deserialize(param1);
                this.idolsPresets.push(_loc7_);
                _loc5_++;
            }
        };
        InventoryContentAndPresetMessage.ID = 6162;
        return InventoryContentAndPresetMessage;
    })(InventoryContentMessage);
    Protocol.InventoryContentAndPresetMessage = InventoryContentAndPresetMessage;
    var InventoryContentMessage = (function (_super) {
        __extends(InventoryContentMessage, _super);
        function InventoryContentMessage() {
            this.objects = [];
            this.kamas = 0;
            _super.call(this);
        }
        InventoryContentMessage.prototype.getMessageId = function () {
            return InventoryContentMessage.ID;
        };
        InventoryContentMessage.prototype.reset = function () {
            this.objects = [];
            this.kamas = 0;
        };
        InventoryContentMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryContentMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryContentMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryContentMessage(param1);
        };
        InventoryContentMessage.prototype.serializeAs_InventoryContentMessage = function (param1) {
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element kamas.');
            }
            param1.writeVarInt(this.kamas);
        };
        InventoryContentMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryContentMessage(param1);
        };
        InventoryContentMessage.prototype.deserializeAs_InventoryContentMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
            this.kamas = param1.readVarUhInt();
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element of InventoryContentMessage.kamas.');
            }
        };
        InventoryContentMessage.ID = 3016;
        return InventoryContentMessage;
    })(NetworkMessage);
    Protocol.InventoryContentMessage = InventoryContentMessage;
    var InventoryWeightMessage = (function (_super) {
        __extends(InventoryWeightMessage, _super);
        function InventoryWeightMessage() {
            this.weight = 0;
            this.weightMax = 0;
            _super.call(this);
        }
        InventoryWeightMessage.prototype.getMessageId = function () {
            return InventoryWeightMessage.ID;
        };
        InventoryWeightMessage.prototype.reset = function () {
            this.weight = 0;
            this.weightMax = 0;
        };
        InventoryWeightMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryWeightMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryWeightMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryWeightMessage(param1);
        };
        InventoryWeightMessage.prototype.serializeAs_InventoryWeightMessage = function (param1) {
            if (this.weight < 0) {
                throw new Error('Forbidden value (' + this.weight + ') on element weight.');
            }
            param1.writeVarInt(this.weight);
            if (this.weightMax < 0) {
                throw new Error('Forbidden value (' + this.weightMax + ') on element weightMax.');
            }
            param1.writeVarInt(this.weightMax);
        };
        InventoryWeightMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryWeightMessage(param1);
        };
        InventoryWeightMessage.prototype.deserializeAs_InventoryWeightMessage = function (param1) {
            this.weight = param1.readVarUhInt();
            if (this.weight < 0) {
                throw new Error('Forbidden value (' + this.weight + ') on element of InventoryWeightMessage.weight.');
            }
            this.weightMax = param1.readVarUhInt();
            if (this.weightMax < 0) {
                throw new Error('Forbidden value (' + this.weightMax + ') on element of InventoryWeightMessage.weightMax.');
            }
        };
        InventoryWeightMessage.ID = 3009;
        return InventoryWeightMessage;
    })(NetworkMessage);
    Protocol.InventoryWeightMessage = InventoryWeightMessage;
    var LivingObjectChangeSkinRequestMessage = (function (_super) {
        __extends(LivingObjectChangeSkinRequestMessage, _super);
        function LivingObjectChangeSkinRequestMessage() {
            this.livingUID = 0;
            this.livingPosition = 0;
            this.skinId = 0;
            _super.call(this);
        }
        LivingObjectChangeSkinRequestMessage.prototype.getMessageId = function () {
            return LivingObjectChangeSkinRequestMessage.ID;
        };
        LivingObjectChangeSkinRequestMessage.prototype.reset = function () {
            this.livingUID = 0;
            this.livingPosition = 0;
            this.skinId = 0;
        };
        LivingObjectChangeSkinRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LivingObjectChangeSkinRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LivingObjectChangeSkinRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_LivingObjectChangeSkinRequestMessage(param1);
        };
        LivingObjectChangeSkinRequestMessage.prototype.serializeAs_LivingObjectChangeSkinRequestMessage = function (param1) {
            if (this.livingUID < 0) {
                throw new Error('Forbidden value (' + this.livingUID + ') on element livingUID.');
            }
            param1.writeVarInt(this.livingUID);
            if (this.livingPosition < 0 || this.livingPosition > 255) {
                throw new Error('Forbidden value (' + this.livingPosition + ') on element livingPosition.');
            }
            param1.writeByte(this.livingPosition);
            if (this.skinId < 0) {
                throw new Error('Forbidden value (' + this.skinId + ') on element skinId.');
            }
            param1.writeVarInt(this.skinId);
        };
        LivingObjectChangeSkinRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LivingObjectChangeSkinRequestMessage(param1);
        };
        LivingObjectChangeSkinRequestMessage.prototype.deserializeAs_LivingObjectChangeSkinRequestMessage = function (param1) {
            this.livingUID = param1.readVarUhInt();
            if (this.livingUID < 0) {
                throw new Error('Forbidden value (' + this.livingUID + ') on element of LivingObjectChangeSkinRequestMessage.livingUID.');
            }
            this.livingPosition = param1.readUnsignedByte();
            if (this.livingPosition < 0 || this.livingPosition > 255) {
                throw new Error('Forbidden value (' + this.livingPosition + ') on element of LivingObjectChangeSkinRequestMessage.livingPosition.');
            }
            this.skinId = param1.readVarUhInt();
            if (this.skinId < 0) {
                throw new Error('Forbidden value (' + this.skinId + ') on element of LivingObjectChangeSkinRequestMessage.skinId.');
            }
        };
        LivingObjectChangeSkinRequestMessage.ID = 5725;
        return LivingObjectChangeSkinRequestMessage;
    })(NetworkMessage);
    Protocol.LivingObjectChangeSkinRequestMessage = LivingObjectChangeSkinRequestMessage;
    var LivingObjectDissociateMessage = (function (_super) {
        __extends(LivingObjectDissociateMessage, _super);
        function LivingObjectDissociateMessage() {
            this.livingUID = 0;
            this.livingPosition = 0;
            _super.call(this);
        }
        LivingObjectDissociateMessage.prototype.getMessageId = function () {
            return LivingObjectDissociateMessage.ID;
        };
        LivingObjectDissociateMessage.prototype.reset = function () {
            this.livingUID = 0;
            this.livingPosition = 0;
        };
        LivingObjectDissociateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LivingObjectDissociateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LivingObjectDissociateMessage.prototype.serialize = function (param1) {
            this.serializeAs_LivingObjectDissociateMessage(param1);
        };
        LivingObjectDissociateMessage.prototype.serializeAs_LivingObjectDissociateMessage = function (param1) {
            if (this.livingUID < 0) {
                throw new Error('Forbidden value (' + this.livingUID + ') on element livingUID.');
            }
            param1.writeVarInt(this.livingUID);
            if (this.livingPosition < 0 || this.livingPosition > 255) {
                throw new Error('Forbidden value (' + this.livingPosition + ') on element livingPosition.');
            }
            param1.writeByte(this.livingPosition);
        };
        LivingObjectDissociateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LivingObjectDissociateMessage(param1);
        };
        LivingObjectDissociateMessage.prototype.deserializeAs_LivingObjectDissociateMessage = function (param1) {
            this.livingUID = param1.readVarUhInt();
            if (this.livingUID < 0) {
                throw new Error('Forbidden value (' + this.livingUID + ') on element of LivingObjectDissociateMessage.livingUID.');
            }
            this.livingPosition = param1.readUnsignedByte();
            if (this.livingPosition < 0 || this.livingPosition > 255) {
                throw new Error('Forbidden value (' + this.livingPosition + ') on element of LivingObjectDissociateMessage.livingPosition.');
            }
        };
        LivingObjectDissociateMessage.ID = 5723;
        return LivingObjectDissociateMessage;
    })(NetworkMessage);
    Protocol.LivingObjectDissociateMessage = LivingObjectDissociateMessage;
    var LivingObjectMessageMessage = (function (_super) {
        __extends(LivingObjectMessageMessage, _super);
        function LivingObjectMessageMessage() {
            this.msgId = 0;
            this.timeStamp = 0;
            this.owner = '';
            this.objectGenericId = 0;
            _super.call(this);
        }
        LivingObjectMessageMessage.prototype.getMessageId = function () {
            return LivingObjectMessageMessage.ID;
        };
        LivingObjectMessageMessage.prototype.reset = function () {
            this.msgId = 0;
            this.timeStamp = 0;
            this.owner = '';
            this.objectGenericId = 0;
        };
        LivingObjectMessageMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LivingObjectMessageMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LivingObjectMessageMessage.prototype.serialize = function (param1) {
            this.serializeAs_LivingObjectMessageMessage(param1);
        };
        LivingObjectMessageMessage.prototype.serializeAs_LivingObjectMessageMessage = function (param1) {
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element msgId.');
            }
            param1.writeVarShort(this.msgId);
            if (this.timeStamp < 0) {
                throw new Error('Forbidden value (' + this.timeStamp + ') on element timeStamp.');
            }
            param1.writeInt(this.timeStamp);
            param1.writeUTF(this.owner);
            if (this.objectGenericId < 0) {
                throw new Error('Forbidden value (' + this.objectGenericId + ') on element objectGenericId.');
            }
            param1.writeVarShort(this.objectGenericId);
        };
        LivingObjectMessageMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LivingObjectMessageMessage(param1);
        };
        LivingObjectMessageMessage.prototype.deserializeAs_LivingObjectMessageMessage = function (param1) {
            this.msgId = param1.readVarUhShort();
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element of LivingObjectMessageMessage.msgId.');
            }
            this.timeStamp = param1.readInt();
            if (this.timeStamp < 0) {
                throw new Error('Forbidden value (' + this.timeStamp + ') on element of LivingObjectMessageMessage.timeStamp.');
            }
            this.owner = param1.readUTF();
            this.objectGenericId = param1.readVarUhShort();
            if (this.objectGenericId < 0) {
                throw new Error('Forbidden value (' + this.objectGenericId + ') on element of LivingObjectMessageMessage.objectGenericId.');
            }
        };
        LivingObjectMessageMessage.ID = 6065;
        return LivingObjectMessageMessage;
    })(NetworkMessage);
    Protocol.LivingObjectMessageMessage = LivingObjectMessageMessage;
    var LivingObjectMessageRequestMessage = (function (_super) {
        __extends(LivingObjectMessageRequestMessage, _super);
        function LivingObjectMessageRequestMessage() {
            this.msgId = 0;
            this.parameters = [];
            this.livingObject = 0;
            _super.call(this);
        }
        LivingObjectMessageRequestMessage.prototype.getMessageId = function () {
            return LivingObjectMessageRequestMessage.ID;
        };
        LivingObjectMessageRequestMessage.prototype.reset = function () {
            this.msgId = 0;
            this.parameters = [];
            this.livingObject = 0;
        };
        LivingObjectMessageRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LivingObjectMessageRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LivingObjectMessageRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_LivingObjectMessageRequestMessage(param1);
        };
        LivingObjectMessageRequestMessage.prototype.serializeAs_LivingObjectMessageRequestMessage = function (param1) {
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element msgId.');
            }
            param1.writeVarShort(this.msgId);
            param1.writeShort(this.parameters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parameters.length) {
                param1.writeUTF(this.parameters[_loc2_]);
                _loc2_++;
            }
            if (this.livingObject < 0) {
                throw new Error('Forbidden value (' + this.livingObject + ') on element livingObject.');
            }
            param1.writeVarInt(this.livingObject);
        };
        LivingObjectMessageRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LivingObjectMessageRequestMessage(param1);
        };
        LivingObjectMessageRequestMessage.prototype.deserializeAs_LivingObjectMessageRequestMessage = function (param1) {
            var _loc4_ = null;
            this.msgId = param1.readVarUhShort();
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element of LivingObjectMessageRequestMessage.msgId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.parameters.push(_loc4_);
                _loc3_++;
            }
            this.livingObject = param1.readVarUhInt();
            if (this.livingObject < 0) {
                throw new Error('Forbidden value (' + this.livingObject + ') on element of LivingObjectMessageRequestMessage.livingObject.');
            }
        };
        LivingObjectMessageRequestMessage.ID = 6066;
        return LivingObjectMessageRequestMessage;
    })(NetworkMessage);
    Protocol.LivingObjectMessageRequestMessage = LivingObjectMessageRequestMessage;
    var MimicryObjectAssociatedMessage = (function (_super) {
        __extends(MimicryObjectAssociatedMessage, _super);
        function MimicryObjectAssociatedMessage() {
            _super.call(this);
        }
        MimicryObjectAssociatedMessage.prototype.getMessageId = function () {
            return MimicryObjectAssociatedMessage.ID;
        };
        MimicryObjectAssociatedMessage.prototype.reset = function () {
        };
        MimicryObjectAssociatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MimicryObjectAssociatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MimicryObjectAssociatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_MimicryObjectAssociatedMessage(param1);
        };
        MimicryObjectAssociatedMessage.prototype.serializeAs_MimicryObjectAssociatedMessage = function (param1) {
            _super.prototype.serializeAs_SymbioticObjectAssociatedMessage.call(this, param1);
        };
        MimicryObjectAssociatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MimicryObjectAssociatedMessage(param1);
        };
        MimicryObjectAssociatedMessage.prototype.deserializeAs_MimicryObjectAssociatedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        MimicryObjectAssociatedMessage.ID = 6462;
        return MimicryObjectAssociatedMessage;
    })(SymbioticObjectAssociatedMessage);
    Protocol.MimicryObjectAssociatedMessage = MimicryObjectAssociatedMessage;
    var MimicryObjectEraseRequestMessage = (function (_super) {
        __extends(MimicryObjectEraseRequestMessage, _super);
        function MimicryObjectEraseRequestMessage() {
            this.hostUID = 0;
            this.hostPos = 0;
            _super.call(this);
        }
        MimicryObjectEraseRequestMessage.prototype.getMessageId = function () {
            return MimicryObjectEraseRequestMessage.ID;
        };
        MimicryObjectEraseRequestMessage.prototype.reset = function () {
            this.hostUID = 0;
            this.hostPos = 0;
        };
        MimicryObjectEraseRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MimicryObjectEraseRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MimicryObjectEraseRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MimicryObjectEraseRequestMessage(param1);
        };
        MimicryObjectEraseRequestMessage.prototype.serializeAs_MimicryObjectEraseRequestMessage = function (param1) {
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element hostUID.');
            }
            param1.writeVarInt(this.hostUID);
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element hostPos.');
            }
            param1.writeByte(this.hostPos);
        };
        MimicryObjectEraseRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MimicryObjectEraseRequestMessage(param1);
        };
        MimicryObjectEraseRequestMessage.prototype.deserializeAs_MimicryObjectEraseRequestMessage = function (param1) {
            this.hostUID = param1.readVarUhInt();
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element of MimicryObjectEraseRequestMessage.hostUID.');
            }
            this.hostPos = param1.readUnsignedByte();
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element of MimicryObjectEraseRequestMessage.hostPos.');
            }
        };
        MimicryObjectEraseRequestMessage.ID = 6457;
        return MimicryObjectEraseRequestMessage;
    })(NetworkMessage);
    Protocol.MimicryObjectEraseRequestMessage = MimicryObjectEraseRequestMessage;
    var MimicryObjectErrorMessage = (function (_super) {
        __extends(MimicryObjectErrorMessage, _super);
        function MimicryObjectErrorMessage() {
            this.preview = false;
            _super.call(this);
        }
        MimicryObjectErrorMessage.prototype.getMessageId = function () {
            return MimicryObjectErrorMessage.ID;
        };
        MimicryObjectErrorMessage.prototype.reset = function () {
            this.preview = false;
        };
        MimicryObjectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MimicryObjectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MimicryObjectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_MimicryObjectErrorMessage(param1);
        };
        MimicryObjectErrorMessage.prototype.serializeAs_MimicryObjectErrorMessage = function (param1) {
            _super.prototype.serializeAs_SymbioticObjectErrorMessage.call(this, param1);
            param1.writeBoolean(this.preview);
        };
        MimicryObjectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MimicryObjectErrorMessage(param1);
        };
        MimicryObjectErrorMessage.prototype.deserializeAs_MimicryObjectErrorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.preview = param1.readBoolean();
        };
        MimicryObjectErrorMessage.ID = 6461;
        return MimicryObjectErrorMessage;
    })(SymbioticObjectErrorMessage);
    Protocol.MimicryObjectErrorMessage = MimicryObjectErrorMessage;
    var MimicryObjectFeedAndAssociateRequestMessage = (function (_super) {
        __extends(MimicryObjectFeedAndAssociateRequestMessage, _super);
        function MimicryObjectFeedAndAssociateRequestMessage() {
            this.foodUID = 0;
            this.foodPos = 0;
            this.preview = false;
            _super.call(this);
        }
        MimicryObjectFeedAndAssociateRequestMessage.prototype.getMessageId = function () {
            return MimicryObjectFeedAndAssociateRequestMessage.ID;
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.reset = function () {
            this.foodUID = 0;
            this.foodPos = 0;
            this.preview = false;
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_MimicryObjectFeedAndAssociateRequestMessage(param1);
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.serializeAs_MimicryObjectFeedAndAssociateRequestMessage = function (param1) {
            _super.prototype.serializeAs_SymbioticObjectAssociateRequestMessage.call(this, param1);
            if (this.foodUID < 0) {
                throw new Error('Forbidden value (' + this.foodUID + ') on element foodUID.');
            }
            param1.writeVarInt(this.foodUID);
            if (this.foodPos < 0 || this.foodPos > 255) {
                throw new Error('Forbidden value (' + this.foodPos + ') on element foodPos.');
            }
            param1.writeByte(this.foodPos);
            param1.writeBoolean(this.preview);
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MimicryObjectFeedAndAssociateRequestMessage(param1);
        };
        MimicryObjectFeedAndAssociateRequestMessage.prototype.deserializeAs_MimicryObjectFeedAndAssociateRequestMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.foodUID = param1.readVarUhInt();
            if (this.foodUID < 0) {
                throw new Error('Forbidden value (' + this.foodUID + ') on element of MimicryObjectFeedAndAssociateRequestMessage.foodUID.');
            }
            this.foodPos = param1.readUnsignedByte();
            if (this.foodPos < 0 || this.foodPos > 255) {
                throw new Error('Forbidden value (' + this.foodPos + ') on element of MimicryObjectFeedAndAssociateRequestMessage.foodPos.');
            }
            this.preview = param1.readBoolean();
        };
        MimicryObjectFeedAndAssociateRequestMessage.ID = 6460;
        return MimicryObjectFeedAndAssociateRequestMessage;
    })(SymbioticObjectAssociateRequestMessage);
    Protocol.MimicryObjectFeedAndAssociateRequestMessage = MimicryObjectFeedAndAssociateRequestMessage;
    var MimicryObjectPreviewMessage = (function (_super) {
        __extends(MimicryObjectPreviewMessage, _super);
        function MimicryObjectPreviewMessage() {
            this.result = new ObjectItem();
            _super.call(this);
        }
        MimicryObjectPreviewMessage.prototype.getMessageId = function () {
            return MimicryObjectPreviewMessage.ID;
        };
        MimicryObjectPreviewMessage.prototype.reset = function () {
            this.result = new ObjectItem();
        };
        MimicryObjectPreviewMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MimicryObjectPreviewMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MimicryObjectPreviewMessage.prototype.serialize = function (param1) {
            this.serializeAs_MimicryObjectPreviewMessage(param1);
        };
        MimicryObjectPreviewMessage.prototype.serializeAs_MimicryObjectPreviewMessage = function (param1) {
            this.result.serializeAs_ObjectItem(param1);
        };
        MimicryObjectPreviewMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MimicryObjectPreviewMessage(param1);
        };
        MimicryObjectPreviewMessage.prototype.deserializeAs_MimicryObjectPreviewMessage = function (param1) {
            this.result = new ObjectItem();
            this.result.deserialize(param1);
        };
        MimicryObjectPreviewMessage.ID = 6458;
        return MimicryObjectPreviewMessage;
    })(NetworkMessage);
    Protocol.MimicryObjectPreviewMessage = MimicryObjectPreviewMessage;
    var ObjectAddedMessage = (function (_super) {
        __extends(ObjectAddedMessage, _super);
        function ObjectAddedMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ObjectAddedMessage.prototype.getMessageId = function () {
            return ObjectAddedMessage.ID;
        };
        ObjectAddedMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ObjectAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectAddedMessage(param1);
        };
        ObjectAddedMessage.prototype.serializeAs_ObjectAddedMessage = function (param1) {
            this.object.serializeAs_ObjectItem(param1);
        };
        ObjectAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectAddedMessage(param1);
        };
        ObjectAddedMessage.prototype.deserializeAs_ObjectAddedMessage = function (param1) {
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ObjectAddedMessage.ID = 3025;
        return ObjectAddedMessage;
    })(NetworkMessage);
    Protocol.ObjectAddedMessage = ObjectAddedMessage;
    var ObjectDeleteMessage = (function (_super) {
        __extends(ObjectDeleteMessage, _super);
        function ObjectDeleteMessage() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectDeleteMessage.prototype.getMessageId = function () {
            return ObjectDeleteMessage.ID;
        };
        ObjectDeleteMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectDeleteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectDeleteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectDeleteMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectDeleteMessage(param1);
        };
        ObjectDeleteMessage.prototype.serializeAs_ObjectDeleteMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectDeleteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectDeleteMessage(param1);
        };
        ObjectDeleteMessage.prototype.deserializeAs_ObjectDeleteMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectDeleteMessage.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectDeleteMessage.quantity.');
            }
        };
        ObjectDeleteMessage.ID = 3022;
        return ObjectDeleteMessage;
    })(NetworkMessage);
    Protocol.ObjectDeleteMessage = ObjectDeleteMessage;
    var ObjectDeletedMessage = (function (_super) {
        __extends(ObjectDeletedMessage, _super);
        function ObjectDeletedMessage() {
            this.objectUID = 0;
            _super.call(this);
        }
        ObjectDeletedMessage.prototype.getMessageId = function () {
            return ObjectDeletedMessage.ID;
        };
        ObjectDeletedMessage.prototype.reset = function () {
            this.objectUID = 0;
        };
        ObjectDeletedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectDeletedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectDeletedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectDeletedMessage(param1);
        };
        ObjectDeletedMessage.prototype.serializeAs_ObjectDeletedMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
        };
        ObjectDeletedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectDeletedMessage(param1);
        };
        ObjectDeletedMessage.prototype.deserializeAs_ObjectDeletedMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectDeletedMessage.objectUID.');
            }
        };
        ObjectDeletedMessage.ID = 3024;
        return ObjectDeletedMessage;
    })(NetworkMessage);
    Protocol.ObjectDeletedMessage = ObjectDeletedMessage;
    var ObjectDropMessage = (function (_super) {
        __extends(ObjectDropMessage, _super);
        function ObjectDropMessage() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectDropMessage.prototype.getMessageId = function () {
            return ObjectDropMessage.ID;
        };
        ObjectDropMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectDropMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectDropMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectDropMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectDropMessage(param1);
        };
        ObjectDropMessage.prototype.serializeAs_ObjectDropMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectDropMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectDropMessage(param1);
        };
        ObjectDropMessage.prototype.deserializeAs_ObjectDropMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectDropMessage.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectDropMessage.quantity.');
            }
        };
        ObjectDropMessage.ID = 3005;
        return ObjectDropMessage;
    })(NetworkMessage);
    Protocol.ObjectDropMessage = ObjectDropMessage;
    var ObjectErrorMessage = (function (_super) {
        __extends(ObjectErrorMessage, _super);
        function ObjectErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        ObjectErrorMessage.prototype.getMessageId = function () {
            return ObjectErrorMessage.ID;
        };
        ObjectErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        ObjectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectErrorMessage(param1);
        };
        ObjectErrorMessage.prototype.serializeAs_ObjectErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        ObjectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectErrorMessage(param1);
        };
        ObjectErrorMessage.prototype.deserializeAs_ObjectErrorMessage = function (param1) {
            this.reason = param1.readByte();
        };
        ObjectErrorMessage.ID = 3004;
        return ObjectErrorMessage;
    })(NetworkMessage);
    Protocol.ObjectErrorMessage = ObjectErrorMessage;
    var ObjectFeedMessage = (function (_super) {
        __extends(ObjectFeedMessage, _super);
        function ObjectFeedMessage() {
            this.objectUID = 0;
            this.foodUID = 0;
            this.foodQuantity = 0;
            _super.call(this);
        }
        ObjectFeedMessage.prototype.getMessageId = function () {
            return ObjectFeedMessage.ID;
        };
        ObjectFeedMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.foodUID = 0;
            this.foodQuantity = 0;
        };
        ObjectFeedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectFeedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectFeedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectFeedMessage(param1);
        };
        ObjectFeedMessage.prototype.serializeAs_ObjectFeedMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.foodUID < 0) {
                throw new Error('Forbidden value (' + this.foodUID + ') on element foodUID.');
            }
            param1.writeVarInt(this.foodUID);
            if (this.foodQuantity < 0) {
                throw new Error('Forbidden value (' + this.foodQuantity + ') on element foodQuantity.');
            }
            param1.writeVarInt(this.foodQuantity);
        };
        ObjectFeedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectFeedMessage(param1);
        };
        ObjectFeedMessage.prototype.deserializeAs_ObjectFeedMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectFeedMessage.objectUID.');
            }
            this.foodUID = param1.readVarUhInt();
            if (this.foodUID < 0) {
                throw new Error('Forbidden value (' + this.foodUID + ') on element of ObjectFeedMessage.foodUID.');
            }
            this.foodQuantity = param1.readVarUhInt();
            if (this.foodQuantity < 0) {
                throw new Error('Forbidden value (' + this.foodQuantity + ') on element of ObjectFeedMessage.foodQuantity.');
            }
        };
        ObjectFeedMessage.ID = 6290;
        return ObjectFeedMessage;
    })(NetworkMessage);
    Protocol.ObjectFeedMessage = ObjectFeedMessage;
    var ObjectFoundWhileRecoltingMessage = (function (_super) {
        __extends(ObjectFoundWhileRecoltingMessage, _super);
        function ObjectFoundWhileRecoltingMessage() {
            this.genericId = 0;
            this.quantity = 0;
            this.resourceGenericId = 0;
            _super.call(this);
        }
        ObjectFoundWhileRecoltingMessage.prototype.getMessageId = function () {
            return ObjectFoundWhileRecoltingMessage.ID;
        };
        ObjectFoundWhileRecoltingMessage.prototype.reset = function () {
            this.genericId = 0;
            this.quantity = 0;
            this.resourceGenericId = 0;
        };
        ObjectFoundWhileRecoltingMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectFoundWhileRecoltingMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectFoundWhileRecoltingMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectFoundWhileRecoltingMessage(param1);
        };
        ObjectFoundWhileRecoltingMessage.prototype.serializeAs_ObjectFoundWhileRecoltingMessage = function (param1) {
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element genericId.');
            }
            param1.writeVarShort(this.genericId);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
            if (this.resourceGenericId < 0) {
                throw new Error('Forbidden value (' + this.resourceGenericId + ') on element resourceGenericId.');
            }
            param1.writeVarInt(this.resourceGenericId);
        };
        ObjectFoundWhileRecoltingMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectFoundWhileRecoltingMessage(param1);
        };
        ObjectFoundWhileRecoltingMessage.prototype.deserializeAs_ObjectFoundWhileRecoltingMessage = function (param1) {
            this.genericId = param1.readVarUhShort();
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element of ObjectFoundWhileRecoltingMessage.genericId.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectFoundWhileRecoltingMessage.quantity.');
            }
            this.resourceGenericId = param1.readVarUhInt();
            if (this.resourceGenericId < 0) {
                throw new Error('Forbidden value (' + this.resourceGenericId + ') on element of ObjectFoundWhileRecoltingMessage.resourceGenericId.');
            }
        };
        ObjectFoundWhileRecoltingMessage.ID = 6017;
        return ObjectFoundWhileRecoltingMessage;
    })(NetworkMessage);
    Protocol.ObjectFoundWhileRecoltingMessage = ObjectFoundWhileRecoltingMessage;
    var ObjectJobAddedMessage = (function (_super) {
        __extends(ObjectJobAddedMessage, _super);
        function ObjectJobAddedMessage() {
            this.jobId = 0;
            _super.call(this);
        }
        ObjectJobAddedMessage.prototype.getMessageId = function () {
            return ObjectJobAddedMessage.ID;
        };
        ObjectJobAddedMessage.prototype.reset = function () {
            this.jobId = 0;
        };
        ObjectJobAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectJobAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectJobAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectJobAddedMessage(param1);
        };
        ObjectJobAddedMessage.prototype.serializeAs_ObjectJobAddedMessage = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
        };
        ObjectJobAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectJobAddedMessage(param1);
        };
        ObjectJobAddedMessage.prototype.deserializeAs_ObjectJobAddedMessage = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of ObjectJobAddedMessage.jobId.');
            }
        };
        ObjectJobAddedMessage.ID = 6014;
        return ObjectJobAddedMessage;
    })(NetworkMessage);
    Protocol.ObjectJobAddedMessage = ObjectJobAddedMessage;
    var ObjectModifiedMessage = (function (_super) {
        __extends(ObjectModifiedMessage, _super);
        function ObjectModifiedMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        ObjectModifiedMessage.prototype.getMessageId = function () {
            return ObjectModifiedMessage.ID;
        };
        ObjectModifiedMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        ObjectModifiedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectModifiedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectModifiedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectModifiedMessage(param1);
        };
        ObjectModifiedMessage.prototype.serializeAs_ObjectModifiedMessage = function (param1) {
            this.object.serializeAs_ObjectItem(param1);
        };
        ObjectModifiedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectModifiedMessage(param1);
        };
        ObjectModifiedMessage.prototype.deserializeAs_ObjectModifiedMessage = function (param1) {
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        ObjectModifiedMessage.ID = 3029;
        return ObjectModifiedMessage;
    })(NetworkMessage);
    Protocol.ObjectModifiedMessage = ObjectModifiedMessage;
    var ObjectMovementMessage = (function (_super) {
        __extends(ObjectMovementMessage, _super);
        function ObjectMovementMessage() {
            this.objectUID = 0;
            this.position = 63;
            _super.call(this);
        }
        ObjectMovementMessage.prototype.getMessageId = function () {
            return ObjectMovementMessage.ID;
        };
        ObjectMovementMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.position = 63;
        };
        ObjectMovementMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectMovementMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectMovementMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectMovementMessage(param1);
        };
        ObjectMovementMessage.prototype.serializeAs_ObjectMovementMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeByte(this.position);
        };
        ObjectMovementMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectMovementMessage(param1);
        };
        ObjectMovementMessage.prototype.deserializeAs_ObjectMovementMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectMovementMessage.objectUID.');
            }
            this.position = param1.readUnsignedByte();
            if (this.position < 0 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of ObjectMovementMessage.position.');
            }
        };
        ObjectMovementMessage.ID = 3010;
        return ObjectMovementMessage;
    })(NetworkMessage);
    Protocol.ObjectMovementMessage = ObjectMovementMessage;
    var ObjectQuantityMessage = (function (_super) {
        __extends(ObjectQuantityMessage, _super);
        function ObjectQuantityMessage() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectQuantityMessage.prototype.getMessageId = function () {
            return ObjectQuantityMessage.ID;
        };
        ObjectQuantityMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectQuantityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectQuantityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectQuantityMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectQuantityMessage(param1);
        };
        ObjectQuantityMessage.prototype.serializeAs_ObjectQuantityMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectQuantityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectQuantityMessage(param1);
        };
        ObjectQuantityMessage.prototype.deserializeAs_ObjectQuantityMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectQuantityMessage.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectQuantityMessage.quantity.');
            }
        };
        ObjectQuantityMessage.ID = 3023;
        return ObjectQuantityMessage;
    })(NetworkMessage);
    Protocol.ObjectQuantityMessage = ObjectQuantityMessage;
    var ObjectSetPositionMessage = (function (_super) {
        __extends(ObjectSetPositionMessage, _super);
        function ObjectSetPositionMessage() {
            this.objectUID = 0;
            this.position = 63;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectSetPositionMessage.prototype.getMessageId = function () {
            return ObjectSetPositionMessage.ID;
        };
        ObjectSetPositionMessage.prototype.reset = function () {
            this.objectUID = 0;
            this.position = 63;
            this.quantity = 0;
        };
        ObjectSetPositionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectSetPositionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectSetPositionMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectSetPositionMessage(param1);
        };
        ObjectSetPositionMessage.prototype.serializeAs_ObjectSetPositionMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeByte(this.position);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectSetPositionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectSetPositionMessage(param1);
        };
        ObjectSetPositionMessage.prototype.deserializeAs_ObjectSetPositionMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectSetPositionMessage.objectUID.');
            }
            this.position = param1.readUnsignedByte();
            if (this.position < 0 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of ObjectSetPositionMessage.position.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectSetPositionMessage.quantity.');
            }
        };
        ObjectSetPositionMessage.ID = 3021;
        return ObjectSetPositionMessage;
    })(NetworkMessage);
    Protocol.ObjectSetPositionMessage = ObjectSetPositionMessage;
    var ObjectUseMessage = (function (_super) {
        __extends(ObjectUseMessage, _super);
        function ObjectUseMessage() {
            this.objectUID = 0;
            _super.call(this);
        }
        ObjectUseMessage.prototype.getMessageId = function () {
            return ObjectUseMessage.ID;
        };
        ObjectUseMessage.prototype.reset = function () {
            this.objectUID = 0;
        };
        ObjectUseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectUseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectUseMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectUseMessage(param1);
        };
        ObjectUseMessage.prototype.serializeAs_ObjectUseMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
        };
        ObjectUseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectUseMessage(param1);
        };
        ObjectUseMessage.prototype.deserializeAs_ObjectUseMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectUseMessage.objectUID.');
            }
        };
        ObjectUseMessage.ID = 3019;
        return ObjectUseMessage;
    })(NetworkMessage);
    Protocol.ObjectUseMessage = ObjectUseMessage;
    var ObjectUseMultipleMessage = (function (_super) {
        __extends(ObjectUseMultipleMessage, _super);
        function ObjectUseMultipleMessage() {
            this.quantity = 0;
            _super.call(this);
        }
        ObjectUseMultipleMessage.prototype.getMessageId = function () {
            return ObjectUseMultipleMessage.ID;
        };
        ObjectUseMultipleMessage.prototype.reset = function () {
            this.quantity = 0;
        };
        ObjectUseMultipleMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectUseMultipleMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectUseMultipleMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectUseMultipleMessage(param1);
        };
        ObjectUseMultipleMessage.prototype.serializeAs_ObjectUseMultipleMessage = function (param1) {
            _super.prototype.serializeAs_ObjectUseMessage.call(this, param1);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectUseMultipleMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectUseMultipleMessage(param1);
        };
        ObjectUseMultipleMessage.prototype.deserializeAs_ObjectUseMultipleMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectUseMultipleMessage.quantity.');
            }
        };
        ObjectUseMultipleMessage.ID = 6234;
        return ObjectUseMultipleMessage;
    })(ObjectUseMessage);
    Protocol.ObjectUseMultipleMessage = ObjectUseMultipleMessage;
    var ObjectUseOnCellMessage = (function (_super) {
        __extends(ObjectUseOnCellMessage, _super);
        function ObjectUseOnCellMessage() {
            this.cells = 0;
            _super.call(this);
        }
        ObjectUseOnCellMessage.prototype.getMessageId = function () {
            return ObjectUseOnCellMessage.ID;
        };
        ObjectUseOnCellMessage.prototype.reset = function () {
            this.cells = 0;
        };
        ObjectUseOnCellMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectUseOnCellMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectUseOnCellMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectUseOnCellMessage(param1);
        };
        ObjectUseOnCellMessage.prototype.serializeAs_ObjectUseOnCellMessage = function (param1) {
            _super.prototype.serializeAs_ObjectUseMessage.call(this, param1);
            if (this.cells < 0 || this.cells > 559) {
                throw new Error('Forbidden value (' + this.cells + ') on element cells.');
            }
            param1.writeVarShort(this.cells);
        };
        ObjectUseOnCellMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectUseOnCellMessage(param1);
        };
        ObjectUseOnCellMessage.prototype.deserializeAs_ObjectUseOnCellMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.cells = param1.readVarUhShort();
            if (this.cells < 0 || this.cells > 559) {
                throw new Error('Forbidden value (' + this.cells + ') on element of ObjectUseOnCellMessage.cells.');
            }
        };
        ObjectUseOnCellMessage.ID = 3013;
        return ObjectUseOnCellMessage;
    })(ObjectUseMessage);
    Protocol.ObjectUseOnCellMessage = ObjectUseOnCellMessage;
    var ObjectUseOnCharacterMessage = (function (_super) {
        __extends(ObjectUseOnCharacterMessage, _super);
        function ObjectUseOnCharacterMessage() {
            this.characterId = 0;
            _super.call(this);
        }
        ObjectUseOnCharacterMessage.prototype.getMessageId = function () {
            return ObjectUseOnCharacterMessage.ID;
        };
        ObjectUseOnCharacterMessage.prototype.reset = function () {
            this.characterId = 0;
        };
        ObjectUseOnCharacterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectUseOnCharacterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectUseOnCharacterMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectUseOnCharacterMessage(param1);
        };
        ObjectUseOnCharacterMessage.prototype.serializeAs_ObjectUseOnCharacterMessage = function (param1) {
            _super.prototype.serializeAs_ObjectUseMessage.call(this, param1);
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeVarInt(this.characterId);
        };
        ObjectUseOnCharacterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectUseOnCharacterMessage(param1);
        };
        ObjectUseOnCharacterMessage.prototype.deserializeAs_ObjectUseOnCharacterMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.characterId = param1.readVarUhInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of ObjectUseOnCharacterMessage.characterId.');
            }
        };
        ObjectUseOnCharacterMessage.ID = 3003;
        return ObjectUseOnCharacterMessage;
    })(ObjectUseMessage);
    Protocol.ObjectUseOnCharacterMessage = ObjectUseOnCharacterMessage;
    var ObjectsAddedMessage = (function (_super) {
        __extends(ObjectsAddedMessage, _super);
        function ObjectsAddedMessage() {
            this.object = [];
            _super.call(this);
        }
        ObjectsAddedMessage.prototype.getMessageId = function () {
            return ObjectsAddedMessage.ID;
        };
        ObjectsAddedMessage.prototype.reset = function () {
            this.object = [];
        };
        ObjectsAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectsAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectsAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectsAddedMessage(param1);
        };
        ObjectsAddedMessage.prototype.serializeAs_ObjectsAddedMessage = function (param1) {
            param1.writeShort(this.object.length);
            var _loc2_ = 0;
            while (_loc2_ < this.object.length) {
                (this.object[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        ObjectsAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectsAddedMessage(param1);
        };
        ObjectsAddedMessage.prototype.deserializeAs_ObjectsAddedMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.object.push(_loc4_);
                _loc3_++;
            }
        };
        ObjectsAddedMessage.ID = 6033;
        return ObjectsAddedMessage;
    })(NetworkMessage);
    Protocol.ObjectsAddedMessage = ObjectsAddedMessage;
    var ObjectsDeletedMessage = (function (_super) {
        __extends(ObjectsDeletedMessage, _super);
        function ObjectsDeletedMessage() {
            this.objectUID = [];
            _super.call(this);
        }
        ObjectsDeletedMessage.prototype.getMessageId = function () {
            return ObjectsDeletedMessage.ID;
        };
        ObjectsDeletedMessage.prototype.reset = function () {
            this.objectUID = [];
        };
        ObjectsDeletedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectsDeletedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectsDeletedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectsDeletedMessage(param1);
        };
        ObjectsDeletedMessage.prototype.serializeAs_ObjectsDeletedMessage = function (param1) {
            param1.writeShort(this.objectUID.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectUID.length) {
                if (this.objectUID[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.objectUID[_loc2_] + ') on element 1 (starting at 1) of objectUID.');
                }
                param1.writeVarInt(this.objectUID[_loc2_]);
                _loc2_++;
            }
        };
        ObjectsDeletedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectsDeletedMessage(param1);
        };
        ObjectsDeletedMessage.prototype.deserializeAs_ObjectsDeletedMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of objectUID.');
                }
                this.objectUID.push(_loc4_);
                _loc3_++;
            }
        };
        ObjectsDeletedMessage.ID = 6034;
        return ObjectsDeletedMessage;
    })(NetworkMessage);
    Protocol.ObjectsDeletedMessage = ObjectsDeletedMessage;
    var ObjectsQuantityMessage = (function (_super) {
        __extends(ObjectsQuantityMessage, _super);
        function ObjectsQuantityMessage() {
            this.objectsUIDAndQty = [];
            _super.call(this);
        }
        ObjectsQuantityMessage.prototype.getMessageId = function () {
            return ObjectsQuantityMessage.ID;
        };
        ObjectsQuantityMessage.prototype.reset = function () {
            this.objectsUIDAndQty = [];
        };
        ObjectsQuantityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObjectsQuantityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObjectsQuantityMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObjectsQuantityMessage(param1);
        };
        ObjectsQuantityMessage.prototype.serializeAs_ObjectsQuantityMessage = function (param1) {
            param1.writeShort(this.objectsUIDAndQty.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectsUIDAndQty.length) {
                (this.objectsUIDAndQty[_loc2_]).serializeAs_ObjectItemQuantity(param1);
                _loc2_++;
            }
        };
        ObjectsQuantityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectsQuantityMessage(param1);
        };
        ObjectsQuantityMessage.prototype.deserializeAs_ObjectsQuantityMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemQuantity();
                _loc4_.deserialize(param1);
                this.objectsUIDAndQty.push(_loc4_);
                _loc3_++;
            }
        };
        ObjectsQuantityMessage.ID = 6206;
        return ObjectsQuantityMessage;
    })(NetworkMessage);
    Protocol.ObjectsQuantityMessage = ObjectsQuantityMessage;
    var ObtainedItemMessage = (function (_super) {
        __extends(ObtainedItemMessage, _super);
        function ObtainedItemMessage() {
            this.genericId = 0;
            this.baseQuantity = 0;
            _super.call(this);
        }
        ObtainedItemMessage.prototype.getMessageId = function () {
            return ObtainedItemMessage.ID;
        };
        ObtainedItemMessage.prototype.reset = function () {
            this.genericId = 0;
            this.baseQuantity = 0;
        };
        ObtainedItemMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObtainedItemMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObtainedItemMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObtainedItemMessage(param1);
        };
        ObtainedItemMessage.prototype.serializeAs_ObtainedItemMessage = function (param1) {
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element genericId.');
            }
            param1.writeVarShort(this.genericId);
            if (this.baseQuantity < 0) {
                throw new Error('Forbidden value (' + this.baseQuantity + ') on element baseQuantity.');
            }
            param1.writeVarInt(this.baseQuantity);
        };
        ObtainedItemMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObtainedItemMessage(param1);
        };
        ObtainedItemMessage.prototype.deserializeAs_ObtainedItemMessage = function (param1) {
            this.genericId = param1.readVarUhShort();
            if (this.genericId < 0) {
                throw new Error('Forbidden value (' + this.genericId + ') on element of ObtainedItemMessage.genericId.');
            }
            this.baseQuantity = param1.readVarUhInt();
            if (this.baseQuantity < 0) {
                throw new Error('Forbidden value (' + this.baseQuantity + ') on element of ObtainedItemMessage.baseQuantity.');
            }
        };
        ObtainedItemMessage.ID = 6519;
        return ObtainedItemMessage;
    })(NetworkMessage);
    Protocol.ObtainedItemMessage = ObtainedItemMessage;
    var ObtainedItemWithBonusMessage = (function (_super) {
        __extends(ObtainedItemWithBonusMessage, _super);
        function ObtainedItemWithBonusMessage() {
            this.bonusQuantity = 0;
            _super.call(this);
        }
        ObtainedItemWithBonusMessage.prototype.getMessageId = function () {
            return ObtainedItemWithBonusMessage.ID;
        };
        ObtainedItemWithBonusMessage.prototype.reset = function () {
            this.bonusQuantity = 0;
        };
        ObtainedItemWithBonusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ObtainedItemWithBonusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ObtainedItemWithBonusMessage.prototype.serialize = function (param1) {
            this.serializeAs_ObtainedItemWithBonusMessage(param1);
        };
        ObtainedItemWithBonusMessage.prototype.serializeAs_ObtainedItemWithBonusMessage = function (param1) {
            _super.prototype.serializeAs_ObtainedItemMessage.call(this, param1);
            if (this.bonusQuantity < 0) {
                throw new Error('Forbidden value (' + this.bonusQuantity + ') on element bonusQuantity.');
            }
            param1.writeVarInt(this.bonusQuantity);
        };
        ObtainedItemWithBonusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ObtainedItemWithBonusMessage(param1);
        };
        ObtainedItemWithBonusMessage.prototype.deserializeAs_ObtainedItemWithBonusMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.bonusQuantity = param1.readVarUhInt();
            if (this.bonusQuantity < 0) {
                throw new Error('Forbidden value (' + this.bonusQuantity + ') on element of ObtainedItemWithBonusMessage.bonusQuantity.');
            }
        };
        ObtainedItemWithBonusMessage.ID = 6520;
        return ObtainedItemWithBonusMessage;
    })(ObtainedItemMessage);
    Protocol.ObtainedItemWithBonusMessage = ObtainedItemWithBonusMessage;
    var SetUpdateMessage = (function (_super) {
        __extends(SetUpdateMessage, _super);
        function SetUpdateMessage() {
            this.setId = 0;
            this.setObjects = [];
            this.setEffects = [];
            _super.call(this);
        }
        SetUpdateMessage.prototype.getMessageId = function () {
            return SetUpdateMessage.ID;
        };
        SetUpdateMessage.prototype.reset = function () {
            this.setId = 0;
            this.setObjects = [];
            this.setEffects = [];
        };
        SetUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SetUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SetUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_SetUpdateMessage(param1);
        };
        SetUpdateMessage.prototype.serializeAs_SetUpdateMessage = function (param1) {
            if (this.setId < 0) {
                throw new Error('Forbidden value (' + this.setId + ') on element setId.');
            }
            param1.writeVarShort(this.setId);
            param1.writeShort(this.setObjects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.setObjects.length) {
                if (this.setObjects[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.setObjects[_loc2_] + ') on element 2 (starting at 1) of setObjects.');
                }
                param1.writeVarShort(this.setObjects[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.setEffects.length);
            var _loc3_ = 0;
            while (_loc3_ < this.setEffects.length) {
                param1.writeShort((this.setEffects[_loc3_]).getTypeId());
                (this.setEffects[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        SetUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SetUpdateMessage(param1);
        };
        SetUpdateMessage.prototype.deserializeAs_SetUpdateMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc8_ = null;
            this.setId = param1.readVarUhShort();
            if (this.setId < 0) {
                throw new Error('Forbidden value (' + this.setId + ') on element of SetUpdateMessage.setId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of setObjects.');
                }
                this.setObjects.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readUnsignedShort();
                _loc8_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc7_);
                _loc8_.deserialize(param1);
                this.setEffects.push(_loc8_);
                _loc5_++;
            }
        };
        SetUpdateMessage.ID = 5503;
        return SetUpdateMessage;
    })(NetworkMessage);
    Protocol.SetUpdateMessage = SetUpdateMessage;
    var SymbioticObjectAssociateRequestMessage = (function (_super) {
        __extends(SymbioticObjectAssociateRequestMessage, _super);
        function SymbioticObjectAssociateRequestMessage() {
            this.symbioteUID = 0;
            this.symbiotePos = 0;
            this.hostUID = 0;
            this.hostPos = 0;
            _super.call(this);
        }
        SymbioticObjectAssociateRequestMessage.prototype.getMessageId = function () {
            return SymbioticObjectAssociateRequestMessage.ID;
        };
        SymbioticObjectAssociateRequestMessage.prototype.reset = function () {
            this.symbioteUID = 0;
            this.symbiotePos = 0;
            this.hostUID = 0;
            this.hostPos = 0;
        };
        SymbioticObjectAssociateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SymbioticObjectAssociateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SymbioticObjectAssociateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_SymbioticObjectAssociateRequestMessage(param1);
        };
        SymbioticObjectAssociateRequestMessage.prototype.serializeAs_SymbioticObjectAssociateRequestMessage = function (param1) {
            if (this.symbioteUID < 0) {
                throw new Error('Forbidden value (' + this.symbioteUID + ') on element symbioteUID.');
            }
            param1.writeVarInt(this.symbioteUID);
            if (this.symbiotePos < 0 || this.symbiotePos > 255) {
                throw new Error('Forbidden value (' + this.symbiotePos + ') on element symbiotePos.');
            }
            param1.writeByte(this.symbiotePos);
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element hostUID.');
            }
            param1.writeVarInt(this.hostUID);
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element hostPos.');
            }
            param1.writeByte(this.hostPos);
        };
        SymbioticObjectAssociateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SymbioticObjectAssociateRequestMessage(param1);
        };
        SymbioticObjectAssociateRequestMessage.prototype.deserializeAs_SymbioticObjectAssociateRequestMessage = function (param1) {
            this.symbioteUID = param1.readVarUhInt();
            if (this.symbioteUID < 0) {
                throw new Error('Forbidden value (' + this.symbioteUID + ') on element of SymbioticObjectAssociateRequestMessage.symbioteUID.');
            }
            this.symbiotePos = param1.readUnsignedByte();
            if (this.symbiotePos < 0 || this.symbiotePos > 255) {
                throw new Error('Forbidden value (' + this.symbiotePos + ') on element of SymbioticObjectAssociateRequestMessage.symbiotePos.');
            }
            this.hostUID = param1.readVarUhInt();
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element of SymbioticObjectAssociateRequestMessage.hostUID.');
            }
            this.hostPos = param1.readUnsignedByte();
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element of SymbioticObjectAssociateRequestMessage.hostPos.');
            }
        };
        SymbioticObjectAssociateRequestMessage.ID = 6522;
        return SymbioticObjectAssociateRequestMessage;
    })(NetworkMessage);
    Protocol.SymbioticObjectAssociateRequestMessage = SymbioticObjectAssociateRequestMessage;
    var SymbioticObjectAssociatedMessage = (function (_super) {
        __extends(SymbioticObjectAssociatedMessage, _super);
        function SymbioticObjectAssociatedMessage() {
            this.hostUID = 0;
            _super.call(this);
        }
        SymbioticObjectAssociatedMessage.prototype.getMessageId = function () {
            return SymbioticObjectAssociatedMessage.ID;
        };
        SymbioticObjectAssociatedMessage.prototype.reset = function () {
            this.hostUID = 0;
        };
        SymbioticObjectAssociatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SymbioticObjectAssociatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SymbioticObjectAssociatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_SymbioticObjectAssociatedMessage(param1);
        };
        SymbioticObjectAssociatedMessage.prototype.serializeAs_SymbioticObjectAssociatedMessage = function (param1) {
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element hostUID.');
            }
            param1.writeVarInt(this.hostUID);
        };
        SymbioticObjectAssociatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SymbioticObjectAssociatedMessage(param1);
        };
        SymbioticObjectAssociatedMessage.prototype.deserializeAs_SymbioticObjectAssociatedMessage = function (param1) {
            this.hostUID = param1.readVarUhInt();
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element of SymbioticObjectAssociatedMessage.hostUID.');
            }
        };
        SymbioticObjectAssociatedMessage.ID = 6527;
        return SymbioticObjectAssociatedMessage;
    })(NetworkMessage);
    Protocol.SymbioticObjectAssociatedMessage = SymbioticObjectAssociatedMessage;
    var SymbioticObjectErrorMessage = (function (_super) {
        __extends(SymbioticObjectErrorMessage, _super);
        function SymbioticObjectErrorMessage() {
            this.errorCode = 0;
            _super.call(this);
        }
        SymbioticObjectErrorMessage.prototype.getMessageId = function () {
            return SymbioticObjectErrorMessage.ID;
        };
        SymbioticObjectErrorMessage.prototype.reset = function () {
            this.errorCode = 0;
        };
        SymbioticObjectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SymbioticObjectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SymbioticObjectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_SymbioticObjectErrorMessage(param1);
        };
        SymbioticObjectErrorMessage.prototype.serializeAs_SymbioticObjectErrorMessage = function (param1) {
            _super.prototype.serializeAs_ObjectErrorMessage.call(this, param1);
            param1.writeByte(this.errorCode);
        };
        SymbioticObjectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SymbioticObjectErrorMessage(param1);
        };
        SymbioticObjectErrorMessage.prototype.deserializeAs_SymbioticObjectErrorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.errorCode = param1.readByte();
        };
        SymbioticObjectErrorMessage.ID = 6526;
        return SymbioticObjectErrorMessage;
    })(ObjectErrorMessage);
    Protocol.SymbioticObjectErrorMessage = SymbioticObjectErrorMessage;
    var WrapperObjectAssociatedMessage = (function (_super) {
        __extends(WrapperObjectAssociatedMessage, _super);
        function WrapperObjectAssociatedMessage() {
            _super.call(this);
        }
        WrapperObjectAssociatedMessage.prototype.getMessageId = function () {
            return WrapperObjectAssociatedMessage.ID;
        };
        WrapperObjectAssociatedMessage.prototype.reset = function () {
        };
        WrapperObjectAssociatedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        WrapperObjectAssociatedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        WrapperObjectAssociatedMessage.prototype.serialize = function (param1) {
            this.serializeAs_WrapperObjectAssociatedMessage(param1);
        };
        WrapperObjectAssociatedMessage.prototype.serializeAs_WrapperObjectAssociatedMessage = function (param1) {
            _super.prototype.serializeAs_SymbioticObjectAssociatedMessage.call(this, param1);
        };
        WrapperObjectAssociatedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_WrapperObjectAssociatedMessage(param1);
        };
        WrapperObjectAssociatedMessage.prototype.deserializeAs_WrapperObjectAssociatedMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        WrapperObjectAssociatedMessage.ID = 6523;
        return WrapperObjectAssociatedMessage;
    })(SymbioticObjectAssociatedMessage);
    Protocol.WrapperObjectAssociatedMessage = WrapperObjectAssociatedMessage;
    var WrapperObjectDissociateRequestMessage = (function (_super) {
        __extends(WrapperObjectDissociateRequestMessage, _super);
        function WrapperObjectDissociateRequestMessage() {
            this.hostUID = 0;
            this.hostPos = 0;
            _super.call(this);
        }
        WrapperObjectDissociateRequestMessage.prototype.getMessageId = function () {
            return WrapperObjectDissociateRequestMessage.ID;
        };
        WrapperObjectDissociateRequestMessage.prototype.reset = function () {
            this.hostUID = 0;
            this.hostPos = 0;
        };
        WrapperObjectDissociateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        WrapperObjectDissociateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        WrapperObjectDissociateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_WrapperObjectDissociateRequestMessage(param1);
        };
        WrapperObjectDissociateRequestMessage.prototype.serializeAs_WrapperObjectDissociateRequestMessage = function (param1) {
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element hostUID.');
            }
            param1.writeVarInt(this.hostUID);
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element hostPos.');
            }
            param1.writeByte(this.hostPos);
        };
        WrapperObjectDissociateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_WrapperObjectDissociateRequestMessage(param1);
        };
        WrapperObjectDissociateRequestMessage.prototype.deserializeAs_WrapperObjectDissociateRequestMessage = function (param1) {
            this.hostUID = param1.readVarUhInt();
            if (this.hostUID < 0) {
                throw new Error('Forbidden value (' + this.hostUID + ') on element of WrapperObjectDissociateRequestMessage.hostUID.');
            }
            this.hostPos = param1.readUnsignedByte();
            if (this.hostPos < 0 || this.hostPos > 255) {
                throw new Error('Forbidden value (' + this.hostPos + ') on element of WrapperObjectDissociateRequestMessage.hostPos.');
            }
        };
        WrapperObjectDissociateRequestMessage.ID = 6524;
        return WrapperObjectDissociateRequestMessage;
    })(NetworkMessage);
    Protocol.WrapperObjectDissociateRequestMessage = WrapperObjectDissociateRequestMessage;
    var WrapperObjectErrorMessage = (function (_super) {
        __extends(WrapperObjectErrorMessage, _super);
        function WrapperObjectErrorMessage() {
            _super.call(this);
        }
        WrapperObjectErrorMessage.prototype.getMessageId = function () {
            return WrapperObjectErrorMessage.ID;
        };
        WrapperObjectErrorMessage.prototype.reset = function () {
        };
        WrapperObjectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        WrapperObjectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        WrapperObjectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_WrapperObjectErrorMessage(param1);
        };
        WrapperObjectErrorMessage.prototype.serializeAs_WrapperObjectErrorMessage = function (param1) {
            _super.prototype.serializeAs_SymbioticObjectErrorMessage.call(this, param1);
        };
        WrapperObjectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_WrapperObjectErrorMessage(param1);
        };
        WrapperObjectErrorMessage.prototype.deserializeAs_WrapperObjectErrorMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        WrapperObjectErrorMessage.ID = 6529;
        return WrapperObjectErrorMessage;
    })(SymbioticObjectErrorMessage);
    Protocol.WrapperObjectErrorMessage = WrapperObjectErrorMessage;
    var IdolsPresetDeleteMessage = (function (_super) {
        __extends(IdolsPresetDeleteMessage, _super);
        function IdolsPresetDeleteMessage() {
            this.presetId = 0;
            _super.call(this);
        }
        IdolsPresetDeleteMessage.prototype.getMessageId = function () {
            return IdolsPresetDeleteMessage.ID;
        };
        IdolsPresetDeleteMessage.prototype.reset = function () {
            this.presetId = 0;
        };
        IdolsPresetDeleteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolsPresetDeleteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolsPresetDeleteMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPresetDeleteMessage(param1);
        };
        IdolsPresetDeleteMessage.prototype.serializeAs_IdolsPresetDeleteMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
        };
        IdolsPresetDeleteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPresetDeleteMessage(param1);
        };
        IdolsPresetDeleteMessage.prototype.deserializeAs_IdolsPresetDeleteMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of IdolsPresetDeleteMessage.presetId.');
            }
        };
        IdolsPresetDeleteMessage.ID = 6602;
        return IdolsPresetDeleteMessage;
    })(NetworkMessage);
    Protocol.IdolsPresetDeleteMessage = IdolsPresetDeleteMessage;
    var IdolsPresetDeleteResultMessage = (function (_super) {
        __extends(IdolsPresetDeleteResultMessage, _super);
        function IdolsPresetDeleteResultMessage() {
            this.presetId = 0;
            this.code = 2;
            _super.call(this);
        }
        IdolsPresetDeleteResultMessage.prototype.getMessageId = function () {
            return IdolsPresetDeleteResultMessage.ID;
        };
        IdolsPresetDeleteResultMessage.prototype.reset = function () {
            this.presetId = 0;
            this.code = 2;
        };
        IdolsPresetDeleteResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolsPresetDeleteResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolsPresetDeleteResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPresetDeleteResultMessage(param1);
        };
        IdolsPresetDeleteResultMessage.prototype.serializeAs_IdolsPresetDeleteResultMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.code);
        };
        IdolsPresetDeleteResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPresetDeleteResultMessage(param1);
        };
        IdolsPresetDeleteResultMessage.prototype.deserializeAs_IdolsPresetDeleteResultMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of IdolsPresetDeleteResultMessage.presetId.');
            }
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of IdolsPresetDeleteResultMessage.code.');
            }
        };
        IdolsPresetDeleteResultMessage.ID = 6605;
        return IdolsPresetDeleteResultMessage;
    })(NetworkMessage);
    Protocol.IdolsPresetDeleteResultMessage = IdolsPresetDeleteResultMessage;
    var IdolsPresetSaveMessage = (function (_super) {
        __extends(IdolsPresetSaveMessage, _super);
        function IdolsPresetSaveMessage() {
            this.presetId = 0;
            this.symbolId = 0;
            _super.call(this);
        }
        IdolsPresetSaveMessage.prototype.getMessageId = function () {
            return IdolsPresetSaveMessage.ID;
        };
        IdolsPresetSaveMessage.prototype.reset = function () {
            this.presetId = 0;
            this.symbolId = 0;
        };
        IdolsPresetSaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolsPresetSaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolsPresetSaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPresetSaveMessage(param1);
        };
        IdolsPresetSaveMessage.prototype.serializeAs_IdolsPresetSaveMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element symbolId.');
            }
            param1.writeByte(this.symbolId);
        };
        IdolsPresetSaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPresetSaveMessage(param1);
        };
        IdolsPresetSaveMessage.prototype.deserializeAs_IdolsPresetSaveMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of IdolsPresetSaveMessage.presetId.');
            }
            this.symbolId = param1.readByte();
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element of IdolsPresetSaveMessage.symbolId.');
            }
        };
        IdolsPresetSaveMessage.ID = 6603;
        return IdolsPresetSaveMessage;
    })(NetworkMessage);
    Protocol.IdolsPresetSaveMessage = IdolsPresetSaveMessage;
    var IdolsPresetSaveResultMessage = (function (_super) {
        __extends(IdolsPresetSaveResultMessage, _super);
        function IdolsPresetSaveResultMessage() {
            this.presetId = 0;
            this.code = 2;
            _super.call(this);
        }
        IdolsPresetSaveResultMessage.prototype.getMessageId = function () {
            return IdolsPresetSaveResultMessage.ID;
        };
        IdolsPresetSaveResultMessage.prototype.reset = function () {
            this.presetId = 0;
            this.code = 2;
        };
        IdolsPresetSaveResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolsPresetSaveResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolsPresetSaveResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPresetSaveResultMessage(param1);
        };
        IdolsPresetSaveResultMessage.prototype.serializeAs_IdolsPresetSaveResultMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.code);
        };
        IdolsPresetSaveResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPresetSaveResultMessage(param1);
        };
        IdolsPresetSaveResultMessage.prototype.deserializeAs_IdolsPresetSaveResultMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of IdolsPresetSaveResultMessage.presetId.');
            }
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of IdolsPresetSaveResultMessage.code.');
            }
        };
        IdolsPresetSaveResultMessage.ID = 6604;
        return IdolsPresetSaveResultMessage;
    })(NetworkMessage);
    Protocol.IdolsPresetSaveResultMessage = IdolsPresetSaveResultMessage;
    var IdolsPresetUpdateMessage = (function (_super) {
        __extends(IdolsPresetUpdateMessage, _super);
        function IdolsPresetUpdateMessage() {
            this.idolsPreset = new IdolsPreset();
            _super.call(this);
        }
        IdolsPresetUpdateMessage.prototype.getMessageId = function () {
            return IdolsPresetUpdateMessage.ID;
        };
        IdolsPresetUpdateMessage.prototype.reset = function () {
            this.idolsPreset = new IdolsPreset();
        };
        IdolsPresetUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        IdolsPresetUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        IdolsPresetUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPresetUpdateMessage(param1);
        };
        IdolsPresetUpdateMessage.prototype.serializeAs_IdolsPresetUpdateMessage = function (param1) {
            this.idolsPreset.serializeAs_IdolsPreset(param1);
        };
        IdolsPresetUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPresetUpdateMessage(param1);
        };
        IdolsPresetUpdateMessage.prototype.deserializeAs_IdolsPresetUpdateMessage = function (param1) {
            this.idolsPreset = new IdolsPreset();
            this.idolsPreset.deserialize(param1);
        };
        IdolsPresetUpdateMessage.ID = 6606;
        return IdolsPresetUpdateMessage;
    })(NetworkMessage);
    Protocol.IdolsPresetUpdateMessage = IdolsPresetUpdateMessage;
    var InventoryPresetDeleteMessage = (function (_super) {
        __extends(InventoryPresetDeleteMessage, _super);
        function InventoryPresetDeleteMessage() {
            this.presetId = 0;
            _super.call(this);
        }
        InventoryPresetDeleteMessage.prototype.getMessageId = function () {
            return InventoryPresetDeleteMessage.ID;
        };
        InventoryPresetDeleteMessage.prototype.reset = function () {
            this.presetId = 0;
        };
        InventoryPresetDeleteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetDeleteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetDeleteMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetDeleteMessage(param1);
        };
        InventoryPresetDeleteMessage.prototype.serializeAs_InventoryPresetDeleteMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
        };
        InventoryPresetDeleteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetDeleteMessage(param1);
        };
        InventoryPresetDeleteMessage.prototype.deserializeAs_InventoryPresetDeleteMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetDeleteMessage.presetId.');
            }
        };
        InventoryPresetDeleteMessage.ID = 6169;
        return InventoryPresetDeleteMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetDeleteMessage = InventoryPresetDeleteMessage;
    var InventoryPresetDeleteResultMessage = (function (_super) {
        __extends(InventoryPresetDeleteResultMessage, _super);
        function InventoryPresetDeleteResultMessage() {
            this.presetId = 0;
            this.code = 2;
            _super.call(this);
        }
        InventoryPresetDeleteResultMessage.prototype.getMessageId = function () {
            return InventoryPresetDeleteResultMessage.ID;
        };
        InventoryPresetDeleteResultMessage.prototype.reset = function () {
            this.presetId = 0;
            this.code = 2;
        };
        InventoryPresetDeleteResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetDeleteResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetDeleteResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetDeleteResultMessage(param1);
        };
        InventoryPresetDeleteResultMessage.prototype.serializeAs_InventoryPresetDeleteResultMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.code);
        };
        InventoryPresetDeleteResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetDeleteResultMessage(param1);
        };
        InventoryPresetDeleteResultMessage.prototype.deserializeAs_InventoryPresetDeleteResultMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetDeleteResultMessage.presetId.');
            }
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of InventoryPresetDeleteResultMessage.code.');
            }
        };
        InventoryPresetDeleteResultMessage.ID = 6173;
        return InventoryPresetDeleteResultMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetDeleteResultMessage = InventoryPresetDeleteResultMessage;
    var InventoryPresetItemUpdateErrorMessage = (function (_super) {
        __extends(InventoryPresetItemUpdateErrorMessage, _super);
        function InventoryPresetItemUpdateErrorMessage() {
            this.code = 1;
            _super.call(this);
        }
        InventoryPresetItemUpdateErrorMessage.prototype.getMessageId = function () {
            return InventoryPresetItemUpdateErrorMessage.ID;
        };
        InventoryPresetItemUpdateErrorMessage.prototype.reset = function () {
            this.code = 1;
        };
        InventoryPresetItemUpdateErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetItemUpdateErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetItemUpdateErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetItemUpdateErrorMessage(param1);
        };
        InventoryPresetItemUpdateErrorMessage.prototype.serializeAs_InventoryPresetItemUpdateErrorMessage = function (param1) {
            param1.writeByte(this.code);
        };
        InventoryPresetItemUpdateErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetItemUpdateErrorMessage(param1);
        };
        InventoryPresetItemUpdateErrorMessage.prototype.deserializeAs_InventoryPresetItemUpdateErrorMessage = function (param1) {
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of InventoryPresetItemUpdateErrorMessage.code.');
            }
        };
        InventoryPresetItemUpdateErrorMessage.ID = 6211;
        return InventoryPresetItemUpdateErrorMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetItemUpdateErrorMessage = InventoryPresetItemUpdateErrorMessage;
    var InventoryPresetItemUpdateMessage = (function (_super) {
        __extends(InventoryPresetItemUpdateMessage, _super);
        function InventoryPresetItemUpdateMessage() {
            this.presetId = 0;
            this.presetItem = new PresetItem();
            _super.call(this);
        }
        InventoryPresetItemUpdateMessage.prototype.getMessageId = function () {
            return InventoryPresetItemUpdateMessage.ID;
        };
        InventoryPresetItemUpdateMessage.prototype.reset = function () {
            this.presetId = 0;
            this.presetItem = new PresetItem();
        };
        InventoryPresetItemUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetItemUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetItemUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetItemUpdateMessage(param1);
        };
        InventoryPresetItemUpdateMessage.prototype.serializeAs_InventoryPresetItemUpdateMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            this.presetItem.serializeAs_PresetItem(param1);
        };
        InventoryPresetItemUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetItemUpdateMessage(param1);
        };
        InventoryPresetItemUpdateMessage.prototype.deserializeAs_InventoryPresetItemUpdateMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetItemUpdateMessage.presetId.');
            }
            this.presetItem = new PresetItem();
            this.presetItem.deserialize(param1);
        };
        InventoryPresetItemUpdateMessage.ID = 6168;
        return InventoryPresetItemUpdateMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetItemUpdateMessage = InventoryPresetItemUpdateMessage;
    var InventoryPresetItemUpdateRequestMessage = (function (_super) {
        __extends(InventoryPresetItemUpdateRequestMessage, _super);
        function InventoryPresetItemUpdateRequestMessage() {
            this.presetId = 0;
            this.position = 63;
            this.objUid = 0;
            _super.call(this);
        }
        InventoryPresetItemUpdateRequestMessage.prototype.getMessageId = function () {
            return InventoryPresetItemUpdateRequestMessage.ID;
        };
        InventoryPresetItemUpdateRequestMessage.prototype.reset = function () {
            this.presetId = 0;
            this.position = 63;
            this.objUid = 0;
        };
        InventoryPresetItemUpdateRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetItemUpdateRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetItemUpdateRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetItemUpdateRequestMessage(param1);
        };
        InventoryPresetItemUpdateRequestMessage.prototype.serializeAs_InventoryPresetItemUpdateRequestMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.position);
            if (this.objUid < 0) {
                throw new Error('Forbidden value (' + this.objUid + ') on element objUid.');
            }
            param1.writeVarInt(this.objUid);
        };
        InventoryPresetItemUpdateRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetItemUpdateRequestMessage(param1);
        };
        InventoryPresetItemUpdateRequestMessage.prototype.deserializeAs_InventoryPresetItemUpdateRequestMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetItemUpdateRequestMessage.presetId.');
            }
            this.position = param1.readUnsignedByte();
            if (this.position < 0 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of InventoryPresetItemUpdateRequestMessage.position.');
            }
            this.objUid = param1.readVarUhInt();
            if (this.objUid < 0) {
                throw new Error('Forbidden value (' + this.objUid + ') on element of InventoryPresetItemUpdateRequestMessage.objUid.');
            }
        };
        InventoryPresetItemUpdateRequestMessage.ID = 6210;
        return InventoryPresetItemUpdateRequestMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetItemUpdateRequestMessage = InventoryPresetItemUpdateRequestMessage;
    var InventoryPresetSaveCustomMessage = (function (_super) {
        __extends(InventoryPresetSaveCustomMessage, _super);
        function InventoryPresetSaveCustomMessage() {
            this.presetId = 0;
            this.symbolId = 0;
            this.itemsPositions = [];
            this.itemsUids = [];
            _super.call(this);
        }
        InventoryPresetSaveCustomMessage.prototype.getMessageId = function () {
            return InventoryPresetSaveCustomMessage.ID;
        };
        InventoryPresetSaveCustomMessage.prototype.reset = function () {
            this.presetId = 0;
            this.symbolId = 0;
            this.itemsPositions = [];
            this.itemsUids = [];
        };
        InventoryPresetSaveCustomMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetSaveCustomMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetSaveCustomMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetSaveCustomMessage(param1);
        };
        InventoryPresetSaveCustomMessage.prototype.serializeAs_InventoryPresetSaveCustomMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element symbolId.');
            }
            param1.writeByte(this.symbolId);
            param1.writeShort(this.itemsPositions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.itemsPositions.length) {
                param1.writeByte(this.itemsPositions[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.itemsUids.length);
            var _loc3_ = 0;
            while (_loc3_ < this.itemsUids.length) {
                if (this.itemsUids[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.itemsUids[_loc3_] + ') on element 4 (starting at 1) of itemsUids.');
                }
                param1.writeVarInt(this.itemsUids[_loc3_]);
                _loc3_++;
            }
        };
        InventoryPresetSaveCustomMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetSaveCustomMessage(param1);
        };
        InventoryPresetSaveCustomMessage.prototype.deserializeAs_InventoryPresetSaveCustomMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetSaveCustomMessage.presetId.');
            }
            this.symbolId = param1.readByte();
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element of InventoryPresetSaveCustomMessage.symbolId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedByte();
                if (_loc6_ < 0 || _loc6_ > 255) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of itemsPositions.');
                }
                this.itemsPositions.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of itemsUids.');
                }
                this.itemsUids.push(_loc7_);
                _loc5_++;
            }
        };
        InventoryPresetSaveCustomMessage.ID = 6329;
        return InventoryPresetSaveCustomMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetSaveCustomMessage = InventoryPresetSaveCustomMessage;
    var InventoryPresetSaveMessage = (function (_super) {
        __extends(InventoryPresetSaveMessage, _super);
        function InventoryPresetSaveMessage() {
            this.presetId = 0;
            this.symbolId = 0;
            this.saveEquipment = false;
            _super.call(this);
        }
        InventoryPresetSaveMessage.prototype.getMessageId = function () {
            return InventoryPresetSaveMessage.ID;
        };
        InventoryPresetSaveMessage.prototype.reset = function () {
            this.presetId = 0;
            this.symbolId = 0;
            this.saveEquipment = false;
        };
        InventoryPresetSaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetSaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetSaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetSaveMessage(param1);
        };
        InventoryPresetSaveMessage.prototype.serializeAs_InventoryPresetSaveMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element symbolId.');
            }
            param1.writeByte(this.symbolId);
            param1.writeBoolean(this.saveEquipment);
        };
        InventoryPresetSaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetSaveMessage(param1);
        };
        InventoryPresetSaveMessage.prototype.deserializeAs_InventoryPresetSaveMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetSaveMessage.presetId.');
            }
            this.symbolId = param1.readByte();
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element of InventoryPresetSaveMessage.symbolId.');
            }
            this.saveEquipment = param1.readBoolean();
        };
        InventoryPresetSaveMessage.ID = 6165;
        return InventoryPresetSaveMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetSaveMessage = InventoryPresetSaveMessage;
    var InventoryPresetSaveResultMessage = (function (_super) {
        __extends(InventoryPresetSaveResultMessage, _super);
        function InventoryPresetSaveResultMessage() {
            this.presetId = 0;
            this.code = 2;
            _super.call(this);
        }
        InventoryPresetSaveResultMessage.prototype.getMessageId = function () {
            return InventoryPresetSaveResultMessage.ID;
        };
        InventoryPresetSaveResultMessage.prototype.reset = function () {
            this.presetId = 0;
            this.code = 2;
        };
        InventoryPresetSaveResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetSaveResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetSaveResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetSaveResultMessage(param1);
        };
        InventoryPresetSaveResultMessage.prototype.serializeAs_InventoryPresetSaveResultMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.code);
        };
        InventoryPresetSaveResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetSaveResultMessage(param1);
        };
        InventoryPresetSaveResultMessage.prototype.deserializeAs_InventoryPresetSaveResultMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetSaveResultMessage.presetId.');
            }
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of InventoryPresetSaveResultMessage.code.');
            }
        };
        InventoryPresetSaveResultMessage.ID = 6170;
        return InventoryPresetSaveResultMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetSaveResultMessage = InventoryPresetSaveResultMessage;
    var InventoryPresetUpdateMessage = (function (_super) {
        __extends(InventoryPresetUpdateMessage, _super);
        function InventoryPresetUpdateMessage() {
            this.preset = new Preset();
            _super.call(this);
        }
        InventoryPresetUpdateMessage.prototype.getMessageId = function () {
            return InventoryPresetUpdateMessage.ID;
        };
        InventoryPresetUpdateMessage.prototype.reset = function () {
            this.preset = new Preset();
        };
        InventoryPresetUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetUpdateMessage(param1);
        };
        InventoryPresetUpdateMessage.prototype.serializeAs_InventoryPresetUpdateMessage = function (param1) {
            this.preset.serializeAs_Preset(param1);
        };
        InventoryPresetUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetUpdateMessage(param1);
        };
        InventoryPresetUpdateMessage.prototype.deserializeAs_InventoryPresetUpdateMessage = function (param1) {
            this.preset = new Preset();
            this.preset.deserialize(param1);
        };
        InventoryPresetUpdateMessage.ID = 6171;
        return InventoryPresetUpdateMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetUpdateMessage = InventoryPresetUpdateMessage;
    var InventoryPresetUseMessage = (function (_super) {
        __extends(InventoryPresetUseMessage, _super);
        function InventoryPresetUseMessage() {
            this.presetId = 0;
            _super.call(this);
        }
        InventoryPresetUseMessage.prototype.getMessageId = function () {
            return InventoryPresetUseMessage.ID;
        };
        InventoryPresetUseMessage.prototype.reset = function () {
            this.presetId = 0;
        };
        InventoryPresetUseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetUseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetUseMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetUseMessage(param1);
        };
        InventoryPresetUseMessage.prototype.serializeAs_InventoryPresetUseMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
        };
        InventoryPresetUseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetUseMessage(param1);
        };
        InventoryPresetUseMessage.prototype.deserializeAs_InventoryPresetUseMessage = function (param1) {
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetUseMessage.presetId.');
            }
        };
        InventoryPresetUseMessage.ID = 6167;
        return InventoryPresetUseMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetUseMessage = InventoryPresetUseMessage;
    var InventoryPresetUseResultMessage = (function (_super) {
        __extends(InventoryPresetUseResultMessage, _super);
        function InventoryPresetUseResultMessage() {
            this.presetId = 0;
            this.code = 3;
            this.unlinkedPosition = [];
            _super.call(this);
        }
        InventoryPresetUseResultMessage.prototype.getMessageId = function () {
            return InventoryPresetUseResultMessage.ID;
        };
        InventoryPresetUseResultMessage.prototype.reset = function () {
            this.presetId = 0;
            this.code = 3;
            this.unlinkedPosition = [];
        };
        InventoryPresetUseResultMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        InventoryPresetUseResultMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        InventoryPresetUseResultMessage.prototype.serialize = function (param1) {
            this.serializeAs_InventoryPresetUseResultMessage(param1);
        };
        InventoryPresetUseResultMessage.prototype.serializeAs_InventoryPresetUseResultMessage = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            param1.writeByte(this.code);
            param1.writeShort(this.unlinkedPosition.length);
            var _loc2_ = 0;
            while (_loc2_ < this.unlinkedPosition.length) {
                param1.writeByte(this.unlinkedPosition[_loc2_]);
                _loc2_++;
            }
        };
        InventoryPresetUseResultMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_InventoryPresetUseResultMessage(param1);
        };
        InventoryPresetUseResultMessage.prototype.deserializeAs_InventoryPresetUseResultMessage = function (param1) {
            var _loc4_ = 0;
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of InventoryPresetUseResultMessage.presetId.');
            }
            this.code = param1.readByte();
            if (this.code < 0) {
                throw new Error('Forbidden value (' + this.code + ') on element of InventoryPresetUseResultMessage.code.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedByte();
                if (_loc4_ < 0 || _loc4_ > 255) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of unlinkedPosition.');
                }
                this.unlinkedPosition.push(_loc4_);
                _loc3_++;
            }
        };
        InventoryPresetUseResultMessage.ID = 6163;
        return InventoryPresetUseResultMessage;
    })(NetworkMessage);
    Protocol.InventoryPresetUseResultMessage = InventoryPresetUseResultMessage;
    var SpellListMessage = (function (_super) {
        __extends(SpellListMessage, _super);
        function SpellListMessage() {
            this.spellPrevisualization = false;
            this.spells = [];
            _super.call(this);
        }
        SpellListMessage.prototype.getMessageId = function () {
            return SpellListMessage.ID;
        };
        SpellListMessage.prototype.reset = function () {
            this.spellPrevisualization = false;
            this.spells = [];
        };
        SpellListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SpellListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SpellListMessage.prototype.serialize = function (param1) {
            this.serializeAs_SpellListMessage(param1);
        };
        SpellListMessage.prototype.serializeAs_SpellListMessage = function (param1) {
            param1.writeBoolean(this.spellPrevisualization);
            param1.writeShort(this.spells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spells.length) {
                (this.spells[_loc2_]).serializeAs_SpellItem(param1);
                _loc2_++;
            }
        };
        SpellListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellListMessage(param1);
        };
        SpellListMessage.prototype.deserializeAs_SpellListMessage = function (param1) {
            var _loc4_ = null;
            this.spellPrevisualization = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new SpellItem();
                _loc4_.deserialize(param1);
                this.spells.push(_loc4_);
                _loc3_++;
            }
        };
        SpellListMessage.ID = 1200;
        return SpellListMessage;
    })(NetworkMessage);
    Protocol.SpellListMessage = SpellListMessage;
    var StorageInventoryContentMessage = (function (_super) {
        __extends(StorageInventoryContentMessage, _super);
        function StorageInventoryContentMessage() {
            _super.call(this);
        }
        StorageInventoryContentMessage.prototype.getMessageId = function () {
            return StorageInventoryContentMessage.ID;
        };
        StorageInventoryContentMessage.prototype.reset = function () {
        };
        StorageInventoryContentMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageInventoryContentMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageInventoryContentMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageInventoryContentMessage(param1);
        };
        StorageInventoryContentMessage.prototype.serializeAs_StorageInventoryContentMessage = function (param1) {
            _super.prototype.serializeAs_InventoryContentMessage.call(this, param1);
        };
        StorageInventoryContentMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageInventoryContentMessage(param1);
        };
        StorageInventoryContentMessage.prototype.deserializeAs_StorageInventoryContentMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        StorageInventoryContentMessage.ID = 5646;
        return StorageInventoryContentMessage;
    })(InventoryContentMessage);
    Protocol.StorageInventoryContentMessage = StorageInventoryContentMessage;
    var StorageKamasUpdateMessage = (function (_super) {
        __extends(StorageKamasUpdateMessage, _super);
        function StorageKamasUpdateMessage() {
            this.kamasTotal = 0;
            _super.call(this);
        }
        StorageKamasUpdateMessage.prototype.getMessageId = function () {
            return StorageKamasUpdateMessage.ID;
        };
        StorageKamasUpdateMessage.prototype.reset = function () {
            this.kamasTotal = 0;
        };
        StorageKamasUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageKamasUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageKamasUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageKamasUpdateMessage(param1);
        };
        StorageKamasUpdateMessage.prototype.serializeAs_StorageKamasUpdateMessage = function (param1) {
            param1.writeInt(this.kamasTotal);
        };
        StorageKamasUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageKamasUpdateMessage(param1);
        };
        StorageKamasUpdateMessage.prototype.deserializeAs_StorageKamasUpdateMessage = function (param1) {
            this.kamasTotal = param1.readInt();
        };
        StorageKamasUpdateMessage.ID = 5645;
        return StorageKamasUpdateMessage;
    })(NetworkMessage);
    Protocol.StorageKamasUpdateMessage = StorageKamasUpdateMessage;
    var StorageObjectRemoveMessage = (function (_super) {
        __extends(StorageObjectRemoveMessage, _super);
        function StorageObjectRemoveMessage() {
            this.objectUID = 0;
            _super.call(this);
        }
        StorageObjectRemoveMessage.prototype.getMessageId = function () {
            return StorageObjectRemoveMessage.ID;
        };
        StorageObjectRemoveMessage.prototype.reset = function () {
            this.objectUID = 0;
        };
        StorageObjectRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageObjectRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageObjectRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageObjectRemoveMessage(param1);
        };
        StorageObjectRemoveMessage.prototype.serializeAs_StorageObjectRemoveMessage = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
        };
        StorageObjectRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageObjectRemoveMessage(param1);
        };
        StorageObjectRemoveMessage.prototype.deserializeAs_StorageObjectRemoveMessage = function (param1) {
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of StorageObjectRemoveMessage.objectUID.');
            }
        };
        StorageObjectRemoveMessage.ID = 5648;
        return StorageObjectRemoveMessage;
    })(NetworkMessage);
    Protocol.StorageObjectRemoveMessage = StorageObjectRemoveMessage;
    var StorageObjectUpdateMessage = (function (_super) {
        __extends(StorageObjectUpdateMessage, _super);
        function StorageObjectUpdateMessage() {
            this.object = new ObjectItem();
            _super.call(this);
        }
        StorageObjectUpdateMessage.prototype.getMessageId = function () {
            return StorageObjectUpdateMessage.ID;
        };
        StorageObjectUpdateMessage.prototype.reset = function () {
            this.object = new ObjectItem();
        };
        StorageObjectUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageObjectUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageObjectUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageObjectUpdateMessage(param1);
        };
        StorageObjectUpdateMessage.prototype.serializeAs_StorageObjectUpdateMessage = function (param1) {
            this.object.serializeAs_ObjectItem(param1);
        };
        StorageObjectUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageObjectUpdateMessage(param1);
        };
        StorageObjectUpdateMessage.prototype.deserializeAs_StorageObjectUpdateMessage = function (param1) {
            this.object = new ObjectItem();
            this.object.deserialize(param1);
        };
        StorageObjectUpdateMessage.ID = 5647;
        return StorageObjectUpdateMessage;
    })(NetworkMessage);
    Protocol.StorageObjectUpdateMessage = StorageObjectUpdateMessage;
    var StorageObjectsRemoveMessage = (function (_super) {
        __extends(StorageObjectsRemoveMessage, _super);
        function StorageObjectsRemoveMessage() {
            this.objectUIDList = [];
            _super.call(this);
        }
        StorageObjectsRemoveMessage.prototype.getMessageId = function () {
            return StorageObjectsRemoveMessage.ID;
        };
        StorageObjectsRemoveMessage.prototype.reset = function () {
            this.objectUIDList = [];
        };
        StorageObjectsRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageObjectsRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageObjectsRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageObjectsRemoveMessage(param1);
        };
        StorageObjectsRemoveMessage.prototype.serializeAs_StorageObjectsRemoveMessage = function (param1) {
            param1.writeShort(this.objectUIDList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectUIDList.length) {
                if (this.objectUIDList[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.objectUIDList[_loc2_] + ') on element 1 (starting at 1) of objectUIDList.');
                }
                param1.writeVarInt(this.objectUIDList[_loc2_]);
                _loc2_++;
            }
        };
        StorageObjectsRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageObjectsRemoveMessage(param1);
        };
        StorageObjectsRemoveMessage.prototype.deserializeAs_StorageObjectsRemoveMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of objectUIDList.');
                }
                this.objectUIDList.push(_loc4_);
                _loc3_++;
            }
        };
        StorageObjectsRemoveMessage.ID = 6035;
        return StorageObjectsRemoveMessage;
    })(NetworkMessage);
    Protocol.StorageObjectsRemoveMessage = StorageObjectsRemoveMessage;
    var StorageObjectsUpdateMessage = (function (_super) {
        __extends(StorageObjectsUpdateMessage, _super);
        function StorageObjectsUpdateMessage() {
            this.objectList = [];
            _super.call(this);
        }
        StorageObjectsUpdateMessage.prototype.getMessageId = function () {
            return StorageObjectsUpdateMessage.ID;
        };
        StorageObjectsUpdateMessage.prototype.reset = function () {
            this.objectList = [];
        };
        StorageObjectsUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StorageObjectsUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StorageObjectsUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_StorageObjectsUpdateMessage(param1);
        };
        StorageObjectsUpdateMessage.prototype.serializeAs_StorageObjectsUpdateMessage = function (param1) {
            param1.writeShort(this.objectList.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectList.length) {
                (this.objectList[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        StorageObjectsUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StorageObjectsUpdateMessage(param1);
        };
        StorageObjectsUpdateMessage.prototype.deserializeAs_StorageObjectsUpdateMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.objectList.push(_loc4_);
                _loc3_++;
            }
        };
        StorageObjectsUpdateMessage.ID = 6036;
        return StorageObjectsUpdateMessage;
    })(NetworkMessage);
    Protocol.StorageObjectsUpdateMessage = StorageObjectsUpdateMessage;
    var AccessoryPreviewErrorMessage = (function (_super) {
        __extends(AccessoryPreviewErrorMessage, _super);
        function AccessoryPreviewErrorMessage() {
            this.error = 0;
            _super.call(this);
        }
        AccessoryPreviewErrorMessage.prototype.getMessageId = function () {
            return AccessoryPreviewErrorMessage.ID;
        };
        AccessoryPreviewErrorMessage.prototype.reset = function () {
            this.error = 0;
        };
        AccessoryPreviewErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccessoryPreviewErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccessoryPreviewErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccessoryPreviewErrorMessage(param1);
        };
        AccessoryPreviewErrorMessage.prototype.serializeAs_AccessoryPreviewErrorMessage = function (param1) {
            param1.writeByte(this.error);
        };
        AccessoryPreviewErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccessoryPreviewErrorMessage(param1);
        };
        AccessoryPreviewErrorMessage.prototype.deserializeAs_AccessoryPreviewErrorMessage = function (param1) {
            this.error = param1.readByte();
            if (this.error < 0) {
                throw new Error('Forbidden value (' + this.error + ') on element of AccessoryPreviewErrorMessage.error.');
            }
        };
        AccessoryPreviewErrorMessage.ID = 6521;
        return AccessoryPreviewErrorMessage;
    })(NetworkMessage);
    Protocol.AccessoryPreviewErrorMessage = AccessoryPreviewErrorMessage;
    var AccessoryPreviewMessage = (function (_super) {
        __extends(AccessoryPreviewMessage, _super);
        function AccessoryPreviewMessage() {
            this.look = new EntityLook();
            _super.call(this);
        }
        AccessoryPreviewMessage.prototype.getMessageId = function () {
            return AccessoryPreviewMessage.ID;
        };
        AccessoryPreviewMessage.prototype.reset = function () {
            this.look = new EntityLook();
        };
        AccessoryPreviewMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccessoryPreviewMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccessoryPreviewMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccessoryPreviewMessage(param1);
        };
        AccessoryPreviewMessage.prototype.serializeAs_AccessoryPreviewMessage = function (param1) {
            this.look.serializeAs_EntityLook(param1);
        };
        AccessoryPreviewMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccessoryPreviewMessage(param1);
        };
        AccessoryPreviewMessage.prototype.deserializeAs_AccessoryPreviewMessage = function (param1) {
            this.look = new EntityLook();
            this.look.deserialize(param1);
        };
        AccessoryPreviewMessage.ID = 6517;
        return AccessoryPreviewMessage;
    })(NetworkMessage);
    Protocol.AccessoryPreviewMessage = AccessoryPreviewMessage;
    var AccessoryPreviewRequestMessage = (function (_super) {
        __extends(AccessoryPreviewRequestMessage, _super);
        function AccessoryPreviewRequestMessage() {
            this.genericId = [];
            _super.call(this);
        }
        AccessoryPreviewRequestMessage.prototype.getMessageId = function () {
            return AccessoryPreviewRequestMessage.ID;
        };
        AccessoryPreviewRequestMessage.prototype.reset = function () {
            this.genericId = [];
        };
        AccessoryPreviewRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AccessoryPreviewRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AccessoryPreviewRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_AccessoryPreviewRequestMessage(param1);
        };
        AccessoryPreviewRequestMessage.prototype.serializeAs_AccessoryPreviewRequestMessage = function (param1) {
            param1.writeShort(this.genericId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.genericId.length) {
                if (this.genericId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.genericId[_loc2_] + ') on element 1 (starting at 1) of genericId.');
                }
                param1.writeVarShort(this.genericId[_loc2_]);
                _loc2_++;
            }
        };
        AccessoryPreviewRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AccessoryPreviewRequestMessage(param1);
        };
        AccessoryPreviewRequestMessage.prototype.deserializeAs_AccessoryPreviewRequestMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of genericId.');
                }
                this.genericId.push(_loc4_);
                _loc3_++;
            }
        };
        AccessoryPreviewRequestMessage.ID = 6518;
        return AccessoryPreviewRequestMessage;
    })(NetworkMessage);
    Protocol.AccessoryPreviewRequestMessage = AccessoryPreviewRequestMessage;
    var PopupWarningMessage = (function (_super) {
        __extends(PopupWarningMessage, _super);
        function PopupWarningMessage() {
            this.lockDuration = 0;
            this.author = '';
            this.content = '';
            _super.call(this);
        }
        PopupWarningMessage.prototype.getMessageId = function () {
            return PopupWarningMessage.ID;
        };
        PopupWarningMessage.prototype.reset = function () {
            this.lockDuration = 0;
            this.author = '';
            this.content = '';
        };
        PopupWarningMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PopupWarningMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PopupWarningMessage.prototype.serialize = function (param1) {
            this.serializeAs_PopupWarningMessage(param1);
        };
        PopupWarningMessage.prototype.serializeAs_PopupWarningMessage = function (param1) {
            if (this.lockDuration < 0 || this.lockDuration > 255) {
                throw new Error('Forbidden value (' + this.lockDuration + ') on element lockDuration.');
            }
            param1.writeByte(this.lockDuration);
            param1.writeUTF(this.author);
            param1.writeUTF(this.content);
        };
        PopupWarningMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PopupWarningMessage(param1);
        };
        PopupWarningMessage.prototype.deserializeAs_PopupWarningMessage = function (param1) {
            this.lockDuration = param1.readUnsignedByte();
            if (this.lockDuration < 0 || this.lockDuration > 255) {
                throw new Error('Forbidden value (' + this.lockDuration + ') on element of PopupWarningMessage.lockDuration.');
            }
            this.author = param1.readUTF();
            this.content = param1.readUTF();
        };
        PopupWarningMessage.ID = 6134;
        return PopupWarningMessage;
    })(NetworkMessage);
    Protocol.PopupWarningMessage = PopupWarningMessage;
    var AreaFightModificatorUpdateMessage = (function (_super) {
        __extends(AreaFightModificatorUpdateMessage, _super);
        function AreaFightModificatorUpdateMessage() {
            this.spellPairId = 0;
            _super.call(this);
        }
        AreaFightModificatorUpdateMessage.prototype.getMessageId = function () {
            return AreaFightModificatorUpdateMessage.ID;
        };
        AreaFightModificatorUpdateMessage.prototype.reset = function () {
            this.spellPairId = 0;
        };
        AreaFightModificatorUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AreaFightModificatorUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AreaFightModificatorUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_AreaFightModificatorUpdateMessage(param1);
        };
        AreaFightModificatorUpdateMessage.prototype.serializeAs_AreaFightModificatorUpdateMessage = function (param1) {
            param1.writeInt(this.spellPairId);
        };
        AreaFightModificatorUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AreaFightModificatorUpdateMessage(param1);
        };
        AreaFightModificatorUpdateMessage.prototype.deserializeAs_AreaFightModificatorUpdateMessage = function (param1) {
            this.spellPairId = param1.readInt();
        };
        AreaFightModificatorUpdateMessage.ID = 6493;
        return AreaFightModificatorUpdateMessage;
    })(NetworkMessage);
    Protocol.AreaFightModificatorUpdateMessage = AreaFightModificatorUpdateMessage;
    var PrismAttackRequestMessage = (function (_super) {
        __extends(PrismAttackRequestMessage, _super);
        function PrismAttackRequestMessage() {
            _super.call(this);
        }
        PrismAttackRequestMessage.prototype.getMessageId = function () {
            return PrismAttackRequestMessage.ID;
        };
        PrismAttackRequestMessage.prototype.reset = function () {
        };
        PrismAttackRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismAttackRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismAttackRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismAttackRequestMessage(param1);
        };
        PrismAttackRequestMessage.prototype.serializeAs_PrismAttackRequestMessage = function (param1) {
        };
        PrismAttackRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismAttackRequestMessage(param1);
        };
        PrismAttackRequestMessage.prototype.deserializeAs_PrismAttackRequestMessage = function (param1) {
        };
        PrismAttackRequestMessage.ID = 6042;
        return PrismAttackRequestMessage;
    })(NetworkMessage);
    Protocol.PrismAttackRequestMessage = PrismAttackRequestMessage;
    var PrismFightAddedMessage = (function (_super) {
        __extends(PrismFightAddedMessage, _super);
        function PrismFightAddedMessage() {
            this.fight = new PrismFightersInformation();
            _super.call(this);
        }
        PrismFightAddedMessage.prototype.getMessageId = function () {
            return PrismFightAddedMessage.ID;
        };
        PrismFightAddedMessage.prototype.reset = function () {
            this.fight = new PrismFightersInformation();
        };
        PrismFightAddedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightAddedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightAddedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightAddedMessage(param1);
        };
        PrismFightAddedMessage.prototype.serializeAs_PrismFightAddedMessage = function (param1) {
            this.fight.serializeAs_PrismFightersInformation(param1);
        };
        PrismFightAddedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightAddedMessage(param1);
        };
        PrismFightAddedMessage.prototype.deserializeAs_PrismFightAddedMessage = function (param1) {
            this.fight = new PrismFightersInformation();
            this.fight.deserialize(param1);
        };
        PrismFightAddedMessage.ID = 6452;
        return PrismFightAddedMessage;
    })(NetworkMessage);
    Protocol.PrismFightAddedMessage = PrismFightAddedMessage;
    var PrismFightAttackerAddMessage = (function (_super) {
        __extends(PrismFightAttackerAddMessage, _super);
        function PrismFightAttackerAddMessage() {
            this.subAreaId = 0;
            this.fightId = 0;
            this.attacker = new CharacterMinimalPlusLookInformations();
            _super.call(this);
        }
        PrismFightAttackerAddMessage.prototype.getMessageId = function () {
            return PrismFightAttackerAddMessage.ID;
        };
        PrismFightAttackerAddMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.fightId = 0;
            this.attacker = new CharacterMinimalPlusLookInformations();
        };
        PrismFightAttackerAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightAttackerAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightAttackerAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightAttackerAddMessage(param1);
        };
        PrismFightAttackerAddMessage.prototype.serializeAs_PrismFightAttackerAddMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeVarShort(this.fightId);
            param1.writeShort(this.attacker.getTypeId());
            this.attacker.serialize(param1);
        };
        PrismFightAttackerAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightAttackerAddMessage(param1);
        };
        PrismFightAttackerAddMessage.prototype.deserializeAs_PrismFightAttackerAddMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightAttackerAddMessage.subAreaId.');
            }
            this.fightId = param1.readVarUhShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of PrismFightAttackerAddMessage.fightId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.attacker = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc2_);
            this.attacker.deserialize(param1);
        };
        PrismFightAttackerAddMessage.ID = 5893;
        return PrismFightAttackerAddMessage;
    })(NetworkMessage);
    Protocol.PrismFightAttackerAddMessage = PrismFightAttackerAddMessage;
    var PrismFightAttackerRemoveMessage = (function (_super) {
        __extends(PrismFightAttackerRemoveMessage, _super);
        function PrismFightAttackerRemoveMessage() {
            this.subAreaId = 0;
            this.fightId = 0;
            this.fighterToRemoveId = 0;
            _super.call(this);
        }
        PrismFightAttackerRemoveMessage.prototype.getMessageId = function () {
            return PrismFightAttackerRemoveMessage.ID;
        };
        PrismFightAttackerRemoveMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.fightId = 0;
            this.fighterToRemoveId = 0;
        };
        PrismFightAttackerRemoveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightAttackerRemoveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightAttackerRemoveMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightAttackerRemoveMessage(param1);
        };
        PrismFightAttackerRemoveMessage.prototype.serializeAs_PrismFightAttackerRemoveMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeVarShort(this.fightId);
            if (this.fighterToRemoveId < 0) {
                throw new Error('Forbidden value (' + this.fighterToRemoveId + ') on element fighterToRemoveId.');
            }
            param1.writeVarInt(this.fighterToRemoveId);
        };
        PrismFightAttackerRemoveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightAttackerRemoveMessage(param1);
        };
        PrismFightAttackerRemoveMessage.prototype.deserializeAs_PrismFightAttackerRemoveMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightAttackerRemoveMessage.subAreaId.');
            }
            this.fightId = param1.readVarUhShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of PrismFightAttackerRemoveMessage.fightId.');
            }
            this.fighterToRemoveId = param1.readVarUhInt();
            if (this.fighterToRemoveId < 0) {
                throw new Error('Forbidden value (' + this.fighterToRemoveId + ') on element of PrismFightAttackerRemoveMessage.fighterToRemoveId.');
            }
        };
        PrismFightAttackerRemoveMessage.ID = 5897;
        return PrismFightAttackerRemoveMessage;
    })(NetworkMessage);
    Protocol.PrismFightAttackerRemoveMessage = PrismFightAttackerRemoveMessage;
    var PrismFightDefenderAddMessage = (function (_super) {
        __extends(PrismFightDefenderAddMessage, _super);
        function PrismFightDefenderAddMessage() {
            this.subAreaId = 0;
            this.fightId = 0;
            this.defender = new CharacterMinimalPlusLookInformations();
            _super.call(this);
        }
        PrismFightDefenderAddMessage.prototype.getMessageId = function () {
            return PrismFightDefenderAddMessage.ID;
        };
        PrismFightDefenderAddMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.fightId = 0;
            this.defender = new CharacterMinimalPlusLookInformations();
        };
        PrismFightDefenderAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightDefenderAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightDefenderAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightDefenderAddMessage(param1);
        };
        PrismFightDefenderAddMessage.prototype.serializeAs_PrismFightDefenderAddMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeVarShort(this.fightId);
            param1.writeShort(this.defender.getTypeId());
            this.defender.serialize(param1);
        };
        PrismFightDefenderAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightDefenderAddMessage(param1);
        };
        PrismFightDefenderAddMessage.prototype.deserializeAs_PrismFightDefenderAddMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightDefenderAddMessage.subAreaId.');
            }
            this.fightId = param1.readVarUhShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of PrismFightDefenderAddMessage.fightId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.defender = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc2_);
            this.defender.deserialize(param1);
        };
        PrismFightDefenderAddMessage.ID = 5895;
        return PrismFightDefenderAddMessage;
    })(NetworkMessage);
    Protocol.PrismFightDefenderAddMessage = PrismFightDefenderAddMessage;
    var PrismFightDefenderLeaveMessage = (function (_super) {
        __extends(PrismFightDefenderLeaveMessage, _super);
        function PrismFightDefenderLeaveMessage() {
            this.subAreaId = 0;
            this.fightId = 0;
            this.fighterToRemoveId = 0;
            _super.call(this);
        }
        PrismFightDefenderLeaveMessage.prototype.getMessageId = function () {
            return PrismFightDefenderLeaveMessage.ID;
        };
        PrismFightDefenderLeaveMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.fightId = 0;
            this.fighterToRemoveId = 0;
        };
        PrismFightDefenderLeaveMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightDefenderLeaveMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightDefenderLeaveMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightDefenderLeaveMessage(param1);
        };
        PrismFightDefenderLeaveMessage.prototype.serializeAs_PrismFightDefenderLeaveMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element fightId.');
            }
            param1.writeVarShort(this.fightId);
            if (this.fighterToRemoveId < 0) {
                throw new Error('Forbidden value (' + this.fighterToRemoveId + ') on element fighterToRemoveId.');
            }
            param1.writeVarInt(this.fighterToRemoveId);
        };
        PrismFightDefenderLeaveMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightDefenderLeaveMessage(param1);
        };
        PrismFightDefenderLeaveMessage.prototype.deserializeAs_PrismFightDefenderLeaveMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightDefenderLeaveMessage.subAreaId.');
            }
            this.fightId = param1.readVarUhShort();
            if (this.fightId < 0) {
                throw new Error('Forbidden value (' + this.fightId + ') on element of PrismFightDefenderLeaveMessage.fightId.');
            }
            this.fighterToRemoveId = param1.readVarUhInt();
            if (this.fighterToRemoveId < 0) {
                throw new Error('Forbidden value (' + this.fighterToRemoveId + ') on element of PrismFightDefenderLeaveMessage.fighterToRemoveId.');
            }
        };
        PrismFightDefenderLeaveMessage.ID = 5892;
        return PrismFightDefenderLeaveMessage;
    })(NetworkMessage);
    Protocol.PrismFightDefenderLeaveMessage = PrismFightDefenderLeaveMessage;
    var PrismFightJoinLeaveRequestMessage = (function (_super) {
        __extends(PrismFightJoinLeaveRequestMessage, _super);
        function PrismFightJoinLeaveRequestMessage() {
            this.subAreaId = 0;
            this.join = false;
            _super.call(this);
        }
        PrismFightJoinLeaveRequestMessage.prototype.getMessageId = function () {
            return PrismFightJoinLeaveRequestMessage.ID;
        };
        PrismFightJoinLeaveRequestMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.join = false;
        };
        PrismFightJoinLeaveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightJoinLeaveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightJoinLeaveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightJoinLeaveRequestMessage(param1);
        };
        PrismFightJoinLeaveRequestMessage.prototype.serializeAs_PrismFightJoinLeaveRequestMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeBoolean(this.join);
        };
        PrismFightJoinLeaveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightJoinLeaveRequestMessage(param1);
        };
        PrismFightJoinLeaveRequestMessage.prototype.deserializeAs_PrismFightJoinLeaveRequestMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightJoinLeaveRequestMessage.subAreaId.');
            }
            this.join = param1.readBoolean();
        };
        PrismFightJoinLeaveRequestMessage.ID = 5843;
        return PrismFightJoinLeaveRequestMessage;
    })(NetworkMessage);
    Protocol.PrismFightJoinLeaveRequestMessage = PrismFightJoinLeaveRequestMessage;
    var PrismFightRemovedMessage = (function (_super) {
        __extends(PrismFightRemovedMessage, _super);
        function PrismFightRemovedMessage() {
            this.subAreaId = 0;
            _super.call(this);
        }
        PrismFightRemovedMessage.prototype.getMessageId = function () {
            return PrismFightRemovedMessage.ID;
        };
        PrismFightRemovedMessage.prototype.reset = function () {
            this.subAreaId = 0;
        };
        PrismFightRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightRemovedMessage(param1);
        };
        PrismFightRemovedMessage.prototype.serializeAs_PrismFightRemovedMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        PrismFightRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightRemovedMessage(param1);
        };
        PrismFightRemovedMessage.prototype.deserializeAs_PrismFightRemovedMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightRemovedMessage.subAreaId.');
            }
        };
        PrismFightRemovedMessage.ID = 6453;
        return PrismFightRemovedMessage;
    })(NetworkMessage);
    Protocol.PrismFightRemovedMessage = PrismFightRemovedMessage;
    var PrismFightStateUpdateMessage = (function (_super) {
        __extends(PrismFightStateUpdateMessage, _super);
        function PrismFightStateUpdateMessage() {
            this.state = 0;
            _super.call(this);
        }
        PrismFightStateUpdateMessage.prototype.getMessageId = function () {
            return PrismFightStateUpdateMessage.ID;
        };
        PrismFightStateUpdateMessage.prototype.reset = function () {
            this.state = 0;
        };
        PrismFightStateUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightStateUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightStateUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightStateUpdateMessage(param1);
        };
        PrismFightStateUpdateMessage.prototype.serializeAs_PrismFightStateUpdateMessage = function (param1) {
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element state.');
            }
            param1.writeByte(this.state);
        };
        PrismFightStateUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightStateUpdateMessage(param1);
        };
        PrismFightStateUpdateMessage.prototype.deserializeAs_PrismFightStateUpdateMessage = function (param1) {
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of PrismFightStateUpdateMessage.state.');
            }
        };
        PrismFightStateUpdateMessage.ID = 6040;
        return PrismFightStateUpdateMessage;
    })(NetworkMessage);
    Protocol.PrismFightStateUpdateMessage = PrismFightStateUpdateMessage;
    var PrismFightSwapRequestMessage = (function (_super) {
        __extends(PrismFightSwapRequestMessage, _super);
        function PrismFightSwapRequestMessage() {
            this.subAreaId = 0;
            this.targetId = 0;
            _super.call(this);
        }
        PrismFightSwapRequestMessage.prototype.getMessageId = function () {
            return PrismFightSwapRequestMessage.ID;
        };
        PrismFightSwapRequestMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.targetId = 0;
        };
        PrismFightSwapRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismFightSwapRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismFightSwapRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightSwapRequestMessage(param1);
        };
        PrismFightSwapRequestMessage.prototype.serializeAs_PrismFightSwapRequestMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element targetId.');
            }
            param1.writeVarInt(this.targetId);
        };
        PrismFightSwapRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightSwapRequestMessage(param1);
        };
        PrismFightSwapRequestMessage.prototype.deserializeAs_PrismFightSwapRequestMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightSwapRequestMessage.subAreaId.');
            }
            this.targetId = param1.readVarUhInt();
            if (this.targetId < 0) {
                throw new Error('Forbidden value (' + this.targetId + ') on element of PrismFightSwapRequestMessage.targetId.');
            }
        };
        PrismFightSwapRequestMessage.ID = 5901;
        return PrismFightSwapRequestMessage;
    })(NetworkMessage);
    Protocol.PrismFightSwapRequestMessage = PrismFightSwapRequestMessage;
    var PrismInfoCloseMessage = (function (_super) {
        __extends(PrismInfoCloseMessage, _super);
        function PrismInfoCloseMessage() {
            _super.call(this);
        }
        PrismInfoCloseMessage.prototype.getMessageId = function () {
            return PrismInfoCloseMessage.ID;
        };
        PrismInfoCloseMessage.prototype.reset = function () {
        };
        PrismInfoCloseMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismInfoCloseMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismInfoCloseMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismInfoCloseMessage(param1);
        };
        PrismInfoCloseMessage.prototype.serializeAs_PrismInfoCloseMessage = function (param1) {
        };
        PrismInfoCloseMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismInfoCloseMessage(param1);
        };
        PrismInfoCloseMessage.prototype.deserializeAs_PrismInfoCloseMessage = function (param1) {
        };
        PrismInfoCloseMessage.ID = 5853;
        return PrismInfoCloseMessage;
    })(NetworkMessage);
    Protocol.PrismInfoCloseMessage = PrismInfoCloseMessage;
    var PrismInfoInValidMessage = (function (_super) {
        __extends(PrismInfoInValidMessage, _super);
        function PrismInfoInValidMessage() {
            this.reason = 0;
            _super.call(this);
        }
        PrismInfoInValidMessage.prototype.getMessageId = function () {
            return PrismInfoInValidMessage.ID;
        };
        PrismInfoInValidMessage.prototype.reset = function () {
            this.reason = 0;
        };
        PrismInfoInValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismInfoInValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismInfoInValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismInfoInValidMessage(param1);
        };
        PrismInfoInValidMessage.prototype.serializeAs_PrismInfoInValidMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        PrismInfoInValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismInfoInValidMessage(param1);
        };
        PrismInfoInValidMessage.prototype.deserializeAs_PrismInfoInValidMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of PrismInfoInValidMessage.reason.');
            }
        };
        PrismInfoInValidMessage.ID = 5859;
        return PrismInfoInValidMessage;
    })(NetworkMessage);
    Protocol.PrismInfoInValidMessage = PrismInfoInValidMessage;
    var PrismInfoJoinLeaveRequestMessage = (function (_super) {
        __extends(PrismInfoJoinLeaveRequestMessage, _super);
        function PrismInfoJoinLeaveRequestMessage() {
            this.join = false;
            _super.call(this);
        }
        PrismInfoJoinLeaveRequestMessage.prototype.getMessageId = function () {
            return PrismInfoJoinLeaveRequestMessage.ID;
        };
        PrismInfoJoinLeaveRequestMessage.prototype.reset = function () {
            this.join = false;
        };
        PrismInfoJoinLeaveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismInfoJoinLeaveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismInfoJoinLeaveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismInfoJoinLeaveRequestMessage(param1);
        };
        PrismInfoJoinLeaveRequestMessage.prototype.serializeAs_PrismInfoJoinLeaveRequestMessage = function (param1) {
            param1.writeBoolean(this.join);
        };
        PrismInfoJoinLeaveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismInfoJoinLeaveRequestMessage(param1);
        };
        PrismInfoJoinLeaveRequestMessage.prototype.deserializeAs_PrismInfoJoinLeaveRequestMessage = function (param1) {
            this.join = param1.readBoolean();
        };
        PrismInfoJoinLeaveRequestMessage.ID = 5844;
        return PrismInfoJoinLeaveRequestMessage;
    })(NetworkMessage);
    Protocol.PrismInfoJoinLeaveRequestMessage = PrismInfoJoinLeaveRequestMessage;
    var PrismModuleExchangeRequestMessage = (function (_super) {
        __extends(PrismModuleExchangeRequestMessage, _super);
        function PrismModuleExchangeRequestMessage() {
            _super.call(this);
        }
        PrismModuleExchangeRequestMessage.prototype.getMessageId = function () {
            return PrismModuleExchangeRequestMessage.ID;
        };
        PrismModuleExchangeRequestMessage.prototype.reset = function () {
        };
        PrismModuleExchangeRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismModuleExchangeRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismModuleExchangeRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismModuleExchangeRequestMessage(param1);
        };
        PrismModuleExchangeRequestMessage.prototype.serializeAs_PrismModuleExchangeRequestMessage = function (param1) {
        };
        PrismModuleExchangeRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismModuleExchangeRequestMessage(param1);
        };
        PrismModuleExchangeRequestMessage.prototype.deserializeAs_PrismModuleExchangeRequestMessage = function (param1) {
        };
        PrismModuleExchangeRequestMessage.ID = 6531;
        return PrismModuleExchangeRequestMessage;
    })(NetworkMessage);
    Protocol.PrismModuleExchangeRequestMessage = PrismModuleExchangeRequestMessage;
    var PrismSetSabotagedRefusedMessage = (function (_super) {
        __extends(PrismSetSabotagedRefusedMessage, _super);
        function PrismSetSabotagedRefusedMessage() {
            this.subAreaId = 0;
            this.reason = 0;
            _super.call(this);
        }
        PrismSetSabotagedRefusedMessage.prototype.getMessageId = function () {
            return PrismSetSabotagedRefusedMessage.ID;
        };
        PrismSetSabotagedRefusedMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.reason = 0;
        };
        PrismSetSabotagedRefusedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismSetSabotagedRefusedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismSetSabotagedRefusedMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismSetSabotagedRefusedMessage(param1);
        };
        PrismSetSabotagedRefusedMessage.prototype.serializeAs_PrismSetSabotagedRefusedMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeByte(this.reason);
        };
        PrismSetSabotagedRefusedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismSetSabotagedRefusedMessage(param1);
        };
        PrismSetSabotagedRefusedMessage.prototype.deserializeAs_PrismSetSabotagedRefusedMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismSetSabotagedRefusedMessage.subAreaId.');
            }
            this.reason = param1.readByte();
        };
        PrismSetSabotagedRefusedMessage.ID = 6466;
        return PrismSetSabotagedRefusedMessage;
    })(NetworkMessage);
    Protocol.PrismSetSabotagedRefusedMessage = PrismSetSabotagedRefusedMessage;
    var PrismSetSabotagedRequestMessage = (function (_super) {
        __extends(PrismSetSabotagedRequestMessage, _super);
        function PrismSetSabotagedRequestMessage() {
            this.subAreaId = 0;
            _super.call(this);
        }
        PrismSetSabotagedRequestMessage.prototype.getMessageId = function () {
            return PrismSetSabotagedRequestMessage.ID;
        };
        PrismSetSabotagedRequestMessage.prototype.reset = function () {
            this.subAreaId = 0;
        };
        PrismSetSabotagedRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismSetSabotagedRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismSetSabotagedRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismSetSabotagedRequestMessage(param1);
        };
        PrismSetSabotagedRequestMessage.prototype.serializeAs_PrismSetSabotagedRequestMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        PrismSetSabotagedRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismSetSabotagedRequestMessage(param1);
        };
        PrismSetSabotagedRequestMessage.prototype.deserializeAs_PrismSetSabotagedRequestMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismSetSabotagedRequestMessage.subAreaId.');
            }
        };
        PrismSetSabotagedRequestMessage.ID = 6468;
        return PrismSetSabotagedRequestMessage;
    })(NetworkMessage);
    Protocol.PrismSetSabotagedRequestMessage = PrismSetSabotagedRequestMessage;
    var PrismSettingsErrorMessage = (function (_super) {
        __extends(PrismSettingsErrorMessage, _super);
        function PrismSettingsErrorMessage() {
            _super.call(this);
        }
        PrismSettingsErrorMessage.prototype.getMessageId = function () {
            return PrismSettingsErrorMessage.ID;
        };
        PrismSettingsErrorMessage.prototype.reset = function () {
        };
        PrismSettingsErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismSettingsErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismSettingsErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismSettingsErrorMessage(param1);
        };
        PrismSettingsErrorMessage.prototype.serializeAs_PrismSettingsErrorMessage = function (param1) {
        };
        PrismSettingsErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismSettingsErrorMessage(param1);
        };
        PrismSettingsErrorMessage.prototype.deserializeAs_PrismSettingsErrorMessage = function (param1) {
        };
        PrismSettingsErrorMessage.ID = 6442;
        return PrismSettingsErrorMessage;
    })(NetworkMessage);
    Protocol.PrismSettingsErrorMessage = PrismSettingsErrorMessage;
    var PrismSettingsRequestMessage = (function (_super) {
        __extends(PrismSettingsRequestMessage, _super);
        function PrismSettingsRequestMessage() {
            this.subAreaId = 0;
            this.startDefenseTime = 0;
            _super.call(this);
        }
        PrismSettingsRequestMessage.prototype.getMessageId = function () {
            return PrismSettingsRequestMessage.ID;
        };
        PrismSettingsRequestMessage.prototype.reset = function () {
            this.subAreaId = 0;
            this.startDefenseTime = 0;
        };
        PrismSettingsRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismSettingsRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismSettingsRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismSettingsRequestMessage(param1);
        };
        PrismSettingsRequestMessage.prototype.serializeAs_PrismSettingsRequestMessage = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.startDefenseTime < 0) {
                throw new Error('Forbidden value (' + this.startDefenseTime + ') on element startDefenseTime.');
            }
            param1.writeByte(this.startDefenseTime);
        };
        PrismSettingsRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismSettingsRequestMessage(param1);
        };
        PrismSettingsRequestMessage.prototype.deserializeAs_PrismSettingsRequestMessage = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismSettingsRequestMessage.subAreaId.');
            }
            this.startDefenseTime = param1.readByte();
            if (this.startDefenseTime < 0) {
                throw new Error('Forbidden value (' + this.startDefenseTime + ') on element of PrismSettingsRequestMessage.startDefenseTime.');
            }
        };
        PrismSettingsRequestMessage.ID = 6437;
        return PrismSettingsRequestMessage;
    })(NetworkMessage);
    Protocol.PrismSettingsRequestMessage = PrismSettingsRequestMessage;
    var PrismUseRequestMessage = (function (_super) {
        __extends(PrismUseRequestMessage, _super);
        function PrismUseRequestMessage() {
            this.moduleToUse = 0;
            _super.call(this);
        }
        PrismUseRequestMessage.prototype.getMessageId = function () {
            return PrismUseRequestMessage.ID;
        };
        PrismUseRequestMessage.prototype.reset = function () {
            this.moduleToUse = 0;
        };
        PrismUseRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismUseRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismUseRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismUseRequestMessage(param1);
        };
        PrismUseRequestMessage.prototype.serializeAs_PrismUseRequestMessage = function (param1) {
            param1.writeByte(this.moduleToUse);
        };
        PrismUseRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismUseRequestMessage(param1);
        };
        PrismUseRequestMessage.prototype.deserializeAs_PrismUseRequestMessage = function (param1) {
            this.moduleToUse = param1.readByte();
            if (this.moduleToUse < 0) {
                throw new Error('Forbidden value (' + this.moduleToUse + ') on element of PrismUseRequestMessage.moduleToUse.');
            }
        };
        PrismUseRequestMessage.ID = 6041;
        return PrismUseRequestMessage;
    })(NetworkMessage);
    Protocol.PrismUseRequestMessage = PrismUseRequestMessage;
    var PrismsInfoValidMessage = (function (_super) {
        __extends(PrismsInfoValidMessage, _super);
        function PrismsInfoValidMessage() {
            this.fights = [];
            _super.call(this);
        }
        PrismsInfoValidMessage.prototype.getMessageId = function () {
            return PrismsInfoValidMessage.ID;
        };
        PrismsInfoValidMessage.prototype.reset = function () {
            this.fights = [];
        };
        PrismsInfoValidMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismsInfoValidMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismsInfoValidMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismsInfoValidMessage(param1);
        };
        PrismsInfoValidMessage.prototype.serializeAs_PrismsInfoValidMessage = function (param1) {
            param1.writeShort(this.fights.length);
            var _loc2_ = 0;
            while (_loc2_ < this.fights.length) {
                (this.fights[_loc2_]).serializeAs_PrismFightersInformation(param1);
                _loc2_++;
            }
        };
        PrismsInfoValidMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismsInfoValidMessage(param1);
        };
        PrismsInfoValidMessage.prototype.deserializeAs_PrismsInfoValidMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PrismFightersInformation();
                _loc4_.deserialize(param1);
                this.fights.push(_loc4_);
                _loc3_++;
            }
        };
        PrismsInfoValidMessage.ID = 6451;
        return PrismsInfoValidMessage;
    })(NetworkMessage);
    Protocol.PrismsInfoValidMessage = PrismsInfoValidMessage;
    var PrismsListMessage = (function (_super) {
        __extends(PrismsListMessage, _super);
        function PrismsListMessage() {
            this.prisms = [];
            _super.call(this);
        }
        PrismsListMessage.prototype.getMessageId = function () {
            return PrismsListMessage.ID;
        };
        PrismsListMessage.prototype.reset = function () {
            this.prisms = [];
        };
        PrismsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismsListMessage(param1);
        };
        PrismsListMessage.prototype.serializeAs_PrismsListMessage = function (param1) {
            param1.writeShort(this.prisms.length);
            var _loc2_ = 0;
            while (_loc2_ < this.prisms.length) {
                param1.writeShort((this.prisms[_loc2_]).getTypeId());
                (this.prisms[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        PrismsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismsListMessage(param1);
        };
        PrismsListMessage.prototype.deserializeAs_PrismsListMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(PrismSubareaEmptyInfo, _loc4_);
                _loc5_.deserialize(param1);
                this.prisms.push(_loc5_);
                _loc3_++;
            }
        };
        PrismsListMessage.ID = 6440;
        return PrismsListMessage;
    })(NetworkMessage);
    Protocol.PrismsListMessage = PrismsListMessage;
    var PrismsListRegisterMessage = (function (_super) {
        __extends(PrismsListRegisterMessage, _super);
        function PrismsListRegisterMessage() {
            this.listen = 0;
            _super.call(this);
        }
        PrismsListRegisterMessage.prototype.getMessageId = function () {
            return PrismsListRegisterMessage.ID;
        };
        PrismsListRegisterMessage.prototype.reset = function () {
            this.listen = 0;
        };
        PrismsListRegisterMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismsListRegisterMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismsListRegisterMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismsListRegisterMessage(param1);
        };
        PrismsListRegisterMessage.prototype.serializeAs_PrismsListRegisterMessage = function (param1) {
            param1.writeByte(this.listen);
        };
        PrismsListRegisterMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismsListRegisterMessage(param1);
        };
        PrismsListRegisterMessage.prototype.deserializeAs_PrismsListRegisterMessage = function (param1) {
            this.listen = param1.readByte();
            if (this.listen < 0) {
                throw new Error('Forbidden value (' + this.listen + ') on element of PrismsListRegisterMessage.listen.');
            }
        };
        PrismsListRegisterMessage.ID = 6441;
        return PrismsListRegisterMessage;
    })(NetworkMessage);
    Protocol.PrismsListRegisterMessage = PrismsListRegisterMessage;
    var PrismsListUpdateMessage = (function (_super) {
        __extends(PrismsListUpdateMessage, _super);
        function PrismsListUpdateMessage() {
            _super.call(this);
        }
        PrismsListUpdateMessage.prototype.getMessageId = function () {
            return PrismsListUpdateMessage.ID;
        };
        PrismsListUpdateMessage.prototype.reset = function () {
        };
        PrismsListUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PrismsListUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PrismsListUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_PrismsListUpdateMessage(param1);
        };
        PrismsListUpdateMessage.prototype.serializeAs_PrismsListUpdateMessage = function (param1) {
            _super.prototype.serializeAs_PrismsListMessage.call(this, param1);
        };
        PrismsListUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismsListUpdateMessage(param1);
        };
        PrismsListUpdateMessage.prototype.deserializeAs_PrismsListUpdateMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        PrismsListUpdateMessage.ID = 6438;
        return PrismsListUpdateMessage;
    })(PrismsListMessage);
    Protocol.PrismsListUpdateMessage = PrismsListUpdateMessage;
    var AlignmentRankUpdateMessage = (function (_super) {
        __extends(AlignmentRankUpdateMessage, _super);
        function AlignmentRankUpdateMessage() {
            this.alignmentRank = 0;
            this.verbose = false;
            _super.call(this);
        }
        AlignmentRankUpdateMessage.prototype.getMessageId = function () {
            return AlignmentRankUpdateMessage.ID;
        };
        AlignmentRankUpdateMessage.prototype.reset = function () {
            this.alignmentRank = 0;
            this.verbose = false;
        };
        AlignmentRankUpdateMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        AlignmentRankUpdateMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        AlignmentRankUpdateMessage.prototype.serialize = function (param1) {
            this.serializeAs_AlignmentRankUpdateMessage(param1);
        };
        AlignmentRankUpdateMessage.prototype.serializeAs_AlignmentRankUpdateMessage = function (param1) {
            if (this.alignmentRank < 0) {
                throw new Error('Forbidden value (' + this.alignmentRank + ') on element alignmentRank.');
            }
            param1.writeByte(this.alignmentRank);
            param1.writeBoolean(this.verbose);
        };
        AlignmentRankUpdateMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_AlignmentRankUpdateMessage(param1);
        };
        AlignmentRankUpdateMessage.prototype.deserializeAs_AlignmentRankUpdateMessage = function (param1) {
            this.alignmentRank = param1.readByte();
            if (this.alignmentRank < 0) {
                throw new Error('Forbidden value (' + this.alignmentRank + ') on element of AlignmentRankUpdateMessage.alignmentRank.');
            }
            this.verbose = param1.readBoolean();
        };
        AlignmentRankUpdateMessage.ID = 6058;
        return AlignmentRankUpdateMessage;
    })(NetworkMessage);
    Protocol.AlignmentRankUpdateMessage = AlignmentRankUpdateMessage;
    var SetEnableAVARequestMessage = (function (_super) {
        __extends(SetEnableAVARequestMessage, _super);
        function SetEnableAVARequestMessage() {
            this.enable = false;
            _super.call(this);
        }
        SetEnableAVARequestMessage.prototype.getMessageId = function () {
            return SetEnableAVARequestMessage.ID;
        };
        SetEnableAVARequestMessage.prototype.reset = function () {
            this.enable = false;
        };
        SetEnableAVARequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SetEnableAVARequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SetEnableAVARequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_SetEnableAVARequestMessage(param1);
        };
        SetEnableAVARequestMessage.prototype.serializeAs_SetEnableAVARequestMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        SetEnableAVARequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SetEnableAVARequestMessage(param1);
        };
        SetEnableAVARequestMessage.prototype.deserializeAs_SetEnableAVARequestMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        SetEnableAVARequestMessage.ID = 6443;
        return SetEnableAVARequestMessage;
    })(NetworkMessage);
    Protocol.SetEnableAVARequestMessage = SetEnableAVARequestMessage;
    var SetEnablePVPRequestMessage = (function (_super) {
        __extends(SetEnablePVPRequestMessage, _super);
        function SetEnablePVPRequestMessage() {
            this.enable = false;
            _super.call(this);
        }
        SetEnablePVPRequestMessage.prototype.getMessageId = function () {
            return SetEnablePVPRequestMessage.ID;
        };
        SetEnablePVPRequestMessage.prototype.reset = function () {
            this.enable = false;
        };
        SetEnablePVPRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SetEnablePVPRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SetEnablePVPRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_SetEnablePVPRequestMessage(param1);
        };
        SetEnablePVPRequestMessage.prototype.serializeAs_SetEnablePVPRequestMessage = function (param1) {
            param1.writeBoolean(this.enable);
        };
        SetEnablePVPRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SetEnablePVPRequestMessage(param1);
        };
        SetEnablePVPRequestMessage.prototype.deserializeAs_SetEnablePVPRequestMessage = function (param1) {
            this.enable = param1.readBoolean();
        };
        SetEnablePVPRequestMessage.ID = 1810;
        return SetEnablePVPRequestMessage;
    })(NetworkMessage);
    Protocol.SetEnablePVPRequestMessage = SetEnablePVPRequestMessage;
    var UpdateMapPlayersAgressableStatusMessage = (function (_super) {
        __extends(UpdateMapPlayersAgressableStatusMessage, _super);
        function UpdateMapPlayersAgressableStatusMessage() {
            this.playerIds = [];
            this.enable = [];
            _super.call(this);
        }
        UpdateMapPlayersAgressableStatusMessage.prototype.getMessageId = function () {
            return UpdateMapPlayersAgressableStatusMessage.ID;
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.reset = function () {
            this.playerIds = [];
            this.enable = [];
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_UpdateMapPlayersAgressableStatusMessage(param1);
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.serializeAs_UpdateMapPlayersAgressableStatusMessage = function (param1) {
            param1.writeShort(this.playerIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.playerIds.length) {
                if (this.playerIds[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.playerIds[_loc2_] + ') on element 1 (starting at 1) of playerIds.');
                }
                param1.writeVarInt(this.playerIds[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.enable.length);
            var _loc3_ = 0;
            while (_loc3_ < this.enable.length) {
                param1.writeByte(this.enable[_loc3_]);
                _loc3_++;
            }
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateMapPlayersAgressableStatusMessage(param1);
        };
        UpdateMapPlayersAgressableStatusMessage.prototype.deserializeAs_UpdateMapPlayersAgressableStatusMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhInt();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of playerIds.');
                }
                this.playerIds.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readByte();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of enable.');
                }
                this.enable.push(_loc7_);
                _loc5_++;
            }
        };
        UpdateMapPlayersAgressableStatusMessage.ID = 6454;
        return UpdateMapPlayersAgressableStatusMessage;
    })(NetworkMessage);
    Protocol.UpdateMapPlayersAgressableStatusMessage = UpdateMapPlayersAgressableStatusMessage;
    var UpdateSelfAgressableStatusMessage = (function (_super) {
        __extends(UpdateSelfAgressableStatusMessage, _super);
        function UpdateSelfAgressableStatusMessage() {
            this.status = 0;
            this.probationTime = 0;
            _super.call(this);
        }
        UpdateSelfAgressableStatusMessage.prototype.getMessageId = function () {
            return UpdateSelfAgressableStatusMessage.ID;
        };
        UpdateSelfAgressableStatusMessage.prototype.reset = function () {
            this.status = 0;
            this.probationTime = 0;
        };
        UpdateSelfAgressableStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        UpdateSelfAgressableStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        UpdateSelfAgressableStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_UpdateSelfAgressableStatusMessage(param1);
        };
        UpdateSelfAgressableStatusMessage.prototype.serializeAs_UpdateSelfAgressableStatusMessage = function (param1) {
            param1.writeByte(this.status);
            if (this.probationTime < 0) {
                throw new Error('Forbidden value (' + this.probationTime + ') on element probationTime.');
            }
            param1.writeInt(this.probationTime);
        };
        UpdateSelfAgressableStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateSelfAgressableStatusMessage(param1);
        };
        UpdateSelfAgressableStatusMessage.prototype.deserializeAs_UpdateSelfAgressableStatusMessage = function (param1) {
            this.status = param1.readByte();
            if (this.status < 0) {
                throw new Error('Forbidden value (' + this.status + ') on element of UpdateSelfAgressableStatusMessage.status.');
            }
            this.probationTime = param1.readInt();
            if (this.probationTime < 0) {
                throw new Error('Forbidden value (' + this.probationTime + ') on element of UpdateSelfAgressableStatusMessage.probationTime.');
            }
        };
        UpdateSelfAgressableStatusMessage.ID = 6456;
        return UpdateSelfAgressableStatusMessage;
    })(NetworkMessage);
    Protocol.UpdateSelfAgressableStatusMessage = UpdateSelfAgressableStatusMessage;
    var CharacterReportMessage = (function (_super) {
        __extends(CharacterReportMessage, _super);
        function CharacterReportMessage() {
            this.reportedId = 0;
            this.reason = 0;
            _super.call(this);
        }
        CharacterReportMessage.prototype.getMessageId = function () {
            return CharacterReportMessage.ID;
        };
        CharacterReportMessage.prototype.reset = function () {
            this.reportedId = 0;
            this.reason = 0;
        };
        CharacterReportMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CharacterReportMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CharacterReportMessage.prototype.serialize = function (param1) {
            this.serializeAs_CharacterReportMessage(param1);
        };
        CharacterReportMessage.prototype.serializeAs_CharacterReportMessage = function (param1) {
            if (this.reportedId < 0) {
                throw new Error('Forbidden value (' + this.reportedId + ') on element reportedId.');
            }
            param1.writeVarInt(this.reportedId);
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element reason.');
            }
            param1.writeByte(this.reason);
        };
        CharacterReportMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterReportMessage(param1);
        };
        CharacterReportMessage.prototype.deserializeAs_CharacterReportMessage = function (param1) {
            this.reportedId = param1.readVarUhInt();
            if (this.reportedId < 0) {
                throw new Error('Forbidden value (' + this.reportedId + ') on element of CharacterReportMessage.reportedId.');
            }
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of CharacterReportMessage.reason.');
            }
        };
        CharacterReportMessage.ID = 6079;
        return CharacterReportMessage;
    })(NetworkMessage);
    Protocol.CharacterReportMessage = CharacterReportMessage;
    var CinematicMessage = (function (_super) {
        __extends(CinematicMessage, _super);
        function CinematicMessage() {
            this.cinematicId = 0;
            _super.call(this);
        }
        CinematicMessage.prototype.getMessageId = function () {
            return CinematicMessage.ID;
        };
        CinematicMessage.prototype.reset = function () {
            this.cinematicId = 0;
        };
        CinematicMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CinematicMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CinematicMessage.prototype.serialize = function (param1) {
            this.serializeAs_CinematicMessage(param1);
        };
        CinematicMessage.prototype.serializeAs_CinematicMessage = function (param1) {
            if (this.cinematicId < 0) {
                throw new Error('Forbidden value (' + this.cinematicId + ') on element cinematicId.');
            }
            param1.writeVarShort(this.cinematicId);
        };
        CinematicMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CinematicMessage(param1);
        };
        CinematicMessage.prototype.deserializeAs_CinematicMessage = function (param1) {
            this.cinematicId = param1.readVarUhShort();
            if (this.cinematicId < 0) {
                throw new Error('Forbidden value (' + this.cinematicId + ') on element of CinematicMessage.cinematicId.');
            }
        };
        CinematicMessage.ID = 6053;
        return CinematicMessage;
    })(NetworkMessage);
    Protocol.CinematicMessage = CinematicMessage;
    var URLOpenMessage = (function (_super) {
        __extends(URLOpenMessage, _super);
        function URLOpenMessage() {
            this.urlId = 0;
            _super.call(this);
        }
        URLOpenMessage.prototype.getMessageId = function () {
            return URLOpenMessage.ID;
        };
        URLOpenMessage.prototype.reset = function () {
            this.urlId = 0;
        };
        URLOpenMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        URLOpenMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        URLOpenMessage.prototype.serialize = function (param1) {
            this.serializeAs_URLOpenMessage(param1);
        };
        URLOpenMessage.prototype.serializeAs_URLOpenMessage = function (param1) {
            if (this.urlId < 0) {
                throw new Error('Forbidden value (' + this.urlId + ') on element urlId.');
            }
            param1.writeByte(this.urlId);
        };
        URLOpenMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_URLOpenMessage(param1);
        };
        URLOpenMessage.prototype.deserializeAs_URLOpenMessage = function (param1) {
            this.urlId = param1.readByte();
            if (this.urlId < 0) {
                throw new Error('Forbidden value (' + this.urlId + ') on element of URLOpenMessage.urlId.');
            }
        };
        URLOpenMessage.ID = 6266;
        return URLOpenMessage;
    })(NetworkMessage);
    Protocol.URLOpenMessage = URLOpenMessage;
    var ShortcutBarAddErrorMessage = (function (_super) {
        __extends(ShortcutBarAddErrorMessage, _super);
        function ShortcutBarAddErrorMessage() {
            this.error = 0;
            _super.call(this);
        }
        ShortcutBarAddErrorMessage.prototype.getMessageId = function () {
            return ShortcutBarAddErrorMessage.ID;
        };
        ShortcutBarAddErrorMessage.prototype.reset = function () {
            this.error = 0;
        };
        ShortcutBarAddErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarAddErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarAddErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarAddErrorMessage(param1);
        };
        ShortcutBarAddErrorMessage.prototype.serializeAs_ShortcutBarAddErrorMessage = function (param1) {
            param1.writeByte(this.error);
        };
        ShortcutBarAddErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarAddErrorMessage(param1);
        };
        ShortcutBarAddErrorMessage.prototype.deserializeAs_ShortcutBarAddErrorMessage = function (param1) {
            this.error = param1.readByte();
            if (this.error < 0) {
                throw new Error('Forbidden value (' + this.error + ') on element of ShortcutBarAddErrorMessage.error.');
            }
        };
        ShortcutBarAddErrorMessage.ID = 6227;
        return ShortcutBarAddErrorMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarAddErrorMessage = ShortcutBarAddErrorMessage;
    var ShortcutBarAddRequestMessage = (function (_super) {
        __extends(ShortcutBarAddRequestMessage, _super);
        function ShortcutBarAddRequestMessage() {
            this.barType = 0;
            this.shortcut = new Shortcut();
            _super.call(this);
        }
        ShortcutBarAddRequestMessage.prototype.getMessageId = function () {
            return ShortcutBarAddRequestMessage.ID;
        };
        ShortcutBarAddRequestMessage.prototype.reset = function () {
            this.barType = 0;
            this.shortcut = new Shortcut();
        };
        ShortcutBarAddRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarAddRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarAddRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarAddRequestMessage(param1);
        };
        ShortcutBarAddRequestMessage.prototype.serializeAs_ShortcutBarAddRequestMessage = function (param1) {
            param1.writeByte(this.barType);
            param1.writeShort(this.shortcut.getTypeId());
            this.shortcut.serialize(param1);
        };
        ShortcutBarAddRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarAddRequestMessage(param1);
        };
        ShortcutBarAddRequestMessage.prototype.deserializeAs_ShortcutBarAddRequestMessage = function (param1) {
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarAddRequestMessage.barType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.shortcut = ProtocolTypeManager.getInstance(Shortcut, _loc2_);
            this.shortcut.deserialize(param1);
        };
        ShortcutBarAddRequestMessage.ID = 6225;
        return ShortcutBarAddRequestMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarAddRequestMessage = ShortcutBarAddRequestMessage;
    var ShortcutBarContentMessage = (function (_super) {
        __extends(ShortcutBarContentMessage, _super);
        function ShortcutBarContentMessage() {
            this.barType = 0;
            this.shortcuts = [];
            _super.call(this);
        }
        ShortcutBarContentMessage.prototype.getMessageId = function () {
            return ShortcutBarContentMessage.ID;
        };
        ShortcutBarContentMessage.prototype.reset = function () {
            this.barType = 0;
            this.shortcuts = [];
        };
        ShortcutBarContentMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarContentMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarContentMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarContentMessage(param1);
        };
        ShortcutBarContentMessage.prototype.serializeAs_ShortcutBarContentMessage = function (param1) {
            param1.writeByte(this.barType);
            param1.writeShort(this.shortcuts.length);
            var _loc2_ = 0;
            while (_loc2_ < this.shortcuts.length) {
                param1.writeShort((this.shortcuts[_loc2_]).getTypeId());
                (this.shortcuts[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        ShortcutBarContentMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarContentMessage(param1);
        };
        ShortcutBarContentMessage.prototype.deserializeAs_ShortcutBarContentMessage = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarContentMessage.barType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(Shortcut, _loc4_);
                _loc5_.deserialize(param1);
                this.shortcuts.push(_loc5_);
                _loc3_++;
            }
        };
        ShortcutBarContentMessage.ID = 6231;
        return ShortcutBarContentMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarContentMessage = ShortcutBarContentMessage;
    var ShortcutBarRefreshMessage = (function (_super) {
        __extends(ShortcutBarRefreshMessage, _super);
        function ShortcutBarRefreshMessage() {
            this.barType = 0;
            this.shortcut = new Shortcut();
            _super.call(this);
        }
        ShortcutBarRefreshMessage.prototype.getMessageId = function () {
            return ShortcutBarRefreshMessage.ID;
        };
        ShortcutBarRefreshMessage.prototype.reset = function () {
            this.barType = 0;
            this.shortcut = new Shortcut();
        };
        ShortcutBarRefreshMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarRefreshMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarRefreshMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarRefreshMessage(param1);
        };
        ShortcutBarRefreshMessage.prototype.serializeAs_ShortcutBarRefreshMessage = function (param1) {
            param1.writeByte(this.barType);
            param1.writeShort(this.shortcut.getTypeId());
            this.shortcut.serialize(param1);
        };
        ShortcutBarRefreshMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarRefreshMessage(param1);
        };
        ShortcutBarRefreshMessage.prototype.deserializeAs_ShortcutBarRefreshMessage = function (param1) {
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarRefreshMessage.barType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.shortcut = ProtocolTypeManager.getInstance(Shortcut, _loc2_);
            this.shortcut.deserialize(param1);
        };
        ShortcutBarRefreshMessage.ID = 6229;
        return ShortcutBarRefreshMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarRefreshMessage = ShortcutBarRefreshMessage;
    var ShortcutBarRemoveErrorMessage = (function (_super) {
        __extends(ShortcutBarRemoveErrorMessage, _super);
        function ShortcutBarRemoveErrorMessage() {
            this.error = 0;
            _super.call(this);
        }
        ShortcutBarRemoveErrorMessage.prototype.getMessageId = function () {
            return ShortcutBarRemoveErrorMessage.ID;
        };
        ShortcutBarRemoveErrorMessage.prototype.reset = function () {
            this.error = 0;
        };
        ShortcutBarRemoveErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarRemoveErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarRemoveErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarRemoveErrorMessage(param1);
        };
        ShortcutBarRemoveErrorMessage.prototype.serializeAs_ShortcutBarRemoveErrorMessage = function (param1) {
            param1.writeByte(this.error);
        };
        ShortcutBarRemoveErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarRemoveErrorMessage(param1);
        };
        ShortcutBarRemoveErrorMessage.prototype.deserializeAs_ShortcutBarRemoveErrorMessage = function (param1) {
            this.error = param1.readByte();
            if (this.error < 0) {
                throw new Error('Forbidden value (' + this.error + ') on element of ShortcutBarRemoveErrorMessage.error.');
            }
        };
        ShortcutBarRemoveErrorMessage.ID = 6222;
        return ShortcutBarRemoveErrorMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarRemoveErrorMessage = ShortcutBarRemoveErrorMessage;
    var ShortcutBarRemoveRequestMessage = (function (_super) {
        __extends(ShortcutBarRemoveRequestMessage, _super);
        function ShortcutBarRemoveRequestMessage() {
            this.barType = 0;
            this.slot = 0;
            _super.call(this);
        }
        ShortcutBarRemoveRequestMessage.prototype.getMessageId = function () {
            return ShortcutBarRemoveRequestMessage.ID;
        };
        ShortcutBarRemoveRequestMessage.prototype.reset = function () {
            this.barType = 0;
            this.slot = 0;
        };
        ShortcutBarRemoveRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarRemoveRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarRemoveRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarRemoveRequestMessage(param1);
        };
        ShortcutBarRemoveRequestMessage.prototype.serializeAs_ShortcutBarRemoveRequestMessage = function (param1) {
            param1.writeByte(this.barType);
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element slot.');
            }
            param1.writeByte(this.slot);
        };
        ShortcutBarRemoveRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarRemoveRequestMessage(param1);
        };
        ShortcutBarRemoveRequestMessage.prototype.deserializeAs_ShortcutBarRemoveRequestMessage = function (param1) {
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarRemoveRequestMessage.barType.');
            }
            this.slot = param1.readByte();
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element of ShortcutBarRemoveRequestMessage.slot.');
            }
        };
        ShortcutBarRemoveRequestMessage.ID = 6228;
        return ShortcutBarRemoveRequestMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarRemoveRequestMessage = ShortcutBarRemoveRequestMessage;
    var ShortcutBarRemovedMessage = (function (_super) {
        __extends(ShortcutBarRemovedMessage, _super);
        function ShortcutBarRemovedMessage() {
            this.barType = 0;
            this.slot = 0;
            _super.call(this);
        }
        ShortcutBarRemovedMessage.prototype.getMessageId = function () {
            return ShortcutBarRemovedMessage.ID;
        };
        ShortcutBarRemovedMessage.prototype.reset = function () {
            this.barType = 0;
            this.slot = 0;
        };
        ShortcutBarRemovedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarRemovedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarRemovedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarRemovedMessage(param1);
        };
        ShortcutBarRemovedMessage.prototype.serializeAs_ShortcutBarRemovedMessage = function (param1) {
            param1.writeByte(this.barType);
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element slot.');
            }
            param1.writeByte(this.slot);
        };
        ShortcutBarRemovedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarRemovedMessage(param1);
        };
        ShortcutBarRemovedMessage.prototype.deserializeAs_ShortcutBarRemovedMessage = function (param1) {
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarRemovedMessage.barType.');
            }
            this.slot = param1.readByte();
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element of ShortcutBarRemovedMessage.slot.');
            }
        };
        ShortcutBarRemovedMessage.ID = 6224;
        return ShortcutBarRemovedMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarRemovedMessage = ShortcutBarRemovedMessage;
    var ShortcutBarSwapErrorMessage = (function (_super) {
        __extends(ShortcutBarSwapErrorMessage, _super);
        function ShortcutBarSwapErrorMessage() {
            this.error = 0;
            _super.call(this);
        }
        ShortcutBarSwapErrorMessage.prototype.getMessageId = function () {
            return ShortcutBarSwapErrorMessage.ID;
        };
        ShortcutBarSwapErrorMessage.prototype.reset = function () {
            this.error = 0;
        };
        ShortcutBarSwapErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarSwapErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarSwapErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarSwapErrorMessage(param1);
        };
        ShortcutBarSwapErrorMessage.prototype.serializeAs_ShortcutBarSwapErrorMessage = function (param1) {
            param1.writeByte(this.error);
        };
        ShortcutBarSwapErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarSwapErrorMessage(param1);
        };
        ShortcutBarSwapErrorMessage.prototype.deserializeAs_ShortcutBarSwapErrorMessage = function (param1) {
            this.error = param1.readByte();
            if (this.error < 0) {
                throw new Error('Forbidden value (' + this.error + ') on element of ShortcutBarSwapErrorMessage.error.');
            }
        };
        ShortcutBarSwapErrorMessage.ID = 6226;
        return ShortcutBarSwapErrorMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarSwapErrorMessage = ShortcutBarSwapErrorMessage;
    var ShortcutBarSwapRequestMessage = (function (_super) {
        __extends(ShortcutBarSwapRequestMessage, _super);
        function ShortcutBarSwapRequestMessage() {
            this.barType = 0;
            this.firstSlot = 0;
            this.secondSlot = 0;
            _super.call(this);
        }
        ShortcutBarSwapRequestMessage.prototype.getMessageId = function () {
            return ShortcutBarSwapRequestMessage.ID;
        };
        ShortcutBarSwapRequestMessage.prototype.reset = function () {
            this.barType = 0;
            this.firstSlot = 0;
            this.secondSlot = 0;
        };
        ShortcutBarSwapRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ShortcutBarSwapRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ShortcutBarSwapRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutBarSwapRequestMessage(param1);
        };
        ShortcutBarSwapRequestMessage.prototype.serializeAs_ShortcutBarSwapRequestMessage = function (param1) {
            param1.writeByte(this.barType);
            if (this.firstSlot < 0 || this.firstSlot > 99) {
                throw new Error('Forbidden value (' + this.firstSlot + ') on element firstSlot.');
            }
            param1.writeByte(this.firstSlot);
            if (this.secondSlot < 0 || this.secondSlot > 99) {
                throw new Error('Forbidden value (' + this.secondSlot + ') on element secondSlot.');
            }
            param1.writeByte(this.secondSlot);
        };
        ShortcutBarSwapRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutBarSwapRequestMessage(param1);
        };
        ShortcutBarSwapRequestMessage.prototype.deserializeAs_ShortcutBarSwapRequestMessage = function (param1) {
            this.barType = param1.readByte();
            if (this.barType < 0) {
                throw new Error('Forbidden value (' + this.barType + ') on element of ShortcutBarSwapRequestMessage.barType.');
            }
            this.firstSlot = param1.readByte();
            if (this.firstSlot < 0 || this.firstSlot > 99) {
                throw new Error('Forbidden value (' + this.firstSlot + ') on element of ShortcutBarSwapRequestMessage.firstSlot.');
            }
            this.secondSlot = param1.readByte();
            if (this.secondSlot < 0 || this.secondSlot > 99) {
                throw new Error('Forbidden value (' + this.secondSlot + ') on element of ShortcutBarSwapRequestMessage.secondSlot.');
            }
        };
        ShortcutBarSwapRequestMessage.ID = 6230;
        return ShortcutBarSwapRequestMessage;
    })(NetworkMessage);
    Protocol.ShortcutBarSwapRequestMessage = ShortcutBarSwapRequestMessage;
    var ContactLookErrorMessage = (function (_super) {
        __extends(ContactLookErrorMessage, _super);
        function ContactLookErrorMessage() {
            this.requestId = 0;
            _super.call(this);
        }
        ContactLookErrorMessage.prototype.getMessageId = function () {
            return ContactLookErrorMessage.ID;
        };
        ContactLookErrorMessage.prototype.reset = function () {
            this.requestId = 0;
        };
        ContactLookErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ContactLookErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ContactLookErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_ContactLookErrorMessage(param1);
        };
        ContactLookErrorMessage.prototype.serializeAs_ContactLookErrorMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeVarInt(this.requestId);
        };
        ContactLookErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ContactLookErrorMessage(param1);
        };
        ContactLookErrorMessage.prototype.deserializeAs_ContactLookErrorMessage = function (param1) {
            this.requestId = param1.readVarUhInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of ContactLookErrorMessage.requestId.');
            }
        };
        ContactLookErrorMessage.ID = 6045;
        return ContactLookErrorMessage;
    })(NetworkMessage);
    Protocol.ContactLookErrorMessage = ContactLookErrorMessage;
    var ContactLookMessage = (function (_super) {
        __extends(ContactLookMessage, _super);
        function ContactLookMessage() {
            this.requestId = 0;
            this.playerName = '';
            this.playerId = 0;
            this.look = new EntityLook();
            _super.call(this);
        }
        ContactLookMessage.prototype.getMessageId = function () {
            return ContactLookMessage.ID;
        };
        ContactLookMessage.prototype.reset = function () {
            this.requestId = 0;
            this.playerName = '';
            this.playerId = 0;
            this.look = new EntityLook();
        };
        ContactLookMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ContactLookMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ContactLookMessage.prototype.serialize = function (param1) {
            this.serializeAs_ContactLookMessage(param1);
        };
        ContactLookMessage.prototype.serializeAs_ContactLookMessage = function (param1) {
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeVarInt(this.requestId);
            param1.writeUTF(this.playerName);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            this.look.serializeAs_EntityLook(param1);
        };
        ContactLookMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ContactLookMessage(param1);
        };
        ContactLookMessage.prototype.deserializeAs_ContactLookMessage = function (param1) {
            this.requestId = param1.readVarUhInt();
            if (this.requestId < 0) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of ContactLookMessage.requestId.');
            }
            this.playerName = param1.readUTF();
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of ContactLookMessage.playerId.');
            }
            this.look = new EntityLook();
            this.look.deserialize(param1);
        };
        ContactLookMessage.ID = 5934;
        return ContactLookMessage;
    })(NetworkMessage);
    Protocol.ContactLookMessage = ContactLookMessage;
    var ContactLookRequestByIdMessage = (function (_super) {
        __extends(ContactLookRequestByIdMessage, _super);
        function ContactLookRequestByIdMessage() {
            this.playerId = 0;
            _super.call(this);
        }
        ContactLookRequestByIdMessage.prototype.getMessageId = function () {
            return ContactLookRequestByIdMessage.ID;
        };
        ContactLookRequestByIdMessage.prototype.reset = function () {
            this.playerId = 0;
        };
        ContactLookRequestByIdMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ContactLookRequestByIdMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ContactLookRequestByIdMessage.prototype.serialize = function (param1) {
            this.serializeAs_ContactLookRequestByIdMessage(param1);
        };
        ContactLookRequestByIdMessage.prototype.serializeAs_ContactLookRequestByIdMessage = function (param1) {
            _super.prototype.serializeAs_ContactLookRequestMessage.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
        };
        ContactLookRequestByIdMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ContactLookRequestByIdMessage(param1);
        };
        ContactLookRequestByIdMessage.prototype.deserializeAs_ContactLookRequestByIdMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of ContactLookRequestByIdMessage.playerId.');
            }
        };
        ContactLookRequestByIdMessage.ID = 5935;
        return ContactLookRequestByIdMessage;
    })(ContactLookRequestMessage);
    Protocol.ContactLookRequestByIdMessage = ContactLookRequestByIdMessage;
    var ContactLookRequestMessage = (function (_super) {
        __extends(ContactLookRequestMessage, _super);
        function ContactLookRequestMessage() {
            this.requestId = 0;
            this.contactType = 0;
            _super.call(this);
        }
        ContactLookRequestMessage.prototype.getMessageId = function () {
            return ContactLookRequestMessage.ID;
        };
        ContactLookRequestMessage.prototype.reset = function () {
            this.requestId = 0;
            this.contactType = 0;
        };
        ContactLookRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ContactLookRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ContactLookRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_ContactLookRequestMessage(param1);
        };
        ContactLookRequestMessage.prototype.serializeAs_ContactLookRequestMessage = function (param1) {
            if (this.requestId < 0 || this.requestId > 255) {
                throw new Error('Forbidden value (' + this.requestId + ') on element requestId.');
            }
            param1.writeByte(this.requestId);
            param1.writeByte(this.contactType);
        };
        ContactLookRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ContactLookRequestMessage(param1);
        };
        ContactLookRequestMessage.prototype.deserializeAs_ContactLookRequestMessage = function (param1) {
            this.requestId = param1.readUnsignedByte();
            if (this.requestId < 0 || this.requestId > 255) {
                throw new Error('Forbidden value (' + this.requestId + ') on element of ContactLookRequestMessage.requestId.');
            }
            this.contactType = param1.readByte();
            if (this.contactType < 0) {
                throw new Error('Forbidden value (' + this.contactType + ') on element of ContactLookRequestMessage.contactType.');
            }
        };
        ContactLookRequestMessage.ID = 5932;
        return ContactLookRequestMessage;
    })(NetworkMessage);
    Protocol.ContactLookRequestMessage = ContactLookRequestMessage;
    var StartupActionAddMessage = (function (_super) {
        __extends(StartupActionAddMessage, _super);
        function StartupActionAddMessage() {
            this.newAction = new StartupActionAddObject();
            _super.call(this);
        }
        StartupActionAddMessage.prototype.getMessageId = function () {
            return StartupActionAddMessage.ID;
        };
        StartupActionAddMessage.prototype.reset = function () {
            this.newAction = new StartupActionAddObject();
        };
        StartupActionAddMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionAddMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionAddMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionAddMessage(param1);
        };
        StartupActionAddMessage.prototype.serializeAs_StartupActionAddMessage = function (param1) {
            this.newAction.serializeAs_StartupActionAddObject(param1);
        };
        StartupActionAddMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionAddMessage(param1);
        };
        StartupActionAddMessage.prototype.deserializeAs_StartupActionAddMessage = function (param1) {
            this.newAction = new StartupActionAddObject();
            this.newAction.deserialize(param1);
        };
        StartupActionAddMessage.ID = 6538;
        return StartupActionAddMessage;
    })(NetworkMessage);
    Protocol.StartupActionAddMessage = StartupActionAddMessage;
    var StartupActionFinishedMessage = (function (_super) {
        __extends(StartupActionFinishedMessage, _super);
        function StartupActionFinishedMessage() {
            this.success = false;
            this.actionId = 0;
            this.automaticAction = false;
            _super.call(this);
        }
        StartupActionFinishedMessage.prototype.getMessageId = function () {
            return StartupActionFinishedMessage.ID;
        };
        StartupActionFinishedMessage.prototype.reset = function () {
            this.success = false;
            this.actionId = 0;
            this.automaticAction = false;
        };
        StartupActionFinishedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionFinishedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionFinishedMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionFinishedMessage(param1);
        };
        StartupActionFinishedMessage.prototype.serializeAs_StartupActionFinishedMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.success);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.automaticAction);
            param1.writeByte(_loc2_);
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeInt(this.actionId);
        };
        StartupActionFinishedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionFinishedMessage(param1);
        };
        StartupActionFinishedMessage.prototype.deserializeAs_StartupActionFinishedMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.success = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.automaticAction = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.actionId = param1.readInt();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of StartupActionFinishedMessage.actionId.');
            }
        };
        StartupActionFinishedMessage.ID = 1304;
        return StartupActionFinishedMessage;
    })(NetworkMessage);
    Protocol.StartupActionFinishedMessage = StartupActionFinishedMessage;
    var StartupActionsAllAttributionMessage = (function (_super) {
        __extends(StartupActionsAllAttributionMessage, _super);
        function StartupActionsAllAttributionMessage() {
            this.characterId = 0;
            _super.call(this);
        }
        StartupActionsAllAttributionMessage.prototype.getMessageId = function () {
            return StartupActionsAllAttributionMessage.ID;
        };
        StartupActionsAllAttributionMessage.prototype.reset = function () {
            this.characterId = 0;
        };
        StartupActionsAllAttributionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionsAllAttributionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionsAllAttributionMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionsAllAttributionMessage(param1);
        };
        StartupActionsAllAttributionMessage.prototype.serializeAs_StartupActionsAllAttributionMessage = function (param1) {
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeInt(this.characterId);
        };
        StartupActionsAllAttributionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionsAllAttributionMessage(param1);
        };
        StartupActionsAllAttributionMessage.prototype.deserializeAs_StartupActionsAllAttributionMessage = function (param1) {
            this.characterId = param1.readInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of StartupActionsAllAttributionMessage.characterId.');
            }
        };
        StartupActionsAllAttributionMessage.ID = 6537;
        return StartupActionsAllAttributionMessage;
    })(NetworkMessage);
    Protocol.StartupActionsAllAttributionMessage = StartupActionsAllAttributionMessage;
    var StartupActionsExecuteMessage = (function (_super) {
        __extends(StartupActionsExecuteMessage, _super);
        function StartupActionsExecuteMessage() {
            _super.call(this);
        }
        StartupActionsExecuteMessage.prototype.getMessageId = function () {
            return StartupActionsExecuteMessage.ID;
        };
        StartupActionsExecuteMessage.prototype.reset = function () {
        };
        StartupActionsExecuteMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionsExecuteMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionsExecuteMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionsExecuteMessage(param1);
        };
        StartupActionsExecuteMessage.prototype.serializeAs_StartupActionsExecuteMessage = function (param1) {
        };
        StartupActionsExecuteMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionsExecuteMessage(param1);
        };
        StartupActionsExecuteMessage.prototype.deserializeAs_StartupActionsExecuteMessage = function (param1) {
        };
        StartupActionsExecuteMessage.ID = 1302;
        return StartupActionsExecuteMessage;
    })(NetworkMessage);
    Protocol.StartupActionsExecuteMessage = StartupActionsExecuteMessage;
    var StartupActionsListMessage = (function (_super) {
        __extends(StartupActionsListMessage, _super);
        function StartupActionsListMessage() {
            this.actions = [];
            _super.call(this);
        }
        StartupActionsListMessage.prototype.getMessageId = function () {
            return StartupActionsListMessage.ID;
        };
        StartupActionsListMessage.prototype.reset = function () {
            this.actions = [];
        };
        StartupActionsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionsListMessage(param1);
        };
        StartupActionsListMessage.prototype.serializeAs_StartupActionsListMessage = function (param1) {
            param1.writeShort(this.actions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.actions.length) {
                (this.actions[_loc2_]).serializeAs_StartupActionAddObject(param1);
                _loc2_++;
            }
        };
        StartupActionsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionsListMessage(param1);
        };
        StartupActionsListMessage.prototype.deserializeAs_StartupActionsListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new StartupActionAddObject();
                _loc4_.deserialize(param1);
                this.actions.push(_loc4_);
                _loc3_++;
            }
        };
        StartupActionsListMessage.ID = 1301;
        return StartupActionsListMessage;
    })(NetworkMessage);
    Protocol.StartupActionsListMessage = StartupActionsListMessage;
    var StartupActionsObjetAttributionMessage = (function (_super) {
        __extends(StartupActionsObjetAttributionMessage, _super);
        function StartupActionsObjetAttributionMessage() {
            this.actionId = 0;
            this.characterId = 0;
            _super.call(this);
        }
        StartupActionsObjetAttributionMessage.prototype.getMessageId = function () {
            return StartupActionsObjetAttributionMessage.ID;
        };
        StartupActionsObjetAttributionMessage.prototype.reset = function () {
            this.actionId = 0;
            this.characterId = 0;
        };
        StartupActionsObjetAttributionMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        StartupActionsObjetAttributionMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        StartupActionsObjetAttributionMessage.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionsObjetAttributionMessage(param1);
        };
        StartupActionsObjetAttributionMessage.prototype.serializeAs_StartupActionsObjetAttributionMessage = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeInt(this.actionId);
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element characterId.');
            }
            param1.writeInt(this.characterId);
        };
        StartupActionsObjetAttributionMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionsObjetAttributionMessage(param1);
        };
        StartupActionsObjetAttributionMessage.prototype.deserializeAs_StartupActionsObjetAttributionMessage = function (param1) {
            this.actionId = param1.readInt();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of StartupActionsObjetAttributionMessage.actionId.');
            }
            this.characterId = param1.readInt();
            if (this.characterId < 0) {
                throw new Error('Forbidden value (' + this.characterId + ') on element of StartupActionsObjetAttributionMessage.characterId.');
            }
        };
        StartupActionsObjetAttributionMessage.ID = 1303;
        return StartupActionsObjetAttributionMessage;
    })(NetworkMessage);
    Protocol.StartupActionsObjetAttributionMessage = StartupActionsObjetAttributionMessage;
    var SubscriptionLimitationMessage = (function (_super) {
        __extends(SubscriptionLimitationMessage, _super);
        function SubscriptionLimitationMessage() {
            this.reason = 0;
            _super.call(this);
        }
        SubscriptionLimitationMessage.prototype.getMessageId = function () {
            return SubscriptionLimitationMessage.ID;
        };
        SubscriptionLimitationMessage.prototype.reset = function () {
            this.reason = 0;
        };
        SubscriptionLimitationMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SubscriptionLimitationMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SubscriptionLimitationMessage.prototype.serialize = function (param1) {
            this.serializeAs_SubscriptionLimitationMessage(param1);
        };
        SubscriptionLimitationMessage.prototype.serializeAs_SubscriptionLimitationMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        SubscriptionLimitationMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SubscriptionLimitationMessage(param1);
        };
        SubscriptionLimitationMessage.prototype.deserializeAs_SubscriptionLimitationMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of SubscriptionLimitationMessage.reason.');
            }
        };
        SubscriptionLimitationMessage.ID = 5542;
        return SubscriptionLimitationMessage;
    })(NetworkMessage);
    Protocol.SubscriptionLimitationMessage = SubscriptionLimitationMessage;
    var SubscriptionZoneMessage = (function (_super) {
        __extends(SubscriptionZoneMessage, _super);
        function SubscriptionZoneMessage() {
            this.active = false;
            _super.call(this);
        }
        SubscriptionZoneMessage.prototype.getMessageId = function () {
            return SubscriptionZoneMessage.ID;
        };
        SubscriptionZoneMessage.prototype.reset = function () {
            this.active = false;
        };
        SubscriptionZoneMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SubscriptionZoneMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SubscriptionZoneMessage.prototype.serialize = function (param1) {
            this.serializeAs_SubscriptionZoneMessage(param1);
        };
        SubscriptionZoneMessage.prototype.serializeAs_SubscriptionZoneMessage = function (param1) {
            param1.writeBoolean(this.active);
        };
        SubscriptionZoneMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SubscriptionZoneMessage(param1);
        };
        SubscriptionZoneMessage.prototype.deserializeAs_SubscriptionZoneMessage = function (param1) {
            this.active = param1.readBoolean();
        };
        SubscriptionZoneMessage.ID = 5573;
        return SubscriptionZoneMessage;
    })(NetworkMessage);
    Protocol.SubscriptionZoneMessage = SubscriptionZoneMessage;
    var OrnamentGainedMessage = (function (_super) {
        __extends(OrnamentGainedMessage, _super);
        function OrnamentGainedMessage() {
            this.ornamentId = 0;
            _super.call(this);
        }
        OrnamentGainedMessage.prototype.getMessageId = function () {
            return OrnamentGainedMessage.ID;
        };
        OrnamentGainedMessage.prototype.reset = function () {
            this.ornamentId = 0;
        };
        OrnamentGainedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        OrnamentGainedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        OrnamentGainedMessage.prototype.serialize = function (param1) {
            this.serializeAs_OrnamentGainedMessage(param1);
        };
        OrnamentGainedMessage.prototype.serializeAs_OrnamentGainedMessage = function (param1) {
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element ornamentId.');
            }
            param1.writeShort(this.ornamentId);
        };
        OrnamentGainedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_OrnamentGainedMessage(param1);
        };
        OrnamentGainedMessage.prototype.deserializeAs_OrnamentGainedMessage = function (param1) {
            this.ornamentId = param1.readShort();
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element of OrnamentGainedMessage.ornamentId.');
            }
        };
        OrnamentGainedMessage.ID = 6368;
        return OrnamentGainedMessage;
    })(NetworkMessage);
    Protocol.OrnamentGainedMessage = OrnamentGainedMessage;
    var OrnamentSelectErrorMessage = (function (_super) {
        __extends(OrnamentSelectErrorMessage, _super);
        function OrnamentSelectErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        OrnamentSelectErrorMessage.prototype.getMessageId = function () {
            return OrnamentSelectErrorMessage.ID;
        };
        OrnamentSelectErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        OrnamentSelectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        OrnamentSelectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        OrnamentSelectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_OrnamentSelectErrorMessage(param1);
        };
        OrnamentSelectErrorMessage.prototype.serializeAs_OrnamentSelectErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        OrnamentSelectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_OrnamentSelectErrorMessage(param1);
        };
        OrnamentSelectErrorMessage.prototype.deserializeAs_OrnamentSelectErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of OrnamentSelectErrorMessage.reason.');
            }
        };
        OrnamentSelectErrorMessage.ID = 6370;
        return OrnamentSelectErrorMessage;
    })(NetworkMessage);
    Protocol.OrnamentSelectErrorMessage = OrnamentSelectErrorMessage;
    var OrnamentSelectRequestMessage = (function (_super) {
        __extends(OrnamentSelectRequestMessage, _super);
        function OrnamentSelectRequestMessage() {
            this.ornamentId = 0;
            _super.call(this);
        }
        OrnamentSelectRequestMessage.prototype.getMessageId = function () {
            return OrnamentSelectRequestMessage.ID;
        };
        OrnamentSelectRequestMessage.prototype.reset = function () {
            this.ornamentId = 0;
        };
        OrnamentSelectRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        OrnamentSelectRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        OrnamentSelectRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_OrnamentSelectRequestMessage(param1);
        };
        OrnamentSelectRequestMessage.prototype.serializeAs_OrnamentSelectRequestMessage = function (param1) {
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element ornamentId.');
            }
            param1.writeVarShort(this.ornamentId);
        };
        OrnamentSelectRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_OrnamentSelectRequestMessage(param1);
        };
        OrnamentSelectRequestMessage.prototype.deserializeAs_OrnamentSelectRequestMessage = function (param1) {
            this.ornamentId = param1.readVarUhShort();
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element of OrnamentSelectRequestMessage.ornamentId.');
            }
        };
        OrnamentSelectRequestMessage.ID = 6374;
        return OrnamentSelectRequestMessage;
    })(NetworkMessage);
    Protocol.OrnamentSelectRequestMessage = OrnamentSelectRequestMessage;
    var OrnamentSelectedMessage = (function (_super) {
        __extends(OrnamentSelectedMessage, _super);
        function OrnamentSelectedMessage() {
            this.ornamentId = 0;
            _super.call(this);
        }
        OrnamentSelectedMessage.prototype.getMessageId = function () {
            return OrnamentSelectedMessage.ID;
        };
        OrnamentSelectedMessage.prototype.reset = function () {
            this.ornamentId = 0;
        };
        OrnamentSelectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        OrnamentSelectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        OrnamentSelectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_OrnamentSelectedMessage(param1);
        };
        OrnamentSelectedMessage.prototype.serializeAs_OrnamentSelectedMessage = function (param1) {
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element ornamentId.');
            }
            param1.writeVarShort(this.ornamentId);
        };
        OrnamentSelectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_OrnamentSelectedMessage(param1);
        };
        OrnamentSelectedMessage.prototype.deserializeAs_OrnamentSelectedMessage = function (param1) {
            this.ornamentId = param1.readVarUhShort();
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element of OrnamentSelectedMessage.ornamentId.');
            }
        };
        OrnamentSelectedMessage.ID = 6369;
        return OrnamentSelectedMessage;
    })(NetworkMessage);
    Protocol.OrnamentSelectedMessage = OrnamentSelectedMessage;
    var TitleGainedMessage = (function (_super) {
        __extends(TitleGainedMessage, _super);
        function TitleGainedMessage() {
            this.titleId = 0;
            _super.call(this);
        }
        TitleGainedMessage.prototype.getMessageId = function () {
            return TitleGainedMessage.ID;
        };
        TitleGainedMessage.prototype.reset = function () {
            this.titleId = 0;
        };
        TitleGainedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitleGainedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitleGainedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitleGainedMessage(param1);
        };
        TitleGainedMessage.prototype.serializeAs_TitleGainedMessage = function (param1) {
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element titleId.');
            }
            param1.writeVarShort(this.titleId);
        };
        TitleGainedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitleGainedMessage(param1);
        };
        TitleGainedMessage.prototype.deserializeAs_TitleGainedMessage = function (param1) {
            this.titleId = param1.readVarUhShort();
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element of TitleGainedMessage.titleId.');
            }
        };
        TitleGainedMessage.ID = 6364;
        return TitleGainedMessage;
    })(NetworkMessage);
    Protocol.TitleGainedMessage = TitleGainedMessage;
    var TitleLostMessage = (function (_super) {
        __extends(TitleLostMessage, _super);
        function TitleLostMessage() {
            this.titleId = 0;
            _super.call(this);
        }
        TitleLostMessage.prototype.getMessageId = function () {
            return TitleLostMessage.ID;
        };
        TitleLostMessage.prototype.reset = function () {
            this.titleId = 0;
        };
        TitleLostMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitleLostMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitleLostMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitleLostMessage(param1);
        };
        TitleLostMessage.prototype.serializeAs_TitleLostMessage = function (param1) {
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element titleId.');
            }
            param1.writeVarShort(this.titleId);
        };
        TitleLostMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitleLostMessage(param1);
        };
        TitleLostMessage.prototype.deserializeAs_TitleLostMessage = function (param1) {
            this.titleId = param1.readVarUhShort();
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element of TitleLostMessage.titleId.');
            }
        };
        TitleLostMessage.ID = 6371;
        return TitleLostMessage;
    })(NetworkMessage);
    Protocol.TitleLostMessage = TitleLostMessage;
    var TitleSelectErrorMessage = (function (_super) {
        __extends(TitleSelectErrorMessage, _super);
        function TitleSelectErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        TitleSelectErrorMessage.prototype.getMessageId = function () {
            return TitleSelectErrorMessage.ID;
        };
        TitleSelectErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        TitleSelectErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitleSelectErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitleSelectErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitleSelectErrorMessage(param1);
        };
        TitleSelectErrorMessage.prototype.serializeAs_TitleSelectErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        TitleSelectErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitleSelectErrorMessage(param1);
        };
        TitleSelectErrorMessage.prototype.deserializeAs_TitleSelectErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of TitleSelectErrorMessage.reason.');
            }
        };
        TitleSelectErrorMessage.ID = 6373;
        return TitleSelectErrorMessage;
    })(NetworkMessage);
    Protocol.TitleSelectErrorMessage = TitleSelectErrorMessage;
    var TitleSelectRequestMessage = (function (_super) {
        __extends(TitleSelectRequestMessage, _super);
        function TitleSelectRequestMessage() {
            this.titleId = 0;
            _super.call(this);
        }
        TitleSelectRequestMessage.prototype.getMessageId = function () {
            return TitleSelectRequestMessage.ID;
        };
        TitleSelectRequestMessage.prototype.reset = function () {
            this.titleId = 0;
        };
        TitleSelectRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitleSelectRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitleSelectRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitleSelectRequestMessage(param1);
        };
        TitleSelectRequestMessage.prototype.serializeAs_TitleSelectRequestMessage = function (param1) {
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element titleId.');
            }
            param1.writeVarShort(this.titleId);
        };
        TitleSelectRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitleSelectRequestMessage(param1);
        };
        TitleSelectRequestMessage.prototype.deserializeAs_TitleSelectRequestMessage = function (param1) {
            this.titleId = param1.readVarUhShort();
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element of TitleSelectRequestMessage.titleId.');
            }
        };
        TitleSelectRequestMessage.ID = 6365;
        return TitleSelectRequestMessage;
    })(NetworkMessage);
    Protocol.TitleSelectRequestMessage = TitleSelectRequestMessage;
    var TitleSelectedMessage = (function (_super) {
        __extends(TitleSelectedMessage, _super);
        function TitleSelectedMessage() {
            this.titleId = 0;
            _super.call(this);
        }
        TitleSelectedMessage.prototype.getMessageId = function () {
            return TitleSelectedMessage.ID;
        };
        TitleSelectedMessage.prototype.reset = function () {
            this.titleId = 0;
        };
        TitleSelectedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitleSelectedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitleSelectedMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitleSelectedMessage(param1);
        };
        TitleSelectedMessage.prototype.serializeAs_TitleSelectedMessage = function (param1) {
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element titleId.');
            }
            param1.writeVarShort(this.titleId);
        };
        TitleSelectedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitleSelectedMessage(param1);
        };
        TitleSelectedMessage.prototype.deserializeAs_TitleSelectedMessage = function (param1) {
            this.titleId = param1.readVarUhShort();
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element of TitleSelectedMessage.titleId.');
            }
        };
        TitleSelectedMessage.ID = 6366;
        return TitleSelectedMessage;
    })(NetworkMessage);
    Protocol.TitleSelectedMessage = TitleSelectedMessage;
    var TitlesAndOrnamentsListMessage = (function (_super) {
        __extends(TitlesAndOrnamentsListMessage, _super);
        function TitlesAndOrnamentsListMessage() {
            this.titles = [];
            this.ornaments = [];
            this.activeTitle = 0;
            this.activeOrnament = 0;
            _super.call(this);
        }
        TitlesAndOrnamentsListMessage.prototype.getMessageId = function () {
            return TitlesAndOrnamentsListMessage.ID;
        };
        TitlesAndOrnamentsListMessage.prototype.reset = function () {
            this.titles = [];
            this.ornaments = [];
            this.activeTitle = 0;
            this.activeOrnament = 0;
        };
        TitlesAndOrnamentsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitlesAndOrnamentsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitlesAndOrnamentsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitlesAndOrnamentsListMessage(param1);
        };
        TitlesAndOrnamentsListMessage.prototype.serializeAs_TitlesAndOrnamentsListMessage = function (param1) {
            param1.writeShort(this.titles.length);
            var _loc2_ = 0;
            while (_loc2_ < this.titles.length) {
                if (this.titles[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.titles[_loc2_] + ') on element 1 (starting at 1) of titles.');
                }
                param1.writeVarShort(this.titles[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.ornaments.length);
            var _loc3_ = 0;
            while (_loc3_ < this.ornaments.length) {
                if (this.ornaments[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.ornaments[_loc3_] + ') on element 2 (starting at 1) of ornaments.');
                }
                param1.writeVarShort(this.ornaments[_loc3_]);
                _loc3_++;
            }
            if (this.activeTitle < 0) {
                throw new Error('Forbidden value (' + this.activeTitle + ') on element activeTitle.');
            }
            param1.writeVarShort(this.activeTitle);
            if (this.activeOrnament < 0) {
                throw new Error('Forbidden value (' + this.activeOrnament + ') on element activeOrnament.');
            }
            param1.writeVarShort(this.activeOrnament);
        };
        TitlesAndOrnamentsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitlesAndOrnamentsListMessage(param1);
        };
        TitlesAndOrnamentsListMessage.prototype.deserializeAs_TitlesAndOrnamentsListMessage = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of titles.');
                }
                this.titles.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of ornaments.');
                }
                this.ornaments.push(_loc7_);
                _loc5_++;
            }
            this.activeTitle = param1.readVarUhShort();
            if (this.activeTitle < 0) {
                throw new Error('Forbidden value (' + this.activeTitle + ') on element of TitlesAndOrnamentsListMessage.activeTitle.');
            }
            this.activeOrnament = param1.readVarUhShort();
            if (this.activeOrnament < 0) {
                throw new Error('Forbidden value (' + this.activeOrnament + ') on element of TitlesAndOrnamentsListMessage.activeOrnament.');
            }
        };
        TitlesAndOrnamentsListMessage.ID = 6367;
        return TitlesAndOrnamentsListMessage;
    })(NetworkMessage);
    Protocol.TitlesAndOrnamentsListMessage = TitlesAndOrnamentsListMessage;
    var TitlesAndOrnamentsListRequestMessage = (function (_super) {
        __extends(TitlesAndOrnamentsListRequestMessage, _super);
        function TitlesAndOrnamentsListRequestMessage() {
            _super.call(this);
        }
        TitlesAndOrnamentsListRequestMessage.prototype.getMessageId = function () {
            return TitlesAndOrnamentsListRequestMessage.ID;
        };
        TitlesAndOrnamentsListRequestMessage.prototype.reset = function () {
        };
        TitlesAndOrnamentsListRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TitlesAndOrnamentsListRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TitlesAndOrnamentsListRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_TitlesAndOrnamentsListRequestMessage(param1);
        };
        TitlesAndOrnamentsListRequestMessage.prototype.serializeAs_TitlesAndOrnamentsListRequestMessage = function (param1) {
        };
        TitlesAndOrnamentsListRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TitlesAndOrnamentsListRequestMessage(param1);
        };
        TitlesAndOrnamentsListRequestMessage.prototype.deserializeAs_TitlesAndOrnamentsListRequestMessage = function (param1) {
        };
        TitlesAndOrnamentsListRequestMessage.ID = 6363;
        return TitlesAndOrnamentsListRequestMessage;
    })(NetworkMessage);
    Protocol.TitlesAndOrnamentsListRequestMessage = TitlesAndOrnamentsListRequestMessage;
    var ClientUIOpenedByObjectMessage = (function (_super) {
        __extends(ClientUIOpenedByObjectMessage, _super);
        function ClientUIOpenedByObjectMessage() {
            this.uid = 0;
            _super.call(this);
        }
        ClientUIOpenedByObjectMessage.prototype.getMessageId = function () {
            return ClientUIOpenedByObjectMessage.ID;
        };
        ClientUIOpenedByObjectMessage.prototype.reset = function () {
            this.uid = 0;
        };
        ClientUIOpenedByObjectMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ClientUIOpenedByObjectMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ClientUIOpenedByObjectMessage.prototype.serialize = function (param1) {
            this.serializeAs_ClientUIOpenedByObjectMessage(param1);
        };
        ClientUIOpenedByObjectMessage.prototype.serializeAs_ClientUIOpenedByObjectMessage = function (param1) {
            _super.prototype.serializeAs_ClientUIOpenedMessage.call(this, param1);
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeVarInt(this.uid);
        };
        ClientUIOpenedByObjectMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ClientUIOpenedByObjectMessage(param1);
        };
        ClientUIOpenedByObjectMessage.prototype.deserializeAs_ClientUIOpenedByObjectMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.uid = param1.readVarUhInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of ClientUIOpenedByObjectMessage.uid.');
            }
        };
        ClientUIOpenedByObjectMessage.ID = 6463;
        return ClientUIOpenedByObjectMessage;
    })(ClientUIOpenedMessage);
    Protocol.ClientUIOpenedByObjectMessage = ClientUIOpenedByObjectMessage;
    var ClientUIOpenedMessage = (function (_super) {
        __extends(ClientUIOpenedMessage, _super);
        function ClientUIOpenedMessage() {
            this.type = 0;
            _super.call(this);
        }
        ClientUIOpenedMessage.prototype.getMessageId = function () {
            return ClientUIOpenedMessage.ID;
        };
        ClientUIOpenedMessage.prototype.reset = function () {
            this.type = 0;
        };
        ClientUIOpenedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ClientUIOpenedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ClientUIOpenedMessage.prototype.serialize = function (param1) {
            this.serializeAs_ClientUIOpenedMessage(param1);
        };
        ClientUIOpenedMessage.prototype.serializeAs_ClientUIOpenedMessage = function (param1) {
            param1.writeByte(this.type);
        };
        ClientUIOpenedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ClientUIOpenedMessage(param1);
        };
        ClientUIOpenedMessage.prototype.deserializeAs_ClientUIOpenedMessage = function (param1) {
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of ClientUIOpenedMessage.type.');
            }
        };
        ClientUIOpenedMessage.ID = 6459;
        return ClientUIOpenedMessage;
    })(NetworkMessage);
    Protocol.ClientUIOpenedMessage = ClientUIOpenedMessage;
    var ProtocolRequired = (function (_super) {
        __extends(ProtocolRequired, _super);
        function ProtocolRequired() {
            this.requiredVersion = 0;
            this.currentVersion = 0;
            _super.call(this);
        }
        ProtocolRequired.prototype.getMessageId = function () {
            return ProtocolRequired.ID;
        };
        ProtocolRequired.prototype.reset = function () {
            this.requiredVersion = 0;
            this.currentVersion = 0;
        };
        ProtocolRequired.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ProtocolRequired.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ProtocolRequired.prototype.serialize = function (param1) {
            this.serializeAs_ProtocolRequired(param1);
        };
        ProtocolRequired.prototype.serializeAs_ProtocolRequired = function (param1) {
            if (this.requiredVersion < 0) {
                throw new Error('Forbidden value (' + this.requiredVersion + ') on element requiredVersion.');
            }
            param1.writeInt(this.requiredVersion);
            if (this.currentVersion < 0) {
                throw new Error('Forbidden value (' + this.currentVersion + ') on element currentVersion.');
            }
            param1.writeInt(this.currentVersion);
        };
        ProtocolRequired.prototype.deserialize = function (param1) {
            this.deserializeAs_ProtocolRequired(param1);
        };
        ProtocolRequired.prototype.deserializeAs_ProtocolRequired = function (param1) {
            this.requiredVersion = param1.readInt();
            if (this.requiredVersion < 0) {
                throw new Error('Forbidden value (' + this.requiredVersion + ') on element of ProtocolRequired.requiredVersion.');
            }
            this.currentVersion = param1.readInt();
            if (this.currentVersion < 0) {
                throw new Error('Forbidden value (' + this.currentVersion + ') on element of ProtocolRequired.currentVersion.');
            }
        };
        ProtocolRequired.ID = 1;
        return ProtocolRequired;
    })(NetworkMessage);
    Protocol.ProtocolRequired = ProtocolRequired;
    var LoginQueueStatusMessage = (function (_super) {
        __extends(LoginQueueStatusMessage, _super);
        function LoginQueueStatusMessage() {
            this.position = 0;
            this.total = 0;
            _super.call(this);
        }
        LoginQueueStatusMessage.prototype.getMessageId = function () {
            return LoginQueueStatusMessage.ID;
        };
        LoginQueueStatusMessage.prototype.reset = function () {
            this.position = 0;
            this.total = 0;
        };
        LoginQueueStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        LoginQueueStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        LoginQueueStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_LoginQueueStatusMessage(param1);
        };
        LoginQueueStatusMessage.prototype.serializeAs_LoginQueueStatusMessage = function (param1) {
            if (this.position < 0 || this.position > 65535) {
                throw new Error('Forbidden value (' + this.position + ') on element position.');
            }
            param1.writeShort(this.position);
            if (this.total < 0 || this.total > 65535) {
                throw new Error('Forbidden value (' + this.total + ') on element total.');
            }
            param1.writeShort(this.total);
        };
        LoginQueueStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_LoginQueueStatusMessage(param1);
        };
        LoginQueueStatusMessage.prototype.deserializeAs_LoginQueueStatusMessage = function (param1) {
            this.position = param1.readUnsignedShort();
            if (this.position < 0 || this.position > 65535) {
                throw new Error('Forbidden value (' + this.position + ') on element of LoginQueueStatusMessage.position.');
            }
            this.total = param1.readUnsignedShort();
            if (this.total < 0 || this.total > 65535) {
                throw new Error('Forbidden value (' + this.total + ') on element of LoginQueueStatusMessage.total.');
            }
        };
        LoginQueueStatusMessage.ID = 10;
        return LoginQueueStatusMessage;
    })(NetworkMessage);
    Protocol.LoginQueueStatusMessage = LoginQueueStatusMessage;
    var QueueStatusMessage = (function (_super) {
        __extends(QueueStatusMessage, _super);
        function QueueStatusMessage() {
            this.position = 0;
            this.total = 0;
            _super.call(this);
        }
        QueueStatusMessage.prototype.getMessageId = function () {
            return QueueStatusMessage.ID;
        };
        QueueStatusMessage.prototype.reset = function () {
            this.position = 0;
            this.total = 0;
        };
        QueueStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        QueueStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        QueueStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_QueueStatusMessage(param1);
        };
        QueueStatusMessage.prototype.serializeAs_QueueStatusMessage = function (param1) {
            if (this.position < 0 || this.position > 65535) {
                throw new Error('Forbidden value (' + this.position + ') on element position.');
            }
            param1.writeShort(this.position);
            if (this.total < 0 || this.total > 65535) {
                throw new Error('Forbidden value (' + this.total + ') on element total.');
            }
            param1.writeShort(this.total);
        };
        QueueStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_QueueStatusMessage(param1);
        };
        QueueStatusMessage.prototype.deserializeAs_QueueStatusMessage = function (param1) {
            this.position = param1.readUnsignedShort();
            if (this.position < 0 || this.position > 65535) {
                throw new Error('Forbidden value (' + this.position + ') on element of QueueStatusMessage.position.');
            }
            this.total = param1.readUnsignedShort();
            if (this.total < 0 || this.total > 65535) {
                throw new Error('Forbidden value (' + this.total + ') on element of QueueStatusMessage.total.');
            }
        };
        QueueStatusMessage.ID = 6100;
        return QueueStatusMessage;
    })(NetworkMessage);
    Protocol.QueueStatusMessage = QueueStatusMessage;
    var TrustStatusMessage = (function (_super) {
        __extends(TrustStatusMessage, _super);
        function TrustStatusMessage() {
            this.trusted = false;
            this.certified = false;
            _super.call(this);
        }
        TrustStatusMessage.prototype.getMessageId = function () {
            return TrustStatusMessage.ID;
        };
        TrustStatusMessage.prototype.reset = function () {
            this.trusted = false;
            this.certified = false;
        };
        TrustStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        TrustStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        TrustStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_TrustStatusMessage(param1);
        };
        TrustStatusMessage.prototype.serializeAs_TrustStatusMessage = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.trusted);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.certified);
            param1.writeByte(_loc2_);
        };
        TrustStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_TrustStatusMessage(param1);
        };
        TrustStatusMessage.prototype.deserializeAs_TrustStatusMessage = function (param1) {
            var _loc2_ = param1.readByte();
            this.trusted = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.certified = BooleanByteWrapper.getFlag(_loc2_, 1);
        };
        TrustStatusMessage.ID = 6267;
        return TrustStatusMessage;
    })(NetworkMessage);
    Protocol.TrustStatusMessage = TrustStatusMessage;
    var CheckFileMessage = (function (_super) {
        __extends(CheckFileMessage, _super);
        function CheckFileMessage() {
            this.filenameHash = '';
            this.type = 0;
            this.value = '';
            _super.call(this);
        }
        CheckFileMessage.prototype.getMessageId = function () {
            return CheckFileMessage.ID;
        };
        CheckFileMessage.prototype.reset = function () {
            this.filenameHash = '';
            this.type = 0;
            this.value = '';
        };
        CheckFileMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CheckFileMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CheckFileMessage.prototype.serialize = function (param1) {
            this.serializeAs_CheckFileMessage(param1);
        };
        CheckFileMessage.prototype.serializeAs_CheckFileMessage = function (param1) {
            param1.writeUTF(this.filenameHash);
            param1.writeByte(this.type);
            param1.writeUTF(this.value);
        };
        CheckFileMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CheckFileMessage(param1);
        };
        CheckFileMessage.prototype.deserializeAs_CheckFileMessage = function (param1) {
            this.filenameHash = param1.readUTF();
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of CheckFileMessage.type.');
            }
            this.value = param1.readUTF();
        };
        CheckFileMessage.ID = 6156;
        return CheckFileMessage;
    })(NetworkMessage);
    Protocol.CheckFileMessage = CheckFileMessage;
    var CheckFileRequestMessage = (function (_super) {
        __extends(CheckFileRequestMessage, _super);
        function CheckFileRequestMessage() {
            this.filename = '';
            this.type = 0;
            _super.call(this);
        }
        CheckFileRequestMessage.prototype.getMessageId = function () {
            return CheckFileRequestMessage.ID;
        };
        CheckFileRequestMessage.prototype.reset = function () {
            this.filename = '';
            this.type = 0;
        };
        CheckFileRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CheckFileRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CheckFileRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_CheckFileRequestMessage(param1);
        };
        CheckFileRequestMessage.prototype.serializeAs_CheckFileRequestMessage = function (param1) {
            param1.writeUTF(this.filename);
            param1.writeByte(this.type);
        };
        CheckFileRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CheckFileRequestMessage(param1);
        };
        CheckFileRequestMessage.prototype.deserializeAs_CheckFileRequestMessage = function (param1) {
            this.filename = param1.readUTF();
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of CheckFileRequestMessage.type.');
            }
        };
        CheckFileRequestMessage.ID = 6154;
        return CheckFileRequestMessage;
    })(NetworkMessage);
    Protocol.CheckFileRequestMessage = CheckFileRequestMessage;
    var CheckIntegrityMessage = (function (_super) {
        __extends(CheckIntegrityMessage, _super);
        function CheckIntegrityMessage() {
            this.data = [];
            _super.call(this);
        }
        CheckIntegrityMessage.prototype.getMessageId = function () {
            return CheckIntegrityMessage.ID;
        };
        CheckIntegrityMessage.prototype.reset = function () {
            this.data = [];
        };
        CheckIntegrityMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        CheckIntegrityMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        CheckIntegrityMessage.prototype.serialize = function (param1) {
            this.serializeAs_CheckIntegrityMessage(param1);
        };
        CheckIntegrityMessage.prototype.serializeAs_CheckIntegrityMessage = function (param1) {
            param1.writeVarInt(this.data.length);
            var _loc2_ = 0;
            while (_loc2_ < this.data.length) {
                param1.writeByte(this.data[_loc2_]);
                _loc2_++;
            }
        };
        CheckIntegrityMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_CheckIntegrityMessage(param1);
        };
        CheckIntegrityMessage.prototype.deserializeAs_CheckIntegrityMessage = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readVarInt();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.data.push(_loc4_);
                _loc3_++;
            }
        };
        CheckIntegrityMessage.ID = 6372;
        return CheckIntegrityMessage;
    })(NetworkMessage);
    Protocol.CheckIntegrityMessage = CheckIntegrityMessage;
    var ClientKeyMessage = (function (_super) {
        __extends(ClientKeyMessage, _super);
        function ClientKeyMessage() {
            this.key = '';
            _super.call(this);
        }
        ClientKeyMessage.prototype.getMessageId = function () {
            return ClientKeyMessage.ID;
        };
        ClientKeyMessage.prototype.reset = function () {
            this.key = '';
        };
        ClientKeyMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ClientKeyMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ClientKeyMessage.prototype.serialize = function (param1) {
            this.serializeAs_ClientKeyMessage(param1);
        };
        ClientKeyMessage.prototype.serializeAs_ClientKeyMessage = function (param1) {
            param1.writeUTF(this.key);
        };
        ClientKeyMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ClientKeyMessage(param1);
        };
        ClientKeyMessage.prototype.deserializeAs_ClientKeyMessage = function (param1) {
            this.key = param1.readUTF();
        };
        ClientKeyMessage.ID = 5607;
        return ClientKeyMessage;
    })(NetworkMessage);
    Protocol.ClientKeyMessage = ClientKeyMessage;
    var RawDataMessage = (function (_super) {
        __extends(RawDataMessage, _super);
        function RawDataMessage() {
            this.content = new ByteArray();
            _super.call(this);
        }
        RawDataMessage.prototype.getMessageId = function () {
            return RawDataMessage.ID;
        };
        RawDataMessage.prototype.reset = function () {
            this.content = new ByteArray();
        };
        RawDataMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        RawDataMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        RawDataMessage.prototype.serialize = function (param1) {
            this.serializeAs_RawDataMessage(param1);
        };
        RawDataMessage.prototype.serializeAs_RawDataMessage = function (param1) {
            param1.writeVarInt(this.content.length);
            var _loc2_ = 0;
            while (_loc2_ < this.content.length) {
                param1.writeByte(this.content.getArray()[_loc2_]);
                _loc2_++;
            }
        };
        RawDataMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_RawDataMessage(param1);
        };
        RawDataMessage.prototype.deserializeAs_RawDataMessage = function (param1) {
            var _loc2_ = param1.readVarInt();
            param1.readBytes(this.content, 0, _loc2_);
        };
        RawDataMessage.ID = 6253;
        return RawDataMessage;
    })(NetworkMessage);
    Protocol.RawDataMessage = RawDataMessage;
    var SystemMessageDisplayMessage = (function (_super) {
        __extends(SystemMessageDisplayMessage, _super);
        function SystemMessageDisplayMessage() {
            this.hangUp = false;
            this.msgId = 0;
            this.parameters = [];
            _super.call(this);
        }
        SystemMessageDisplayMessage.prototype.getMessageId = function () {
            return SystemMessageDisplayMessage.ID;
        };
        SystemMessageDisplayMessage.prototype.reset = function () {
            this.hangUp = false;
            this.msgId = 0;
            this.parameters = [];
        };
        SystemMessageDisplayMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        SystemMessageDisplayMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        SystemMessageDisplayMessage.prototype.serialize = function (param1) {
            this.serializeAs_SystemMessageDisplayMessage(param1);
        };
        SystemMessageDisplayMessage.prototype.serializeAs_SystemMessageDisplayMessage = function (param1) {
            param1.writeBoolean(this.hangUp);
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element msgId.');
            }
            param1.writeVarShort(this.msgId);
            param1.writeShort(this.parameters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parameters.length) {
                param1.writeUTF(this.parameters[_loc2_]);
                _loc2_++;
            }
        };
        SystemMessageDisplayMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_SystemMessageDisplayMessage(param1);
        };
        SystemMessageDisplayMessage.prototype.deserializeAs_SystemMessageDisplayMessage = function (param1) {
            var _loc4_ = null;
            this.hangUp = param1.readBoolean();
            this.msgId = param1.readVarUhShort();
            if (this.msgId < 0) {
                throw new Error('Forbidden value (' + this.msgId + ') on element of SystemMessageDisplayMessage.msgId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.parameters.push(_loc4_);
                _loc3_++;
            }
        };
        SystemMessageDisplayMessage.ID = 189;
        return SystemMessageDisplayMessage;
    })(NetworkMessage);
    Protocol.SystemMessageDisplayMessage = SystemMessageDisplayMessage;
    var DownloadCurrentSpeedMessage = (function (_super) {
        __extends(DownloadCurrentSpeedMessage, _super);
        function DownloadCurrentSpeedMessage() {
            this.downloadSpeed = 0;
            _super.call(this);
        }
        DownloadCurrentSpeedMessage.prototype.getMessageId = function () {
            return DownloadCurrentSpeedMessage.ID;
        };
        DownloadCurrentSpeedMessage.prototype.reset = function () {
            this.downloadSpeed = 0;
        };
        DownloadCurrentSpeedMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DownloadCurrentSpeedMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DownloadCurrentSpeedMessage.prototype.serialize = function (param1) {
            this.serializeAs_DownloadCurrentSpeedMessage(param1);
        };
        DownloadCurrentSpeedMessage.prototype.serializeAs_DownloadCurrentSpeedMessage = function (param1) {
            if (this.downloadSpeed < 1 || this.downloadSpeed > 10) {
                throw new Error('Forbidden value (' + this.downloadSpeed + ') on element downloadSpeed.');
            }
            param1.writeByte(this.downloadSpeed);
        };
        DownloadCurrentSpeedMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DownloadCurrentSpeedMessage(param1);
        };
        DownloadCurrentSpeedMessage.prototype.deserializeAs_DownloadCurrentSpeedMessage = function (param1) {
            this.downloadSpeed = param1.readByte();
            if (this.downloadSpeed < 1 || this.downloadSpeed > 10) {
                throw new Error('Forbidden value (' + this.downloadSpeed + ') on element of DownloadCurrentSpeedMessage.downloadSpeed.');
            }
        };
        DownloadCurrentSpeedMessage.ID = 1511;
        return DownloadCurrentSpeedMessage;
    })(NetworkMessage);
    Protocol.DownloadCurrentSpeedMessage = DownloadCurrentSpeedMessage;
    var DownloadErrorMessage = (function (_super) {
        __extends(DownloadErrorMessage, _super);
        function DownloadErrorMessage() {
            this.errorId = 0;
            this.message = '';
            this.helpUrl = '';
            _super.call(this);
        }
        DownloadErrorMessage.prototype.getMessageId = function () {
            return DownloadErrorMessage.ID;
        };
        DownloadErrorMessage.prototype.reset = function () {
            this.errorId = 0;
            this.message = '';
            this.helpUrl = '';
        };
        DownloadErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DownloadErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DownloadErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_DownloadErrorMessage(param1);
        };
        DownloadErrorMessage.prototype.serializeAs_DownloadErrorMessage = function (param1) {
            param1.writeByte(this.errorId);
            param1.writeUTF(this.message);
            param1.writeUTF(this.helpUrl);
        };
        DownloadErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DownloadErrorMessage(param1);
        };
        DownloadErrorMessage.prototype.deserializeAs_DownloadErrorMessage = function (param1) {
            this.errorId = param1.readByte();
            if (this.errorId < 0) {
                throw new Error('Forbidden value (' + this.errorId + ') on element of DownloadErrorMessage.errorId.');
            }
            this.message = param1.readUTF();
            this.helpUrl = param1.readUTF();
        };
        DownloadErrorMessage.ID = 1513;
        return DownloadErrorMessage;
    })(NetworkMessage);
    Protocol.DownloadErrorMessage = DownloadErrorMessage;
    var DownloadGetCurrentSpeedRequestMessage = (function (_super) {
        __extends(DownloadGetCurrentSpeedRequestMessage, _super);
        function DownloadGetCurrentSpeedRequestMessage() {
            _super.call(this);
        }
        DownloadGetCurrentSpeedRequestMessage.prototype.getMessageId = function () {
            return DownloadGetCurrentSpeedRequestMessage.ID;
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.reset = function () {
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_DownloadGetCurrentSpeedRequestMessage(param1);
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.serializeAs_DownloadGetCurrentSpeedRequestMessage = function (param1) {
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DownloadGetCurrentSpeedRequestMessage(param1);
        };
        DownloadGetCurrentSpeedRequestMessage.prototype.deserializeAs_DownloadGetCurrentSpeedRequestMessage = function (param1) {
        };
        DownloadGetCurrentSpeedRequestMessage.ID = 1510;
        return DownloadGetCurrentSpeedRequestMessage;
    })(NetworkMessage);
    Protocol.DownloadGetCurrentSpeedRequestMessage = DownloadGetCurrentSpeedRequestMessage;
    var DownloadPartMessage = (function (_super) {
        __extends(DownloadPartMessage, _super);
        function DownloadPartMessage() {
            this.id = '';
            _super.call(this);
        }
        DownloadPartMessage.prototype.getMessageId = function () {
            return DownloadPartMessage.ID;
        };
        DownloadPartMessage.prototype.reset = function () {
            this.id = '';
        };
        DownloadPartMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DownloadPartMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DownloadPartMessage.prototype.serialize = function (param1) {
            this.serializeAs_DownloadPartMessage(param1);
        };
        DownloadPartMessage.prototype.serializeAs_DownloadPartMessage = function (param1) {
            param1.writeUTF(this.id);
        };
        DownloadPartMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DownloadPartMessage(param1);
        };
        DownloadPartMessage.prototype.deserializeAs_DownloadPartMessage = function (param1) {
            this.id = param1.readUTF();
        };
        DownloadPartMessage.ID = 1503;
        return DownloadPartMessage;
    })(NetworkMessage);
    Protocol.DownloadPartMessage = DownloadPartMessage;
    var DownloadSetSpeedRequestMessage = (function (_super) {
        __extends(DownloadSetSpeedRequestMessage, _super);
        function DownloadSetSpeedRequestMessage() {
            this.downloadSpeed = 0;
            _super.call(this);
        }
        DownloadSetSpeedRequestMessage.prototype.getMessageId = function () {
            return DownloadSetSpeedRequestMessage.ID;
        };
        DownloadSetSpeedRequestMessage.prototype.reset = function () {
            this.downloadSpeed = 0;
        };
        DownloadSetSpeedRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        DownloadSetSpeedRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        DownloadSetSpeedRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_DownloadSetSpeedRequestMessage(param1);
        };
        DownloadSetSpeedRequestMessage.prototype.serializeAs_DownloadSetSpeedRequestMessage = function (param1) {
            if (this.downloadSpeed < 1 || this.downloadSpeed > 10) {
                throw new Error('Forbidden value (' + this.downloadSpeed + ') on element downloadSpeed.');
            }
            param1.writeByte(this.downloadSpeed);
        };
        DownloadSetSpeedRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_DownloadSetSpeedRequestMessage(param1);
        };
        DownloadSetSpeedRequestMessage.prototype.deserializeAs_DownloadSetSpeedRequestMessage = function (param1) {
            this.downloadSpeed = param1.readByte();
            if (this.downloadSpeed < 1 || this.downloadSpeed > 10) {
                throw new Error('Forbidden value (' + this.downloadSpeed + ') on element of DownloadSetSpeedRequestMessage.downloadSpeed.');
            }
        };
        DownloadSetSpeedRequestMessage.ID = 1512;
        return DownloadSetSpeedRequestMessage;
    })(NetworkMessage);
    Protocol.DownloadSetSpeedRequestMessage = DownloadSetSpeedRequestMessage;
    var GetPartInfoMessage = (function (_super) {
        __extends(GetPartInfoMessage, _super);
        function GetPartInfoMessage() {
            this.id = '';
            _super.call(this);
        }
        GetPartInfoMessage.prototype.getMessageId = function () {
            return GetPartInfoMessage.ID;
        };
        GetPartInfoMessage.prototype.reset = function () {
            this.id = '';
        };
        GetPartInfoMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GetPartInfoMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GetPartInfoMessage.prototype.serialize = function (param1) {
            this.serializeAs_GetPartInfoMessage(param1);
        };
        GetPartInfoMessage.prototype.serializeAs_GetPartInfoMessage = function (param1) {
            param1.writeUTF(this.id);
        };
        GetPartInfoMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GetPartInfoMessage(param1);
        };
        GetPartInfoMessage.prototype.deserializeAs_GetPartInfoMessage = function (param1) {
            this.id = param1.readUTF();
        };
        GetPartInfoMessage.ID = 1506;
        return GetPartInfoMessage;
    })(NetworkMessage);
    Protocol.GetPartInfoMessage = GetPartInfoMessage;
    var GetPartsListMessage = (function (_super) {
        __extends(GetPartsListMessage, _super);
        function GetPartsListMessage() {
            _super.call(this);
        }
        GetPartsListMessage.prototype.getMessageId = function () {
            return GetPartsListMessage.ID;
        };
        GetPartsListMessage.prototype.reset = function () {
        };
        GetPartsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        GetPartsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        GetPartsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_GetPartsListMessage(param1);
        };
        GetPartsListMessage.prototype.serializeAs_GetPartsListMessage = function (param1) {
        };
        GetPartsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_GetPartsListMessage(param1);
        };
        GetPartsListMessage.prototype.deserializeAs_GetPartsListMessage = function (param1) {
        };
        GetPartsListMessage.ID = 1501;
        return GetPartsListMessage;
    })(NetworkMessage);
    Protocol.GetPartsListMessage = GetPartsListMessage;
    var PartInfoMessage = (function (_super) {
        __extends(PartInfoMessage, _super);
        function PartInfoMessage() {
            this.part = new ContentPart();
            this.installationPercent = 0;
            _super.call(this);
        }
        PartInfoMessage.prototype.getMessageId = function () {
            return PartInfoMessage.ID;
        };
        PartInfoMessage.prototype.reset = function () {
            this.part = new ContentPart();
            this.installationPercent = 0;
        };
        PartInfoMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartInfoMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartInfoMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartInfoMessage(param1);
        };
        PartInfoMessage.prototype.serializeAs_PartInfoMessage = function (param1) {
            this.part.serializeAs_ContentPart(param1);
            param1.writeFloat(this.installationPercent);
        };
        PartInfoMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartInfoMessage(param1);
        };
        PartInfoMessage.prototype.deserializeAs_PartInfoMessage = function (param1) {
            this.part = new ContentPart();
            this.part.deserialize(param1);
            this.installationPercent = param1.readFloat();
        };
        PartInfoMessage.ID = 1508;
        return PartInfoMessage;
    })(NetworkMessage);
    Protocol.PartInfoMessage = PartInfoMessage;
    var PartsListMessage = (function (_super) {
        __extends(PartsListMessage, _super);
        function PartsListMessage() {
            this.parts = [];
            _super.call(this);
        }
        PartsListMessage.prototype.getMessageId = function () {
            return PartsListMessage.ID;
        };
        PartsListMessage.prototype.reset = function () {
            this.parts = [];
        };
        PartsListMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        PartsListMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        PartsListMessage.prototype.serialize = function (param1) {
            this.serializeAs_PartsListMessage(param1);
        };
        PartsListMessage.prototype.serializeAs_PartsListMessage = function (param1) {
            param1.writeShort(this.parts.length);
            var _loc2_ = 0;
            while (_loc2_ < this.parts.length) {
                (this.parts[_loc2_]).serializeAs_ContentPart(param1);
                _loc2_++;
            }
        };
        PartsListMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_PartsListMessage(param1);
        };
        PartsListMessage.prototype.deserializeAs_PartsListMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ContentPart();
                _loc4_.deserialize(param1);
                this.parts.push(_loc4_);
                _loc3_++;
            }
        };
        PartsListMessage.ID = 1502;
        return PartsListMessage;
    })(NetworkMessage);
    Protocol.PartsListMessage = PartsListMessage;
    var MailStatusMessage = (function (_super) {
        __extends(MailStatusMessage, _super);
        function MailStatusMessage() {
            this.unread = 0;
            this.total = 0;
            _super.call(this);
        }
        MailStatusMessage.prototype.getMessageId = function () {
            return MailStatusMessage.ID;
        };
        MailStatusMessage.prototype.reset = function () {
            this.unread = 0;
            this.total = 0;
        };
        MailStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        MailStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        MailStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_MailStatusMessage(param1);
        };
        MailStatusMessage.prototype.serializeAs_MailStatusMessage = function (param1) {
            if (this.unread < 0) {
                throw new Error('Forbidden value (' + this.unread + ') on element unread.');
            }
            param1.writeVarShort(this.unread);
            if (this.total < 0) {
                throw new Error('Forbidden value (' + this.total + ') on element total.');
            }
            param1.writeVarShort(this.total);
        };
        MailStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_MailStatusMessage(param1);
        };
        MailStatusMessage.prototype.deserializeAs_MailStatusMessage = function (param1) {
            this.unread = param1.readVarUhShort();
            if (this.unread < 0) {
                throw new Error('Forbidden value (' + this.unread + ') on element of MailStatusMessage.unread.');
            }
            this.total = param1.readVarUhShort();
            if (this.total < 0) {
                throw new Error('Forbidden value (' + this.total + ') on element of MailStatusMessage.total.');
            }
        };
        MailStatusMessage.ID = 6275;
        return MailStatusMessage;
    })(NetworkMessage);
    Protocol.MailStatusMessage = MailStatusMessage;
    var NewMailMessage = (function (_super) {
        __extends(NewMailMessage, _super);
        function NewMailMessage() {
            this.sendersAccountId = [];
            _super.call(this);
        }
        NewMailMessage.prototype.getMessageId = function () {
            return NewMailMessage.ID;
        };
        NewMailMessage.prototype.reset = function () {
            this.sendersAccountId = [];
        };
        NewMailMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        NewMailMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        NewMailMessage.prototype.serialize = function (param1) {
            this.serializeAs_NewMailMessage(param1);
        };
        NewMailMessage.prototype.serializeAs_NewMailMessage = function (param1) {
            _super.prototype.serializeAs_MailStatusMessage.call(this, param1);
            param1.writeShort(this.sendersAccountId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.sendersAccountId.length) {
                if (this.sendersAccountId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.sendersAccountId[_loc2_] + ') on element 1 (starting at 1) of sendersAccountId.');
                }
                param1.writeInt(this.sendersAccountId[_loc2_]);
                _loc2_++;
            }
        };
        NewMailMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_NewMailMessage(param1);
        };
        NewMailMessage.prototype.deserializeAs_NewMailMessage = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of sendersAccountId.');
                }
                this.sendersAccountId.push(_loc4_);
                _loc3_++;
            }
        };
        NewMailMessage.ID = 6292;
        return NewMailMessage;
    })(MailStatusMessage);
    Protocol.NewMailMessage = NewMailMessage;
    var KrosmasterAuthTokenErrorMessage = (function (_super) {
        __extends(KrosmasterAuthTokenErrorMessage, _super);
        function KrosmasterAuthTokenErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        KrosmasterAuthTokenErrorMessage.prototype.getMessageId = function () {
            return KrosmasterAuthTokenErrorMessage.ID;
        };
        KrosmasterAuthTokenErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        KrosmasterAuthTokenErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterAuthTokenErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterAuthTokenErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterAuthTokenErrorMessage(param1);
        };
        KrosmasterAuthTokenErrorMessage.prototype.serializeAs_KrosmasterAuthTokenErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        KrosmasterAuthTokenErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterAuthTokenErrorMessage(param1);
        };
        KrosmasterAuthTokenErrorMessage.prototype.deserializeAs_KrosmasterAuthTokenErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of KrosmasterAuthTokenErrorMessage.reason.');
            }
        };
        KrosmasterAuthTokenErrorMessage.ID = 6345;
        return KrosmasterAuthTokenErrorMessage;
    })(NetworkMessage);
    Protocol.KrosmasterAuthTokenErrorMessage = KrosmasterAuthTokenErrorMessage;
    var KrosmasterAuthTokenMessage = (function (_super) {
        __extends(KrosmasterAuthTokenMessage, _super);
        function KrosmasterAuthTokenMessage() {
            this.token = '';
            _super.call(this);
        }
        KrosmasterAuthTokenMessage.prototype.getMessageId = function () {
            return KrosmasterAuthTokenMessage.ID;
        };
        KrosmasterAuthTokenMessage.prototype.reset = function () {
            this.token = '';
        };
        KrosmasterAuthTokenMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterAuthTokenMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterAuthTokenMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterAuthTokenMessage(param1);
        };
        KrosmasterAuthTokenMessage.prototype.serializeAs_KrosmasterAuthTokenMessage = function (param1) {
            param1.writeUTF(this.token);
        };
        KrosmasterAuthTokenMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterAuthTokenMessage(param1);
        };
        KrosmasterAuthTokenMessage.prototype.deserializeAs_KrosmasterAuthTokenMessage = function (param1) {
            this.token = param1.readUTF();
        };
        KrosmasterAuthTokenMessage.ID = 6351;
        return KrosmasterAuthTokenMessage;
    })(NetworkMessage);
    Protocol.KrosmasterAuthTokenMessage = KrosmasterAuthTokenMessage;
    var KrosmasterAuthTokenRequestMessage = (function (_super) {
        __extends(KrosmasterAuthTokenRequestMessage, _super);
        function KrosmasterAuthTokenRequestMessage() {
            _super.call(this);
        }
        KrosmasterAuthTokenRequestMessage.prototype.getMessageId = function () {
            return KrosmasterAuthTokenRequestMessage.ID;
        };
        KrosmasterAuthTokenRequestMessage.prototype.reset = function () {
        };
        KrosmasterAuthTokenRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterAuthTokenRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterAuthTokenRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterAuthTokenRequestMessage(param1);
        };
        KrosmasterAuthTokenRequestMessage.prototype.serializeAs_KrosmasterAuthTokenRequestMessage = function (param1) {
        };
        KrosmasterAuthTokenRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterAuthTokenRequestMessage(param1);
        };
        KrosmasterAuthTokenRequestMessage.prototype.deserializeAs_KrosmasterAuthTokenRequestMessage = function (param1) {
        };
        KrosmasterAuthTokenRequestMessage.ID = 6346;
        return KrosmasterAuthTokenRequestMessage;
    })(NetworkMessage);
    Protocol.KrosmasterAuthTokenRequestMessage = KrosmasterAuthTokenRequestMessage;
    var KrosmasterInventoryErrorMessage = (function (_super) {
        __extends(KrosmasterInventoryErrorMessage, _super);
        function KrosmasterInventoryErrorMessage() {
            this.reason = 0;
            _super.call(this);
        }
        KrosmasterInventoryErrorMessage.prototype.getMessageId = function () {
            return KrosmasterInventoryErrorMessage.ID;
        };
        KrosmasterInventoryErrorMessage.prototype.reset = function () {
            this.reason = 0;
        };
        KrosmasterInventoryErrorMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterInventoryErrorMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterInventoryErrorMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterInventoryErrorMessage(param1);
        };
        KrosmasterInventoryErrorMessage.prototype.serializeAs_KrosmasterInventoryErrorMessage = function (param1) {
            param1.writeByte(this.reason);
        };
        KrosmasterInventoryErrorMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterInventoryErrorMessage(param1);
        };
        KrosmasterInventoryErrorMessage.prototype.deserializeAs_KrosmasterInventoryErrorMessage = function (param1) {
            this.reason = param1.readByte();
            if (this.reason < 0) {
                throw new Error('Forbidden value (' + this.reason + ') on element of KrosmasterInventoryErrorMessage.reason.');
            }
        };
        KrosmasterInventoryErrorMessage.ID = 6343;
        return KrosmasterInventoryErrorMessage;
    })(NetworkMessage);
    Protocol.KrosmasterInventoryErrorMessage = KrosmasterInventoryErrorMessage;
    var KrosmasterInventoryMessage = (function (_super) {
        __extends(KrosmasterInventoryMessage, _super);
        function KrosmasterInventoryMessage() {
            this.figures = [];
            _super.call(this);
        }
        KrosmasterInventoryMessage.prototype.getMessageId = function () {
            return KrosmasterInventoryMessage.ID;
        };
        KrosmasterInventoryMessage.prototype.reset = function () {
            this.figures = [];
        };
        KrosmasterInventoryMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterInventoryMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterInventoryMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterInventoryMessage(param1);
        };
        KrosmasterInventoryMessage.prototype.serializeAs_KrosmasterInventoryMessage = function (param1) {
            param1.writeShort(this.figures.length);
            var _loc2_ = 0;
            while (_loc2_ < this.figures.length) {
                (this.figures[_loc2_]).serializeAs_KrosmasterFigure(param1);
                _loc2_++;
            }
        };
        KrosmasterInventoryMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterInventoryMessage(param1);
        };
        KrosmasterInventoryMessage.prototype.deserializeAs_KrosmasterInventoryMessage = function (param1) {
            var _loc4_ = null;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new KrosmasterFigure();
                _loc4_.deserialize(param1);
                this.figures.push(_loc4_);
                _loc3_++;
            }
        };
        KrosmasterInventoryMessage.ID = 6350;
        return KrosmasterInventoryMessage;
    })(NetworkMessage);
    Protocol.KrosmasterInventoryMessage = KrosmasterInventoryMessage;
    var KrosmasterInventoryRequestMessage = (function (_super) {
        __extends(KrosmasterInventoryRequestMessage, _super);
        function KrosmasterInventoryRequestMessage() {
            _super.call(this);
        }
        KrosmasterInventoryRequestMessage.prototype.getMessageId = function () {
            return KrosmasterInventoryRequestMessage.ID;
        };
        KrosmasterInventoryRequestMessage.prototype.reset = function () {
        };
        KrosmasterInventoryRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterInventoryRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterInventoryRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterInventoryRequestMessage(param1);
        };
        KrosmasterInventoryRequestMessage.prototype.serializeAs_KrosmasterInventoryRequestMessage = function (param1) {
        };
        KrosmasterInventoryRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterInventoryRequestMessage(param1);
        };
        KrosmasterInventoryRequestMessage.prototype.deserializeAs_KrosmasterInventoryRequestMessage = function (param1) {
        };
        KrosmasterInventoryRequestMessage.ID = 6344;
        return KrosmasterInventoryRequestMessage;
    })(NetworkMessage);
    Protocol.KrosmasterInventoryRequestMessage = KrosmasterInventoryRequestMessage;
    var KrosmasterPlayingStatusMessage = (function (_super) {
        __extends(KrosmasterPlayingStatusMessage, _super);
        function KrosmasterPlayingStatusMessage() {
            this.playing = false;
            _super.call(this);
        }
        KrosmasterPlayingStatusMessage.prototype.getMessageId = function () {
            return KrosmasterPlayingStatusMessage.ID;
        };
        KrosmasterPlayingStatusMessage.prototype.reset = function () {
            this.playing = false;
        };
        KrosmasterPlayingStatusMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterPlayingStatusMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterPlayingStatusMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterPlayingStatusMessage(param1);
        };
        KrosmasterPlayingStatusMessage.prototype.serializeAs_KrosmasterPlayingStatusMessage = function (param1) {
            param1.writeBoolean(this.playing);
        };
        KrosmasterPlayingStatusMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterPlayingStatusMessage(param1);
        };
        KrosmasterPlayingStatusMessage.prototype.deserializeAs_KrosmasterPlayingStatusMessage = function (param1) {
            this.playing = param1.readBoolean();
        };
        KrosmasterPlayingStatusMessage.ID = 6347;
        return KrosmasterPlayingStatusMessage;
    })(NetworkMessage);
    Protocol.KrosmasterPlayingStatusMessage = KrosmasterPlayingStatusMessage;
    var KrosmasterTransferMessage = (function (_super) {
        __extends(KrosmasterTransferMessage, _super);
        function KrosmasterTransferMessage() {
            this.uid = '';
            this.failure = 0;
            _super.call(this);
        }
        KrosmasterTransferMessage.prototype.getMessageId = function () {
            return KrosmasterTransferMessage.ID;
        };
        KrosmasterTransferMessage.prototype.reset = function () {
            this.uid = '';
            this.failure = 0;
        };
        KrosmasterTransferMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterTransferMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterTransferMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterTransferMessage(param1);
        };
        KrosmasterTransferMessage.prototype.serializeAs_KrosmasterTransferMessage = function (param1) {
            param1.writeUTF(this.uid);
            param1.writeByte(this.failure);
        };
        KrosmasterTransferMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterTransferMessage(param1);
        };
        KrosmasterTransferMessage.prototype.deserializeAs_KrosmasterTransferMessage = function (param1) {
            this.uid = param1.readUTF();
            this.failure = param1.readByte();
            if (this.failure < 0) {
                throw new Error('Forbidden value (' + this.failure + ') on element of KrosmasterTransferMessage.failure.');
            }
        };
        KrosmasterTransferMessage.ID = 6348;
        return KrosmasterTransferMessage;
    })(NetworkMessage);
    Protocol.KrosmasterTransferMessage = KrosmasterTransferMessage;
    var KrosmasterTransferRequestMessage = (function (_super) {
        __extends(KrosmasterTransferRequestMessage, _super);
        function KrosmasterTransferRequestMessage() {
            this.uid = '';
            _super.call(this);
        }
        KrosmasterTransferRequestMessage.prototype.getMessageId = function () {
            return KrosmasterTransferRequestMessage.ID;
        };
        KrosmasterTransferRequestMessage.prototype.reset = function () {
            this.uid = '';
        };
        KrosmasterTransferRequestMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        KrosmasterTransferRequestMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        KrosmasterTransferRequestMessage.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterTransferRequestMessage(param1);
        };
        KrosmasterTransferRequestMessage.prototype.serializeAs_KrosmasterTransferRequestMessage = function (param1) {
            param1.writeUTF(this.uid);
        };
        KrosmasterTransferRequestMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterTransferRequestMessage(param1);
        };
        KrosmasterTransferRequestMessage.prototype.deserializeAs_KrosmasterTransferRequestMessage = function (param1) {
            this.uid = param1.readUTF();
        };
        KrosmasterTransferRequestMessage.ID = 6349;
        return KrosmasterTransferRequestMessage;
    })(NetworkMessage);
    Protocol.KrosmasterTransferRequestMessage = KrosmasterTransferRequestMessage;
    var ClientYouAreDrunkMessage = (function (_super) {
        __extends(ClientYouAreDrunkMessage, _super);
        function ClientYouAreDrunkMessage() {
            _super.call(this);
        }
        ClientYouAreDrunkMessage.prototype.getMessageId = function () {
            return ClientYouAreDrunkMessage.ID;
        };
        ClientYouAreDrunkMessage.prototype.reset = function () {
        };
        ClientYouAreDrunkMessage.prototype.pack = function (param1) {
            var loc2 = new ByteArray();
            this.serialize(new CustomDataWrapper(loc2));
            NetworkMessage.writePacket(param1, this.getMessageId(), loc2);
        };
        ClientYouAreDrunkMessage.prototype.unpack = function (param1, param2) {
            this.deserialize(param1);
        };
        ClientYouAreDrunkMessage.prototype.serialize = function (param1) {
            this.serializeAs_ClientYouAreDrunkMessage(param1);
        };
        ClientYouAreDrunkMessage.prototype.serializeAs_ClientYouAreDrunkMessage = function (param1) {
            _super.prototype.serializeAs_DebugInClientMessage.call(this, param1);
        };
        ClientYouAreDrunkMessage.prototype.deserialize = function (param1) {
            this.deserializeAs_ClientYouAreDrunkMessage(param1);
        };
        ClientYouAreDrunkMessage.prototype.deserializeAs_ClientYouAreDrunkMessage = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ClientYouAreDrunkMessage.ID = 6594;
        return ClientYouAreDrunkMessage;
    })(DebugInClientMessage);
    Protocol.ClientYouAreDrunkMessage = ClientYouAreDrunkMessage;
    var StatisticData = (function () {
        function StatisticData() {
            this.actionId = 0;
        }
        StatisticData.prototype.getTypeId = function () {
            return StatisticData.ID;
        };
        StatisticData.prototype.reset = function () {
            this.actionId = 0;
        };
        StatisticData.prototype.serialize = function (param1) {
            this.serializeAs_StatisticData(param1);
        };
        StatisticData.prototype.serializeAs_StatisticData = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeVarShort(this.actionId);
        };
        StatisticData.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticData(param1);
        };
        StatisticData.prototype.deserializeAs_StatisticData = function (param1) {
            this.actionId = param1.readVarUhShort();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of StatisticData.actionId.');
            }
        };
        StatisticData.ID = 484;
        return StatisticData;
    })();
    Protocol.StatisticData = StatisticData;
    var StatisticDataBoolean = (function (_super) {
        __extends(StatisticDataBoolean, _super);
        function StatisticDataBoolean() {
            this.value = false;
            _super.call(this);
        }
        StatisticDataBoolean.prototype.getTypeId = function () {
            return StatisticDataBoolean.ID;
        };
        StatisticDataBoolean.prototype.reset = function () {
            this.value = false;
        };
        StatisticDataBoolean.prototype.serialize = function (param1) {
            this.serializeAs_StatisticDataBoolean(param1);
        };
        StatisticDataBoolean.prototype.serializeAs_StatisticDataBoolean = function (param1) {
            _super.prototype.serializeAs_StatisticData.call(this, param1);
            param1.writeBoolean(this.value);
        };
        StatisticDataBoolean.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticDataBoolean(param1);
        };
        StatisticDataBoolean.prototype.deserializeAs_StatisticDataBoolean = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readBoolean();
        };
        StatisticDataBoolean.ID = 482;
        return StatisticDataBoolean;
    })(StatisticData);
    Protocol.StatisticDataBoolean = StatisticDataBoolean;
    var StatisticDataByte = (function (_super) {
        __extends(StatisticDataByte, _super);
        function StatisticDataByte() {
            this.value = 0;
            _super.call(this);
        }
        StatisticDataByte.prototype.getTypeId = function () {
            return StatisticDataByte.ID;
        };
        StatisticDataByte.prototype.reset = function () {
            this.value = 0;
        };
        StatisticDataByte.prototype.serialize = function (param1) {
            this.serializeAs_StatisticDataByte(param1);
        };
        StatisticDataByte.prototype.serializeAs_StatisticDataByte = function (param1) {
            _super.prototype.serializeAs_StatisticData.call(this, param1);
            param1.writeByte(this.value);
        };
        StatisticDataByte.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticDataByte(param1);
        };
        StatisticDataByte.prototype.deserializeAs_StatisticDataByte = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readByte();
        };
        StatisticDataByte.ID = 486;
        return StatisticDataByte;
    })(StatisticData);
    Protocol.StatisticDataByte = StatisticDataByte;
    var StatisticDataInt = (function (_super) {
        __extends(StatisticDataInt, _super);
        function StatisticDataInt() {
            this.value = 0;
            _super.call(this);
        }
        StatisticDataInt.prototype.getTypeId = function () {
            return StatisticDataInt.ID;
        };
        StatisticDataInt.prototype.reset = function () {
            this.value = 0;
        };
        StatisticDataInt.prototype.serialize = function (param1) {
            this.serializeAs_StatisticDataInt(param1);
        };
        StatisticDataInt.prototype.serializeAs_StatisticDataInt = function (param1) {
            _super.prototype.serializeAs_StatisticData.call(this, param1);
            param1.writeInt(this.value);
        };
        StatisticDataInt.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticDataInt(param1);
        };
        StatisticDataInt.prototype.deserializeAs_StatisticDataInt = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readInt();
        };
        StatisticDataInt.ID = 485;
        return StatisticDataInt;
    })(StatisticData);
    Protocol.StatisticDataInt = StatisticDataInt;
    var StatisticDataShort = (function (_super) {
        __extends(StatisticDataShort, _super);
        function StatisticDataShort() {
            this.value = 0;
            _super.call(this);
        }
        StatisticDataShort.prototype.getTypeId = function () {
            return StatisticDataShort.ID;
        };
        StatisticDataShort.prototype.reset = function () {
            this.value = 0;
        };
        StatisticDataShort.prototype.serialize = function (param1) {
            this.serializeAs_StatisticDataShort(param1);
        };
        StatisticDataShort.prototype.serializeAs_StatisticDataShort = function (param1) {
            _super.prototype.serializeAs_StatisticData.call(this, param1);
            param1.writeShort(this.value);
        };
        StatisticDataShort.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticDataShort(param1);
        };
        StatisticDataShort.prototype.deserializeAs_StatisticDataShort = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readShort();
        };
        StatisticDataShort.ID = 488;
        return StatisticDataShort;
    })(StatisticData);
    Protocol.StatisticDataShort = StatisticDataShort;
    var StatisticDataString = (function (_super) {
        __extends(StatisticDataString, _super);
        function StatisticDataString() {
            this.value = '';
            _super.call(this);
        }
        StatisticDataString.prototype.getTypeId = function () {
            return StatisticDataString.ID;
        };
        StatisticDataString.prototype.reset = function () {
            this.value = '';
        };
        StatisticDataString.prototype.serialize = function (param1) {
            this.serializeAs_StatisticDataString(param1);
        };
        StatisticDataString.prototype.serializeAs_StatisticDataString = function (param1) {
            _super.prototype.serializeAs_StatisticData.call(this, param1);
            param1.writeUTF(this.value);
        };
        StatisticDataString.prototype.deserialize = function (param1) {
            this.deserializeAs_StatisticDataString(param1);
        };
        StatisticDataString.prototype.deserializeAs_StatisticDataString = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readUTF();
        };
        StatisticDataString.ID = 487;
        return StatisticDataString;
    })(StatisticData);
    Protocol.StatisticDataString = StatisticDataString;
    var GameServerInformations = (function () {
        function GameServerInformations() {
            this.id = 0;
            this.type = -1;
            this.status = 1;
            this.completion = 0;
            this.isSelectable = false;
            this.charactersCount = 0;
            this.charactersSlots = 0;
            this.date = 0;
        }
        GameServerInformations.prototype.getTypeId = function () {
            return GameServerInformations.ID;
        };
        GameServerInformations.prototype.reset = function () {
            this.id = 0;
            this.type = -1;
            this.status = 1;
            this.completion = 0;
            this.isSelectable = false;
            this.charactersCount = 0;
            this.charactersSlots = 0;
            this.date = 0;
        };
        GameServerInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameServerInformations(param1);
        };
        GameServerInformations.prototype.serializeAs_GameServerInformations = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            param1.writeByte(this.type);
            param1.writeByte(this.status);
            param1.writeByte(this.completion);
            param1.writeBoolean(this.isSelectable);
            if (this.charactersCount < 0) {
                throw new Error('Forbidden value (' + this.charactersCount + ') on element charactersCount.');
            }
            param1.writeByte(this.charactersCount);
            if (this.charactersSlots < 0) {
                throw new Error('Forbidden value (' + this.charactersSlots + ') on element charactersSlots.');
            }
            param1.writeByte(this.charactersSlots);
            if (this.date < -9.007199254740992E15 || this.date > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.date + ') on element date.');
            }
            param1.writeDouble(this.date);
        };
        GameServerInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameServerInformations(param1);
        };
        GameServerInformations.prototype.deserializeAs_GameServerInformations = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of GameServerInformations.id.');
            }
            this.type = param1.readByte();
            this.status = param1.readByte();
            if (this.status < 0) {
                throw new Error('Forbidden value (' + this.status + ') on element of GameServerInformations.status.');
            }
            this.completion = param1.readByte();
            if (this.completion < 0) {
                throw new Error('Forbidden value (' + this.completion + ') on element of GameServerInformations.completion.');
            }
            this.isSelectable = param1.readBoolean();
            this.charactersCount = param1.readByte();
            if (this.charactersCount < 0) {
                throw new Error('Forbidden value (' + this.charactersCount + ') on element of GameServerInformations.charactersCount.');
            }
            this.charactersSlots = param1.readByte();
            if (this.charactersSlots < 0) {
                throw new Error('Forbidden value (' + this.charactersSlots + ') on element of GameServerInformations.charactersSlots.');
            }
            this.date = param1.readDouble();
            if (this.date < -9.007199254740992E15 || this.date > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.date + ') on element of GameServerInformations.date.');
            }
        };
        GameServerInformations.ID = 25;
        return GameServerInformations;
    })();
    Protocol.GameServerInformations = GameServerInformations;
    var Achievement = (function () {
        function Achievement() {
            this.id = 0;
            this.finishedObjective = [];
            this.startedObjectives = [];
        }
        Achievement.prototype.getTypeId = function () {
            return Achievement.ID;
        };
        Achievement.prototype.reset = function () {
            this.id = 0;
            this.finishedObjective = [];
            this.startedObjectives = [];
        };
        Achievement.prototype.serialize = function (param1) {
            this.serializeAs_Achievement(param1);
        };
        Achievement.prototype.serializeAs_Achievement = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            param1.writeShort(this.finishedObjective.length);
            var _loc2_ = 0;
            while (_loc2_ < this.finishedObjective.length) {
                (this.finishedObjective[_loc2_]).serializeAs_AchievementObjective(param1);
                _loc2_++;
            }
            param1.writeShort(this.startedObjectives.length);
            var _loc3_ = 0;
            while (_loc3_ < this.startedObjectives.length) {
                (this.startedObjectives[_loc3_]).serializeAs_AchievementStartedObjective(param1);
                _loc3_++;
            }
        };
        Achievement.prototype.deserialize = function (param1) {
            this.deserializeAs_Achievement(param1);
        };
        Achievement.prototype.deserializeAs_Achievement = function (param1) {
            var _loc6_ = null;
            var _loc7_ = null;
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of Achievement.id.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = new AchievementObjective();
                _loc6_.deserialize(param1);
                this.finishedObjective.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = new AchievementStartedObjective();
                _loc7_.deserialize(param1);
                this.startedObjectives.push(_loc7_);
                _loc5_++;
            }
        };
        Achievement.ID = 363;
        return Achievement;
    })();
    Protocol.Achievement = Achievement;
    var AchievementObjective = (function () {
        function AchievementObjective() {
            this.id = 0;
            this.maxValue = 0;
        }
        AchievementObjective.prototype.getTypeId = function () {
            return AchievementObjective.ID;
        };
        AchievementObjective.prototype.reset = function () {
            this.id = 0;
            this.maxValue = 0;
        };
        AchievementObjective.prototype.serialize = function (param1) {
            this.serializeAs_AchievementObjective(param1);
        };
        AchievementObjective.prototype.serializeAs_AchievementObjective = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
            if (this.maxValue < 0) {
                throw new Error('Forbidden value (' + this.maxValue + ') on element maxValue.');
            }
            param1.writeVarShort(this.maxValue);
        };
        AchievementObjective.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementObjective(param1);
        };
        AchievementObjective.prototype.deserializeAs_AchievementObjective = function (param1) {
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of AchievementObjective.id.');
            }
            this.maxValue = param1.readVarUhShort();
            if (this.maxValue < 0) {
                throw new Error('Forbidden value (' + this.maxValue + ') on element of AchievementObjective.maxValue.');
            }
        };
        AchievementObjective.ID = 404;
        return AchievementObjective;
    })();
    Protocol.AchievementObjective = AchievementObjective;
    var AchievementRewardable = (function () {
        function AchievementRewardable() {
            this.id = 0;
            this.finishedlevel = 0;
        }
        AchievementRewardable.prototype.getTypeId = function () {
            return AchievementRewardable.ID;
        };
        AchievementRewardable.prototype.reset = function () {
            this.id = 0;
            this.finishedlevel = 0;
        };
        AchievementRewardable.prototype.serialize = function (param1) {
            this.serializeAs_AchievementRewardable(param1);
        };
        AchievementRewardable.prototype.serializeAs_AchievementRewardable = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            if (this.finishedlevel < 0 || this.finishedlevel > 200) {
                throw new Error('Forbidden value (' + this.finishedlevel + ') on element finishedlevel.');
            }
            param1.writeByte(this.finishedlevel);
        };
        AchievementRewardable.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementRewardable(param1);
        };
        AchievementRewardable.prototype.deserializeAs_AchievementRewardable = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of AchievementRewardable.id.');
            }
            this.finishedlevel = param1.readUnsignedByte();
            if (this.finishedlevel < 0 || this.finishedlevel > 200) {
                throw new Error('Forbidden value (' + this.finishedlevel + ') on element of AchievementRewardable.finishedlevel.');
            }
        };
        AchievementRewardable.ID = 412;
        return AchievementRewardable;
    })();
    Protocol.AchievementRewardable = AchievementRewardable;
    var AchievementStartedObjective = (function (_super) {
        __extends(AchievementStartedObjective, _super);
        function AchievementStartedObjective() {
            this.value = 0;
            _super.call(this);
        }
        AchievementStartedObjective.prototype.getTypeId = function () {
            return AchievementStartedObjective.ID;
        };
        AchievementStartedObjective.prototype.reset = function () {
            this.value = 0;
        };
        AchievementStartedObjective.prototype.serialize = function (param1) {
            this.serializeAs_AchievementStartedObjective(param1);
        };
        AchievementStartedObjective.prototype.serializeAs_AchievementStartedObjective = function (param1) {
            _super.prototype.serializeAs_AchievementObjective.call(this, param1);
            if (this.value < 0) {
                throw new Error('Forbidden value (' + this.value + ') on element value.');
            }
            param1.writeVarShort(this.value);
        };
        AchievementStartedObjective.prototype.deserialize = function (param1) {
            this.deserializeAs_AchievementStartedObjective(param1);
        };
        AchievementStartedObjective.prototype.deserializeAs_AchievementStartedObjective = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readVarUhShort();
            if (this.value < 0) {
                throw new Error('Forbidden value (' + this.value + ') on element of AchievementStartedObjective.value.');
            }
        };
        AchievementStartedObjective.ID = 402;
        return AchievementStartedObjective;
    })(AchievementObjective);
    Protocol.AchievementStartedObjective = AchievementStartedObjective;
    var FightDispellableEffectExtendedInformations = (function () {
        function FightDispellableEffectExtendedInformations() {
            this.actionId = 0;
            this.sourceId = 0;
            this.effect = new AbstractFightDispellableEffect();
        }
        FightDispellableEffectExtendedInformations.prototype.getTypeId = function () {
            return FightDispellableEffectExtendedInformations.ID;
        };
        FightDispellableEffectExtendedInformations.prototype.reset = function () {
            this.actionId = 0;
            this.sourceId = 0;
            this.effect = new AbstractFightDispellableEffect();
        };
        FightDispellableEffectExtendedInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightDispellableEffectExtendedInformations(param1);
        };
        FightDispellableEffectExtendedInformations.prototype.serializeAs_FightDispellableEffectExtendedInformations = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeVarShort(this.actionId);
            param1.writeInt(this.sourceId);
            param1.writeShort(this.effect.getTypeId());
            this.effect.serialize(param1);
        };
        FightDispellableEffectExtendedInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightDispellableEffectExtendedInformations(param1);
        };
        FightDispellableEffectExtendedInformations.prototype.deserializeAs_FightDispellableEffectExtendedInformations = function (param1) {
            this.actionId = param1.readVarUhShort();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of FightDispellableEffectExtendedInformations.actionId.');
            }
            this.sourceId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            this.effect = ProtocolTypeManager.getInstance(AbstractFightDispellableEffect, _loc2_);
            this.effect.deserialize(param1);
        };
        FightDispellableEffectExtendedInformations.ID = 208;
        return FightDispellableEffectExtendedInformations;
    })();
    Protocol.FightDispellableEffectExtendedInformations = FightDispellableEffectExtendedInformations;
    var AbstractFightDispellableEffect = (function () {
        function AbstractFightDispellableEffect() {
            this.uid = 0;
            this.targetId = 0;
            this.turnDuration = 0;
            this.dispelable = 1;
            this.spellId = 0;
            this.effectId = 0;
            this.parentBoostUid = 0;
        }
        AbstractFightDispellableEffect.prototype.getTypeId = function () {
            return AbstractFightDispellableEffect.ID;
        };
        AbstractFightDispellableEffect.prototype.reset = function () {
            this.uid = 0;
            this.targetId = 0;
            this.turnDuration = 0;
            this.dispelable = 1;
            this.spellId = 0;
            this.effectId = 0;
            this.parentBoostUid = 0;
        };
        AbstractFightDispellableEffect.prototype.serialize = function (param1) {
            this.serializeAs_AbstractFightDispellableEffect(param1);
        };
        AbstractFightDispellableEffect.prototype.serializeAs_AbstractFightDispellableEffect = function (param1) {
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeVarInt(this.uid);
            param1.writeInt(this.targetId);
            param1.writeShort(this.turnDuration);
            param1.writeByte(this.dispelable);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            if (this.effectId < 0) {
                throw new Error('Forbidden value (' + this.effectId + ') on element effectId.');
            }
            param1.writeVarInt(this.effectId);
            if (this.parentBoostUid < 0) {
                throw new Error('Forbidden value (' + this.parentBoostUid + ') on element parentBoostUid.');
            }
            param1.writeVarInt(this.parentBoostUid);
        };
        AbstractFightDispellableEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractFightDispellableEffect(param1);
        };
        AbstractFightDispellableEffect.prototype.deserializeAs_AbstractFightDispellableEffect = function (param1) {
            this.uid = param1.readVarUhInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of AbstractFightDispellableEffect.uid.');
            }
            this.targetId = param1.readInt();
            this.turnDuration = param1.readShort();
            this.dispelable = param1.readByte();
            if (this.dispelable < 0) {
                throw new Error('Forbidden value (' + this.dispelable + ') on element of AbstractFightDispellableEffect.dispelable.');
            }
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of AbstractFightDispellableEffect.spellId.');
            }
            this.effectId = param1.readVarUhInt();
            if (this.effectId < 0) {
                throw new Error('Forbidden value (' + this.effectId + ') on element of AbstractFightDispellableEffect.effectId.');
            }
            this.parentBoostUid = param1.readVarUhInt();
            if (this.parentBoostUid < 0) {
                throw new Error('Forbidden value (' + this.parentBoostUid + ') on element of AbstractFightDispellableEffect.parentBoostUid.');
            }
        };
        AbstractFightDispellableEffect.ID = 206;
        return AbstractFightDispellableEffect;
    })();
    Protocol.AbstractFightDispellableEffect = AbstractFightDispellableEffect;
    var FightTemporaryBoostEffect = (function (_super) {
        __extends(FightTemporaryBoostEffect, _super);
        function FightTemporaryBoostEffect() {
            this.delta = 0;
            _super.call(this);
        }
        FightTemporaryBoostEffect.prototype.getTypeId = function () {
            return FightTemporaryBoostEffect.ID;
        };
        FightTemporaryBoostEffect.prototype.reset = function () {
            this.delta = 0;
        };
        FightTemporaryBoostEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTemporaryBoostEffect(param1);
        };
        FightTemporaryBoostEffect.prototype.serializeAs_FightTemporaryBoostEffect = function (param1) {
            _super.prototype.serializeAs_AbstractFightDispellableEffect.call(this, param1);
            param1.writeShort(this.delta);
        };
        FightTemporaryBoostEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTemporaryBoostEffect(param1);
        };
        FightTemporaryBoostEffect.prototype.deserializeAs_FightTemporaryBoostEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.delta = param1.readShort();
        };
        FightTemporaryBoostEffect.ID = 209;
        return FightTemporaryBoostEffect;
    })(AbstractFightDispellableEffect);
    Protocol.FightTemporaryBoostEffect = FightTemporaryBoostEffect;
    var FightTemporaryBoostStateEffect = (function (_super) {
        __extends(FightTemporaryBoostStateEffect, _super);
        function FightTemporaryBoostStateEffect() {
            this.stateId = 0;
            _super.call(this);
        }
        FightTemporaryBoostStateEffect.prototype.getTypeId = function () {
            return FightTemporaryBoostStateEffect.ID;
        };
        FightTemporaryBoostStateEffect.prototype.reset = function () {
            this.stateId = 0;
        };
        FightTemporaryBoostStateEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTemporaryBoostStateEffect(param1);
        };
        FightTemporaryBoostStateEffect.prototype.serializeAs_FightTemporaryBoostStateEffect = function (param1) {
            _super.prototype.serializeAs_FightTemporaryBoostEffect.call(this, param1);
            param1.writeShort(this.stateId);
        };
        FightTemporaryBoostStateEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTemporaryBoostStateEffect(param1);
        };
        FightTemporaryBoostStateEffect.prototype.deserializeAs_FightTemporaryBoostStateEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.stateId = param1.readShort();
        };
        FightTemporaryBoostStateEffect.ID = 214;
        return FightTemporaryBoostStateEffect;
    })(FightTemporaryBoostEffect);
    Protocol.FightTemporaryBoostStateEffect = FightTemporaryBoostStateEffect;
    var FightTemporaryBoostWeaponDamagesEffect = (function (_super) {
        __extends(FightTemporaryBoostWeaponDamagesEffect, _super);
        function FightTemporaryBoostWeaponDamagesEffect() {
            this.weaponTypeId = 0;
            _super.call(this);
        }
        FightTemporaryBoostWeaponDamagesEffect.prototype.getTypeId = function () {
            return FightTemporaryBoostWeaponDamagesEffect.ID;
        };
        FightTemporaryBoostWeaponDamagesEffect.prototype.reset = function () {
            this.weaponTypeId = 0;
        };
        FightTemporaryBoostWeaponDamagesEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTemporaryBoostWeaponDamagesEffect(param1);
        };
        FightTemporaryBoostWeaponDamagesEffect.prototype.serializeAs_FightTemporaryBoostWeaponDamagesEffect = function (param1) {
            _super.prototype.serializeAs_FightTemporaryBoostEffect.call(this, param1);
            param1.writeShort(this.weaponTypeId);
        };
        FightTemporaryBoostWeaponDamagesEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTemporaryBoostWeaponDamagesEffect(param1);
        };
        FightTemporaryBoostWeaponDamagesEffect.prototype.deserializeAs_FightTemporaryBoostWeaponDamagesEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.weaponTypeId = param1.readShort();
        };
        FightTemporaryBoostWeaponDamagesEffect.ID = 211;
        return FightTemporaryBoostWeaponDamagesEffect;
    })(FightTemporaryBoostEffect);
    Protocol.FightTemporaryBoostWeaponDamagesEffect = FightTemporaryBoostWeaponDamagesEffect;
    var FightTemporarySpellBoostEffect = (function (_super) {
        __extends(FightTemporarySpellBoostEffect, _super);
        function FightTemporarySpellBoostEffect() {
            this.boostedSpellId = 0;
            _super.call(this);
        }
        FightTemporarySpellBoostEffect.prototype.getTypeId = function () {
            return FightTemporarySpellBoostEffect.ID;
        };
        FightTemporarySpellBoostEffect.prototype.reset = function () {
            this.boostedSpellId = 0;
        };
        FightTemporarySpellBoostEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTemporarySpellBoostEffect(param1);
        };
        FightTemporarySpellBoostEffect.prototype.serializeAs_FightTemporarySpellBoostEffect = function (param1) {
            _super.prototype.serializeAs_FightTemporaryBoostEffect.call(this, param1);
            if (this.boostedSpellId < 0) {
                throw new Error('Forbidden value (' + this.boostedSpellId + ') on element boostedSpellId.');
            }
            param1.writeVarShort(this.boostedSpellId);
        };
        FightTemporarySpellBoostEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTemporarySpellBoostEffect(param1);
        };
        FightTemporarySpellBoostEffect.prototype.deserializeAs_FightTemporarySpellBoostEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.boostedSpellId = param1.readVarUhShort();
            if (this.boostedSpellId < 0) {
                throw new Error('Forbidden value (' + this.boostedSpellId + ') on element of FightTemporarySpellBoostEffect.boostedSpellId.');
            }
        };
        FightTemporarySpellBoostEffect.ID = 207;
        return FightTemporarySpellBoostEffect;
    })(FightTemporaryBoostEffect);
    Protocol.FightTemporarySpellBoostEffect = FightTemporarySpellBoostEffect;
    var FightTemporarySpellImmunityEffect = (function (_super) {
        __extends(FightTemporarySpellImmunityEffect, _super);
        function FightTemporarySpellImmunityEffect() {
            this.immuneSpellId = 0;
            _super.call(this);
        }
        FightTemporarySpellImmunityEffect.prototype.getTypeId = function () {
            return FightTemporarySpellImmunityEffect.ID;
        };
        FightTemporarySpellImmunityEffect.prototype.reset = function () {
            this.immuneSpellId = 0;
        };
        FightTemporarySpellImmunityEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTemporarySpellImmunityEffect(param1);
        };
        FightTemporarySpellImmunityEffect.prototype.serializeAs_FightTemporarySpellImmunityEffect = function (param1) {
            _super.prototype.serializeAs_AbstractFightDispellableEffect.call(this, param1);
            param1.writeInt(this.immuneSpellId);
        };
        FightTemporarySpellImmunityEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTemporarySpellImmunityEffect(param1);
        };
        FightTemporarySpellImmunityEffect.prototype.deserializeAs_FightTemporarySpellImmunityEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.immuneSpellId = param1.readInt();
        };
        FightTemporarySpellImmunityEffect.ID = 366;
        return FightTemporarySpellImmunityEffect;
    })(AbstractFightDispellableEffect);
    Protocol.FightTemporarySpellImmunityEffect = FightTemporarySpellImmunityEffect;
    var FightTriggeredEffect = (function (_super) {
        __extends(FightTriggeredEffect, _super);
        function FightTriggeredEffect() {
            this.param1 = 0;
            this.param2 = 0;
            this.param3 = 0;
            this.delay = 0;
            _super.call(this);
        }
        FightTriggeredEffect.prototype.getTypeId = function () {
            return FightTriggeredEffect.ID;
        };
        FightTriggeredEffect.prototype.reset = function () {
            this.param1 = 0;
            this.param2 = 0;
            this.param3 = 0;
            this.delay = 0;
        };
        FightTriggeredEffect.prototype.serialize = function (param1) {
            this.serializeAs_FightTriggeredEffect(param1);
        };
        FightTriggeredEffect.prototype.serializeAs_FightTriggeredEffect = function (param1) {
            _super.prototype.serializeAs_AbstractFightDispellableEffect.call(this, param1);
            param1.writeInt(this.param1);
            param1.writeInt(this.param2);
            param1.writeInt(this.param3);
            param1.writeShort(this.delay);
        };
        FightTriggeredEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTriggeredEffect(param1);
        };
        FightTriggeredEffect.prototype.deserializeAs_FightTriggeredEffect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.param1 = param1.readInt();
            this.param2 = param1.readInt();
            this.param3 = param1.readInt();
            this.delay = param1.readShort();
        };
        FightTriggeredEffect.ID = 210;
        return FightTriggeredEffect;
    })(AbstractFightDispellableEffect);
    Protocol.FightTriggeredEffect = FightTriggeredEffect;
    var GameActionMark = (function () {
        function GameActionMark() {
            this.markAuthorId = 0;
            this.markTeamId = 2;
            this.markSpellId = 0;
            this.markSpellLevel = 0;
            this.markId = 0;
            this.markType = 0;
            this.markimpactCell = 0;
            this.cells = [];
            this.active = false;
        }
        GameActionMark.prototype.getTypeId = function () {
            return GameActionMark.ID;
        };
        GameActionMark.prototype.reset = function () {
            this.markAuthorId = 0;
            this.markTeamId = 2;
            this.markSpellId = 0;
            this.markSpellLevel = 0;
            this.markId = 0;
            this.markType = 0;
            this.markimpactCell = 0;
            this.cells = [];
            this.active = false;
        };
        GameActionMark.prototype.serialize = function (param1) {
            this.serializeAs_GameActionMark(param1);
        };
        GameActionMark.prototype.serializeAs_GameActionMark = function (param1) {
            param1.writeInt(this.markAuthorId);
            param1.writeByte(this.markTeamId);
            if (this.markSpellId < 0) {
                throw new Error('Forbidden value (' + this.markSpellId + ') on element markSpellId.');
            }
            param1.writeInt(this.markSpellId);
            if (this.markSpellLevel < 1 || this.markSpellLevel > 6) {
                throw new Error('Forbidden value (' + this.markSpellLevel + ') on element markSpellLevel.');
            }
            param1.writeByte(this.markSpellLevel);
            param1.writeShort(this.markId);
            param1.writeByte(this.markType);
            if (this.markimpactCell < -1 || this.markimpactCell > 559) {
                throw new Error('Forbidden value (' + this.markimpactCell + ') on element markimpactCell.');
            }
            param1.writeShort(this.markimpactCell);
            param1.writeShort(this.cells.length);
            var _loc2_ = 0;
            while (_loc2_ < this.cells.length) {
                (this.cells[_loc2_]).serializeAs_GameActionMarkedCell(param1);
                _loc2_++;
            }
            param1.writeBoolean(this.active);
        };
        GameActionMark.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionMark(param1);
        };
        GameActionMark.prototype.deserializeAs_GameActionMark = function (param1) {
            var _loc4_ = null;
            this.markAuthorId = param1.readInt();
            this.markTeamId = param1.readByte();
            if (this.markTeamId < 0) {
                throw new Error('Forbidden value (' + this.markTeamId + ') on element of GameActionMark.markTeamId.');
            }
            this.markSpellId = param1.readInt();
            if (this.markSpellId < 0) {
                throw new Error('Forbidden value (' + this.markSpellId + ') on element of GameActionMark.markSpellId.');
            }
            this.markSpellLevel = param1.readByte();
            if (this.markSpellLevel < 1 || this.markSpellLevel > 6) {
                throw new Error('Forbidden value (' + this.markSpellLevel + ') on element of GameActionMark.markSpellLevel.');
            }
            this.markId = param1.readShort();
            this.markType = param1.readByte();
            this.markimpactCell = param1.readShort();
            if (this.markimpactCell < -1 || this.markimpactCell > 559) {
                throw new Error('Forbidden value (' + this.markimpactCell + ') on element of GameActionMark.markimpactCell.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GameActionMarkedCell();
                _loc4_.deserialize(param1);
                this.cells.push(_loc4_);
                _loc3_++;
            }
            this.active = param1.readBoolean();
        };
        GameActionMark.ID = 351;
        return GameActionMark;
    })();
    Protocol.GameActionMark = GameActionMark;
    var GameActionMarkedCell = (function () {
        function GameActionMarkedCell() {
            this.cellId = 0;
            this.zoneSize = 0;
            this.cellColor = 0;
            this.cellsType = 0;
        }
        GameActionMarkedCell.prototype.getTypeId = function () {
            return GameActionMarkedCell.ID;
        };
        GameActionMarkedCell.prototype.reset = function () {
            this.cellId = 0;
            this.zoneSize = 0;
            this.cellColor = 0;
            this.cellsType = 0;
        };
        GameActionMarkedCell.prototype.serialize = function (param1) {
            this.serializeAs_GameActionMarkedCell(param1);
        };
        GameActionMarkedCell.prototype.serializeAs_GameActionMarkedCell = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
            param1.writeByte(this.zoneSize);
            param1.writeInt(this.cellColor);
            param1.writeByte(this.cellsType);
        };
        GameActionMarkedCell.prototype.deserialize = function (param1) {
            this.deserializeAs_GameActionMarkedCell(param1);
        };
        GameActionMarkedCell.prototype.deserializeAs_GameActionMarkedCell = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of GameActionMarkedCell.cellId.');
            }
            this.zoneSize = param1.readByte();
            this.cellColor = param1.readInt();
            this.cellsType = param1.readByte();
        };
        GameActionMarkedCell.ID = 85;
        return GameActionMarkedCell;
    })();
    Protocol.GameActionMarkedCell = GameActionMarkedCell;
    var ServerSessionConstant = (function () {
        function ServerSessionConstant() {
            this.id = 0;
        }
        ServerSessionConstant.prototype.getTypeId = function () {
            return ServerSessionConstant.ID;
        };
        ServerSessionConstant.prototype.reset = function () {
            this.id = 0;
        };
        ServerSessionConstant.prototype.serialize = function (param1) {
            this.serializeAs_ServerSessionConstant(param1);
        };
        ServerSessionConstant.prototype.serializeAs_ServerSessionConstant = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
        };
        ServerSessionConstant.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSessionConstant(param1);
        };
        ServerSessionConstant.prototype.deserializeAs_ServerSessionConstant = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of ServerSessionConstant.id.');
            }
        };
        ServerSessionConstant.ID = 430;
        return ServerSessionConstant;
    })();
    Protocol.ServerSessionConstant = ServerSessionConstant;
    var ServerSessionConstantInteger = (function (_super) {
        __extends(ServerSessionConstantInteger, _super);
        function ServerSessionConstantInteger() {
            this.value = 0;
            _super.call(this);
        }
        ServerSessionConstantInteger.prototype.getTypeId = function () {
            return ServerSessionConstantInteger.ID;
        };
        ServerSessionConstantInteger.prototype.reset = function () {
            this.value = 0;
        };
        ServerSessionConstantInteger.prototype.serialize = function (param1) {
            this.serializeAs_ServerSessionConstantInteger(param1);
        };
        ServerSessionConstantInteger.prototype.serializeAs_ServerSessionConstantInteger = function (param1) {
            _super.prototype.serializeAs_ServerSessionConstant.call(this, param1);
            param1.writeInt(this.value);
        };
        ServerSessionConstantInteger.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSessionConstantInteger(param1);
        };
        ServerSessionConstantInteger.prototype.deserializeAs_ServerSessionConstantInteger = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readInt();
        };
        ServerSessionConstantInteger.ID = 433;
        return ServerSessionConstantInteger;
    })(ServerSessionConstant);
    Protocol.ServerSessionConstantInteger = ServerSessionConstantInteger;
    var ServerSessionConstantLong = (function (_super) {
        __extends(ServerSessionConstantLong, _super);
        function ServerSessionConstantLong() {
            this.value = 0;
            _super.call(this);
        }
        ServerSessionConstantLong.prototype.getTypeId = function () {
            return ServerSessionConstantLong.ID;
        };
        ServerSessionConstantLong.prototype.reset = function () {
            this.value = 0;
        };
        ServerSessionConstantLong.prototype.serialize = function (param1) {
            this.serializeAs_ServerSessionConstantLong(param1);
        };
        ServerSessionConstantLong.prototype.serializeAs_ServerSessionConstantLong = function (param1) {
            _super.prototype.serializeAs_ServerSessionConstant.call(this, param1);
            if (this.value < -9.007199254740992E15 || this.value > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.value + ') on element value.');
            }
            param1.writeDouble(this.value);
        };
        ServerSessionConstantLong.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSessionConstantLong(param1);
        };
        ServerSessionConstantLong.prototype.deserializeAs_ServerSessionConstantLong = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readDouble();
            if (this.value < -9.007199254740992E15 || this.value > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.value + ') on element of ServerSessionConstantLong.value.');
            }
        };
        ServerSessionConstantLong.ID = 429;
        return ServerSessionConstantLong;
    })(ServerSessionConstant);
    Protocol.ServerSessionConstantLong = ServerSessionConstantLong;
    var ServerSessionConstantString = (function (_super) {
        __extends(ServerSessionConstantString, _super);
        function ServerSessionConstantString() {
            this.value = '';
            _super.call(this);
        }
        ServerSessionConstantString.prototype.getTypeId = function () {
            return ServerSessionConstantString.ID;
        };
        ServerSessionConstantString.prototype.reset = function () {
            this.value = '';
        };
        ServerSessionConstantString.prototype.serialize = function (param1) {
            this.serializeAs_ServerSessionConstantString(param1);
        };
        ServerSessionConstantString.prototype.serializeAs_ServerSessionConstantString = function (param1) {
            _super.prototype.serializeAs_ServerSessionConstant.call(this, param1);
            param1.writeUTF(this.value);
        };
        ServerSessionConstantString.prototype.deserialize = function (param1) {
            this.deserializeAs_ServerSessionConstantString(param1);
        };
        ServerSessionConstantString.prototype.deserializeAs_ServerSessionConstantString = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readUTF();
        };
        ServerSessionConstantString.ID = 436;
        return ServerSessionConstantString;
    })(ServerSessionConstant);
    Protocol.ServerSessionConstantString = ServerSessionConstantString;
    var AbstractCharacterInformation = (function () {
        function AbstractCharacterInformation() {
            this.id = 0;
        }
        AbstractCharacterInformation.prototype.getTypeId = function () {
            return AbstractCharacterInformation.ID;
        };
        AbstractCharacterInformation.prototype.reset = function () {
            this.id = 0;
        };
        AbstractCharacterInformation.prototype.serialize = function (param1) {
            this.serializeAs_AbstractCharacterInformation(param1);
        };
        AbstractCharacterInformation.prototype.serializeAs_AbstractCharacterInformation = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarInt(this.id);
        };
        AbstractCharacterInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractCharacterInformation(param1);
        };
        AbstractCharacterInformation.prototype.deserializeAs_AbstractCharacterInformation = function (param1) {
            this.id = param1.readVarUhInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of AbstractCharacterInformation.id.');
            }
        };
        AbstractCharacterInformation.ID = 400;
        return AbstractCharacterInformation;
    })();
    Protocol.AbstractCharacterInformation = AbstractCharacterInformation;
    var CharacterMinimalAllianceInformations = (function (_super) {
        __extends(CharacterMinimalAllianceInformations, _super);
        function CharacterMinimalAllianceInformations() {
            this.alliance = new BasicAllianceInformations();
            _super.call(this);
        }
        CharacterMinimalAllianceInformations.prototype.getTypeId = function () {
            return CharacterMinimalAllianceInformations.ID;
        };
        CharacterMinimalAllianceInformations.prototype.reset = function () {
            this.alliance = new BasicAllianceInformations();
        };
        CharacterMinimalAllianceInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterMinimalAllianceInformations(param1);
        };
        CharacterMinimalAllianceInformations.prototype.serializeAs_CharacterMinimalAllianceInformations = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalGuildInformations.call(this, param1);
            this.alliance.serializeAs_BasicAllianceInformations(param1);
        };
        CharacterMinimalAllianceInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterMinimalAllianceInformations(param1);
        };
        CharacterMinimalAllianceInformations.prototype.deserializeAs_CharacterMinimalAllianceInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.alliance = new BasicAllianceInformations();
            this.alliance.deserialize(param1);
        };
        CharacterMinimalAllianceInformations.ID = 444;
        return CharacterMinimalAllianceInformations;
    })(CharacterMinimalGuildInformations);
    Protocol.CharacterMinimalAllianceInformations = CharacterMinimalAllianceInformations;
    var CharacterMinimalGuildInformations = (function (_super) {
        __extends(CharacterMinimalGuildInformations, _super);
        function CharacterMinimalGuildInformations() {
            this.guild = new BasicGuildInformations();
            _super.call(this);
        }
        CharacterMinimalGuildInformations.prototype.getTypeId = function () {
            return CharacterMinimalGuildInformations.ID;
        };
        CharacterMinimalGuildInformations.prototype.reset = function () {
            this.guild = new BasicGuildInformations();
        };
        CharacterMinimalGuildInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterMinimalGuildInformations(param1);
        };
        CharacterMinimalGuildInformations.prototype.serializeAs_CharacterMinimalGuildInformations = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalPlusLookInformations.call(this, param1);
            this.guild.serializeAs_BasicGuildInformations(param1);
        };
        CharacterMinimalGuildInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterMinimalGuildInformations(param1);
        };
        CharacterMinimalGuildInformations.prototype.deserializeAs_CharacterMinimalGuildInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guild = new BasicGuildInformations();
            this.guild.deserialize(param1);
        };
        CharacterMinimalGuildInformations.ID = 445;
        return CharacterMinimalGuildInformations;
    })(CharacterMinimalPlusLookInformations);
    Protocol.CharacterMinimalGuildInformations = CharacterMinimalGuildInformations;
    var CharacterMinimalInformations = (function (_super) {
        __extends(CharacterMinimalInformations, _super);
        function CharacterMinimalInformations() {
            this.level = 0;
            this.name = '';
            _super.call(this);
        }
        CharacterMinimalInformations.prototype.getTypeId = function () {
            return CharacterMinimalInformations.ID;
        };
        CharacterMinimalInformations.prototype.reset = function () {
            this.level = 0;
            this.name = '';
        };
        CharacterMinimalInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterMinimalInformations(param1);
        };
        CharacterMinimalInformations.prototype.serializeAs_CharacterMinimalInformations = function (param1) {
            _super.prototype.serializeAs_AbstractCharacterInformation.call(this, param1);
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            param1.writeUTF(this.name);
        };
        CharacterMinimalInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterMinimalInformations(param1);
        };
        CharacterMinimalInformations.prototype.deserializeAs_CharacterMinimalInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.level = param1.readUnsignedByte();
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of CharacterMinimalInformations.level.');
            }
            this.name = param1.readUTF();
        };
        CharacterMinimalInformations.ID = 110;
        return CharacterMinimalInformations;
    })(AbstractCharacterInformation);
    Protocol.CharacterMinimalInformations = CharacterMinimalInformations;
    var CharacterMinimalPlusLookAndGradeInformations = (function (_super) {
        __extends(CharacterMinimalPlusLookAndGradeInformations, _super);
        function CharacterMinimalPlusLookAndGradeInformations() {
            this.grade = 0;
            _super.call(this);
        }
        CharacterMinimalPlusLookAndGradeInformations.prototype.getTypeId = function () {
            return CharacterMinimalPlusLookAndGradeInformations.ID;
        };
        CharacterMinimalPlusLookAndGradeInformations.prototype.reset = function () {
            this.grade = 0;
        };
        CharacterMinimalPlusLookAndGradeInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterMinimalPlusLookAndGradeInformations(param1);
        };
        CharacterMinimalPlusLookAndGradeInformations.prototype.serializeAs_CharacterMinimalPlusLookAndGradeInformations = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalPlusLookInformations.call(this, param1);
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element grade.');
            }
            param1.writeVarInt(this.grade);
        };
        CharacterMinimalPlusLookAndGradeInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterMinimalPlusLookAndGradeInformations(param1);
        };
        CharacterMinimalPlusLookAndGradeInformations.prototype.deserializeAs_CharacterMinimalPlusLookAndGradeInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.grade = param1.readVarUhInt();
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element of CharacterMinimalPlusLookAndGradeInformations.grade.');
            }
        };
        CharacterMinimalPlusLookAndGradeInformations.ID = 193;
        return CharacterMinimalPlusLookAndGradeInformations;
    })(CharacterMinimalPlusLookInformations);
    Protocol.CharacterMinimalPlusLookAndGradeInformations = CharacterMinimalPlusLookAndGradeInformations;
    var CharacterMinimalPlusLookInformations = (function (_super) {
        __extends(CharacterMinimalPlusLookInformations, _super);
        function CharacterMinimalPlusLookInformations() {
            this.entityLook = new EntityLook();
            _super.call(this);
        }
        CharacterMinimalPlusLookInformations.prototype.getTypeId = function () {
            return CharacterMinimalPlusLookInformations.ID;
        };
        CharacterMinimalPlusLookInformations.prototype.reset = function () {
            this.entityLook = new EntityLook();
        };
        CharacterMinimalPlusLookInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterMinimalPlusLookInformations(param1);
        };
        CharacterMinimalPlusLookInformations.prototype.serializeAs_CharacterMinimalPlusLookInformations = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalInformations.call(this, param1);
            this.entityLook.serializeAs_EntityLook(param1);
        };
        CharacterMinimalPlusLookInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterMinimalPlusLookInformations(param1);
        };
        CharacterMinimalPlusLookInformations.prototype.deserializeAs_CharacterMinimalPlusLookInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.entityLook = new EntityLook();
            this.entityLook.deserialize(param1);
        };
        CharacterMinimalPlusLookInformations.ID = 163;
        return CharacterMinimalPlusLookInformations;
    })(CharacterMinimalInformations);
    Protocol.CharacterMinimalPlusLookInformations = CharacterMinimalPlusLookInformations;
    var ActorAlignmentInformations = (function () {
        function ActorAlignmentInformations() {
            this.alignmentSide = 0;
            this.alignmentValue = 0;
            this.alignmentGrade = 0;
            this.characterPower = 0;
        }
        ActorAlignmentInformations.prototype.getTypeId = function () {
            return ActorAlignmentInformations.ID;
        };
        ActorAlignmentInformations.prototype.reset = function () {
            this.alignmentSide = 0;
            this.alignmentValue = 0;
            this.alignmentGrade = 0;
            this.characterPower = 0;
        };
        ActorAlignmentInformations.prototype.serialize = function (param1) {
            this.serializeAs_ActorAlignmentInformations(param1);
        };
        ActorAlignmentInformations.prototype.serializeAs_ActorAlignmentInformations = function (param1) {
            param1.writeByte(this.alignmentSide);
            if (this.alignmentValue < 0) {
                throw new Error('Forbidden value (' + this.alignmentValue + ') on element alignmentValue.');
            }
            param1.writeByte(this.alignmentValue);
            if (this.alignmentGrade < 0) {
                throw new Error('Forbidden value (' + this.alignmentGrade + ') on element alignmentGrade.');
            }
            param1.writeByte(this.alignmentGrade);
            if (this.characterPower < 0) {
                throw new Error('Forbidden value (' + this.characterPower + ') on element characterPower.');
            }
            param1.writeVarInt(this.characterPower);
        };
        ActorAlignmentInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_ActorAlignmentInformations(param1);
        };
        ActorAlignmentInformations.prototype.deserializeAs_ActorAlignmentInformations = function (param1) {
            this.alignmentSide = param1.readByte();
            this.alignmentValue = param1.readByte();
            if (this.alignmentValue < 0) {
                throw new Error('Forbidden value (' + this.alignmentValue + ') on element of ActorAlignmentInformations.alignmentValue.');
            }
            this.alignmentGrade = param1.readByte();
            if (this.alignmentGrade < 0) {
                throw new Error('Forbidden value (' + this.alignmentGrade + ') on element of ActorAlignmentInformations.alignmentGrade.');
            }
            this.characterPower = param1.readVarUhInt();
            if (this.characterPower < 0) {
                throw new Error('Forbidden value (' + this.characterPower + ') on element of ActorAlignmentInformations.characterPower.');
            }
        };
        ActorAlignmentInformations.ID = 201;
        return ActorAlignmentInformations;
    })();
    Protocol.ActorAlignmentInformations = ActorAlignmentInformations;
    var ActorExtendedAlignmentInformations = (function (_super) {
        __extends(ActorExtendedAlignmentInformations, _super);
        function ActorExtendedAlignmentInformations() {
            this.honor = 0;
            this.honorGradeFloor = 0;
            this.honorNextGradeFloor = 0;
            this.aggressable = 0;
            _super.call(this);
        }
        ActorExtendedAlignmentInformations.prototype.getTypeId = function () {
            return ActorExtendedAlignmentInformations.ID;
        };
        ActorExtendedAlignmentInformations.prototype.reset = function () {
            this.honor = 0;
            this.honorGradeFloor = 0;
            this.honorNextGradeFloor = 0;
            this.aggressable = 0;
        };
        ActorExtendedAlignmentInformations.prototype.serialize = function (param1) {
            this.serializeAs_ActorExtendedAlignmentInformations(param1);
        };
        ActorExtendedAlignmentInformations.prototype.serializeAs_ActorExtendedAlignmentInformations = function (param1) {
            _super.prototype.serializeAs_ActorAlignmentInformations.call(this, param1);
            if (this.honor < 0 || this.honor > 20000) {
                throw new Error('Forbidden value (' + this.honor + ') on element honor.');
            }
            param1.writeVarShort(this.honor);
            if (this.honorGradeFloor < 0 || this.honorGradeFloor > 20000) {
                throw new Error('Forbidden value (' + this.honorGradeFloor + ') on element honorGradeFloor.');
            }
            param1.writeVarShort(this.honorGradeFloor);
            if (this.honorNextGradeFloor < 0 || this.honorNextGradeFloor > 20000) {
                throw new Error('Forbidden value (' + this.honorNextGradeFloor + ') on element honorNextGradeFloor.');
            }
            param1.writeVarShort(this.honorNextGradeFloor);
            param1.writeByte(this.aggressable);
        };
        ActorExtendedAlignmentInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_ActorExtendedAlignmentInformations(param1);
        };
        ActorExtendedAlignmentInformations.prototype.deserializeAs_ActorExtendedAlignmentInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.honor = param1.readVarUhShort();
            if (this.honor < 0 || this.honor > 20000) {
                throw new Error('Forbidden value (' + this.honor + ') on element of ActorExtendedAlignmentInformations.honor.');
            }
            this.honorGradeFloor = param1.readVarUhShort();
            if (this.honorGradeFloor < 0 || this.honorGradeFloor > 20000) {
                throw new Error('Forbidden value (' + this.honorGradeFloor + ') on element of ActorExtendedAlignmentInformations.honorGradeFloor.');
            }
            this.honorNextGradeFloor = param1.readVarUhShort();
            if (this.honorNextGradeFloor < 0 || this.honorNextGradeFloor > 20000) {
                throw new Error('Forbidden value (' + this.honorNextGradeFloor + ') on element of ActorExtendedAlignmentInformations.honorNextGradeFloor.');
            }
            this.aggressable = param1.readByte();
            if (this.aggressable < 0) {
                throw new Error('Forbidden value (' + this.aggressable + ') on element of ActorExtendedAlignmentInformations.aggressable.');
            }
        };
        ActorExtendedAlignmentInformations.ID = 202;
        return ActorExtendedAlignmentInformations;
    })(ActorAlignmentInformations);
    Protocol.ActorExtendedAlignmentInformations = ActorExtendedAlignmentInformations;
    var CharacterBaseCharacteristic = (function () {
        function CharacterBaseCharacteristic() {
            this.base = 0;
            this.additionnal = 0;
            this.objectsAndMountBonus = 0;
            this.alignGiftBonus = 0;
            this.contextModif = 0;
        }
        CharacterBaseCharacteristic.prototype.getTypeId = function () {
            return CharacterBaseCharacteristic.ID;
        };
        CharacterBaseCharacteristic.prototype.reset = function () {
            this.base = 0;
            this.additionnal = 0;
            this.objectsAndMountBonus = 0;
            this.alignGiftBonus = 0;
            this.contextModif = 0;
        };
        CharacterBaseCharacteristic.prototype.serialize = function (param1) {
            this.serializeAs_CharacterBaseCharacteristic(param1);
        };
        CharacterBaseCharacteristic.prototype.serializeAs_CharacterBaseCharacteristic = function (param1) {
            param1.writeVarShort(this.base);
            param1.writeVarShort(this.additionnal);
            param1.writeVarShort(this.objectsAndMountBonus);
            param1.writeVarShort(this.alignGiftBonus);
            param1.writeVarShort(this.contextModif);
        };
        CharacterBaseCharacteristic.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterBaseCharacteristic(param1);
        };
        CharacterBaseCharacteristic.prototype.deserializeAs_CharacterBaseCharacteristic = function (param1) {
            this.base = param1.readVarShort();
            this.additionnal = param1.readVarShort();
            this.objectsAndMountBonus = param1.readVarShort();
            this.alignGiftBonus = param1.readVarShort();
            this.contextModif = param1.readVarShort();
        };
        CharacterBaseCharacteristic.ID = 4;
        return CharacterBaseCharacteristic;
    })();
    Protocol.CharacterBaseCharacteristic = CharacterBaseCharacteristic;
    var CharacterCharacteristicsInformations = (function () {
        function CharacterCharacteristicsInformations() {
            this.experience = 0;
            this.experienceLevelFloor = 0;
            this.experienceNextLevelFloor = 0;
            this.kamas = 0;
            this.statsPoints = 0;
            this.additionnalPoints = 0;
            this.spellsPoints = 0;
            this.alignmentInfos = new ActorExtendedAlignmentInformations();
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.energyPoints = 0;
            this.maxEnergyPoints = 0;
            this.actionPointsCurrent = 0;
            this.movementPointsCurrent = 0;
            this.initiative = new CharacterBaseCharacteristic();
            this.prospecting = new CharacterBaseCharacteristic();
            this.actionPoints = new CharacterBaseCharacteristic();
            this.movementPoints = new CharacterBaseCharacteristic();
            this.strength = new CharacterBaseCharacteristic();
            this.vitality = new CharacterBaseCharacteristic();
            this.wisdom = new CharacterBaseCharacteristic();
            this.chance = new CharacterBaseCharacteristic();
            this.agility = new CharacterBaseCharacteristic();
            this.intelligence = new CharacterBaseCharacteristic();
            this.range = new CharacterBaseCharacteristic();
            this.summonableCreaturesBoost = new CharacterBaseCharacteristic();
            this.reflect = new CharacterBaseCharacteristic();
            this.criticalHit = new CharacterBaseCharacteristic();
            this.criticalHitWeapon = 0;
            this.criticalMiss = new CharacterBaseCharacteristic();
            this.healBonus = new CharacterBaseCharacteristic();
            this.allDamagesBonus = new CharacterBaseCharacteristic();
            this.weaponDamagesBonusPercent = new CharacterBaseCharacteristic();
            this.damagesBonusPercent = new CharacterBaseCharacteristic();
            this.trapBonus = new CharacterBaseCharacteristic();
            this.trapBonusPercent = new CharacterBaseCharacteristic();
            this.glyphBonusPercent = new CharacterBaseCharacteristic();
            this.permanentDamagePercent = new CharacterBaseCharacteristic();
            this.tackleBlock = new CharacterBaseCharacteristic();
            this.tackleEvade = new CharacterBaseCharacteristic();
            this.PAAttack = new CharacterBaseCharacteristic();
            this.PMAttack = new CharacterBaseCharacteristic();
            this.pushDamageBonus = new CharacterBaseCharacteristic();
            this.criticalDamageBonus = new CharacterBaseCharacteristic();
            this.neutralDamageBonus = new CharacterBaseCharacteristic();
            this.earthDamageBonus = new CharacterBaseCharacteristic();
            this.waterDamageBonus = new CharacterBaseCharacteristic();
            this.airDamageBonus = new CharacterBaseCharacteristic();
            this.fireDamageBonus = new CharacterBaseCharacteristic();
            this.dodgePALostProbability = new CharacterBaseCharacteristic();
            this.dodgePMLostProbability = new CharacterBaseCharacteristic();
            this.neutralElementResistPercent = new CharacterBaseCharacteristic();
            this.earthElementResistPercent = new CharacterBaseCharacteristic();
            this.waterElementResistPercent = new CharacterBaseCharacteristic();
            this.airElementResistPercent = new CharacterBaseCharacteristic();
            this.fireElementResistPercent = new CharacterBaseCharacteristic();
            this.neutralElementReduction = new CharacterBaseCharacteristic();
            this.earthElementReduction = new CharacterBaseCharacteristic();
            this.waterElementReduction = new CharacterBaseCharacteristic();
            this.airElementReduction = new CharacterBaseCharacteristic();
            this.fireElementReduction = new CharacterBaseCharacteristic();
            this.pushDamageReduction = new CharacterBaseCharacteristic();
            this.criticalDamageReduction = new CharacterBaseCharacteristic();
            this.pvpNeutralElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpEarthElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpWaterElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpAirElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpFireElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpNeutralElementReduction = new CharacterBaseCharacteristic();
            this.pvpEarthElementReduction = new CharacterBaseCharacteristic();
            this.pvpWaterElementReduction = new CharacterBaseCharacteristic();
            this.pvpAirElementReduction = new CharacterBaseCharacteristic();
            this.pvpFireElementReduction = new CharacterBaseCharacteristic();
            this.spellModifications = [];
            this.probationTime = 0;
        }
        CharacterCharacteristicsInformations.prototype.getTypeId = function () {
            return CharacterCharacteristicsInformations.ID;
        };
        CharacterCharacteristicsInformations.prototype.reset = function () {
            this.experience = 0;
            this.experienceLevelFloor = 0;
            this.experienceNextLevelFloor = 0;
            this.kamas = 0;
            this.statsPoints = 0;
            this.additionnalPoints = 0;
            this.spellsPoints = 0;
            this.alignmentInfos = new ActorExtendedAlignmentInformations();
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.energyPoints = 0;
            this.maxEnergyPoints = 0;
            this.actionPointsCurrent = 0;
            this.movementPointsCurrent = 0;
            this.initiative = new CharacterBaseCharacteristic();
            this.prospecting = new CharacterBaseCharacteristic();
            this.actionPoints = new CharacterBaseCharacteristic();
            this.movementPoints = new CharacterBaseCharacteristic();
            this.strength = new CharacterBaseCharacteristic();
            this.vitality = new CharacterBaseCharacteristic();
            this.wisdom = new CharacterBaseCharacteristic();
            this.chance = new CharacterBaseCharacteristic();
            this.agility = new CharacterBaseCharacteristic();
            this.intelligence = new CharacterBaseCharacteristic();
            this.range = new CharacterBaseCharacteristic();
            this.summonableCreaturesBoost = new CharacterBaseCharacteristic();
            this.reflect = new CharacterBaseCharacteristic();
            this.criticalHit = new CharacterBaseCharacteristic();
            this.criticalHitWeapon = 0;
            this.criticalMiss = new CharacterBaseCharacteristic();
            this.healBonus = new CharacterBaseCharacteristic();
            this.allDamagesBonus = new CharacterBaseCharacteristic();
            this.weaponDamagesBonusPercent = new CharacterBaseCharacteristic();
            this.damagesBonusPercent = new CharacterBaseCharacteristic();
            this.trapBonus = new CharacterBaseCharacteristic();
            this.trapBonusPercent = new CharacterBaseCharacteristic();
            this.glyphBonusPercent = new CharacterBaseCharacteristic();
            this.permanentDamagePercent = new CharacterBaseCharacteristic();
            this.tackleBlock = new CharacterBaseCharacteristic();
            this.tackleEvade = new CharacterBaseCharacteristic();
            this.PAAttack = new CharacterBaseCharacteristic();
            this.PMAttack = new CharacterBaseCharacteristic();
            this.pushDamageBonus = new CharacterBaseCharacteristic();
            this.criticalDamageBonus = new CharacterBaseCharacteristic();
            this.neutralDamageBonus = new CharacterBaseCharacteristic();
            this.earthDamageBonus = new CharacterBaseCharacteristic();
            this.waterDamageBonus = new CharacterBaseCharacteristic();
            this.airDamageBonus = new CharacterBaseCharacteristic();
            this.fireDamageBonus = new CharacterBaseCharacteristic();
            this.dodgePALostProbability = new CharacterBaseCharacteristic();
            this.dodgePMLostProbability = new CharacterBaseCharacteristic();
            this.neutralElementResistPercent = new CharacterBaseCharacteristic();
            this.earthElementResistPercent = new CharacterBaseCharacteristic();
            this.waterElementResistPercent = new CharacterBaseCharacteristic();
            this.airElementResistPercent = new CharacterBaseCharacteristic();
            this.fireElementResistPercent = new CharacterBaseCharacteristic();
            this.neutralElementReduction = new CharacterBaseCharacteristic();
            this.earthElementReduction = new CharacterBaseCharacteristic();
            this.waterElementReduction = new CharacterBaseCharacteristic();
            this.airElementReduction = new CharacterBaseCharacteristic();
            this.fireElementReduction = new CharacterBaseCharacteristic();
            this.pushDamageReduction = new CharacterBaseCharacteristic();
            this.criticalDamageReduction = new CharacterBaseCharacteristic();
            this.pvpNeutralElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpEarthElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpWaterElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpAirElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpFireElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpNeutralElementReduction = new CharacterBaseCharacteristic();
            this.pvpEarthElementReduction = new CharacterBaseCharacteristic();
            this.pvpWaterElementReduction = new CharacterBaseCharacteristic();
            this.pvpAirElementReduction = new CharacterBaseCharacteristic();
            this.pvpFireElementReduction = new CharacterBaseCharacteristic();
            this.spellModifications = [];
            this.probationTime = 0;
        };
        CharacterCharacteristicsInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterCharacteristicsInformations(param1);
        };
        CharacterCharacteristicsInformations.prototype.serializeAs_CharacterCharacteristicsInformations = function (param1) {
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.experienceLevelFloor < 0 || this.experienceLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceLevelFloor + ') on element experienceLevelFloor.');
            }
            param1.writeVarLong(this.experienceLevelFloor);
            if (this.experienceNextLevelFloor < 0 || this.experienceNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceNextLevelFloor + ') on element experienceNextLevelFloor.');
            }
            param1.writeVarLong(this.experienceNextLevelFloor);
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element kamas.');
            }
            param1.writeInt(this.kamas);
            if (this.statsPoints < 0) {
                throw new Error('Forbidden value (' + this.statsPoints + ') on element statsPoints.');
            }
            param1.writeVarShort(this.statsPoints);
            if (this.additionnalPoints < 0) {
                throw new Error('Forbidden value (' + this.additionnalPoints + ') on element additionnalPoints.');
            }
            param1.writeVarShort(this.additionnalPoints);
            if (this.spellsPoints < 0) {
                throw new Error('Forbidden value (' + this.spellsPoints + ') on element spellsPoints.');
            }
            param1.writeVarShort(this.spellsPoints);
            this.alignmentInfos.serializeAs_ActorExtendedAlignmentInformations(param1);
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
            if (this.energyPoints < 0) {
                throw new Error('Forbidden value (' + this.energyPoints + ') on element energyPoints.');
            }
            param1.writeVarShort(this.energyPoints);
            if (this.maxEnergyPoints < 0) {
                throw new Error('Forbidden value (' + this.maxEnergyPoints + ') on element maxEnergyPoints.');
            }
            param1.writeVarShort(this.maxEnergyPoints);
            param1.writeVarShort(this.actionPointsCurrent);
            param1.writeVarShort(this.movementPointsCurrent);
            this.initiative.serializeAs_CharacterBaseCharacteristic(param1);
            this.prospecting.serializeAs_CharacterBaseCharacteristic(param1);
            this.actionPoints.serializeAs_CharacterBaseCharacteristic(param1);
            this.movementPoints.serializeAs_CharacterBaseCharacteristic(param1);
            this.strength.serializeAs_CharacterBaseCharacteristic(param1);
            this.vitality.serializeAs_CharacterBaseCharacteristic(param1);
            this.wisdom.serializeAs_CharacterBaseCharacteristic(param1);
            this.chance.serializeAs_CharacterBaseCharacteristic(param1);
            this.agility.serializeAs_CharacterBaseCharacteristic(param1);
            this.intelligence.serializeAs_CharacterBaseCharacteristic(param1);
            this.range.serializeAs_CharacterBaseCharacteristic(param1);
            this.summonableCreaturesBoost.serializeAs_CharacterBaseCharacteristic(param1);
            this.reflect.serializeAs_CharacterBaseCharacteristic(param1);
            this.criticalHit.serializeAs_CharacterBaseCharacteristic(param1);
            if (this.criticalHitWeapon < 0) {
                throw new Error('Forbidden value (' + this.criticalHitWeapon + ') on element criticalHitWeapon.');
            }
            param1.writeVarShort(this.criticalHitWeapon);
            this.criticalMiss.serializeAs_CharacterBaseCharacteristic(param1);
            this.healBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.allDamagesBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.weaponDamagesBonusPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.damagesBonusPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.trapBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.trapBonusPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.glyphBonusPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.permanentDamagePercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.tackleBlock.serializeAs_CharacterBaseCharacteristic(param1);
            this.tackleEvade.serializeAs_CharacterBaseCharacteristic(param1);
            this.PAAttack.serializeAs_CharacterBaseCharacteristic(param1);
            this.PMAttack.serializeAs_CharacterBaseCharacteristic(param1);
            this.pushDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.criticalDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.neutralDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.earthDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.waterDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.airDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.fireDamageBonus.serializeAs_CharacterBaseCharacteristic(param1);
            this.dodgePALostProbability.serializeAs_CharacterBaseCharacteristic(param1);
            this.dodgePMLostProbability.serializeAs_CharacterBaseCharacteristic(param1);
            this.neutralElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.earthElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.waterElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.airElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.fireElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.neutralElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.earthElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.waterElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.airElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.fireElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pushDamageReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.criticalDamageReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpNeutralElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpEarthElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpWaterElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpAirElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpFireElementResistPercent.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpNeutralElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpEarthElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpWaterElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpAirElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            this.pvpFireElementReduction.serializeAs_CharacterBaseCharacteristic(param1);
            param1.writeShort(this.spellModifications.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spellModifications.length) {
                (this.spellModifications[_loc2_]).serializeAs_CharacterSpellModification(param1);
                _loc2_++;
            }
            if (this.probationTime < 0) {
                throw new Error('Forbidden value (' + this.probationTime + ') on element probationTime.');
            }
            param1.writeInt(this.probationTime);
        };
        CharacterCharacteristicsInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterCharacteristicsInformations(param1);
        };
        CharacterCharacteristicsInformations.prototype.deserializeAs_CharacterCharacteristicsInformations = function (param1) {
            var _loc4_ = null;
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of CharacterCharacteristicsInformations.experience.');
            }
            this.experienceLevelFloor = param1.readVarUhLong();
            if (this.experienceLevelFloor < 0 || this.experienceLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceLevelFloor + ') on element of CharacterCharacteristicsInformations.experienceLevelFloor.');
            }
            this.experienceNextLevelFloor = param1.readVarUhLong();
            if (this.experienceNextLevelFloor < 0 || this.experienceNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceNextLevelFloor + ') on element of CharacterCharacteristicsInformations.experienceNextLevelFloor.');
            }
            this.kamas = param1.readInt();
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element of CharacterCharacteristicsInformations.kamas.');
            }
            this.statsPoints = param1.readVarUhShort();
            if (this.statsPoints < 0) {
                throw new Error('Forbidden value (' + this.statsPoints + ') on element of CharacterCharacteristicsInformations.statsPoints.');
            }
            this.additionnalPoints = param1.readVarUhShort();
            if (this.additionnalPoints < 0) {
                throw new Error('Forbidden value (' + this.additionnalPoints + ') on element of CharacterCharacteristicsInformations.additionnalPoints.');
            }
            this.spellsPoints = param1.readVarUhShort();
            if (this.spellsPoints < 0) {
                throw new Error('Forbidden value (' + this.spellsPoints + ') on element of CharacterCharacteristicsInformations.spellsPoints.');
            }
            this.alignmentInfos = new ActorExtendedAlignmentInformations();
            this.alignmentInfos.deserialize(param1);
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of CharacterCharacteristicsInformations.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of CharacterCharacteristicsInformations.maxLifePoints.');
            }
            this.energyPoints = param1.readVarUhShort();
            if (this.energyPoints < 0) {
                throw new Error('Forbidden value (' + this.energyPoints + ') on element of CharacterCharacteristicsInformations.energyPoints.');
            }
            this.maxEnergyPoints = param1.readVarUhShort();
            if (this.maxEnergyPoints < 0) {
                throw new Error('Forbidden value (' + this.maxEnergyPoints + ') on element of CharacterCharacteristicsInformations.maxEnergyPoints.');
            }
            this.actionPointsCurrent = param1.readVarShort();
            this.movementPointsCurrent = param1.readVarShort();
            this.initiative = new CharacterBaseCharacteristic();
            this.initiative.deserialize(param1);
            this.prospecting = new CharacterBaseCharacteristic();
            this.prospecting.deserialize(param1);
            this.actionPoints = new CharacterBaseCharacteristic();
            this.actionPoints.deserialize(param1);
            this.movementPoints = new CharacterBaseCharacteristic();
            this.movementPoints.deserialize(param1);
            this.strength = new CharacterBaseCharacteristic();
            this.strength.deserialize(param1);
            this.vitality = new CharacterBaseCharacteristic();
            this.vitality.deserialize(param1);
            this.wisdom = new CharacterBaseCharacteristic();
            this.wisdom.deserialize(param1);
            this.chance = new CharacterBaseCharacteristic();
            this.chance.deserialize(param1);
            this.agility = new CharacterBaseCharacteristic();
            this.agility.deserialize(param1);
            this.intelligence = new CharacterBaseCharacteristic();
            this.intelligence.deserialize(param1);
            this.range = new CharacterBaseCharacteristic();
            this.range.deserialize(param1);
            this.summonableCreaturesBoost = new CharacterBaseCharacteristic();
            this.summonableCreaturesBoost.deserialize(param1);
            this.reflect = new CharacterBaseCharacteristic();
            this.reflect.deserialize(param1);
            this.criticalHit = new CharacterBaseCharacteristic();
            this.criticalHit.deserialize(param1);
            this.criticalHitWeapon = param1.readVarUhShort();
            if (this.criticalHitWeapon < 0) {
                throw new Error('Forbidden value (' + this.criticalHitWeapon + ') on element of CharacterCharacteristicsInformations.criticalHitWeapon.');
            }
            this.criticalMiss = new CharacterBaseCharacteristic();
            this.criticalMiss.deserialize(param1);
            this.healBonus = new CharacterBaseCharacteristic();
            this.healBonus.deserialize(param1);
            this.allDamagesBonus = new CharacterBaseCharacteristic();
            this.allDamagesBonus.deserialize(param1);
            this.weaponDamagesBonusPercent = new CharacterBaseCharacteristic();
            this.weaponDamagesBonusPercent.deserialize(param1);
            this.damagesBonusPercent = new CharacterBaseCharacteristic();
            this.damagesBonusPercent.deserialize(param1);
            this.trapBonus = new CharacterBaseCharacteristic();
            this.trapBonus.deserialize(param1);
            this.trapBonusPercent = new CharacterBaseCharacteristic();
            this.trapBonusPercent.deserialize(param1);
            this.glyphBonusPercent = new CharacterBaseCharacteristic();
            this.glyphBonusPercent.deserialize(param1);
            this.permanentDamagePercent = new CharacterBaseCharacteristic();
            this.permanentDamagePercent.deserialize(param1);
            this.tackleBlock = new CharacterBaseCharacteristic();
            this.tackleBlock.deserialize(param1);
            this.tackleEvade = new CharacterBaseCharacteristic();
            this.tackleEvade.deserialize(param1);
            this.PAAttack = new CharacterBaseCharacteristic();
            this.PAAttack.deserialize(param1);
            this.PMAttack = new CharacterBaseCharacteristic();
            this.PMAttack.deserialize(param1);
            this.pushDamageBonus = new CharacterBaseCharacteristic();
            this.pushDamageBonus.deserialize(param1);
            this.criticalDamageBonus = new CharacterBaseCharacteristic();
            this.criticalDamageBonus.deserialize(param1);
            this.neutralDamageBonus = new CharacterBaseCharacteristic();
            this.neutralDamageBonus.deserialize(param1);
            this.earthDamageBonus = new CharacterBaseCharacteristic();
            this.earthDamageBonus.deserialize(param1);
            this.waterDamageBonus = new CharacterBaseCharacteristic();
            this.waterDamageBonus.deserialize(param1);
            this.airDamageBonus = new CharacterBaseCharacteristic();
            this.airDamageBonus.deserialize(param1);
            this.fireDamageBonus = new CharacterBaseCharacteristic();
            this.fireDamageBonus.deserialize(param1);
            this.dodgePALostProbability = new CharacterBaseCharacteristic();
            this.dodgePALostProbability.deserialize(param1);
            this.dodgePMLostProbability = new CharacterBaseCharacteristic();
            this.dodgePMLostProbability.deserialize(param1);
            this.neutralElementResistPercent = new CharacterBaseCharacteristic();
            this.neutralElementResistPercent.deserialize(param1);
            this.earthElementResistPercent = new CharacterBaseCharacteristic();
            this.earthElementResistPercent.deserialize(param1);
            this.waterElementResistPercent = new CharacterBaseCharacteristic();
            this.waterElementResistPercent.deserialize(param1);
            this.airElementResistPercent = new CharacterBaseCharacteristic();
            this.airElementResistPercent.deserialize(param1);
            this.fireElementResistPercent = new CharacterBaseCharacteristic();
            this.fireElementResistPercent.deserialize(param1);
            this.neutralElementReduction = new CharacterBaseCharacteristic();
            this.neutralElementReduction.deserialize(param1);
            this.earthElementReduction = new CharacterBaseCharacteristic();
            this.earthElementReduction.deserialize(param1);
            this.waterElementReduction = new CharacterBaseCharacteristic();
            this.waterElementReduction.deserialize(param1);
            this.airElementReduction = new CharacterBaseCharacteristic();
            this.airElementReduction.deserialize(param1);
            this.fireElementReduction = new CharacterBaseCharacteristic();
            this.fireElementReduction.deserialize(param1);
            this.pushDamageReduction = new CharacterBaseCharacteristic();
            this.pushDamageReduction.deserialize(param1);
            this.criticalDamageReduction = new CharacterBaseCharacteristic();
            this.criticalDamageReduction.deserialize(param1);
            this.pvpNeutralElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpNeutralElementResistPercent.deserialize(param1);
            this.pvpEarthElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpEarthElementResistPercent.deserialize(param1);
            this.pvpWaterElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpWaterElementResistPercent.deserialize(param1);
            this.pvpAirElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpAirElementResistPercent.deserialize(param1);
            this.pvpFireElementResistPercent = new CharacterBaseCharacteristic();
            this.pvpFireElementResistPercent.deserialize(param1);
            this.pvpNeutralElementReduction = new CharacterBaseCharacteristic();
            this.pvpNeutralElementReduction.deserialize(param1);
            this.pvpEarthElementReduction = new CharacterBaseCharacteristic();
            this.pvpEarthElementReduction.deserialize(param1);
            this.pvpWaterElementReduction = new CharacterBaseCharacteristic();
            this.pvpWaterElementReduction.deserialize(param1);
            this.pvpAirElementReduction = new CharacterBaseCharacteristic();
            this.pvpAirElementReduction.deserialize(param1);
            this.pvpFireElementReduction = new CharacterBaseCharacteristic();
            this.pvpFireElementReduction.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new CharacterSpellModification();
                _loc4_.deserialize(param1);
                this.spellModifications.push(_loc4_);
                _loc3_++;
            }
            this.probationTime = param1.readInt();
            if (this.probationTime < 0) {
                throw new Error('Forbidden value (' + this.probationTime + ') on element of CharacterCharacteristicsInformations.probationTime.');
            }
        };
        CharacterCharacteristicsInformations.ID = 8;
        return CharacterCharacteristicsInformations;
    })();
    Protocol.CharacterCharacteristicsInformations = CharacterCharacteristicsInformations;
    var CharacterSpellModification = (function () {
        function CharacterSpellModification() {
            this.modificationType = 0;
            this.spellId = 0;
            this.value = new CharacterBaseCharacteristic();
        }
        CharacterSpellModification.prototype.getTypeId = function () {
            return CharacterSpellModification.ID;
        };
        CharacterSpellModification.prototype.reset = function () {
            this.modificationType = 0;
            this.spellId = 0;
            this.value = new CharacterBaseCharacteristic();
        };
        CharacterSpellModification.prototype.serialize = function (param1) {
            this.serializeAs_CharacterSpellModification(param1);
        };
        CharacterSpellModification.prototype.serializeAs_CharacterSpellModification = function (param1) {
            param1.writeByte(this.modificationType);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
            this.value.serializeAs_CharacterBaseCharacteristic(param1);
        };
        CharacterSpellModification.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterSpellModification(param1);
        };
        CharacterSpellModification.prototype.deserializeAs_CharacterSpellModification = function (param1) {
            this.modificationType = param1.readByte();
            if (this.modificationType < 0) {
                throw new Error('Forbidden value (' + this.modificationType + ') on element of CharacterSpellModification.modificationType.');
            }
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of CharacterSpellModification.spellId.');
            }
            this.value = new CharacterBaseCharacteristic();
            this.value.deserialize(param1);
        };
        CharacterSpellModification.ID = 215;
        return CharacterSpellModification;
    })();
    Protocol.CharacterSpellModification = CharacterSpellModification;
    var AbstractCharacterToRefurbishInformation = (function (_super) {
        __extends(AbstractCharacterToRefurbishInformation, _super);
        function AbstractCharacterToRefurbishInformation() {
            this.colors = [];
            this.cosmeticId = 0;
            _super.call(this);
        }
        AbstractCharacterToRefurbishInformation.prototype.getTypeId = function () {
            return AbstractCharacterToRefurbishInformation.ID;
        };
        AbstractCharacterToRefurbishInformation.prototype.reset = function () {
            this.colors = [];
            this.cosmeticId = 0;
        };
        AbstractCharacterToRefurbishInformation.prototype.serialize = function (param1) {
            this.serializeAs_AbstractCharacterToRefurbishInformation(param1);
        };
        AbstractCharacterToRefurbishInformation.prototype.serializeAs_AbstractCharacterToRefurbishInformation = function (param1) {
            _super.prototype.serializeAs_AbstractCharacterInformation.call(this, param1);
            param1.writeShort(this.colors.length);
            var _loc2_ = 0;
            while (_loc2_ < this.colors.length) {
                param1.writeInt(this.colors[_loc2_]);
                _loc2_++;
            }
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element cosmeticId.');
            }
            param1.writeVarInt(this.cosmeticId);
        };
        AbstractCharacterToRefurbishInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractCharacterToRefurbishInformation(param1);
        };
        AbstractCharacterToRefurbishInformation.prototype.deserializeAs_AbstractCharacterToRefurbishInformation = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.colors.push(_loc4_);
                _loc3_++;
            }
            this.cosmeticId = param1.readVarUhInt();
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element of AbstractCharacterToRefurbishInformation.cosmeticId.');
            }
        };
        AbstractCharacterToRefurbishInformation.ID = 475;
        return AbstractCharacterToRefurbishInformation;
    })(AbstractCharacterInformation);
    Protocol.AbstractCharacterToRefurbishInformation = AbstractCharacterToRefurbishInformation;
    var CharacterBaseInformations = (function (_super) {
        __extends(CharacterBaseInformations, _super);
        function CharacterBaseInformations() {
            this.breed = 0;
            this.sex = false;
            _super.call(this);
        }
        CharacterBaseInformations.prototype.getTypeId = function () {
            return CharacterBaseInformations.ID;
        };
        CharacterBaseInformations.prototype.reset = function () {
            this.breed = 0;
            this.sex = false;
        };
        CharacterBaseInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterBaseInformations(param1);
        };
        CharacterBaseInformations.prototype.serializeAs_CharacterBaseInformations = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalPlusLookInformations.call(this, param1);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
        };
        CharacterBaseInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterBaseInformations(param1);
        };
        CharacterBaseInformations.prototype.deserializeAs_CharacterBaseInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
        };
        CharacterBaseInformations.ID = 45;
        return CharacterBaseInformations;
    })(CharacterMinimalPlusLookInformations);
    Protocol.CharacterBaseInformations = CharacterBaseInformations;
    var CharacterHardcoreOrEpicInformations = (function (_super) {
        __extends(CharacterHardcoreOrEpicInformations, _super);
        function CharacterHardcoreOrEpicInformations() {
            this.deathState = 0;
            this.deathCount = 0;
            this.deathMaxLevel = 0;
            _super.call(this);
        }
        CharacterHardcoreOrEpicInformations.prototype.getTypeId = function () {
            return CharacterHardcoreOrEpicInformations.ID;
        };
        CharacterHardcoreOrEpicInformations.prototype.reset = function () {
            this.deathState = 0;
            this.deathCount = 0;
            this.deathMaxLevel = 0;
        };
        CharacterHardcoreOrEpicInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterHardcoreOrEpicInformations(param1);
        };
        CharacterHardcoreOrEpicInformations.prototype.serializeAs_CharacterHardcoreOrEpicInformations = function (param1) {
            _super.prototype.serializeAs_CharacterBaseInformations.call(this, param1);
            param1.writeByte(this.deathState);
            if (this.deathCount < 0) {
                throw new Error('Forbidden value (' + this.deathCount + ') on element deathCount.');
            }
            param1.writeVarShort(this.deathCount);
            if (this.deathMaxLevel < 1 || this.deathMaxLevel > 200) {
                throw new Error('Forbidden value (' + this.deathMaxLevel + ') on element deathMaxLevel.');
            }
            param1.writeByte(this.deathMaxLevel);
        };
        CharacterHardcoreOrEpicInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterHardcoreOrEpicInformations(param1);
        };
        CharacterHardcoreOrEpicInformations.prototype.deserializeAs_CharacterHardcoreOrEpicInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.deathState = param1.readByte();
            if (this.deathState < 0) {
                throw new Error('Forbidden value (' + this.deathState + ') on element of CharacterHardcoreOrEpicInformations.deathState.');
            }
            this.deathCount = param1.readVarUhShort();
            if (this.deathCount < 0) {
                throw new Error('Forbidden value (' + this.deathCount + ') on element of CharacterHardcoreOrEpicInformations.deathCount.');
            }
            this.deathMaxLevel = param1.readUnsignedByte();
            if (this.deathMaxLevel < 1 || this.deathMaxLevel > 200) {
                throw new Error('Forbidden value (' + this.deathMaxLevel + ') on element of CharacterHardcoreOrEpicInformations.deathMaxLevel.');
            }
        };
        CharacterHardcoreOrEpicInformations.ID = 474;
        return CharacterHardcoreOrEpicInformations;
    })(CharacterBaseInformations);
    Protocol.CharacterHardcoreOrEpicInformations = CharacterHardcoreOrEpicInformations;
    var CharacterRemodelingInformation = (function (_super) {
        __extends(CharacterRemodelingInformation, _super);
        function CharacterRemodelingInformation() {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.cosmeticId = 0;
            this.colors = [];
            _super.call(this);
        }
        CharacterRemodelingInformation.prototype.getTypeId = function () {
            return CharacterRemodelingInformation.ID;
        };
        CharacterRemodelingInformation.prototype.reset = function () {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.cosmeticId = 0;
            this.colors = [];
        };
        CharacterRemodelingInformation.prototype.serialize = function (param1) {
            this.serializeAs_CharacterRemodelingInformation(param1);
        };
        CharacterRemodelingInformation.prototype.serializeAs_CharacterRemodelingInformation = function (param1) {
            _super.prototype.serializeAs_AbstractCharacterInformation.call(this, param1);
            param1.writeUTF(this.name);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element cosmeticId.');
            }
            param1.writeVarShort(this.cosmeticId);
            param1.writeShort(this.colors.length);
            var _loc2_ = 0;
            while (_loc2_ < this.colors.length) {
                param1.writeInt(this.colors[_loc2_]);
                _loc2_++;
            }
        };
        CharacterRemodelingInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterRemodelingInformation(param1);
        };
        CharacterRemodelingInformation.prototype.deserializeAs_CharacterRemodelingInformation = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
            this.cosmeticId = param1.readVarUhShort();
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element of CharacterRemodelingInformation.cosmeticId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.colors.push(_loc4_);
                _loc3_++;
            }
        };
        CharacterRemodelingInformation.ID = 479;
        return CharacterRemodelingInformation;
    })(AbstractCharacterInformation);
    Protocol.CharacterRemodelingInformation = CharacterRemodelingInformation;
    var CharacterToRecolorInformation = (function (_super) {
        __extends(CharacterToRecolorInformation, _super);
        function CharacterToRecolorInformation() {
            _super.call(this);
        }
        CharacterToRecolorInformation.prototype.getTypeId = function () {
            return CharacterToRecolorInformation.ID;
        };
        CharacterToRecolorInformation.prototype.reset = function () {
        };
        CharacterToRecolorInformation.prototype.serialize = function (param1) {
            this.serializeAs_CharacterToRecolorInformation(param1);
        };
        CharacterToRecolorInformation.prototype.serializeAs_CharacterToRecolorInformation = function (param1) {
            _super.prototype.serializeAs_AbstractCharacterToRefurbishInformation.call(this, param1);
        };
        CharacterToRecolorInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterToRecolorInformation(param1);
        };
        CharacterToRecolorInformation.prototype.deserializeAs_CharacterToRecolorInformation = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        CharacterToRecolorInformation.ID = 212;
        return CharacterToRecolorInformation;
    })(AbstractCharacterToRefurbishInformation);
    Protocol.CharacterToRecolorInformation = CharacterToRecolorInformation;
    var CharacterToRelookInformation = (function (_super) {
        __extends(CharacterToRelookInformation, _super);
        function CharacterToRelookInformation() {
            _super.call(this);
        }
        CharacterToRelookInformation.prototype.getTypeId = function () {
            return CharacterToRelookInformation.ID;
        };
        CharacterToRelookInformation.prototype.reset = function () {
        };
        CharacterToRelookInformation.prototype.serialize = function (param1) {
            this.serializeAs_CharacterToRelookInformation(param1);
        };
        CharacterToRelookInformation.prototype.serializeAs_CharacterToRelookInformation = function (param1) {
            _super.prototype.serializeAs_AbstractCharacterToRefurbishInformation.call(this, param1);
        };
        CharacterToRelookInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterToRelookInformation(param1);
        };
        CharacterToRelookInformation.prototype.deserializeAs_CharacterToRelookInformation = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        CharacterToRelookInformation.ID = 399;
        return CharacterToRelookInformation;
    })(AbstractCharacterToRefurbishInformation);
    Protocol.CharacterToRelookInformation = CharacterToRelookInformation;
    var CharacterToRemodelInformations = (function (_super) {
        __extends(CharacterToRemodelInformations, _super);
        function CharacterToRemodelInformations() {
            this.possibleChangeMask = 0;
            this.mandatoryChangeMask = 0;
            _super.call(this);
        }
        CharacterToRemodelInformations.prototype.getTypeId = function () {
            return CharacterToRemodelInformations.ID;
        };
        CharacterToRemodelInformations.prototype.reset = function () {
            this.possibleChangeMask = 0;
            this.mandatoryChangeMask = 0;
        };
        CharacterToRemodelInformations.prototype.serialize = function (param1) {
            this.serializeAs_CharacterToRemodelInformations(param1);
        };
        CharacterToRemodelInformations.prototype.serializeAs_CharacterToRemodelInformations = function (param1) {
            _super.prototype.serializeAs_CharacterRemodelingInformation.call(this, param1);
            if (this.possibleChangeMask < 0) {
                throw new Error('Forbidden value (' + this.possibleChangeMask + ') on element possibleChangeMask.');
            }
            param1.writeByte(this.possibleChangeMask);
            if (this.mandatoryChangeMask < 0) {
                throw new Error('Forbidden value (' + this.mandatoryChangeMask + ') on element mandatoryChangeMask.');
            }
            param1.writeByte(this.mandatoryChangeMask);
        };
        CharacterToRemodelInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_CharacterToRemodelInformations(param1);
        };
        CharacterToRemodelInformations.prototype.deserializeAs_CharacterToRemodelInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.possibleChangeMask = param1.readByte();
            if (this.possibleChangeMask < 0) {
                throw new Error('Forbidden value (' + this.possibleChangeMask + ') on element of CharacterToRemodelInformations.possibleChangeMask.');
            }
            this.mandatoryChangeMask = param1.readByte();
            if (this.mandatoryChangeMask < 0) {
                throw new Error('Forbidden value (' + this.mandatoryChangeMask + ') on element of CharacterToRemodelInformations.mandatoryChangeMask.');
            }
        };
        CharacterToRemodelInformations.ID = 477;
        return CharacterToRemodelInformations;
    })(CharacterRemodelingInformation);
    Protocol.CharacterToRemodelInformations = CharacterToRemodelInformations;
    var RemodelingInformation = (function () {
        function RemodelingInformation() {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.cosmeticId = 0;
            this.colors = [];
        }
        RemodelingInformation.prototype.getTypeId = function () {
            return RemodelingInformation.ID;
        };
        RemodelingInformation.prototype.reset = function () {
            this.name = '';
            this.breed = 0;
            this.sex = false;
            this.cosmeticId = 0;
            this.colors = [];
        };
        RemodelingInformation.prototype.serialize = function (param1) {
            this.serializeAs_RemodelingInformation(param1);
        };
        RemodelingInformation.prototype.serializeAs_RemodelingInformation = function (param1) {
            param1.writeUTF(this.name);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element cosmeticId.');
            }
            param1.writeVarShort(this.cosmeticId);
            param1.writeShort(this.colors.length);
            var _loc2_ = 0;
            while (_loc2_ < this.colors.length) {
                param1.writeInt(this.colors[_loc2_]);
                _loc2_++;
            }
        };
        RemodelingInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_RemodelingInformation(param1);
        };
        RemodelingInformation.prototype.deserializeAs_RemodelingInformation = function (param1) {
            var _loc4_ = 0;
            this.name = param1.readUTF();
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
            this.cosmeticId = param1.readVarUhShort();
            if (this.cosmeticId < 0) {
                throw new Error('Forbidden value (' + this.cosmeticId + ') on element of RemodelingInformation.cosmeticId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.colors.push(_loc4_);
                _loc3_++;
            }
        };
        RemodelingInformation.ID = 480;
        return RemodelingInformation;
    })();
    Protocol.RemodelingInformation = RemodelingInformation;
    var ActorRestrictionsInformations = (function () {
        function ActorRestrictionsInformations() {
            this.cantBeAggressed = false;
            this.cantBeChallenged = false;
            this.cantTrade = false;
            this.cantBeAttackedByMutant = false;
            this.cantRun = false;
            this.forceSlowWalk = false;
            this.cantMinimize = false;
            this.cantMove = false;
            this.cantAggress = false;
            this.cantChallenge = false;
            this.cantExchange = false;
            this.cantAttack = false;
            this.cantChat = false;
            this.cantBeMerchant = false;
            this.cantUseObject = false;
            this.cantUseTaxCollector = false;
            this.cantUseInteractive = false;
            this.cantSpeakToNPC = false;
            this.cantChangeZone = false;
            this.cantAttackMonster = false;
            this.cantWalk8Directions = false;
        }
        ActorRestrictionsInformations.prototype.getTypeId = function () {
            return ActorRestrictionsInformations.ID;
        };
        ActorRestrictionsInformations.prototype.reset = function () {
            this.cantBeAggressed = false;
            this.cantBeChallenged = false;
            this.cantTrade = false;
            this.cantBeAttackedByMutant = false;
            this.cantRun = false;
            this.forceSlowWalk = false;
            this.cantMinimize = false;
            this.cantMove = false;
            this.cantAggress = false;
            this.cantChallenge = false;
            this.cantExchange = false;
            this.cantAttack = false;
            this.cantChat = false;
            this.cantBeMerchant = false;
            this.cantUseObject = false;
            this.cantUseTaxCollector = false;
            this.cantUseInteractive = false;
            this.cantSpeakToNPC = false;
            this.cantChangeZone = false;
            this.cantAttackMonster = false;
            this.cantWalk8Directions = false;
        };
        ActorRestrictionsInformations.prototype.serialize = function (param1) {
            this.serializeAs_ActorRestrictionsInformations(param1);
        };
        ActorRestrictionsInformations.prototype.serializeAs_ActorRestrictionsInformations = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.cantBeAggressed);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.cantBeChallenged);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.cantTrade);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 3, this.cantBeAttackedByMutant);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 4, this.cantRun);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 5, this.forceSlowWalk);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 6, this.cantMinimize);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 7, this.cantMove);
            param1.writeByte(_loc2_);
            var _loc3_ = 0;
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 0, this.cantAggress);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 1, this.cantChallenge);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 2, this.cantExchange);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 3, this.cantAttack);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 4, this.cantChat);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 5, this.cantBeMerchant);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 6, this.cantUseObject);
            _loc3_ = BooleanByteWrapper.setFlag(_loc3_, 7, this.cantUseTaxCollector);
            param1.writeByte(_loc3_);
            var _loc4_ = 0;
            _loc4_ = BooleanByteWrapper.setFlag(_loc4_, 0, this.cantUseInteractive);
            _loc4_ = BooleanByteWrapper.setFlag(_loc4_, 1, this.cantSpeakToNPC);
            _loc4_ = BooleanByteWrapper.setFlag(_loc4_, 2, this.cantChangeZone);
            _loc4_ = BooleanByteWrapper.setFlag(_loc4_, 3, this.cantAttackMonster);
            _loc4_ = BooleanByteWrapper.setFlag(_loc4_, 4, this.cantWalk8Directions);
            param1.writeByte(_loc4_);
        };
        ActorRestrictionsInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_ActorRestrictionsInformations(param1);
        };
        ActorRestrictionsInformations.prototype.deserializeAs_ActorRestrictionsInformations = function (param1) {
            var _loc2_ = param1.readByte();
            this.cantBeAggressed = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.cantBeChallenged = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.cantTrade = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.cantBeAttackedByMutant = BooleanByteWrapper.getFlag(_loc2_, 3);
            this.cantRun = BooleanByteWrapper.getFlag(_loc2_, 4);
            this.forceSlowWalk = BooleanByteWrapper.getFlag(_loc2_, 5);
            this.cantMinimize = BooleanByteWrapper.getFlag(_loc2_, 6);
            this.cantMove = BooleanByteWrapper.getFlag(_loc2_, 7);
            var _loc3_ = param1.readByte();
            this.cantAggress = BooleanByteWrapper.getFlag(_loc3_, 0);
            this.cantChallenge = BooleanByteWrapper.getFlag(_loc3_, 1);
            this.cantExchange = BooleanByteWrapper.getFlag(_loc3_, 2);
            this.cantAttack = BooleanByteWrapper.getFlag(_loc3_, 3);
            this.cantChat = BooleanByteWrapper.getFlag(_loc3_, 4);
            this.cantBeMerchant = BooleanByteWrapper.getFlag(_loc3_, 5);
            this.cantUseObject = BooleanByteWrapper.getFlag(_loc3_, 6);
            this.cantUseTaxCollector = BooleanByteWrapper.getFlag(_loc3_, 7);
            var _loc4_ = param1.readByte();
            this.cantUseInteractive = BooleanByteWrapper.getFlag(_loc4_, 0);
            this.cantSpeakToNPC = BooleanByteWrapper.getFlag(_loc4_, 1);
            this.cantChangeZone = BooleanByteWrapper.getFlag(_loc4_, 2);
            this.cantAttackMonster = BooleanByteWrapper.getFlag(_loc4_, 3);
            this.cantWalk8Directions = BooleanByteWrapper.getFlag(_loc4_, 4);
        };
        ActorRestrictionsInformations.ID = 204;
        return ActorRestrictionsInformations;
    })();
    Protocol.ActorRestrictionsInformations = ActorRestrictionsInformations;
    var PlayerStatus = (function () {
        function PlayerStatus() {
            this.statusId = 1;
        }
        PlayerStatus.prototype.getTypeId = function () {
            return PlayerStatus.ID;
        };
        PlayerStatus.prototype.reset = function () {
            this.statusId = 1;
        };
        PlayerStatus.prototype.serialize = function (param1) {
            this.serializeAs_PlayerStatus(param1);
        };
        PlayerStatus.prototype.serializeAs_PlayerStatus = function (param1) {
            param1.writeByte(this.statusId);
        };
        PlayerStatus.prototype.deserialize = function (param1) {
            this.deserializeAs_PlayerStatus(param1);
        };
        PlayerStatus.prototype.deserializeAs_PlayerStatus = function (param1) {
            this.statusId = param1.readByte();
            if (this.statusId < 0) {
                throw new Error('Forbidden value (' + this.statusId + ') on element of PlayerStatus.statusId.');
            }
        };
        PlayerStatus.ID = 415;
        return PlayerStatus;
    })();
    Protocol.PlayerStatus = PlayerStatus;
    var PlayerStatusExtended = (function (_super) {
        __extends(PlayerStatusExtended, _super);
        function PlayerStatusExtended() {
            this.message = '';
            _super.call(this);
        }
        PlayerStatusExtended.prototype.getTypeId = function () {
            return PlayerStatusExtended.ID;
        };
        PlayerStatusExtended.prototype.reset = function () {
            this.message = '';
        };
        PlayerStatusExtended.prototype.serialize = function (param1) {
            this.serializeAs_PlayerStatusExtended(param1);
        };
        PlayerStatusExtended.prototype.serializeAs_PlayerStatusExtended = function (param1) {
            _super.prototype.serializeAs_PlayerStatus.call(this, param1);
            param1.writeUTF(this.message);
        };
        PlayerStatusExtended.prototype.deserialize = function (param1) {
            this.deserializeAs_PlayerStatusExtended(param1);
        };
        PlayerStatusExtended.prototype.deserializeAs_PlayerStatusExtended = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.message = param1.readUTF();
        };
        PlayerStatusExtended.ID = 414;
        return PlayerStatusExtended;
    })(PlayerStatus);
    Protocol.PlayerStatusExtended = PlayerStatusExtended;
    var ActorOrientation = (function () {
        function ActorOrientation() {
            this.id = 0;
            this.direction = 1;
        }
        ActorOrientation.prototype.getTypeId = function () {
            return ActorOrientation.ID;
        };
        ActorOrientation.prototype.reset = function () {
            this.id = 0;
            this.direction = 1;
        };
        ActorOrientation.prototype.serialize = function (param1) {
            this.serializeAs_ActorOrientation(param1);
        };
        ActorOrientation.prototype.serializeAs_ActorOrientation = function (param1) {
            param1.writeInt(this.id);
            param1.writeByte(this.direction);
        };
        ActorOrientation.prototype.deserialize = function (param1) {
            this.deserializeAs_ActorOrientation(param1);
        };
        ActorOrientation.prototype.deserializeAs_ActorOrientation = function (param1) {
            this.id = param1.readInt();
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of ActorOrientation.direction.');
            }
        };
        ActorOrientation.ID = 353;
        return ActorOrientation;
    })();
    Protocol.ActorOrientation = ActorOrientation;
    var EntityDispositionInformations = (function () {
        function EntityDispositionInformations() {
            this.cellId = 0;
            this.direction = 1;
        }
        EntityDispositionInformations.prototype.getTypeId = function () {
            return EntityDispositionInformations.ID;
        };
        EntityDispositionInformations.prototype.reset = function () {
            this.cellId = 0;
            this.direction = 1;
        };
        EntityDispositionInformations.prototype.serialize = function (param1) {
            this.serializeAs_EntityDispositionInformations(param1);
        };
        EntityDispositionInformations.prototype.serializeAs_EntityDispositionInformations = function (param1) {
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeShort(this.cellId);
            param1.writeByte(this.direction);
        };
        EntityDispositionInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_EntityDispositionInformations(param1);
        };
        EntityDispositionInformations.prototype.deserializeAs_EntityDispositionInformations = function (param1) {
            this.cellId = param1.readShort();
            if (this.cellId < -1 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of EntityDispositionInformations.cellId.');
            }
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of EntityDispositionInformations.direction.');
            }
        };
        EntityDispositionInformations.ID = 60;
        return EntityDispositionInformations;
    })();
    Protocol.EntityDispositionInformations = EntityDispositionInformations;
    var EntityMovementInformations = (function () {
        function EntityMovementInformations() {
            this.id = 0;
            this.steps = [];
        }
        EntityMovementInformations.prototype.getTypeId = function () {
            return EntityMovementInformations.ID;
        };
        EntityMovementInformations.prototype.reset = function () {
            this.id = 0;
            this.steps = [];
        };
        EntityMovementInformations.prototype.serialize = function (param1) {
            this.serializeAs_EntityMovementInformations(param1);
        };
        EntityMovementInformations.prototype.serializeAs_EntityMovementInformations = function (param1) {
            param1.writeInt(this.id);
            param1.writeShort(this.steps.length);
            var _loc2_ = 0;
            while (_loc2_ < this.steps.length) {
                param1.writeByte(this.steps[_loc2_]);
                _loc2_++;
            }
        };
        EntityMovementInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_EntityMovementInformations(param1);
        };
        EntityMovementInformations.prototype.deserializeAs_EntityMovementInformations = function (param1) {
            var _loc4_ = 0;
            this.id = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readByte();
                this.steps.push(_loc4_);
                _loc3_++;
            }
        };
        EntityMovementInformations.ID = 63;
        return EntityMovementInformations;
    })();
    Protocol.EntityMovementInformations = EntityMovementInformations;
    var FightEntityDispositionInformations = (function (_super) {
        __extends(FightEntityDispositionInformations, _super);
        function FightEntityDispositionInformations() {
            this.carryingCharacterId = 0;
            _super.call(this);
        }
        FightEntityDispositionInformations.prototype.getTypeId = function () {
            return FightEntityDispositionInformations.ID;
        };
        FightEntityDispositionInformations.prototype.reset = function () {
            this.carryingCharacterId = 0;
        };
        FightEntityDispositionInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightEntityDispositionInformations(param1);
        };
        FightEntityDispositionInformations.prototype.serializeAs_FightEntityDispositionInformations = function (param1) {
            _super.prototype.serializeAs_EntityDispositionInformations.call(this, param1);
            param1.writeInt(this.carryingCharacterId);
        };
        FightEntityDispositionInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightEntityDispositionInformations(param1);
        };
        FightEntityDispositionInformations.prototype.deserializeAs_FightEntityDispositionInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.carryingCharacterId = param1.readInt();
        };
        FightEntityDispositionInformations.ID = 217;
        return FightEntityDispositionInformations;
    })(EntityDispositionInformations);
    Protocol.FightEntityDispositionInformations = FightEntityDispositionInformations;
    var GameContextActorInformations = (function () {
        function GameContextActorInformations() {
            this.contextualId = 0;
            this.look = new EntityLook();
            this.disposition = new EntityDispositionInformations();
        }
        GameContextActorInformations.prototype.getTypeId = function () {
            return GameContextActorInformations.ID;
        };
        GameContextActorInformations.prototype.reset = function () {
            this.contextualId = 0;
            this.look = new EntityLook();
            this.disposition = new EntityDispositionInformations();
        };
        GameContextActorInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameContextActorInformations(param1);
        };
        GameContextActorInformations.prototype.serializeAs_GameContextActorInformations = function (param1) {
            param1.writeInt(this.contextualId);
            this.look.serializeAs_EntityLook(param1);
            param1.writeShort(this.disposition.getTypeId());
            this.disposition.serialize(param1);
        };
        GameContextActorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameContextActorInformations(param1);
        };
        GameContextActorInformations.prototype.deserializeAs_GameContextActorInformations = function (param1) {
            this.contextualId = param1.readInt();
            this.look = new EntityLook();
            this.look.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            this.disposition = ProtocolTypeManager.getInstance(EntityDispositionInformations, _loc2_);
            this.disposition.deserialize(param1);
        };
        GameContextActorInformations.ID = 150;
        return GameContextActorInformations;
    })();
    Protocol.GameContextActorInformations = GameContextActorInformations;
    var GameRolePlayTaxCollectorInformations = (function (_super) {
        __extends(GameRolePlayTaxCollectorInformations, _super);
        function GameRolePlayTaxCollectorInformations() {
            this.identification = new TaxCollectorStaticInformations();
            this.guildLevel = 0;
            this.taxCollectorAttack = 0;
            _super.call(this);
        }
        GameRolePlayTaxCollectorInformations.prototype.getTypeId = function () {
            return GameRolePlayTaxCollectorInformations.ID;
        };
        GameRolePlayTaxCollectorInformations.prototype.reset = function () {
            this.identification = new TaxCollectorStaticInformations();
            this.guildLevel = 0;
            this.taxCollectorAttack = 0;
        };
        GameRolePlayTaxCollectorInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayTaxCollectorInformations(param1);
        };
        GameRolePlayTaxCollectorInformations.prototype.serializeAs_GameRolePlayTaxCollectorInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            param1.writeShort(this.identification.getTypeId());
            this.identification.serialize(param1);
            if (this.guildLevel < 0 || this.guildLevel > 255) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element guildLevel.');
            }
            param1.writeByte(this.guildLevel);
            param1.writeInt(this.taxCollectorAttack);
        };
        GameRolePlayTaxCollectorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayTaxCollectorInformations(param1);
        };
        GameRolePlayTaxCollectorInformations.prototype.deserializeAs_GameRolePlayTaxCollectorInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.identification = ProtocolTypeManager.getInstance(TaxCollectorStaticInformations, _loc2_);
            this.identification.deserialize(param1);
            this.guildLevel = param1.readUnsignedByte();
            if (this.guildLevel < 0 || this.guildLevel > 255) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element of GameRolePlayTaxCollectorInformations.guildLevel.');
            }
            this.taxCollectorAttack = param1.readInt();
        };
        GameRolePlayTaxCollectorInformations.ID = 148;
        return GameRolePlayTaxCollectorInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayTaxCollectorInformations = GameRolePlayTaxCollectorInformations;
    var IdentifiedEntityDispositionInformations = (function (_super) {
        __extends(IdentifiedEntityDispositionInformations, _super);
        function IdentifiedEntityDispositionInformations() {
            this.id = 0;
            _super.call(this);
        }
        IdentifiedEntityDispositionInformations.prototype.getTypeId = function () {
            return IdentifiedEntityDispositionInformations.ID;
        };
        IdentifiedEntityDispositionInformations.prototype.reset = function () {
            this.id = 0;
        };
        IdentifiedEntityDispositionInformations.prototype.serialize = function (param1) {
            this.serializeAs_IdentifiedEntityDispositionInformations(param1);
        };
        IdentifiedEntityDispositionInformations.prototype.serializeAs_IdentifiedEntityDispositionInformations = function (param1) {
            _super.prototype.serializeAs_EntityDispositionInformations.call(this, param1);
            param1.writeInt(this.id);
        };
        IdentifiedEntityDispositionInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_IdentifiedEntityDispositionInformations(param1);
        };
        IdentifiedEntityDispositionInformations.prototype.deserializeAs_IdentifiedEntityDispositionInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.id = param1.readInt();
        };
        IdentifiedEntityDispositionInformations.ID = 107;
        return IdentifiedEntityDispositionInformations;
    })(EntityDispositionInformations);
    Protocol.IdentifiedEntityDispositionInformations = IdentifiedEntityDispositionInformations;
    var MapCoordinates = (function () {
        function MapCoordinates() {
            this.worldX = 0;
            this.worldY = 0;
        }
        MapCoordinates.prototype.getTypeId = function () {
            return MapCoordinates.ID;
        };
        MapCoordinates.prototype.reset = function () {
            this.worldX = 0;
            this.worldY = 0;
        };
        MapCoordinates.prototype.serialize = function (param1) {
            this.serializeAs_MapCoordinates(param1);
        };
        MapCoordinates.prototype.serializeAs_MapCoordinates = function (param1) {
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
        };
        MapCoordinates.prototype.deserialize = function (param1) {
            this.deserializeAs_MapCoordinates(param1);
        };
        MapCoordinates.prototype.deserializeAs_MapCoordinates = function (param1) {
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of MapCoordinates.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of MapCoordinates.worldY.');
            }
        };
        MapCoordinates.ID = 174;
        return MapCoordinates;
    })();
    Protocol.MapCoordinates = MapCoordinates;
    var MapCoordinatesAndId = (function (_super) {
        __extends(MapCoordinatesAndId, _super);
        function MapCoordinatesAndId() {
            this.mapId = 0;
            _super.call(this);
        }
        MapCoordinatesAndId.prototype.getTypeId = function () {
            return MapCoordinatesAndId.ID;
        };
        MapCoordinatesAndId.prototype.reset = function () {
            this.mapId = 0;
        };
        MapCoordinatesAndId.prototype.serialize = function (param1) {
            this.serializeAs_MapCoordinatesAndId(param1);
        };
        MapCoordinatesAndId.prototype.serializeAs_MapCoordinatesAndId = function (param1) {
            _super.prototype.serializeAs_MapCoordinates.call(this, param1);
            param1.writeInt(this.mapId);
        };
        MapCoordinatesAndId.prototype.deserialize = function (param1) {
            this.deserializeAs_MapCoordinatesAndId(param1);
        };
        MapCoordinatesAndId.prototype.deserializeAs_MapCoordinatesAndId = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.mapId = param1.readInt();
        };
        MapCoordinatesAndId.ID = 392;
        return MapCoordinatesAndId;
    })(MapCoordinates);
    Protocol.MapCoordinatesAndId = MapCoordinatesAndId;
    var MapCoordinatesExtended = (function (_super) {
        __extends(MapCoordinatesExtended, _super);
        function MapCoordinatesExtended() {
            this.subAreaId = 0;
            _super.call(this);
        }
        MapCoordinatesExtended.prototype.getTypeId = function () {
            return MapCoordinatesExtended.ID;
        };
        MapCoordinatesExtended.prototype.reset = function () {
            this.subAreaId = 0;
        };
        MapCoordinatesExtended.prototype.serialize = function (param1) {
            this.serializeAs_MapCoordinatesExtended(param1);
        };
        MapCoordinatesExtended.prototype.serializeAs_MapCoordinatesExtended = function (param1) {
            _super.prototype.serializeAs_MapCoordinatesAndId.call(this, param1);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        MapCoordinatesExtended.prototype.deserialize = function (param1) {
            this.deserializeAs_MapCoordinatesExtended(param1);
        };
        MapCoordinatesExtended.prototype.deserializeAs_MapCoordinatesExtended = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of MapCoordinatesExtended.subAreaId.');
            }
        };
        MapCoordinatesExtended.ID = 176;
        return MapCoordinatesExtended;
    })(MapCoordinatesAndId);
    Protocol.MapCoordinatesExtended = MapCoordinatesExtended;
    var TaxCollectorStaticExtendedInformations = (function (_super) {
        __extends(TaxCollectorStaticExtendedInformations, _super);
        function TaxCollectorStaticExtendedInformations() {
            this.allianceIdentity = new AllianceInformations();
            _super.call(this);
        }
        TaxCollectorStaticExtendedInformations.prototype.getTypeId = function () {
            return TaxCollectorStaticExtendedInformations.ID;
        };
        TaxCollectorStaticExtendedInformations.prototype.reset = function () {
            this.allianceIdentity = new AllianceInformations();
        };
        TaxCollectorStaticExtendedInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorStaticExtendedInformations(param1);
        };
        TaxCollectorStaticExtendedInformations.prototype.serializeAs_TaxCollectorStaticExtendedInformations = function (param1) {
            _super.prototype.serializeAs_TaxCollectorStaticInformations.call(this, param1);
            this.allianceIdentity.serializeAs_AllianceInformations(param1);
        };
        TaxCollectorStaticExtendedInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorStaticExtendedInformations(param1);
        };
        TaxCollectorStaticExtendedInformations.prototype.deserializeAs_TaxCollectorStaticExtendedInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceIdentity = new AllianceInformations();
            this.allianceIdentity.deserialize(param1);
        };
        TaxCollectorStaticExtendedInformations.ID = 440;
        return TaxCollectorStaticExtendedInformations;
    })(TaxCollectorStaticInformations);
    Protocol.TaxCollectorStaticExtendedInformations = TaxCollectorStaticExtendedInformations;
    var TaxCollectorStaticInformations = (function () {
        function TaxCollectorStaticInformations() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.guildIdentity = new GuildInformations();
        }
        TaxCollectorStaticInformations.prototype.getTypeId = function () {
            return TaxCollectorStaticInformations.ID;
        };
        TaxCollectorStaticInformations.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.guildIdentity = new GuildInformations();
        };
        TaxCollectorStaticInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorStaticInformations(param1);
        };
        TaxCollectorStaticInformations.prototype.serializeAs_TaxCollectorStaticInformations = function (param1) {
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            this.guildIdentity.serializeAs_GuildInformations(param1);
        };
        TaxCollectorStaticInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorStaticInformations(param1);
        };
        TaxCollectorStaticInformations.prototype.deserializeAs_TaxCollectorStaticInformations = function (param1) {
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of TaxCollectorStaticInformations.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of TaxCollectorStaticInformations.lastNameId.');
            }
            this.guildIdentity = new GuildInformations();
            this.guildIdentity.deserialize(param1);
        };
        TaxCollectorStaticInformations.ID = 147;
        return TaxCollectorStaticInformations;
    })();
    Protocol.TaxCollectorStaticInformations = TaxCollectorStaticInformations;
    var AbstractFightTeamInformations = (function () {
        function AbstractFightTeamInformations() {
            this.teamId = 2;
            this.leaderId = 0;
            this.teamSide = 0;
            this.teamTypeId = 0;
            this.nbWaves = 0;
        }
        AbstractFightTeamInformations.prototype.getTypeId = function () {
            return AbstractFightTeamInformations.ID;
        };
        AbstractFightTeamInformations.prototype.reset = function () {
            this.teamId = 2;
            this.leaderId = 0;
            this.teamSide = 0;
            this.teamTypeId = 0;
            this.nbWaves = 0;
        };
        AbstractFightTeamInformations.prototype.serialize = function (param1) {
            this.serializeAs_AbstractFightTeamInformations(param1);
        };
        AbstractFightTeamInformations.prototype.serializeAs_AbstractFightTeamInformations = function (param1) {
            param1.writeByte(this.teamId);
            param1.writeInt(this.leaderId);
            param1.writeByte(this.teamSide);
            param1.writeByte(this.teamTypeId);
            if (this.nbWaves < 0) {
                throw new Error('Forbidden value (' + this.nbWaves + ') on element nbWaves.');
            }
            param1.writeByte(this.nbWaves);
        };
        AbstractFightTeamInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractFightTeamInformations(param1);
        };
        AbstractFightTeamInformations.prototype.deserializeAs_AbstractFightTeamInformations = function (param1) {
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of AbstractFightTeamInformations.teamId.');
            }
            this.leaderId = param1.readInt();
            this.teamSide = param1.readByte();
            this.teamTypeId = param1.readByte();
            if (this.teamTypeId < 0) {
                throw new Error('Forbidden value (' + this.teamTypeId + ') on element of AbstractFightTeamInformations.teamTypeId.');
            }
            this.nbWaves = param1.readByte();
            if (this.nbWaves < 0) {
                throw new Error('Forbidden value (' + this.nbWaves + ') on element of AbstractFightTeamInformations.nbWaves.');
            }
        };
        AbstractFightTeamInformations.ID = 116;
        return AbstractFightTeamInformations;
    })();
    Protocol.AbstractFightTeamInformations = AbstractFightTeamInformations;
    var FightAllianceTeamInformations = (function (_super) {
        __extends(FightAllianceTeamInformations, _super);
        function FightAllianceTeamInformations() {
            this.relation = 0;
            _super.call(this);
        }
        FightAllianceTeamInformations.prototype.getTypeId = function () {
            return FightAllianceTeamInformations.ID;
        };
        FightAllianceTeamInformations.prototype.reset = function () {
            this.relation = 0;
        };
        FightAllianceTeamInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightAllianceTeamInformations(param1);
        };
        FightAllianceTeamInformations.prototype.serializeAs_FightAllianceTeamInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamInformations.call(this, param1);
            param1.writeByte(this.relation);
        };
        FightAllianceTeamInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightAllianceTeamInformations(param1);
        };
        FightAllianceTeamInformations.prototype.deserializeAs_FightAllianceTeamInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.relation = param1.readByte();
            if (this.relation < 0) {
                throw new Error('Forbidden value (' + this.relation + ') on element of FightAllianceTeamInformations.relation.');
            }
        };
        FightAllianceTeamInformations.ID = 439;
        return FightAllianceTeamInformations;
    })(FightTeamInformations);
    Protocol.FightAllianceTeamInformations = FightAllianceTeamInformations;
    var FightCommonInformations = (function () {
        function FightCommonInformations() {
            this.fightId = 0;
            this.fightType = 0;
            this.fightTeams = [];
            this.fightTeamsPositions = [];
            this.fightTeamsOptions = [];
        }
        FightCommonInformations.prototype.getTypeId = function () {
            return FightCommonInformations.ID;
        };
        FightCommonInformations.prototype.reset = function () {
            this.fightId = 0;
            this.fightType = 0;
            this.fightTeams = [];
            this.fightTeamsPositions = [];
            this.fightTeamsOptions = [];
        };
        FightCommonInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightCommonInformations(param1);
        };
        FightCommonInformations.prototype.serializeAs_FightCommonInformations = function (param1) {
            param1.writeInt(this.fightId);
            param1.writeByte(this.fightType);
            param1.writeShort(this.fightTeams.length);
            var _loc2_ = 0;
            while (_loc2_ < this.fightTeams.length) {
                param1.writeShort((this.fightTeams[_loc2_]).getTypeId());
                (this.fightTeams[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.fightTeamsPositions.length);
            var _loc3_ = 0;
            while (_loc3_ < this.fightTeamsPositions.length) {
                if (this.fightTeamsPositions[_loc3_] < 0 || this.fightTeamsPositions[_loc3_] > 559) {
                    throw new Error('Forbidden value (' + this.fightTeamsPositions[_loc3_] + ') on element 4 (starting at 1) of fightTeamsPositions.');
                }
                param1.writeVarShort(this.fightTeamsPositions[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.fightTeamsOptions.length);
            var _loc4_ = 0;
            while (_loc4_ < this.fightTeamsOptions.length) {
                (this.fightTeamsOptions[_loc4_]).serializeAs_FightOptionsInformations(param1);
                _loc4_++;
            }
        };
        FightCommonInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightCommonInformations(param1);
        };
        FightCommonInformations.prototype.deserializeAs_FightCommonInformations = function (param1) {
            var _loc8_ = 0;
            var _loc9_ = null;
            var _loc10_ = 0;
            var _loc11_ = null;
            this.fightId = param1.readInt();
            this.fightType = param1.readByte();
            if (this.fightType < 0) {
                throw new Error('Forbidden value (' + this.fightType + ') on element of FightCommonInformations.fightType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc8_ = param1.readUnsignedShort();
                _loc9_ = ProtocolTypeManager.getInstance(FightTeamInformations, _loc8_);
                _loc9_.deserialize(param1);
                this.fightTeams.push(_loc9_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc10_ = param1.readVarUhShort();
                if (_loc10_ < 0 || _loc10_ > 559) {
                    throw new Error('Forbidden value (' + _loc10_ + ') on elements of fightTeamsPositions.');
                }
                this.fightTeamsPositions.push(_loc10_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc11_ = new FightOptionsInformations();
                _loc11_.deserialize(param1);
                this.fightTeamsOptions.push(_loc11_);
                _loc7_++;
            }
        };
        FightCommonInformations.ID = 43;
        return FightCommonInformations;
    })();
    Protocol.FightCommonInformations = FightCommonInformations;
    var FightExternalInformations = (function () {
        function FightExternalInformations() {
            this.fightId = 0;
            this.fightType = 0;
            this.fightStart = 0;
            this.fightSpectatorLocked = false;
            this.fightTeams = [];
            this.fightTeamsOptions = [];
        }
        FightExternalInformations.prototype.getTypeId = function () {
            return FightExternalInformations.ID;
        };
        FightExternalInformations.prototype.reset = function () {
            this.fightId = 0;
            this.fightType = 0;
            this.fightStart = 0;
            this.fightSpectatorLocked = false;
            this.fightTeams = [];
            this.fightTeamsOptions = [];
        };
        FightExternalInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightExternalInformations(param1);
        };
        FightExternalInformations.prototype.serializeAs_FightExternalInformations = function (param1) {
            param1.writeInt(this.fightId);
            param1.writeByte(this.fightType);
            if (this.fightStart < 0) {
                throw new Error('Forbidden value (' + this.fightStart + ') on element fightStart.');
            }
            param1.writeInt(this.fightStart);
            param1.writeBoolean(this.fightSpectatorLocked);
            var _loc2_ = 0;
            while (_loc2_ < 2) {
                this.fightTeams[_loc2_].serializeAs_FightTeamLightInformations(param1);
                _loc2_++;
            }
            var _loc3_ = 0;
            while (_loc3_ < 2) {
                this.fightTeamsOptions[_loc3_].serializeAs_FightOptionsInformations(param1);
                _loc3_++;
            }
        };
        FightExternalInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightExternalInformations(param1);
        };
        FightExternalInformations.prototype.deserializeAs_FightExternalInformations = function (param1) {
            this.fightId = param1.readInt();
            this.fightType = param1.readByte();
            if (this.fightType < 0) {
                throw new Error('Forbidden value (' + this.fightType + ') on element of FightExternalInformations.fightType.');
            }
            this.fightStart = param1.readInt();
            if (this.fightStart < 0) {
                throw new Error('Forbidden value (' + this.fightStart + ') on element of FightExternalInformations.fightStart.');
            }
            this.fightSpectatorLocked = param1.readBoolean();
            var _loc2_ = 0;
            while (_loc2_ < 2) {
                this.fightTeams[_loc2_] = new FightTeamLightInformations();
                this.fightTeams[_loc2_].deserialize(param1);
                _loc2_++;
            }
            var _loc3_ = 0;
            while (_loc3_ < 2) {
                this.fightTeamsOptions[_loc3_] = new FightOptionsInformations();
                this.fightTeamsOptions[_loc3_].deserialize(param1);
                _loc3_++;
            }
        };
        FightExternalInformations.ID = 117;
        return FightExternalInformations;
    })();
    Protocol.FightExternalInformations = FightExternalInformations;
    var FightLoot = (function () {
        function FightLoot() {
            this.objects = [];
            this.kamas = 0;
        }
        FightLoot.prototype.getTypeId = function () {
            return FightLoot.ID;
        };
        FightLoot.prototype.reset = function () {
            this.objects = [];
            this.kamas = 0;
        };
        FightLoot.prototype.serialize = function (param1) {
            this.serializeAs_FightLoot(param1);
        };
        FightLoot.prototype.serializeAs_FightLoot = function (param1) {
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                if (this.objects[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.objects[_loc2_] + ') on element 1 (starting at 1) of objects.');
                }
                param1.writeVarShort(this.objects[_loc2_]);
                _loc2_++;
            }
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element kamas.');
            }
            param1.writeVarInt(this.kamas);
        };
        FightLoot.prototype.deserialize = function (param1) {
            this.deserializeAs_FightLoot(param1);
        };
        FightLoot.prototype.deserializeAs_FightLoot = function (param1) {
            var _loc4_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of objects.');
                }
                this.objects.push(_loc4_);
                _loc3_++;
            }
            this.kamas = param1.readVarUhInt();
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element of FightLoot.kamas.');
            }
        };
        FightLoot.ID = 41;
        return FightLoot;
    })();
    Protocol.FightLoot = FightLoot;
    var FightOptionsInformations = (function () {
        function FightOptionsInformations() {
            this.isSecret = false;
            this.isRestrictedToPartyOnly = false;
            this.isClosed = false;
            this.isAskingForHelp = false;
        }
        FightOptionsInformations.prototype.getTypeId = function () {
            return FightOptionsInformations.ID;
        };
        FightOptionsInformations.prototype.reset = function () {
            this.isSecret = false;
            this.isRestrictedToPartyOnly = false;
            this.isClosed = false;
            this.isAskingForHelp = false;
        };
        FightOptionsInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightOptionsInformations(param1);
        };
        FightOptionsInformations.prototype.serializeAs_FightOptionsInformations = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.isSecret);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.isRestrictedToPartyOnly);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.isClosed);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 3, this.isAskingForHelp);
            param1.writeByte(_loc2_);
        };
        FightOptionsInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightOptionsInformations(param1);
        };
        FightOptionsInformations.prototype.deserializeAs_FightOptionsInformations = function (param1) {
            var _loc2_ = param1.readByte();
            this.isSecret = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.isRestrictedToPartyOnly = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.isClosed = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.isAskingForHelp = BooleanByteWrapper.getFlag(_loc2_, 3);
        };
        FightOptionsInformations.ID = 20;
        return FightOptionsInformations;
    })();
    Protocol.FightOptionsInformations = FightOptionsInformations;
    var FightResultAdditionalData = (function () {
        function FightResultAdditionalData() {
        }
        FightResultAdditionalData.prototype.getTypeId = function () {
            return FightResultAdditionalData.ID;
        };
        FightResultAdditionalData.prototype.reset = function () {
        };
        FightResultAdditionalData.prototype.serialize = function (param1) {
            this.serializeAs_FightResultAdditionalData(param1);
        };
        FightResultAdditionalData.prototype.serializeAs_FightResultAdditionalData = function (param1) {
        };
        FightResultAdditionalData.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultAdditionalData(param1);
        };
        FightResultAdditionalData.prototype.deserializeAs_FightResultAdditionalData = function (param1) {
        };
        FightResultAdditionalData.ID = 191;
        return FightResultAdditionalData;
    })();
    Protocol.FightResultAdditionalData = FightResultAdditionalData;
    var FightResultExperienceData = (function (_super) {
        __extends(FightResultExperienceData, _super);
        function FightResultExperienceData() {
            this.experience = 0;
            this.showExperience = false;
            this.experienceLevelFloor = 0;
            this.showExperienceLevelFloor = false;
            this.experienceNextLevelFloor = 0;
            this.showExperienceNextLevelFloor = false;
            this.experienceFightDelta = 0;
            this.showExperienceFightDelta = false;
            this.experienceForGuild = 0;
            this.showExperienceForGuild = false;
            this.experienceForMount = 0;
            this.showExperienceForMount = false;
            this.isIncarnationExperience = false;
            this.rerollExperienceMul = 0;
            _super.call(this);
        }
        FightResultExperienceData.prototype.getTypeId = function () {
            return FightResultExperienceData.ID;
        };
        FightResultExperienceData.prototype.reset = function () {
            this.experience = 0;
            this.showExperience = false;
            this.experienceLevelFloor = 0;
            this.showExperienceLevelFloor = false;
            this.experienceNextLevelFloor = 0;
            this.showExperienceNextLevelFloor = false;
            this.experienceFightDelta = 0;
            this.showExperienceFightDelta = false;
            this.experienceForGuild = 0;
            this.showExperienceForGuild = false;
            this.experienceForMount = 0;
            this.showExperienceForMount = false;
            this.isIncarnationExperience = false;
            this.rerollExperienceMul = 0;
        };
        FightResultExperienceData.prototype.serialize = function (param1) {
            this.serializeAs_FightResultExperienceData(param1);
        };
        FightResultExperienceData.prototype.serializeAs_FightResultExperienceData = function (param1) {
            _super.prototype.serializeAs_FightResultAdditionalData.call(this, param1);
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.showExperience);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.showExperienceLevelFloor);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.showExperienceNextLevelFloor);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 3, this.showExperienceFightDelta);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 4, this.showExperienceForGuild);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 5, this.showExperienceForMount);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 6, this.isIncarnationExperience);
            param1.writeByte(_loc2_);
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.experienceLevelFloor < 0 || this.experienceLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceLevelFloor + ') on element experienceLevelFloor.');
            }
            param1.writeVarLong(this.experienceLevelFloor);
            if (this.experienceNextLevelFloor < 0 || this.experienceNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceNextLevelFloor + ') on element experienceNextLevelFloor.');
            }
            param1.writeDouble(this.experienceNextLevelFloor);
            param1.writeVarInt(this.experienceFightDelta);
            if (this.experienceForGuild < 0) {
                throw new Error('Forbidden value (' + this.experienceForGuild + ') on element experienceForGuild.');
            }
            param1.writeVarInt(this.experienceForGuild);
            if (this.experienceForMount < 0) {
                throw new Error('Forbidden value (' + this.experienceForMount + ') on element experienceForMount.');
            }
            param1.writeVarInt(this.experienceForMount);
            if (this.rerollExperienceMul < 0) {
                throw new Error('Forbidden value (' + this.rerollExperienceMul + ') on element rerollExperienceMul.');
            }
            param1.writeByte(this.rerollExperienceMul);
        };
        FightResultExperienceData.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultExperienceData(param1);
        };
        FightResultExperienceData.prototype.deserializeAs_FightResultExperienceData = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readByte();
            this.showExperience = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.showExperienceLevelFloor = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.showExperienceNextLevelFloor = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.showExperienceFightDelta = BooleanByteWrapper.getFlag(_loc2_, 3);
            this.showExperienceForGuild = BooleanByteWrapper.getFlag(_loc2_, 4);
            this.showExperienceForMount = BooleanByteWrapper.getFlag(_loc2_, 5);
            this.isIncarnationExperience = BooleanByteWrapper.getFlag(_loc2_, 6);
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of FightResultExperienceData.experience.');
            }
            this.experienceLevelFloor = param1.readVarUhLong();
            if (this.experienceLevelFloor < 0 || this.experienceLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceLevelFloor + ') on element of FightResultExperienceData.experienceLevelFloor.');
            }
            this.experienceNextLevelFloor = param1.readDouble();
            if (this.experienceNextLevelFloor < 0 || this.experienceNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceNextLevelFloor + ') on element of FightResultExperienceData.experienceNextLevelFloor.');
            }
            this.experienceFightDelta = param1.readVarInt();
            this.experienceForGuild = param1.readVarUhInt();
            if (this.experienceForGuild < 0) {
                throw new Error('Forbidden value (' + this.experienceForGuild + ') on element of FightResultExperienceData.experienceForGuild.');
            }
            this.experienceForMount = param1.readVarUhInt();
            if (this.experienceForMount < 0) {
                throw new Error('Forbidden value (' + this.experienceForMount + ') on element of FightResultExperienceData.experienceForMount.');
            }
            this.rerollExperienceMul = param1.readByte();
            if (this.rerollExperienceMul < 0) {
                throw new Error('Forbidden value (' + this.rerollExperienceMul + ') on element of FightResultExperienceData.rerollExperienceMul.');
            }
        };
        FightResultExperienceData.ID = 192;
        return FightResultExperienceData;
    })(FightResultAdditionalData);
    Protocol.FightResultExperienceData = FightResultExperienceData;
    var FightResultFighterListEntry = (function (_super) {
        __extends(FightResultFighterListEntry, _super);
        function FightResultFighterListEntry() {
            this.id = 0;
            this.alive = false;
            _super.call(this);
        }
        FightResultFighterListEntry.prototype.getTypeId = function () {
            return FightResultFighterListEntry.ID;
        };
        FightResultFighterListEntry.prototype.reset = function () {
            this.id = 0;
            this.alive = false;
        };
        FightResultFighterListEntry.prototype.serialize = function (param1) {
            this.serializeAs_FightResultFighterListEntry(param1);
        };
        FightResultFighterListEntry.prototype.serializeAs_FightResultFighterListEntry = function (param1) {
            _super.prototype.serializeAs_FightResultListEntry.call(this, param1);
            param1.writeInt(this.id);
            param1.writeBoolean(this.alive);
        };
        FightResultFighterListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultFighterListEntry(param1);
        };
        FightResultFighterListEntry.prototype.deserializeAs_FightResultFighterListEntry = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.id = param1.readInt();
            this.alive = param1.readBoolean();
        };
        FightResultFighterListEntry.ID = 189;
        return FightResultFighterListEntry;
    })(FightResultListEntry);
    Protocol.FightResultFighterListEntry = FightResultFighterListEntry;
    var FightResultListEntry = (function () {
        function FightResultListEntry() {
            this.outcome = 0;
            this.wave = 0;
            this.rewards = new FightLoot();
        }
        FightResultListEntry.prototype.getTypeId = function () {
            return FightResultListEntry.ID;
        };
        FightResultListEntry.prototype.reset = function () {
            this.outcome = 0;
            this.wave = 0;
            this.rewards = new FightLoot();
        };
        FightResultListEntry.prototype.serialize = function (param1) {
            this.serializeAs_FightResultListEntry(param1);
        };
        FightResultListEntry.prototype.serializeAs_FightResultListEntry = function (param1) {
            param1.writeVarShort(this.outcome);
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element wave.');
            }
            param1.writeByte(this.wave);
            this.rewards.serializeAs_FightLoot(param1);
        };
        FightResultListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultListEntry(param1);
        };
        FightResultListEntry.prototype.deserializeAs_FightResultListEntry = function (param1) {
            this.outcome = param1.readVarUhShort();
            if (this.outcome < 0) {
                throw new Error('Forbidden value (' + this.outcome + ') on element of FightResultListEntry.outcome.');
            }
            this.wave = param1.readByte();
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element of FightResultListEntry.wave.');
            }
            this.rewards = new FightLoot();
            this.rewards.deserialize(param1);
        };
        FightResultListEntry.ID = 16;
        return FightResultListEntry;
    })();
    Protocol.FightResultListEntry = FightResultListEntry;
    var FightResultMutantListEntry = (function (_super) {
        __extends(FightResultMutantListEntry, _super);
        function FightResultMutantListEntry() {
            this.level = 0;
            _super.call(this);
        }
        FightResultMutantListEntry.prototype.getTypeId = function () {
            return FightResultMutantListEntry.ID;
        };
        FightResultMutantListEntry.prototype.reset = function () {
            this.level = 0;
        };
        FightResultMutantListEntry.prototype.serialize = function (param1) {
            this.serializeAs_FightResultMutantListEntry(param1);
        };
        FightResultMutantListEntry.prototype.serializeAs_FightResultMutantListEntry = function (param1) {
            _super.prototype.serializeAs_FightResultFighterListEntry.call(this, param1);
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeVarShort(this.level);
        };
        FightResultMutantListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultMutantListEntry(param1);
        };
        FightResultMutantListEntry.prototype.deserializeAs_FightResultMutantListEntry = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.level = param1.readVarUhShort();
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightResultMutantListEntry.level.');
            }
        };
        FightResultMutantListEntry.ID = 216;
        return FightResultMutantListEntry;
    })(FightResultFighterListEntry);
    Protocol.FightResultMutantListEntry = FightResultMutantListEntry;
    var FightResultPlayerListEntry = (function (_super) {
        __extends(FightResultPlayerListEntry, _super);
        function FightResultPlayerListEntry() {
            this.level = 0;
            this.additional = [];
            _super.call(this);
        }
        FightResultPlayerListEntry.prototype.getTypeId = function () {
            return FightResultPlayerListEntry.ID;
        };
        FightResultPlayerListEntry.prototype.reset = function () {
            this.level = 0;
            this.additional = [];
        };
        FightResultPlayerListEntry.prototype.serialize = function (param1) {
            this.serializeAs_FightResultPlayerListEntry(param1);
        };
        FightResultPlayerListEntry.prototype.serializeAs_FightResultPlayerListEntry = function (param1) {
            _super.prototype.serializeAs_FightResultFighterListEntry.call(this, param1);
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            param1.writeShort(this.additional.length);
            var _loc2_ = 0;
            while (_loc2_ < this.additional.length) {
                param1.writeShort((this.additional[_loc2_]).getTypeId());
                (this.additional[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        FightResultPlayerListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultPlayerListEntry(param1);
        };
        FightResultPlayerListEntry.prototype.deserializeAs_FightResultPlayerListEntry = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.level = param1.readUnsignedByte();
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightResultPlayerListEntry.level.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(FightResultAdditionalData, _loc4_);
                _loc5_.deserialize(param1);
                this.additional.push(_loc5_);
                _loc3_++;
            }
        };
        FightResultPlayerListEntry.ID = 24;
        return FightResultPlayerListEntry;
    })(FightResultFighterListEntry);
    Protocol.FightResultPlayerListEntry = FightResultPlayerListEntry;
    var FightResultPvpData = (function (_super) {
        __extends(FightResultPvpData, _super);
        function FightResultPvpData() {
            this.grade = 0;
            this.minHonorForGrade = 0;
            this.maxHonorForGrade = 0;
            this.honor = 0;
            this.honorDelta = 0;
            _super.call(this);
        }
        FightResultPvpData.prototype.getTypeId = function () {
            return FightResultPvpData.ID;
        };
        FightResultPvpData.prototype.reset = function () {
            this.grade = 0;
            this.minHonorForGrade = 0;
            this.maxHonorForGrade = 0;
            this.honor = 0;
            this.honorDelta = 0;
        };
        FightResultPvpData.prototype.serialize = function (param1) {
            this.serializeAs_FightResultPvpData(param1);
        };
        FightResultPvpData.prototype.serializeAs_FightResultPvpData = function (param1) {
            _super.prototype.serializeAs_FightResultAdditionalData.call(this, param1);
            if (this.grade < 0 || this.grade > 255) {
                throw new Error('Forbidden value (' + this.grade + ') on element grade.');
            }
            param1.writeByte(this.grade);
            if (this.minHonorForGrade < 0 || this.minHonorForGrade > 20000) {
                throw new Error('Forbidden value (' + this.minHonorForGrade + ') on element minHonorForGrade.');
            }
            param1.writeVarShort(this.minHonorForGrade);
            if (this.maxHonorForGrade < 0 || this.maxHonorForGrade > 20000) {
                throw new Error('Forbidden value (' + this.maxHonorForGrade + ') on element maxHonorForGrade.');
            }
            param1.writeVarShort(this.maxHonorForGrade);
            if (this.honor < 0 || this.honor > 20000) {
                throw new Error('Forbidden value (' + this.honor + ') on element honor.');
            }
            param1.writeVarShort(this.honor);
            param1.writeVarShort(this.honorDelta);
        };
        FightResultPvpData.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultPvpData(param1);
        };
        FightResultPvpData.prototype.deserializeAs_FightResultPvpData = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.grade = param1.readUnsignedByte();
            if (this.grade < 0 || this.grade > 255) {
                throw new Error('Forbidden value (' + this.grade + ') on element of FightResultPvpData.grade.');
            }
            this.minHonorForGrade = param1.readVarUhShort();
            if (this.minHonorForGrade < 0 || this.minHonorForGrade > 20000) {
                throw new Error('Forbidden value (' + this.minHonorForGrade + ') on element of FightResultPvpData.minHonorForGrade.');
            }
            this.maxHonorForGrade = param1.readVarUhShort();
            if (this.maxHonorForGrade < 0 || this.maxHonorForGrade > 20000) {
                throw new Error('Forbidden value (' + this.maxHonorForGrade + ') on element of FightResultPvpData.maxHonorForGrade.');
            }
            this.honor = param1.readVarUhShort();
            if (this.honor < 0 || this.honor > 20000) {
                throw new Error('Forbidden value (' + this.honor + ') on element of FightResultPvpData.honor.');
            }
            this.honorDelta = param1.readVarShort();
        };
        FightResultPvpData.ID = 190;
        return FightResultPvpData;
    })(FightResultAdditionalData);
    Protocol.FightResultPvpData = FightResultPvpData;
    var FightResultTaxCollectorListEntry = (function (_super) {
        __extends(FightResultTaxCollectorListEntry, _super);
        function FightResultTaxCollectorListEntry() {
            this.level = 0;
            this.guildInfo = new BasicGuildInformations();
            this.experienceForGuild = 0;
            _super.call(this);
        }
        FightResultTaxCollectorListEntry.prototype.getTypeId = function () {
            return FightResultTaxCollectorListEntry.ID;
        };
        FightResultTaxCollectorListEntry.prototype.reset = function () {
            this.level = 0;
            this.guildInfo = new BasicGuildInformations();
            this.experienceForGuild = 0;
        };
        FightResultTaxCollectorListEntry.prototype.serialize = function (param1) {
            this.serializeAs_FightResultTaxCollectorListEntry(param1);
        };
        FightResultTaxCollectorListEntry.prototype.serializeAs_FightResultTaxCollectorListEntry = function (param1) {
            _super.prototype.serializeAs_FightResultFighterListEntry.call(this, param1);
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            this.guildInfo.serializeAs_BasicGuildInformations(param1);
            param1.writeInt(this.experienceForGuild);
        };
        FightResultTaxCollectorListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_FightResultTaxCollectorListEntry(param1);
        };
        FightResultTaxCollectorListEntry.prototype.deserializeAs_FightResultTaxCollectorListEntry = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.level = param1.readUnsignedByte();
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightResultTaxCollectorListEntry.level.');
            }
            this.guildInfo = new BasicGuildInformations();
            this.guildInfo.deserialize(param1);
            this.experienceForGuild = param1.readInt();
        };
        FightResultTaxCollectorListEntry.ID = 84;
        return FightResultTaxCollectorListEntry;
    })(FightResultFighterListEntry);
    Protocol.FightResultTaxCollectorListEntry = FightResultTaxCollectorListEntry;
    var FightTeamInformations = (function (_super) {
        __extends(FightTeamInformations, _super);
        function FightTeamInformations() {
            this.teamMembers = [];
            _super.call(this);
        }
        FightTeamInformations.prototype.getTypeId = function () {
            return FightTeamInformations.ID;
        };
        FightTeamInformations.prototype.reset = function () {
            this.teamMembers = [];
        };
        FightTeamInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamInformations(param1);
        };
        FightTeamInformations.prototype.serializeAs_FightTeamInformations = function (param1) {
            _super.prototype.serializeAs_AbstractFightTeamInformations.call(this, param1);
            param1.writeShort(this.teamMembers.length);
            var _loc2_ = 0;
            while (_loc2_ < this.teamMembers.length) {
                param1.writeShort((this.teamMembers[_loc2_]).getTypeId());
                (this.teamMembers[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        FightTeamInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamInformations(param1);
        };
        FightTeamInformations.prototype.deserializeAs_FightTeamInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(FightTeamMemberInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.teamMembers.push(_loc5_);
                _loc3_++;
            }
        };
        FightTeamInformations.ID = 33;
        return FightTeamInformations;
    })(AbstractFightTeamInformations);
    Protocol.FightTeamInformations = FightTeamInformations;
    var FightTeamLightInformations = (function (_super) {
        __extends(FightTeamLightInformations, _super);
        function FightTeamLightInformations() {
            this.teamMembersCount = 0;
            this.meanLevel = 0;
            this.hasFriend = false;
            this.hasGuildMember = false;
            this.hasAllianceMember = false;
            this.hasGroupMember = false;
            this.hasMyTaxCollector = false;
            _super.call(this);
        }
        FightTeamLightInformations.prototype.getTypeId = function () {
            return FightTeamLightInformations.ID;
        };
        FightTeamLightInformations.prototype.reset = function () {
            this.teamMembersCount = 0;
            this.meanLevel = 0;
            this.hasFriend = false;
            this.hasGuildMember = false;
            this.hasAllianceMember = false;
            this.hasGroupMember = false;
            this.hasMyTaxCollector = false;
        };
        FightTeamLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamLightInformations(param1);
        };
        FightTeamLightInformations.prototype.serializeAs_FightTeamLightInformations = function (param1) {
            _super.prototype.serializeAs_AbstractFightTeamInformations.call(this, param1);
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.hasFriend);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.hasGuildMember);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.hasAllianceMember);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 3, this.hasGroupMember);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 4, this.hasMyTaxCollector);
            param1.writeByte(_loc2_);
            if (this.teamMembersCount < 0) {
                throw new Error('Forbidden value (' + this.teamMembersCount + ') on element teamMembersCount.');
            }
            param1.writeByte(this.teamMembersCount);
            if (this.meanLevel < 0) {
                throw new Error('Forbidden value (' + this.meanLevel + ') on element meanLevel.');
            }
            param1.writeVarInt(this.meanLevel);
        };
        FightTeamLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamLightInformations(param1);
        };
        FightTeamLightInformations.prototype.deserializeAs_FightTeamLightInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readByte();
            this.hasFriend = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.hasGuildMember = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.hasAllianceMember = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.hasGroupMember = BooleanByteWrapper.getFlag(_loc2_, 3);
            this.hasMyTaxCollector = BooleanByteWrapper.getFlag(_loc2_, 4);
            this.teamMembersCount = param1.readByte();
            if (this.teamMembersCount < 0) {
                throw new Error('Forbidden value (' + this.teamMembersCount + ') on element of FightTeamLightInformations.teamMembersCount.');
            }
            this.meanLevel = param1.readVarUhInt();
            if (this.meanLevel < 0) {
                throw new Error('Forbidden value (' + this.meanLevel + ') on element of FightTeamLightInformations.meanLevel.');
            }
        };
        FightTeamLightInformations.ID = 115;
        return FightTeamLightInformations;
    })(AbstractFightTeamInformations);
    Protocol.FightTeamLightInformations = FightTeamLightInformations;
    var FightTeamMemberCharacterInformations = (function (_super) {
        __extends(FightTeamMemberCharacterInformations, _super);
        function FightTeamMemberCharacterInformations() {
            this.name = '';
            this.level = 0;
            _super.call(this);
        }
        FightTeamMemberCharacterInformations.prototype.getTypeId = function () {
            return FightTeamMemberCharacterInformations.ID;
        };
        FightTeamMemberCharacterInformations.prototype.reset = function () {
            this.name = '';
            this.level = 0;
        };
        FightTeamMemberCharacterInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberCharacterInformations(param1);
        };
        FightTeamMemberCharacterInformations.prototype.serializeAs_FightTeamMemberCharacterInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamMemberInformations.call(this, param1);
            param1.writeUTF(this.name);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
        };
        FightTeamMemberCharacterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberCharacterInformations(param1);
        };
        FightTeamMemberCharacterInformations.prototype.deserializeAs_FightTeamMemberCharacterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightTeamMemberCharacterInformations.level.');
            }
        };
        FightTeamMemberCharacterInformations.ID = 13;
        return FightTeamMemberCharacterInformations;
    })(FightTeamMemberInformations);
    Protocol.FightTeamMemberCharacterInformations = FightTeamMemberCharacterInformations;
    var FightTeamMemberCompanionInformations = (function (_super) {
        __extends(FightTeamMemberCompanionInformations, _super);
        function FightTeamMemberCompanionInformations() {
            this.companionId = 0;
            this.level = 0;
            this.masterId = 0;
            _super.call(this);
        }
        FightTeamMemberCompanionInformations.prototype.getTypeId = function () {
            return FightTeamMemberCompanionInformations.ID;
        };
        FightTeamMemberCompanionInformations.prototype.reset = function () {
            this.companionId = 0;
            this.level = 0;
            this.masterId = 0;
        };
        FightTeamMemberCompanionInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberCompanionInformations(param1);
        };
        FightTeamMemberCompanionInformations.prototype.serializeAs_FightTeamMemberCompanionInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamMemberInformations.call(this, param1);
            if (this.companionId < 0) {
                throw new Error('Forbidden value (' + this.companionId + ') on element companionId.');
            }
            param1.writeByte(this.companionId);
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            param1.writeInt(this.masterId);
        };
        FightTeamMemberCompanionInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberCompanionInformations(param1);
        };
        FightTeamMemberCompanionInformations.prototype.deserializeAs_FightTeamMemberCompanionInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.companionId = param1.readByte();
            if (this.companionId < 0) {
                throw new Error('Forbidden value (' + this.companionId + ') on element of FightTeamMemberCompanionInformations.companionId.');
            }
            this.level = param1.readUnsignedByte();
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightTeamMemberCompanionInformations.level.');
            }
            this.masterId = param1.readInt();
        };
        FightTeamMemberCompanionInformations.ID = 451;
        return FightTeamMemberCompanionInformations;
    })(FightTeamMemberInformations);
    Protocol.FightTeamMemberCompanionInformations = FightTeamMemberCompanionInformations;
    var FightTeamMemberInformations = (function () {
        function FightTeamMemberInformations() {
            this.id = 0;
        }
        FightTeamMemberInformations.prototype.getTypeId = function () {
            return FightTeamMemberInformations.ID;
        };
        FightTeamMemberInformations.prototype.reset = function () {
            this.id = 0;
        };
        FightTeamMemberInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberInformations(param1);
        };
        FightTeamMemberInformations.prototype.serializeAs_FightTeamMemberInformations = function (param1) {
            param1.writeInt(this.id);
        };
        FightTeamMemberInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberInformations(param1);
        };
        FightTeamMemberInformations.prototype.deserializeAs_FightTeamMemberInformations = function (param1) {
            this.id = param1.readInt();
        };
        FightTeamMemberInformations.ID = 44;
        return FightTeamMemberInformations;
    })();
    Protocol.FightTeamMemberInformations = FightTeamMemberInformations;
    var FightTeamMemberMonsterInformations = (function (_super) {
        __extends(FightTeamMemberMonsterInformations, _super);
        function FightTeamMemberMonsterInformations() {
            this.monsterId = 0;
            this.grade = 0;
            _super.call(this);
        }
        FightTeamMemberMonsterInformations.prototype.getTypeId = function () {
            return FightTeamMemberMonsterInformations.ID;
        };
        FightTeamMemberMonsterInformations.prototype.reset = function () {
            this.monsterId = 0;
            this.grade = 0;
        };
        FightTeamMemberMonsterInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberMonsterInformations(param1);
        };
        FightTeamMemberMonsterInformations.prototype.serializeAs_FightTeamMemberMonsterInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamMemberInformations.call(this, param1);
            param1.writeInt(this.monsterId);
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element grade.');
            }
            param1.writeByte(this.grade);
        };
        FightTeamMemberMonsterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberMonsterInformations(param1);
        };
        FightTeamMemberMonsterInformations.prototype.deserializeAs_FightTeamMemberMonsterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.monsterId = param1.readInt();
            this.grade = param1.readByte();
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element of FightTeamMemberMonsterInformations.grade.');
            }
        };
        FightTeamMemberMonsterInformations.ID = 6;
        return FightTeamMemberMonsterInformations;
    })(FightTeamMemberInformations);
    Protocol.FightTeamMemberMonsterInformations = FightTeamMemberMonsterInformations;
    var FightTeamMemberTaxCollectorInformations = (function (_super) {
        __extends(FightTeamMemberTaxCollectorInformations, _super);
        function FightTeamMemberTaxCollectorInformations() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.level = 0;
            this.guildId = 0;
            this.uid = 0;
            _super.call(this);
        }
        FightTeamMemberTaxCollectorInformations.prototype.getTypeId = function () {
            return FightTeamMemberTaxCollectorInformations.ID;
        };
        FightTeamMemberTaxCollectorInformations.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.level = 0;
            this.guildId = 0;
            this.uid = 0;
        };
        FightTeamMemberTaxCollectorInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberTaxCollectorInformations(param1);
        };
        FightTeamMemberTaxCollectorInformations.prototype.serializeAs_FightTeamMemberTaxCollectorInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamMemberInformations.call(this, param1);
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeVarInt(this.uid);
        };
        FightTeamMemberTaxCollectorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberTaxCollectorInformations(param1);
        };
        FightTeamMemberTaxCollectorInformations.prototype.deserializeAs_FightTeamMemberTaxCollectorInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of FightTeamMemberTaxCollectorInformations.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of FightTeamMemberTaxCollectorInformations.lastNameId.');
            }
            this.level = param1.readUnsignedByte();
            if (this.level < 1 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of FightTeamMemberTaxCollectorInformations.level.');
            }
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of FightTeamMemberTaxCollectorInformations.guildId.');
            }
            this.uid = param1.readVarUhInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of FightTeamMemberTaxCollectorInformations.uid.');
            }
        };
        FightTeamMemberTaxCollectorInformations.ID = 177;
        return FightTeamMemberTaxCollectorInformations;
    })(FightTeamMemberInformations);
    Protocol.FightTeamMemberTaxCollectorInformations = FightTeamMemberTaxCollectorInformations;
    var FightTeamMemberWithAllianceCharacterInformations = (function (_super) {
        __extends(FightTeamMemberWithAllianceCharacterInformations, _super);
        function FightTeamMemberWithAllianceCharacterInformations() {
            this.allianceInfos = new BasicAllianceInformations();
            _super.call(this);
        }
        FightTeamMemberWithAllianceCharacterInformations.prototype.getTypeId = function () {
            return FightTeamMemberWithAllianceCharacterInformations.ID;
        };
        FightTeamMemberWithAllianceCharacterInformations.prototype.reset = function () {
            this.allianceInfos = new BasicAllianceInformations();
        };
        FightTeamMemberWithAllianceCharacterInformations.prototype.serialize = function (param1) {
            this.serializeAs_FightTeamMemberWithAllianceCharacterInformations(param1);
        };
        FightTeamMemberWithAllianceCharacterInformations.prototype.serializeAs_FightTeamMemberWithAllianceCharacterInformations = function (param1) {
            _super.prototype.serializeAs_FightTeamMemberCharacterInformations.call(this, param1);
            this.allianceInfos.serializeAs_BasicAllianceInformations(param1);
        };
        FightTeamMemberWithAllianceCharacterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FightTeamMemberWithAllianceCharacterInformations(param1);
        };
        FightTeamMemberWithAllianceCharacterInformations.prototype.deserializeAs_FightTeamMemberWithAllianceCharacterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceInfos = new BasicAllianceInformations();
            this.allianceInfos.deserialize(param1);
        };
        FightTeamMemberWithAllianceCharacterInformations.ID = 426;
        return FightTeamMemberWithAllianceCharacterInformations;
    })(FightTeamMemberCharacterInformations);
    Protocol.FightTeamMemberWithAllianceCharacterInformations = FightTeamMemberWithAllianceCharacterInformations;
    var GameFightAIInformations = (function (_super) {
        __extends(GameFightAIInformations, _super);
        function GameFightAIInformations() {
            _super.call(this);
        }
        GameFightAIInformations.prototype.getTypeId = function () {
            return GameFightAIInformations.ID;
        };
        GameFightAIInformations.prototype.reset = function () {
        };
        GameFightAIInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightAIInformations(param1);
        };
        GameFightAIInformations.prototype.serializeAs_GameFightAIInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterInformations.call(this, param1);
        };
        GameFightAIInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightAIInformations(param1);
        };
        GameFightAIInformations.prototype.deserializeAs_GameFightAIInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameFightAIInformations.ID = 151;
        return GameFightAIInformations;
    })(GameFightFighterInformations);
    Protocol.GameFightAIInformations = GameFightAIInformations;
    var GameFightCharacterInformations = (function (_super) {
        __extends(GameFightCharacterInformations, _super);
        function GameFightCharacterInformations() {
            this.level = 0;
            this.alignmentInfos = new ActorAlignmentInformations();
            this.breed = 0;
            this.sex = false;
            _super.call(this);
        }
        GameFightCharacterInformations.prototype.getTypeId = function () {
            return GameFightCharacterInformations.ID;
        };
        GameFightCharacterInformations.prototype.reset = function () {
            this.level = 0;
            this.alignmentInfos = new ActorAlignmentInformations();
            this.breed = 0;
            this.sex = false;
        };
        GameFightCharacterInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightCharacterInformations(param1);
        };
        GameFightCharacterInformations.prototype.serializeAs_GameFightCharacterInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterNamedInformations.call(this, param1);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            this.alignmentInfos.serializeAs_ActorAlignmentInformations(param1);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
        };
        GameFightCharacterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightCharacterInformations(param1);
        };
        GameFightCharacterInformations.prototype.deserializeAs_GameFightCharacterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of GameFightCharacterInformations.level.');
            }
            this.alignmentInfos = new ActorAlignmentInformations();
            this.alignmentInfos.deserialize(param1);
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
        };
        GameFightCharacterInformations.ID = 46;
        return GameFightCharacterInformations;
    })(GameFightFighterNamedInformations);
    Protocol.GameFightCharacterInformations = GameFightCharacterInformations;
    var GameFightCompanionInformations = (function (_super) {
        __extends(GameFightCompanionInformations, _super);
        function GameFightCompanionInformations() {
            this.companionGenericId = 0;
            this.level = 0;
            this.masterId = 0;
            _super.call(this);
        }
        GameFightCompanionInformations.prototype.getTypeId = function () {
            return GameFightCompanionInformations.ID;
        };
        GameFightCompanionInformations.prototype.reset = function () {
            this.companionGenericId = 0;
            this.level = 0;
            this.masterId = 0;
        };
        GameFightCompanionInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightCompanionInformations(param1);
        };
        GameFightCompanionInformations.prototype.serializeAs_GameFightCompanionInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterInformations.call(this, param1);
            if (this.companionGenericId < 0) {
                throw new Error('Forbidden value (' + this.companionGenericId + ') on element companionGenericId.');
            }
            param1.writeByte(this.companionGenericId);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            param1.writeInt(this.masterId);
        };
        GameFightCompanionInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightCompanionInformations(param1);
        };
        GameFightCompanionInformations.prototype.deserializeAs_GameFightCompanionInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.companionGenericId = param1.readByte();
            if (this.companionGenericId < 0) {
                throw new Error('Forbidden value (' + this.companionGenericId + ') on element of GameFightCompanionInformations.companionGenericId.');
            }
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of GameFightCompanionInformations.level.');
            }
            this.masterId = param1.readInt();
        };
        GameFightCompanionInformations.ID = 450;
        return GameFightCompanionInformations;
    })(GameFightFighterInformations);
    Protocol.GameFightCompanionInformations = GameFightCompanionInformations;
    var GameFightFighterCompanionLightInformations = (function (_super) {
        __extends(GameFightFighterCompanionLightInformations, _super);
        function GameFightFighterCompanionLightInformations() {
            this.companionId = 0;
            this.masterId = 0;
            _super.call(this);
        }
        GameFightFighterCompanionLightInformations.prototype.getTypeId = function () {
            return GameFightFighterCompanionLightInformations.ID;
        };
        GameFightFighterCompanionLightInformations.prototype.reset = function () {
            this.companionId = 0;
            this.masterId = 0;
        };
        GameFightFighterCompanionLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterCompanionLightInformations(param1);
        };
        GameFightFighterCompanionLightInformations.prototype.serializeAs_GameFightFighterCompanionLightInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterLightInformations.call(this, param1);
            if (this.companionId < 0) {
                throw new Error('Forbidden value (' + this.companionId + ') on element companionId.');
            }
            param1.writeByte(this.companionId);
            param1.writeInt(this.masterId);
        };
        GameFightFighterCompanionLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterCompanionLightInformations(param1);
        };
        GameFightFighterCompanionLightInformations.prototype.deserializeAs_GameFightFighterCompanionLightInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.companionId = param1.readByte();
            if (this.companionId < 0) {
                throw new Error('Forbidden value (' + this.companionId + ') on element of GameFightFighterCompanionLightInformations.companionId.');
            }
            this.masterId = param1.readInt();
        };
        GameFightFighterCompanionLightInformations.ID = 454;
        return GameFightFighterCompanionLightInformations;
    })(GameFightFighterLightInformations);
    Protocol.GameFightFighterCompanionLightInformations = GameFightFighterCompanionLightInformations;
    var GameFightFighterInformations = (function (_super) {
        __extends(GameFightFighterInformations, _super);
        function GameFightFighterInformations() {
            this.teamId = 2;
            this.wave = 0;
            this.alive = false;
            this.stats = new GameFightMinimalStats();
            this.previousPositions = [];
            _super.call(this);
        }
        GameFightFighterInformations.prototype.getTypeId = function () {
            return GameFightFighterInformations.ID;
        };
        GameFightFighterInformations.prototype.reset = function () {
            this.teamId = 2;
            this.wave = 0;
            this.alive = false;
            this.stats = new GameFightMinimalStats();
            this.previousPositions = [];
        };
        GameFightFighterInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterInformations(param1);
        };
        GameFightFighterInformations.prototype.serializeAs_GameFightFighterInformations = function (param1) {
            _super.prototype.serializeAs_GameContextActorInformations.call(this, param1);
            param1.writeByte(this.teamId);
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element wave.');
            }
            param1.writeByte(this.wave);
            param1.writeBoolean(this.alive);
            param1.writeShort(this.stats.getTypeId());
            this.stats.serialize(param1);
            param1.writeShort(this.previousPositions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.previousPositions.length) {
                if (this.previousPositions[_loc2_] < 0 || this.previousPositions[_loc2_] > 559) {
                    throw new Error('Forbidden value (' + this.previousPositions[_loc2_] + ') on element 5 (starting at 1) of previousPositions.');
                }
                param1.writeVarShort(this.previousPositions[_loc2_]);
                _loc2_++;
            }
        };
        GameFightFighterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterInformations(param1);
        };
        GameFightFighterInformations.prototype.deserializeAs_GameFightFighterInformations = function (param1) {
            var _loc5_ = 0;
            _super.prototype.deserialize.call(this, param1);
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of GameFightFighterInformations.teamId.');
            }
            this.wave = param1.readByte();
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element of GameFightFighterInformations.wave.');
            }
            this.alive = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            this.stats = ProtocolTypeManager.getInstance(GameFightMinimalStats, _loc2_);
            this.stats.deserialize(param1);
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = param1.readVarUhShort();
                if (_loc5_ < 0 || _loc5_ > 559) {
                    throw new Error('Forbidden value (' + _loc5_ + ') on elements of previousPositions.');
                }
                this.previousPositions.push(_loc5_);
                _loc4_++;
            }
        };
        GameFightFighterInformations.ID = 143;
        return GameFightFighterInformations;
    })(GameContextActorInformations);
    Protocol.GameFightFighterInformations = GameFightFighterInformations;
    var GameFightFighterLightInformations = (function () {
        function GameFightFighterLightInformations() {
            this.id = 0;
            this.wave = 0;
            this.level = 0;
            this.breed = 0;
            this.sex = false;
            this.alive = false;
        }
        GameFightFighterLightInformations.prototype.getTypeId = function () {
            return GameFightFighterLightInformations.ID;
        };
        GameFightFighterLightInformations.prototype.reset = function () {
            this.id = 0;
            this.wave = 0;
            this.level = 0;
            this.breed = 0;
            this.sex = false;
            this.alive = false;
        };
        GameFightFighterLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterLightInformations(param1);
        };
        GameFightFighterLightInformations.prototype.serializeAs_GameFightFighterLightInformations = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.sex);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.alive);
            param1.writeByte(_loc2_);
            param1.writeInt(this.id);
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element wave.');
            }
            param1.writeByte(this.wave);
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeVarShort(this.level);
            param1.writeByte(this.breed);
        };
        GameFightFighterLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterLightInformations(param1);
        };
        GameFightFighterLightInformations.prototype.deserializeAs_GameFightFighterLightInformations = function (param1) {
            var _loc2_ = param1.readByte();
            this.sex = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.alive = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.id = param1.readInt();
            this.wave = param1.readByte();
            if (this.wave < 0) {
                throw new Error('Forbidden value (' + this.wave + ') on element of GameFightFighterLightInformations.wave.');
            }
            this.level = param1.readVarUhShort();
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element of GameFightFighterLightInformations.level.');
            }
            this.breed = param1.readByte();
        };
        GameFightFighterLightInformations.ID = 413;
        return GameFightFighterLightInformations;
    })();
    Protocol.GameFightFighterLightInformations = GameFightFighterLightInformations;
    var GameFightFighterMonsterLightInformations = (function (_super) {
        __extends(GameFightFighterMonsterLightInformations, _super);
        function GameFightFighterMonsterLightInformations() {
            this.creatureGenericId = 0;
            _super.call(this);
        }
        GameFightFighterMonsterLightInformations.prototype.getTypeId = function () {
            return GameFightFighterMonsterLightInformations.ID;
        };
        GameFightFighterMonsterLightInformations.prototype.reset = function () {
            this.creatureGenericId = 0;
        };
        GameFightFighterMonsterLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterMonsterLightInformations(param1);
        };
        GameFightFighterMonsterLightInformations.prototype.serializeAs_GameFightFighterMonsterLightInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterLightInformations.call(this, param1);
            if (this.creatureGenericId < 0) {
                throw new Error('Forbidden value (' + this.creatureGenericId + ') on element creatureGenericId.');
            }
            param1.writeVarShort(this.creatureGenericId);
        };
        GameFightFighterMonsterLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterMonsterLightInformations(param1);
        };
        GameFightFighterMonsterLightInformations.prototype.deserializeAs_GameFightFighterMonsterLightInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.creatureGenericId = param1.readVarUhShort();
            if (this.creatureGenericId < 0) {
                throw new Error('Forbidden value (' + this.creatureGenericId + ') on element of GameFightFighterMonsterLightInformations.creatureGenericId.');
            }
        };
        GameFightFighterMonsterLightInformations.ID = 455;
        return GameFightFighterMonsterLightInformations;
    })(GameFightFighterLightInformations);
    Protocol.GameFightFighterMonsterLightInformations = GameFightFighterMonsterLightInformations;
    var GameFightFighterNamedInformations = (function (_super) {
        __extends(GameFightFighterNamedInformations, _super);
        function GameFightFighterNamedInformations() {
            this.name = '';
            this.status = new PlayerStatus();
            _super.call(this);
        }
        GameFightFighterNamedInformations.prototype.getTypeId = function () {
            return GameFightFighterNamedInformations.ID;
        };
        GameFightFighterNamedInformations.prototype.reset = function () {
            this.name = '';
            this.status = new PlayerStatus();
        };
        GameFightFighterNamedInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterNamedInformations(param1);
        };
        GameFightFighterNamedInformations.prototype.serializeAs_GameFightFighterNamedInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterInformations.call(this, param1);
            param1.writeUTF(this.name);
            this.status.serializeAs_PlayerStatus(param1);
        };
        GameFightFighterNamedInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterNamedInformations(param1);
        };
        GameFightFighterNamedInformations.prototype.deserializeAs_GameFightFighterNamedInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
            this.status = new PlayerStatus();
            this.status.deserialize(param1);
        };
        GameFightFighterNamedInformations.ID = 158;
        return GameFightFighterNamedInformations;
    })(GameFightFighterInformations);
    Protocol.GameFightFighterNamedInformations = GameFightFighterNamedInformations;
    var GameFightFighterNamedLightInformations = (function (_super) {
        __extends(GameFightFighterNamedLightInformations, _super);
        function GameFightFighterNamedLightInformations() {
            this.name = '';
            _super.call(this);
        }
        GameFightFighterNamedLightInformations.prototype.getTypeId = function () {
            return GameFightFighterNamedLightInformations.ID;
        };
        GameFightFighterNamedLightInformations.prototype.reset = function () {
            this.name = '';
        };
        GameFightFighterNamedLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterNamedLightInformations(param1);
        };
        GameFightFighterNamedLightInformations.prototype.serializeAs_GameFightFighterNamedLightInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterLightInformations.call(this, param1);
            param1.writeUTF(this.name);
        };
        GameFightFighterNamedLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterNamedLightInformations(param1);
        };
        GameFightFighterNamedLightInformations.prototype.deserializeAs_GameFightFighterNamedLightInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
        };
        GameFightFighterNamedLightInformations.ID = 456;
        return GameFightFighterNamedLightInformations;
    })(GameFightFighterLightInformations);
    Protocol.GameFightFighterNamedLightInformations = GameFightFighterNamedLightInformations;
    var GameFightFighterTaxCollectorLightInformations = (function (_super) {
        __extends(GameFightFighterTaxCollectorLightInformations, _super);
        function GameFightFighterTaxCollectorLightInformations() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            _super.call(this);
        }
        GameFightFighterTaxCollectorLightInformations.prototype.getTypeId = function () {
            return GameFightFighterTaxCollectorLightInformations.ID;
        };
        GameFightFighterTaxCollectorLightInformations.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
        };
        GameFightFighterTaxCollectorLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightFighterTaxCollectorLightInformations(param1);
        };
        GameFightFighterTaxCollectorLightInformations.prototype.serializeAs_GameFightFighterTaxCollectorLightInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterLightInformations.call(this, param1);
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
        };
        GameFightFighterTaxCollectorLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightFighterTaxCollectorLightInformations(param1);
        };
        GameFightFighterTaxCollectorLightInformations.prototype.deserializeAs_GameFightFighterTaxCollectorLightInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of GameFightFighterTaxCollectorLightInformations.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of GameFightFighterTaxCollectorLightInformations.lastNameId.');
            }
        };
        GameFightFighterTaxCollectorLightInformations.ID = 457;
        return GameFightFighterTaxCollectorLightInformations;
    })(GameFightFighterLightInformations);
    Protocol.GameFightFighterTaxCollectorLightInformations = GameFightFighterTaxCollectorLightInformations;
    var GameFightMinimalStats = (function () {
        function GameFightMinimalStats() {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.baseMaxLifePoints = 0;
            this.permanentDamagePercent = 0;
            this.shieldPoints = 0;
            this.actionPoints = 0;
            this.maxActionPoints = 0;
            this.movementPoints = 0;
            this.maxMovementPoints = 0;
            this.summoner = 0;
            this.summoned = false;
            this.neutralElementResistPercent = 0;
            this.earthElementResistPercent = 0;
            this.waterElementResistPercent = 0;
            this.airElementResistPercent = 0;
            this.fireElementResistPercent = 0;
            this.neutralElementReduction = 0;
            this.earthElementReduction = 0;
            this.waterElementReduction = 0;
            this.airElementReduction = 0;
            this.fireElementReduction = 0;
            this.criticalDamageFixedResist = 0;
            this.pushDamageFixedResist = 0;
            this.pvpNeutralElementResistPercent = 0;
            this.pvpEarthElementResistPercent = 0;
            this.pvpWaterElementResistPercent = 0;
            this.pvpAirElementResistPercent = 0;
            this.pvpFireElementResistPercent = 0;
            this.pvpNeutralElementReduction = 0;
            this.pvpEarthElementReduction = 0;
            this.pvpWaterElementReduction = 0;
            this.pvpAirElementReduction = 0;
            this.pvpFireElementReduction = 0;
            this.dodgePALostProbability = 0;
            this.dodgePMLostProbability = 0;
            this.tackleBlock = 0;
            this.tackleEvade = 0;
            this.invisibilityState = 0;
        }
        GameFightMinimalStats.prototype.getTypeId = function () {
            return GameFightMinimalStats.ID;
        };
        GameFightMinimalStats.prototype.reset = function () {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.baseMaxLifePoints = 0;
            this.permanentDamagePercent = 0;
            this.shieldPoints = 0;
            this.actionPoints = 0;
            this.maxActionPoints = 0;
            this.movementPoints = 0;
            this.maxMovementPoints = 0;
            this.summoner = 0;
            this.summoned = false;
            this.neutralElementResistPercent = 0;
            this.earthElementResistPercent = 0;
            this.waterElementResistPercent = 0;
            this.airElementResistPercent = 0;
            this.fireElementResistPercent = 0;
            this.neutralElementReduction = 0;
            this.earthElementReduction = 0;
            this.waterElementReduction = 0;
            this.airElementReduction = 0;
            this.fireElementReduction = 0;
            this.criticalDamageFixedResist = 0;
            this.pushDamageFixedResist = 0;
            this.pvpNeutralElementResistPercent = 0;
            this.pvpEarthElementResistPercent = 0;
            this.pvpWaterElementResistPercent = 0;
            this.pvpAirElementResistPercent = 0;
            this.pvpFireElementResistPercent = 0;
            this.pvpNeutralElementReduction = 0;
            this.pvpEarthElementReduction = 0;
            this.pvpWaterElementReduction = 0;
            this.pvpAirElementReduction = 0;
            this.pvpFireElementReduction = 0;
            this.dodgePALostProbability = 0;
            this.dodgePMLostProbability = 0;
            this.tackleBlock = 0;
            this.tackleEvade = 0;
            this.invisibilityState = 0;
        };
        GameFightMinimalStats.prototype.serialize = function (param1) {
            this.serializeAs_GameFightMinimalStats(param1);
        };
        GameFightMinimalStats.prototype.serializeAs_GameFightMinimalStats = function (param1) {
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
            if (this.baseMaxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.baseMaxLifePoints + ') on element baseMaxLifePoints.');
            }
            param1.writeVarInt(this.baseMaxLifePoints);
            if (this.permanentDamagePercent < 0) {
                throw new Error('Forbidden value (' + this.permanentDamagePercent + ') on element permanentDamagePercent.');
            }
            param1.writeVarInt(this.permanentDamagePercent);
            if (this.shieldPoints < 0) {
                throw new Error('Forbidden value (' + this.shieldPoints + ') on element shieldPoints.');
            }
            param1.writeVarInt(this.shieldPoints);
            param1.writeVarShort(this.actionPoints);
            param1.writeVarShort(this.maxActionPoints);
            param1.writeVarShort(this.movementPoints);
            param1.writeVarShort(this.maxMovementPoints);
            param1.writeInt(this.summoner);
            param1.writeBoolean(this.summoned);
            param1.writeVarShort(this.neutralElementResistPercent);
            param1.writeVarShort(this.earthElementResistPercent);
            param1.writeVarShort(this.waterElementResistPercent);
            param1.writeVarShort(this.airElementResistPercent);
            param1.writeVarShort(this.fireElementResistPercent);
            param1.writeVarShort(this.neutralElementReduction);
            param1.writeVarShort(this.earthElementReduction);
            param1.writeVarShort(this.waterElementReduction);
            param1.writeVarShort(this.airElementReduction);
            param1.writeVarShort(this.fireElementReduction);
            param1.writeVarShort(this.criticalDamageFixedResist);
            param1.writeVarShort(this.pushDamageFixedResist);
            param1.writeVarShort(this.pvpNeutralElementResistPercent);
            param1.writeVarShort(this.pvpEarthElementResistPercent);
            param1.writeVarShort(this.pvpWaterElementResistPercent);
            param1.writeVarShort(this.pvpAirElementResistPercent);
            param1.writeVarShort(this.pvpFireElementResistPercent);
            param1.writeVarShort(this.pvpNeutralElementReduction);
            param1.writeVarShort(this.pvpEarthElementReduction);
            param1.writeVarShort(this.pvpWaterElementReduction);
            param1.writeVarShort(this.pvpAirElementReduction);
            param1.writeVarShort(this.pvpFireElementReduction);
            if (this.dodgePALostProbability < 0) {
                throw new Error('Forbidden value (' + this.dodgePALostProbability + ') on element dodgePALostProbability.');
            }
            param1.writeVarShort(this.dodgePALostProbability);
            if (this.dodgePMLostProbability < 0) {
                throw new Error('Forbidden value (' + this.dodgePMLostProbability + ') on element dodgePMLostProbability.');
            }
            param1.writeVarShort(this.dodgePMLostProbability);
            param1.writeVarShort(this.tackleBlock);
            param1.writeVarShort(this.tackleEvade);
            param1.writeByte(this.invisibilityState);
        };
        GameFightMinimalStats.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightMinimalStats(param1);
        };
        GameFightMinimalStats.prototype.deserializeAs_GameFightMinimalStats = function (param1) {
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of GameFightMinimalStats.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of GameFightMinimalStats.maxLifePoints.');
            }
            this.baseMaxLifePoints = param1.readVarUhInt();
            if (this.baseMaxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.baseMaxLifePoints + ') on element of GameFightMinimalStats.baseMaxLifePoints.');
            }
            this.permanentDamagePercent = param1.readVarUhInt();
            if (this.permanentDamagePercent < 0) {
                throw new Error('Forbidden value (' + this.permanentDamagePercent + ') on element of GameFightMinimalStats.permanentDamagePercent.');
            }
            this.shieldPoints = param1.readVarUhInt();
            if (this.shieldPoints < 0) {
                throw new Error('Forbidden value (' + this.shieldPoints + ') on element of GameFightMinimalStats.shieldPoints.');
            }
            this.actionPoints = param1.readVarShort();
            this.maxActionPoints = param1.readVarShort();
            this.movementPoints = param1.readVarShort();
            this.maxMovementPoints = param1.readVarShort();
            this.summoner = param1.readInt();
            this.summoned = param1.readBoolean();
            this.neutralElementResistPercent = param1.readVarShort();
            this.earthElementResistPercent = param1.readVarShort();
            this.waterElementResistPercent = param1.readVarShort();
            this.airElementResistPercent = param1.readVarShort();
            this.fireElementResistPercent = param1.readVarShort();
            this.neutralElementReduction = param1.readVarShort();
            this.earthElementReduction = param1.readVarShort();
            this.waterElementReduction = param1.readVarShort();
            this.airElementReduction = param1.readVarShort();
            this.fireElementReduction = param1.readVarShort();
            this.criticalDamageFixedResist = param1.readVarShort();
            this.pushDamageFixedResist = param1.readVarShort();
            this.pvpNeutralElementResistPercent = param1.readVarShort();
            this.pvpEarthElementResistPercent = param1.readVarShort();
            this.pvpWaterElementResistPercent = param1.readVarShort();
            this.pvpAirElementResistPercent = param1.readVarShort();
            this.pvpFireElementResistPercent = param1.readVarShort();
            this.pvpNeutralElementReduction = param1.readVarShort();
            this.pvpEarthElementReduction = param1.readVarShort();
            this.pvpWaterElementReduction = param1.readVarShort();
            this.pvpAirElementReduction = param1.readVarShort();
            this.pvpFireElementReduction = param1.readVarShort();
            this.dodgePALostProbability = param1.readVarUhShort();
            if (this.dodgePALostProbability < 0) {
                throw new Error('Forbidden value (' + this.dodgePALostProbability + ') on element of GameFightMinimalStats.dodgePALostProbability.');
            }
            this.dodgePMLostProbability = param1.readVarUhShort();
            if (this.dodgePMLostProbability < 0) {
                throw new Error('Forbidden value (' + this.dodgePMLostProbability + ') on element of GameFightMinimalStats.dodgePMLostProbability.');
            }
            this.tackleBlock = param1.readVarShort();
            this.tackleEvade = param1.readVarShort();
            this.invisibilityState = param1.readByte();
            if (this.invisibilityState < 0) {
                throw new Error('Forbidden value (' + this.invisibilityState + ') on element of GameFightMinimalStats.invisibilityState.');
            }
        };
        GameFightMinimalStats.ID = 31;
        return GameFightMinimalStats;
    })();
    Protocol.GameFightMinimalStats = GameFightMinimalStats;
    var GameFightMinimalStatsPreparation = (function (_super) {
        __extends(GameFightMinimalStatsPreparation, _super);
        function GameFightMinimalStatsPreparation() {
            this.initiative = 0;
            _super.call(this);
        }
        GameFightMinimalStatsPreparation.prototype.getTypeId = function () {
            return GameFightMinimalStatsPreparation.ID;
        };
        GameFightMinimalStatsPreparation.prototype.reset = function () {
            this.initiative = 0;
        };
        GameFightMinimalStatsPreparation.prototype.serialize = function (param1) {
            this.serializeAs_GameFightMinimalStatsPreparation(param1);
        };
        GameFightMinimalStatsPreparation.prototype.serializeAs_GameFightMinimalStatsPreparation = function (param1) {
            _super.prototype.serializeAs_GameFightMinimalStats.call(this, param1);
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element initiative.');
            }
            param1.writeVarInt(this.initiative);
        };
        GameFightMinimalStatsPreparation.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightMinimalStatsPreparation(param1);
        };
        GameFightMinimalStatsPreparation.prototype.deserializeAs_GameFightMinimalStatsPreparation = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.initiative = param1.readVarUhInt();
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element of GameFightMinimalStatsPreparation.initiative.');
            }
        };
        GameFightMinimalStatsPreparation.ID = 360;
        return GameFightMinimalStatsPreparation;
    })(GameFightMinimalStats);
    Protocol.GameFightMinimalStatsPreparation = GameFightMinimalStatsPreparation;
    var GameFightMonsterInformations = (function (_super) {
        __extends(GameFightMonsterInformations, _super);
        function GameFightMonsterInformations() {
            this.creatureGenericId = 0;
            this.creatureGrade = 0;
            _super.call(this);
        }
        GameFightMonsterInformations.prototype.getTypeId = function () {
            return GameFightMonsterInformations.ID;
        };
        GameFightMonsterInformations.prototype.reset = function () {
            this.creatureGenericId = 0;
            this.creatureGrade = 0;
        };
        GameFightMonsterInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightMonsterInformations(param1);
        };
        GameFightMonsterInformations.prototype.serializeAs_GameFightMonsterInformations = function (param1) {
            _super.prototype.serializeAs_GameFightAIInformations.call(this, param1);
            if (this.creatureGenericId < 0) {
                throw new Error('Forbidden value (' + this.creatureGenericId + ') on element creatureGenericId.');
            }
            param1.writeVarShort(this.creatureGenericId);
            if (this.creatureGrade < 0) {
                throw new Error('Forbidden value (' + this.creatureGrade + ') on element creatureGrade.');
            }
            param1.writeByte(this.creatureGrade);
        };
        GameFightMonsterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightMonsterInformations(param1);
        };
        GameFightMonsterInformations.prototype.deserializeAs_GameFightMonsterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.creatureGenericId = param1.readVarUhShort();
            if (this.creatureGenericId < 0) {
                throw new Error('Forbidden value (' + this.creatureGenericId + ') on element of GameFightMonsterInformations.creatureGenericId.');
            }
            this.creatureGrade = param1.readByte();
            if (this.creatureGrade < 0) {
                throw new Error('Forbidden value (' + this.creatureGrade + ') on element of GameFightMonsterInformations.creatureGrade.');
            }
        };
        GameFightMonsterInformations.ID = 29;
        return GameFightMonsterInformations;
    })(GameFightAIInformations);
    Protocol.GameFightMonsterInformations = GameFightMonsterInformations;
    var GameFightMonsterWithAlignmentInformations = (function (_super) {
        __extends(GameFightMonsterWithAlignmentInformations, _super);
        function GameFightMonsterWithAlignmentInformations() {
            this.alignmentInfos = new ActorAlignmentInformations();
            _super.call(this);
        }
        GameFightMonsterWithAlignmentInformations.prototype.getTypeId = function () {
            return GameFightMonsterWithAlignmentInformations.ID;
        };
        GameFightMonsterWithAlignmentInformations.prototype.reset = function () {
            this.alignmentInfos = new ActorAlignmentInformations();
        };
        GameFightMonsterWithAlignmentInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightMonsterWithAlignmentInformations(param1);
        };
        GameFightMonsterWithAlignmentInformations.prototype.serializeAs_GameFightMonsterWithAlignmentInformations = function (param1) {
            _super.prototype.serializeAs_GameFightMonsterInformations.call(this, param1);
            this.alignmentInfos.serializeAs_ActorAlignmentInformations(param1);
        };
        GameFightMonsterWithAlignmentInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightMonsterWithAlignmentInformations(param1);
        };
        GameFightMonsterWithAlignmentInformations.prototype.deserializeAs_GameFightMonsterWithAlignmentInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.alignmentInfos = new ActorAlignmentInformations();
            this.alignmentInfos.deserialize(param1);
        };
        GameFightMonsterWithAlignmentInformations.ID = 203;
        return GameFightMonsterWithAlignmentInformations;
    })(GameFightMonsterInformations);
    Protocol.GameFightMonsterWithAlignmentInformations = GameFightMonsterWithAlignmentInformations;
    var GameFightMutantInformations = (function (_super) {
        __extends(GameFightMutantInformations, _super);
        function GameFightMutantInformations() {
            this.powerLevel = 0;
            _super.call(this);
        }
        GameFightMutantInformations.prototype.getTypeId = function () {
            return GameFightMutantInformations.ID;
        };
        GameFightMutantInformations.prototype.reset = function () {
            this.powerLevel = 0;
        };
        GameFightMutantInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightMutantInformations(param1);
        };
        GameFightMutantInformations.prototype.serializeAs_GameFightMutantInformations = function (param1) {
            _super.prototype.serializeAs_GameFightFighterNamedInformations.call(this, param1);
            if (this.powerLevel < 0) {
                throw new Error('Forbidden value (' + this.powerLevel + ') on element powerLevel.');
            }
            param1.writeByte(this.powerLevel);
        };
        GameFightMutantInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightMutantInformations(param1);
        };
        GameFightMutantInformations.prototype.deserializeAs_GameFightMutantInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.powerLevel = param1.readByte();
            if (this.powerLevel < 0) {
                throw new Error('Forbidden value (' + this.powerLevel + ') on element of GameFightMutantInformations.powerLevel.');
            }
        };
        GameFightMutantInformations.ID = 50;
        return GameFightMutantInformations;
    })(GameFightFighterNamedInformations);
    Protocol.GameFightMutantInformations = GameFightMutantInformations;
    var GameFightResumeSlaveInfo = (function () {
        function GameFightResumeSlaveInfo() {
            this.slaveId = 0;
            this.spellCooldowns = [];
            this.summonCount = 0;
            this.bombCount = 0;
        }
        GameFightResumeSlaveInfo.prototype.getTypeId = function () {
            return GameFightResumeSlaveInfo.ID;
        };
        GameFightResumeSlaveInfo.prototype.reset = function () {
            this.slaveId = 0;
            this.spellCooldowns = [];
            this.summonCount = 0;
            this.bombCount = 0;
        };
        GameFightResumeSlaveInfo.prototype.serialize = function (param1) {
            this.serializeAs_GameFightResumeSlaveInfo(param1);
        };
        GameFightResumeSlaveInfo.prototype.serializeAs_GameFightResumeSlaveInfo = function (param1) {
            param1.writeInt(this.slaveId);
            param1.writeShort(this.spellCooldowns.length);
            var _loc2_ = 0;
            while (_loc2_ < this.spellCooldowns.length) {
                (this.spellCooldowns[_loc2_]).serializeAs_GameFightSpellCooldown(param1);
                _loc2_++;
            }
            if (this.summonCount < 0) {
                throw new Error('Forbidden value (' + this.summonCount + ') on element summonCount.');
            }
            param1.writeByte(this.summonCount);
            if (this.bombCount < 0) {
                throw new Error('Forbidden value (' + this.bombCount + ') on element bombCount.');
            }
            param1.writeByte(this.bombCount);
        };
        GameFightResumeSlaveInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightResumeSlaveInfo(param1);
        };
        GameFightResumeSlaveInfo.prototype.deserializeAs_GameFightResumeSlaveInfo = function (param1) {
            var _loc4_ = null;
            this.slaveId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new GameFightSpellCooldown();
                _loc4_.deserialize(param1);
                this.spellCooldowns.push(_loc4_);
                _loc3_++;
            }
            this.summonCount = param1.readByte();
            if (this.summonCount < 0) {
                throw new Error('Forbidden value (' + this.summonCount + ') on element of GameFightResumeSlaveInfo.summonCount.');
            }
            this.bombCount = param1.readByte();
            if (this.bombCount < 0) {
                throw new Error('Forbidden value (' + this.bombCount + ') on element of GameFightResumeSlaveInfo.bombCount.');
            }
        };
        GameFightResumeSlaveInfo.ID = 364;
        return GameFightResumeSlaveInfo;
    })();
    Protocol.GameFightResumeSlaveInfo = GameFightResumeSlaveInfo;
    var GameFightSpellCooldown = (function () {
        function GameFightSpellCooldown() {
            this.spellId = 0;
            this.cooldown = 0;
        }
        GameFightSpellCooldown.prototype.getTypeId = function () {
            return GameFightSpellCooldown.ID;
        };
        GameFightSpellCooldown.prototype.reset = function () {
            this.spellId = 0;
            this.cooldown = 0;
        };
        GameFightSpellCooldown.prototype.serialize = function (param1) {
            this.serializeAs_GameFightSpellCooldown(param1);
        };
        GameFightSpellCooldown.prototype.serializeAs_GameFightSpellCooldown = function (param1) {
            param1.writeInt(this.spellId);
            if (this.cooldown < 0) {
                throw new Error('Forbidden value (' + this.cooldown + ') on element cooldown.');
            }
            param1.writeByte(this.cooldown);
        };
        GameFightSpellCooldown.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightSpellCooldown(param1);
        };
        GameFightSpellCooldown.prototype.deserializeAs_GameFightSpellCooldown = function (param1) {
            this.spellId = param1.readInt();
            this.cooldown = param1.readByte();
            if (this.cooldown < 0) {
                throw new Error('Forbidden value (' + this.cooldown + ') on element of GameFightSpellCooldown.cooldown.');
            }
        };
        GameFightSpellCooldown.ID = 205;
        return GameFightSpellCooldown;
    })();
    Protocol.GameFightSpellCooldown = GameFightSpellCooldown;
    var GameFightTaxCollectorInformations = (function (_super) {
        __extends(GameFightTaxCollectorInformations, _super);
        function GameFightTaxCollectorInformations() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.level = 0;
            _super.call(this);
        }
        GameFightTaxCollectorInformations.prototype.getTypeId = function () {
            return GameFightTaxCollectorInformations.ID;
        };
        GameFightTaxCollectorInformations.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.level = 0;
        };
        GameFightTaxCollectorInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameFightTaxCollectorInformations(param1);
        };
        GameFightTaxCollectorInformations.prototype.serializeAs_GameFightTaxCollectorInformations = function (param1) {
            _super.prototype.serializeAs_GameFightAIInformations.call(this, param1);
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
        };
        GameFightTaxCollectorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameFightTaxCollectorInformations(param1);
        };
        GameFightTaxCollectorInformations.prototype.deserializeAs_GameFightTaxCollectorInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of GameFightTaxCollectorInformations.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of GameFightTaxCollectorInformations.lastNameId.');
            }
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of GameFightTaxCollectorInformations.level.');
            }
        };
        GameFightTaxCollectorInformations.ID = 48;
        return GameFightTaxCollectorInformations;
    })(GameFightAIInformations);
    Protocol.GameFightTaxCollectorInformations = GameFightTaxCollectorInformations;
    var AllianceInformations = (function (_super) {
        __extends(AllianceInformations, _super);
        function AllianceInformations() {
            this.allianceEmblem = new GuildEmblem();
            _super.call(this);
        }
        AllianceInformations.prototype.getTypeId = function () {
            return AllianceInformations.ID;
        };
        AllianceInformations.prototype.reset = function () {
            this.allianceEmblem = new GuildEmblem();
        };
        AllianceInformations.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInformations(param1);
        };
        AllianceInformations.prototype.serializeAs_AllianceInformations = function (param1) {
            _super.prototype.serializeAs_BasicNamedAllianceInformations.call(this, param1);
            this.allianceEmblem.serializeAs_GuildEmblem(param1);
        };
        AllianceInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInformations(param1);
        };
        AllianceInformations.prototype.deserializeAs_AllianceInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceEmblem = new GuildEmblem();
            this.allianceEmblem.deserialize(param1);
        };
        AllianceInformations.ID = 417;
        return AllianceInformations;
    })(BasicNamedAllianceInformations);
    Protocol.AllianceInformations = AllianceInformations;
    var AlternativeMonstersInGroupLightInformations = (function () {
        function AlternativeMonstersInGroupLightInformations() {
            this.playerCount = 0;
            this.monsters = [];
        }
        AlternativeMonstersInGroupLightInformations.prototype.getTypeId = function () {
            return AlternativeMonstersInGroupLightInformations.ID;
        };
        AlternativeMonstersInGroupLightInformations.prototype.reset = function () {
            this.playerCount = 0;
            this.monsters = [];
        };
        AlternativeMonstersInGroupLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_AlternativeMonstersInGroupLightInformations(param1);
        };
        AlternativeMonstersInGroupLightInformations.prototype.serializeAs_AlternativeMonstersInGroupLightInformations = function (param1) {
            param1.writeInt(this.playerCount);
            param1.writeShort(this.monsters.length);
            var _loc2_ = 0;
            while (_loc2_ < this.monsters.length) {
                (this.monsters[_loc2_]).serializeAs_MonsterInGroupLightInformations(param1);
                _loc2_++;
            }
        };
        AlternativeMonstersInGroupLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AlternativeMonstersInGroupLightInformations(param1);
        };
        AlternativeMonstersInGroupLightInformations.prototype.deserializeAs_AlternativeMonstersInGroupLightInformations = function (param1) {
            var _loc4_ = null;
            this.playerCount = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MonsterInGroupLightInformations();
                _loc4_.deserialize(param1);
                this.monsters.push(_loc4_);
                _loc3_++;
            }
        };
        AlternativeMonstersInGroupLightInformations.ID = 394;
        return AlternativeMonstersInGroupLightInformations;
    })();
    Protocol.AlternativeMonstersInGroupLightInformations = AlternativeMonstersInGroupLightInformations;
    var AtlasPointsInformations = (function () {
        function AtlasPointsInformations() {
            this.type = 0;
            this.coords = [];
        }
        AtlasPointsInformations.prototype.getTypeId = function () {
            return AtlasPointsInformations.ID;
        };
        AtlasPointsInformations.prototype.reset = function () {
            this.type = 0;
            this.coords = [];
        };
        AtlasPointsInformations.prototype.serialize = function (param1) {
            this.serializeAs_AtlasPointsInformations(param1);
        };
        AtlasPointsInformations.prototype.serializeAs_AtlasPointsInformations = function (param1) {
            param1.writeByte(this.type);
            param1.writeShort(this.coords.length);
            var _loc2_ = 0;
            while (_loc2_ < this.coords.length) {
                (this.coords[_loc2_]).serializeAs_MapCoordinatesExtended(param1);
                _loc2_++;
            }
        };
        AtlasPointsInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AtlasPointsInformations(param1);
        };
        AtlasPointsInformations.prototype.deserializeAs_AtlasPointsInformations = function (param1) {
            var _loc4_ = null;
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of AtlasPointsInformations.type.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MapCoordinatesExtended();
                _loc4_.deserialize(param1);
                this.coords.push(_loc4_);
                _loc3_++;
            }
        };
        AtlasPointsInformations.ID = 175;
        return AtlasPointsInformations;
    })();
    Protocol.AtlasPointsInformations = AtlasPointsInformations;
    var BasicAllianceInformations = (function (_super) {
        __extends(BasicAllianceInformations, _super);
        function BasicAllianceInformations() {
            this.allianceId = 0;
            this.allianceTag = '';
            _super.call(this);
        }
        BasicAllianceInformations.prototype.getTypeId = function () {
            return BasicAllianceInformations.ID;
        };
        BasicAllianceInformations.prototype.reset = function () {
            this.allianceId = 0;
            this.allianceTag = '';
        };
        BasicAllianceInformations.prototype.serialize = function (param1) {
            this.serializeAs_BasicAllianceInformations(param1);
        };
        BasicAllianceInformations.prototype.serializeAs_BasicAllianceInformations = function (param1) {
            _super.prototype.serializeAs_AbstractSocialGroupInfos.call(this, param1);
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
            param1.writeUTF(this.allianceTag);
        };
        BasicAllianceInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicAllianceInformations(param1);
        };
        BasicAllianceInformations.prototype.deserializeAs_BasicAllianceInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of BasicAllianceInformations.allianceId.');
            }
            this.allianceTag = param1.readUTF();
        };
        BasicAllianceInformations.ID = 419;
        return BasicAllianceInformations;
    })(AbstractSocialGroupInfos);
    Protocol.BasicAllianceInformations = BasicAllianceInformations;
    var BasicGuildInformations = (function (_super) {
        __extends(BasicGuildInformations, _super);
        function BasicGuildInformations() {
            this.guildId = 0;
            this.guildName = '';
            _super.call(this);
        }
        BasicGuildInformations.prototype.getTypeId = function () {
            return BasicGuildInformations.ID;
        };
        BasicGuildInformations.prototype.reset = function () {
            this.guildId = 0;
            this.guildName = '';
        };
        BasicGuildInformations.prototype.serialize = function (param1) {
            this.serializeAs_BasicGuildInformations(param1);
        };
        BasicGuildInformations.prototype.serializeAs_BasicGuildInformations = function (param1) {
            _super.prototype.serializeAs_AbstractSocialGroupInfos.call(this, param1);
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
            param1.writeUTF(this.guildName);
        };
        BasicGuildInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicGuildInformations(param1);
        };
        BasicGuildInformations.prototype.deserializeAs_BasicGuildInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of BasicGuildInformations.guildId.');
            }
            this.guildName = param1.readUTF();
        };
        BasicGuildInformations.ID = 365;
        return BasicGuildInformations;
    })(AbstractSocialGroupInfos);
    Protocol.BasicGuildInformations = BasicGuildInformations;
    var BasicNamedAllianceInformations = (function (_super) {
        __extends(BasicNamedAllianceInformations, _super);
        function BasicNamedAllianceInformations() {
            this.allianceName = '';
            _super.call(this);
        }
        BasicNamedAllianceInformations.prototype.getTypeId = function () {
            return BasicNamedAllianceInformations.ID;
        };
        BasicNamedAllianceInformations.prototype.reset = function () {
            this.allianceName = '';
        };
        BasicNamedAllianceInformations.prototype.serialize = function (param1) {
            this.serializeAs_BasicNamedAllianceInformations(param1);
        };
        BasicNamedAllianceInformations.prototype.serializeAs_BasicNamedAllianceInformations = function (param1) {
            _super.prototype.serializeAs_BasicAllianceInformations.call(this, param1);
            param1.writeUTF(this.allianceName);
        };
        BasicNamedAllianceInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_BasicNamedAllianceInformations(param1);
        };
        BasicNamedAllianceInformations.prototype.deserializeAs_BasicNamedAllianceInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceName = param1.readUTF();
        };
        BasicNamedAllianceInformations.ID = 418;
        return BasicNamedAllianceInformations;
    })(BasicAllianceInformations);
    Protocol.BasicNamedAllianceInformations = BasicNamedAllianceInformations;
    var GameRolePlayActorInformations = (function (_super) {
        __extends(GameRolePlayActorInformations, _super);
        function GameRolePlayActorInformations() {
            _super.call(this);
        }
        GameRolePlayActorInformations.prototype.getTypeId = function () {
            return GameRolePlayActorInformations.ID;
        };
        GameRolePlayActorInformations.prototype.reset = function () {
        };
        GameRolePlayActorInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayActorInformations(param1);
        };
        GameRolePlayActorInformations.prototype.serializeAs_GameRolePlayActorInformations = function (param1) {
            _super.prototype.serializeAs_GameContextActorInformations.call(this, param1);
        };
        GameRolePlayActorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayActorInformations(param1);
        };
        GameRolePlayActorInformations.prototype.deserializeAs_GameRolePlayActorInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        GameRolePlayActorInformations.ID = 141;
        return GameRolePlayActorInformations;
    })(GameContextActorInformations);
    Protocol.GameRolePlayActorInformations = GameRolePlayActorInformations;
    var GameRolePlayCharacterInformations = (function (_super) {
        __extends(GameRolePlayCharacterInformations, _super);
        function GameRolePlayCharacterInformations() {
            this.alignmentInfos = new ActorAlignmentInformations();
            _super.call(this);
        }
        GameRolePlayCharacterInformations.prototype.getTypeId = function () {
            return GameRolePlayCharacterInformations.ID;
        };
        GameRolePlayCharacterInformations.prototype.reset = function () {
            this.alignmentInfos = new ActorAlignmentInformations();
        };
        GameRolePlayCharacterInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayCharacterInformations(param1);
        };
        GameRolePlayCharacterInformations.prototype.serializeAs_GameRolePlayCharacterInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayHumanoidInformations.call(this, param1);
            this.alignmentInfos.serializeAs_ActorAlignmentInformations(param1);
        };
        GameRolePlayCharacterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayCharacterInformations(param1);
        };
        GameRolePlayCharacterInformations.prototype.deserializeAs_GameRolePlayCharacterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.alignmentInfos = new ActorAlignmentInformations();
            this.alignmentInfos.deserialize(param1);
        };
        GameRolePlayCharacterInformations.ID = 36;
        return GameRolePlayCharacterInformations;
    })(GameRolePlayHumanoidInformations);
    Protocol.GameRolePlayCharacterInformations = GameRolePlayCharacterInformations;
    var GameRolePlayGroupMonsterInformations = (function (_super) {
        __extends(GameRolePlayGroupMonsterInformations, _super);
        function GameRolePlayGroupMonsterInformations() {
            this.staticInfos = new GroupMonsterStaticInformations();
            this.creationTime = 0;
            this.ageBonusRate = 0;
            this.lootShare = 0;
            this.alignmentSide = 0;
            this.keyRingBonus = false;
            this.hasHardcoreDrop = false;
            this.hasAVARewardToken = false;
            _super.call(this);
        }
        GameRolePlayGroupMonsterInformations.prototype.getTypeId = function () {
            return GameRolePlayGroupMonsterInformations.ID;
        };
        GameRolePlayGroupMonsterInformations.prototype.reset = function () {
            this.staticInfos = new GroupMonsterStaticInformations();
            this.creationTime = 0;
            this.ageBonusRate = 0;
            this.lootShare = 0;
            this.alignmentSide = 0;
            this.keyRingBonus = false;
            this.hasHardcoreDrop = false;
            this.hasAVARewardToken = false;
        };
        GameRolePlayGroupMonsterInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayGroupMonsterInformations(param1);
        };
        GameRolePlayGroupMonsterInformations.prototype.serializeAs_GameRolePlayGroupMonsterInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.keyRingBonus);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.hasHardcoreDrop);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.hasAVARewardToken);
            param1.writeByte(_loc2_);
            param1.writeShort(this.staticInfos.getTypeId());
            this.staticInfos.serialize(param1);
            if (this.creationTime < 0 || this.creationTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.creationTime + ') on element creationTime.');
            }
            param1.writeDouble(this.creationTime);
            if (this.ageBonusRate < 0) {
                throw new Error('Forbidden value (' + this.ageBonusRate + ') on element ageBonusRate.');
            }
            param1.writeInt(this.ageBonusRate);
            if (this.lootShare < -1 || this.lootShare > 8) {
                throw new Error('Forbidden value (' + this.lootShare + ') on element lootShare.');
            }
            param1.writeByte(this.lootShare);
            param1.writeByte(this.alignmentSide);
        };
        GameRolePlayGroupMonsterInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayGroupMonsterInformations(param1);
        };
        GameRolePlayGroupMonsterInformations.prototype.deserializeAs_GameRolePlayGroupMonsterInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readByte();
            this.keyRingBonus = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.hasHardcoreDrop = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.hasAVARewardToken = BooleanByteWrapper.getFlag(_loc2_, 2);
            var _loc3_ = param1.readUnsignedShort();
            this.staticInfos = ProtocolTypeManager.getInstance(GroupMonsterStaticInformations, _loc3_);
            this.staticInfos.deserialize(param1);
            this.creationTime = param1.readDouble();
            if (this.creationTime < 0 || this.creationTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.creationTime + ') on element of GameRolePlayGroupMonsterInformations.creationTime.');
            }
            this.ageBonusRate = param1.readInt();
            if (this.ageBonusRate < 0) {
                throw new Error('Forbidden value (' + this.ageBonusRate + ') on element of GameRolePlayGroupMonsterInformations.ageBonusRate.');
            }
            this.lootShare = param1.readByte();
            if (this.lootShare < -1 || this.lootShare > 8) {
                throw new Error('Forbidden value (' + this.lootShare + ') on element of GameRolePlayGroupMonsterInformations.lootShare.');
            }
            this.alignmentSide = param1.readByte();
        };
        GameRolePlayGroupMonsterInformations.ID = 160;
        return GameRolePlayGroupMonsterInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayGroupMonsterInformations = GameRolePlayGroupMonsterInformations;
    var GameRolePlayGroupMonsterWaveInformations = (function (_super) {
        __extends(GameRolePlayGroupMonsterWaveInformations, _super);
        function GameRolePlayGroupMonsterWaveInformations() {
            this.nbWaves = 0;
            this.alternatives = [];
            _super.call(this);
        }
        GameRolePlayGroupMonsterWaveInformations.prototype.getTypeId = function () {
            return GameRolePlayGroupMonsterWaveInformations.ID;
        };
        GameRolePlayGroupMonsterWaveInformations.prototype.reset = function () {
            this.nbWaves = 0;
            this.alternatives = [];
        };
        GameRolePlayGroupMonsterWaveInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayGroupMonsterWaveInformations(param1);
        };
        GameRolePlayGroupMonsterWaveInformations.prototype.serializeAs_GameRolePlayGroupMonsterWaveInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayGroupMonsterInformations.call(this, param1);
            if (this.nbWaves < 0) {
                throw new Error('Forbidden value (' + this.nbWaves + ') on element nbWaves.');
            }
            param1.writeByte(this.nbWaves);
            param1.writeShort(this.alternatives.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alternatives.length) {
                param1.writeShort((this.alternatives[_loc2_]).getTypeId());
                (this.alternatives[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        GameRolePlayGroupMonsterWaveInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayGroupMonsterWaveInformations(param1);
        };
        GameRolePlayGroupMonsterWaveInformations.prototype.deserializeAs_GameRolePlayGroupMonsterWaveInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.nbWaves = param1.readByte();
            if (this.nbWaves < 0) {
                throw new Error('Forbidden value (' + this.nbWaves + ') on element of GameRolePlayGroupMonsterWaveInformations.nbWaves.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(GroupMonsterStaticInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.alternatives.push(_loc5_);
                _loc3_++;
            }
        };
        GameRolePlayGroupMonsterWaveInformations.ID = 464;
        return GameRolePlayGroupMonsterWaveInformations;
    })(GameRolePlayGroupMonsterInformations);
    Protocol.GameRolePlayGroupMonsterWaveInformations = GameRolePlayGroupMonsterWaveInformations;
    var GameRolePlayHumanoidInformations = (function (_super) {
        __extends(GameRolePlayHumanoidInformations, _super);
        function GameRolePlayHumanoidInformations() {
            this.humanoidInfo = new HumanInformations();
            this.accountId = 0;
            _super.call(this);
        }
        GameRolePlayHumanoidInformations.prototype.getTypeId = function () {
            return GameRolePlayHumanoidInformations.ID;
        };
        GameRolePlayHumanoidInformations.prototype.reset = function () {
            this.humanoidInfo = new HumanInformations();
            this.accountId = 0;
        };
        GameRolePlayHumanoidInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayHumanoidInformations(param1);
        };
        GameRolePlayHumanoidInformations.prototype.serializeAs_GameRolePlayHumanoidInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayNamedActorInformations.call(this, param1);
            param1.writeShort(this.humanoidInfo.getTypeId());
            this.humanoidInfo.serialize(param1);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
        };
        GameRolePlayHumanoidInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayHumanoidInformations(param1);
        };
        GameRolePlayHumanoidInformations.prototype.deserializeAs_GameRolePlayHumanoidInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.humanoidInfo = ProtocolTypeManager.getInstance(HumanInformations, _loc2_);
            this.humanoidInfo.deserialize(param1);
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of GameRolePlayHumanoidInformations.accountId.');
            }
        };
        GameRolePlayHumanoidInformations.ID = 159;
        return GameRolePlayHumanoidInformations;
    })(GameRolePlayNamedActorInformations);
    Protocol.GameRolePlayHumanoidInformations = GameRolePlayHumanoidInformations;
    var GameRolePlayMerchantInformations = (function (_super) {
        __extends(GameRolePlayMerchantInformations, _super);
        function GameRolePlayMerchantInformations() {
            this.sellType = 0;
            this.options = [];
            _super.call(this);
        }
        GameRolePlayMerchantInformations.prototype.getTypeId = function () {
            return GameRolePlayMerchantInformations.ID;
        };
        GameRolePlayMerchantInformations.prototype.reset = function () {
            this.sellType = 0;
            this.options = [];
        };
        GameRolePlayMerchantInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayMerchantInformations(param1);
        };
        GameRolePlayMerchantInformations.prototype.serializeAs_GameRolePlayMerchantInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayNamedActorInformations.call(this, param1);
            if (this.sellType < 0) {
                throw new Error('Forbidden value (' + this.sellType + ') on element sellType.');
            }
            param1.writeByte(this.sellType);
            param1.writeShort(this.options.length);
            var _loc2_ = 0;
            while (_loc2_ < this.options.length) {
                param1.writeShort((this.options[_loc2_]).getTypeId());
                (this.options[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        GameRolePlayMerchantInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayMerchantInformations(param1);
        };
        GameRolePlayMerchantInformations.prototype.deserializeAs_GameRolePlayMerchantInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.sellType = param1.readByte();
            if (this.sellType < 0) {
                throw new Error('Forbidden value (' + this.sellType + ') on element of GameRolePlayMerchantInformations.sellType.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(HumanOption, _loc4_);
                _loc5_.deserialize(param1);
                this.options.push(_loc5_);
                _loc3_++;
            }
        };
        GameRolePlayMerchantInformations.ID = 129;
        return GameRolePlayMerchantInformations;
    })(GameRolePlayNamedActorInformations);
    Protocol.GameRolePlayMerchantInformations = GameRolePlayMerchantInformations;
    var GameRolePlayMountInformations = (function (_super) {
        __extends(GameRolePlayMountInformations, _super);
        function GameRolePlayMountInformations() {
            this.ownerName = '';
            this.level = 0;
            _super.call(this);
        }
        GameRolePlayMountInformations.prototype.getTypeId = function () {
            return GameRolePlayMountInformations.ID;
        };
        GameRolePlayMountInformations.prototype.reset = function () {
            this.ownerName = '';
            this.level = 0;
        };
        GameRolePlayMountInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayMountInformations(param1);
        };
        GameRolePlayMountInformations.prototype.serializeAs_GameRolePlayMountInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayNamedActorInformations.call(this, param1);
            param1.writeUTF(this.ownerName);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
        };
        GameRolePlayMountInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayMountInformations(param1);
        };
        GameRolePlayMountInformations.prototype.deserializeAs_GameRolePlayMountInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.ownerName = param1.readUTF();
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of GameRolePlayMountInformations.level.');
            }
        };
        GameRolePlayMountInformations.ID = 180;
        return GameRolePlayMountInformations;
    })(GameRolePlayNamedActorInformations);
    Protocol.GameRolePlayMountInformations = GameRolePlayMountInformations;
    var GameRolePlayMutantInformations = (function (_super) {
        __extends(GameRolePlayMutantInformations, _super);
        function GameRolePlayMutantInformations() {
            this.monsterId = 0;
            this.powerLevel = 0;
            _super.call(this);
        }
        GameRolePlayMutantInformations.prototype.getTypeId = function () {
            return GameRolePlayMutantInformations.ID;
        };
        GameRolePlayMutantInformations.prototype.reset = function () {
            this.monsterId = 0;
            this.powerLevel = 0;
        };
        GameRolePlayMutantInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayMutantInformations(param1);
        };
        GameRolePlayMutantInformations.prototype.serializeAs_GameRolePlayMutantInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayHumanoidInformations.call(this, param1);
            if (this.monsterId < 0) {
                throw new Error('Forbidden value (' + this.monsterId + ') on element monsterId.');
            }
            param1.writeVarShort(this.monsterId);
            param1.writeByte(this.powerLevel);
        };
        GameRolePlayMutantInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayMutantInformations(param1);
        };
        GameRolePlayMutantInformations.prototype.deserializeAs_GameRolePlayMutantInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.monsterId = param1.readVarUhShort();
            if (this.monsterId < 0) {
                throw new Error('Forbidden value (' + this.monsterId + ') on element of GameRolePlayMutantInformations.monsterId.');
            }
            this.powerLevel = param1.readByte();
        };
        GameRolePlayMutantInformations.ID = 3;
        return GameRolePlayMutantInformations;
    })(GameRolePlayHumanoidInformations);
    Protocol.GameRolePlayMutantInformations = GameRolePlayMutantInformations;
    var GameRolePlayNamedActorInformations = (function (_super) {
        __extends(GameRolePlayNamedActorInformations, _super);
        function GameRolePlayNamedActorInformations() {
            this.name = '';
            _super.call(this);
        }
        GameRolePlayNamedActorInformations.prototype.getTypeId = function () {
            return GameRolePlayNamedActorInformations.ID;
        };
        GameRolePlayNamedActorInformations.prototype.reset = function () {
            this.name = '';
        };
        GameRolePlayNamedActorInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayNamedActorInformations(param1);
        };
        GameRolePlayNamedActorInformations.prototype.serializeAs_GameRolePlayNamedActorInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            param1.writeUTF(this.name);
        };
        GameRolePlayNamedActorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayNamedActorInformations(param1);
        };
        GameRolePlayNamedActorInformations.prototype.deserializeAs_GameRolePlayNamedActorInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.name = param1.readUTF();
        };
        GameRolePlayNamedActorInformations.ID = 154;
        return GameRolePlayNamedActorInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayNamedActorInformations = GameRolePlayNamedActorInformations;
    var GameRolePlayNpcInformations = (function (_super) {
        __extends(GameRolePlayNpcInformations, _super);
        function GameRolePlayNpcInformations() {
            this.npcId = 0;
            this.sex = false;
            this.specialArtworkId = 0;
            _super.call(this);
        }
        GameRolePlayNpcInformations.prototype.getTypeId = function () {
            return GameRolePlayNpcInformations.ID;
        };
        GameRolePlayNpcInformations.prototype.reset = function () {
            this.npcId = 0;
            this.sex = false;
            this.specialArtworkId = 0;
        };
        GameRolePlayNpcInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayNpcInformations(param1);
        };
        GameRolePlayNpcInformations.prototype.serializeAs_GameRolePlayNpcInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element npcId.');
            }
            param1.writeVarShort(this.npcId);
            param1.writeBoolean(this.sex);
            if (this.specialArtworkId < 0) {
                throw new Error('Forbidden value (' + this.specialArtworkId + ') on element specialArtworkId.');
            }
            param1.writeVarShort(this.specialArtworkId);
        };
        GameRolePlayNpcInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayNpcInformations(param1);
        };
        GameRolePlayNpcInformations.prototype.deserializeAs_GameRolePlayNpcInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.npcId = param1.readVarUhShort();
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element of GameRolePlayNpcInformations.npcId.');
            }
            this.sex = param1.readBoolean();
            this.specialArtworkId = param1.readVarUhShort();
            if (this.specialArtworkId < 0) {
                throw new Error('Forbidden value (' + this.specialArtworkId + ') on element of GameRolePlayNpcInformations.specialArtworkId.');
            }
        };
        GameRolePlayNpcInformations.ID = 156;
        return GameRolePlayNpcInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayNpcInformations = GameRolePlayNpcInformations;
    var GameRolePlayNpcWithQuestInformations = (function (_super) {
        __extends(GameRolePlayNpcWithQuestInformations, _super);
        function GameRolePlayNpcWithQuestInformations() {
            this.questFlag = new GameRolePlayNpcQuestFlag();
            _super.call(this);
        }
        GameRolePlayNpcWithQuestInformations.prototype.getTypeId = function () {
            return GameRolePlayNpcWithQuestInformations.ID;
        };
        GameRolePlayNpcWithQuestInformations.prototype.reset = function () {
            this.questFlag = new GameRolePlayNpcQuestFlag();
        };
        GameRolePlayNpcWithQuestInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayNpcWithQuestInformations(param1);
        };
        GameRolePlayNpcWithQuestInformations.prototype.serializeAs_GameRolePlayNpcWithQuestInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayNpcInformations.call(this, param1);
            this.questFlag.serializeAs_GameRolePlayNpcQuestFlag(param1);
        };
        GameRolePlayNpcWithQuestInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayNpcWithQuestInformations(param1);
        };
        GameRolePlayNpcWithQuestInformations.prototype.deserializeAs_GameRolePlayNpcWithQuestInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.questFlag = new GameRolePlayNpcQuestFlag();
            this.questFlag.deserialize(param1);
        };
        GameRolePlayNpcWithQuestInformations.ID = 383;
        return GameRolePlayNpcWithQuestInformations;
    })(GameRolePlayNpcInformations);
    Protocol.GameRolePlayNpcWithQuestInformations = GameRolePlayNpcWithQuestInformations;
    var GameRolePlayPortalInformations = (function (_super) {
        __extends(GameRolePlayPortalInformations, _super);
        function GameRolePlayPortalInformations() {
            this.portal = new PortalInformation();
            _super.call(this);
        }
        GameRolePlayPortalInformations.prototype.getTypeId = function () {
            return GameRolePlayPortalInformations.ID;
        };
        GameRolePlayPortalInformations.prototype.reset = function () {
            this.portal = new PortalInformation();
        };
        GameRolePlayPortalInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPortalInformations(param1);
        };
        GameRolePlayPortalInformations.prototype.serializeAs_GameRolePlayPortalInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            param1.writeShort(this.portal.getTypeId());
            this.portal.serialize(param1);
        };
        GameRolePlayPortalInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPortalInformations(param1);
        };
        GameRolePlayPortalInformations.prototype.deserializeAs_GameRolePlayPortalInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.portal = ProtocolTypeManager.getInstance(PortalInformation, _loc2_);
            this.portal.deserialize(param1);
        };
        GameRolePlayPortalInformations.ID = 467;
        return GameRolePlayPortalInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayPortalInformations = GameRolePlayPortalInformations;
    var GameRolePlayPrismInformations = (function (_super) {
        __extends(GameRolePlayPrismInformations, _super);
        function GameRolePlayPrismInformations() {
            this.prism = new PrismInformation();
            _super.call(this);
        }
        GameRolePlayPrismInformations.prototype.getTypeId = function () {
            return GameRolePlayPrismInformations.ID;
        };
        GameRolePlayPrismInformations.prototype.reset = function () {
            this.prism = new PrismInformation();
        };
        GameRolePlayPrismInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayPrismInformations(param1);
        };
        GameRolePlayPrismInformations.prototype.serializeAs_GameRolePlayPrismInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            param1.writeShort(this.prism.getTypeId());
            this.prism.serialize(param1);
        };
        GameRolePlayPrismInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayPrismInformations(param1);
        };
        GameRolePlayPrismInformations.prototype.deserializeAs_GameRolePlayPrismInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            this.prism = ProtocolTypeManager.getInstance(PrismInformation, _loc2_);
            this.prism.deserialize(param1);
        };
        GameRolePlayPrismInformations.ID = 161;
        return GameRolePlayPrismInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayPrismInformations = GameRolePlayPrismInformations;
    var GameRolePlayTreasureHintInformations = (function (_super) {
        __extends(GameRolePlayTreasureHintInformations, _super);
        function GameRolePlayTreasureHintInformations() {
            this.npcId = 0;
            _super.call(this);
        }
        GameRolePlayTreasureHintInformations.prototype.getTypeId = function () {
            return GameRolePlayTreasureHintInformations.ID;
        };
        GameRolePlayTreasureHintInformations.prototype.reset = function () {
            this.npcId = 0;
        };
        GameRolePlayTreasureHintInformations.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayTreasureHintInformations(param1);
        };
        GameRolePlayTreasureHintInformations.prototype.serializeAs_GameRolePlayTreasureHintInformations = function (param1) {
            _super.prototype.serializeAs_GameRolePlayActorInformations.call(this, param1);
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element npcId.');
            }
            param1.writeVarShort(this.npcId);
        };
        GameRolePlayTreasureHintInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayTreasureHintInformations(param1);
        };
        GameRolePlayTreasureHintInformations.prototype.deserializeAs_GameRolePlayTreasureHintInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.npcId = param1.readVarUhShort();
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element of GameRolePlayTreasureHintInformations.npcId.');
            }
        };
        GameRolePlayTreasureHintInformations.ID = 471;
        return GameRolePlayTreasureHintInformations;
    })(GameRolePlayActorInformations);
    Protocol.GameRolePlayTreasureHintInformations = GameRolePlayTreasureHintInformations;
    var GroupMonsterStaticInformations = (function () {
        function GroupMonsterStaticInformations() {
            this.mainCreatureLightInfos = new MonsterInGroupLightInformations();
            this.underlings = [];
        }
        GroupMonsterStaticInformations.prototype.getTypeId = function () {
            return GroupMonsterStaticInformations.ID;
        };
        GroupMonsterStaticInformations.prototype.reset = function () {
            this.mainCreatureLightInfos = new MonsterInGroupLightInformations();
            this.underlings = [];
        };
        GroupMonsterStaticInformations.prototype.serialize = function (param1) {
            this.serializeAs_GroupMonsterStaticInformations(param1);
        };
        GroupMonsterStaticInformations.prototype.serializeAs_GroupMonsterStaticInformations = function (param1) {
            this.mainCreatureLightInfos.serializeAs_MonsterInGroupLightInformations(param1);
            param1.writeShort(this.underlings.length);
            var _loc2_ = 0;
            while (_loc2_ < this.underlings.length) {
                (this.underlings[_loc2_]).serializeAs_MonsterInGroupInformations(param1);
                _loc2_++;
            }
        };
        GroupMonsterStaticInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GroupMonsterStaticInformations(param1);
        };
        GroupMonsterStaticInformations.prototype.deserializeAs_GroupMonsterStaticInformations = function (param1) {
            var _loc4_ = null;
            this.mainCreatureLightInfos = new MonsterInGroupLightInformations();
            this.mainCreatureLightInfos.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MonsterInGroupInformations();
                _loc4_.deserialize(param1);
                this.underlings.push(_loc4_);
                _loc3_++;
            }
        };
        GroupMonsterStaticInformations.ID = 140;
        return GroupMonsterStaticInformations;
    })();
    Protocol.GroupMonsterStaticInformations = GroupMonsterStaticInformations;
    var GroupMonsterStaticInformationsWithAlternatives = (function (_super) {
        __extends(GroupMonsterStaticInformationsWithAlternatives, _super);
        function GroupMonsterStaticInformationsWithAlternatives() {
            this.alternatives = [];
            _super.call(this);
        }
        GroupMonsterStaticInformationsWithAlternatives.prototype.getTypeId = function () {
            return GroupMonsterStaticInformationsWithAlternatives.ID;
        };
        GroupMonsterStaticInformationsWithAlternatives.prototype.reset = function () {
            this.alternatives = [];
        };
        GroupMonsterStaticInformationsWithAlternatives.prototype.serialize = function (param1) {
            this.serializeAs_GroupMonsterStaticInformationsWithAlternatives(param1);
        };
        GroupMonsterStaticInformationsWithAlternatives.prototype.serializeAs_GroupMonsterStaticInformationsWithAlternatives = function (param1) {
            _super.prototype.serializeAs_GroupMonsterStaticInformations.call(this, param1);
            param1.writeShort(this.alternatives.length);
            var _loc2_ = 0;
            while (_loc2_ < this.alternatives.length) {
                (this.alternatives[_loc2_]).serializeAs_AlternativeMonstersInGroupLightInformations(param1);
                _loc2_++;
            }
        };
        GroupMonsterStaticInformationsWithAlternatives.prototype.deserialize = function (param1) {
            this.deserializeAs_GroupMonsterStaticInformationsWithAlternatives(param1);
        };
        GroupMonsterStaticInformationsWithAlternatives.prototype.deserializeAs_GroupMonsterStaticInformationsWithAlternatives = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new AlternativeMonstersInGroupLightInformations();
                _loc4_.deserialize(param1);
                this.alternatives.push(_loc4_);
                _loc3_++;
            }
        };
        GroupMonsterStaticInformationsWithAlternatives.ID = 396;
        return GroupMonsterStaticInformationsWithAlternatives;
    })(GroupMonsterStaticInformations);
    Protocol.GroupMonsterStaticInformationsWithAlternatives = GroupMonsterStaticInformationsWithAlternatives;
    var GuildInAllianceInformations = (function (_super) {
        __extends(GuildInAllianceInformations, _super);
        function GuildInAllianceInformations() {
            this.guildLevel = 0;
            this.nbMembers = 0;
            this.enabled = false;
            _super.call(this);
        }
        GuildInAllianceInformations.prototype.getTypeId = function () {
            return GuildInAllianceInformations.ID;
        };
        GuildInAllianceInformations.prototype.reset = function () {
            this.guildLevel = 0;
            this.nbMembers = 0;
            this.enabled = false;
        };
        GuildInAllianceInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildInAllianceInformations(param1);
        };
        GuildInAllianceInformations.prototype.serializeAs_GuildInAllianceInformations = function (param1) {
            _super.prototype.serializeAs_GuildInformations.call(this, param1);
            if (this.guildLevel < 1 || this.guildLevel > 200) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element guildLevel.');
            }
            param1.writeByte(this.guildLevel);
            if (this.nbMembers < 1 || this.nbMembers > 240) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element nbMembers.');
            }
            param1.writeByte(this.nbMembers);
            param1.writeBoolean(this.enabled);
        };
        GuildInAllianceInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInAllianceInformations(param1);
        };
        GuildInAllianceInformations.prototype.deserializeAs_GuildInAllianceInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildLevel = param1.readUnsignedByte();
            if (this.guildLevel < 1 || this.guildLevel > 200) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element of GuildInAllianceInformations.guildLevel.');
            }
            this.nbMembers = param1.readUnsignedByte();
            if (this.nbMembers < 1 || this.nbMembers > 240) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element of GuildInAllianceInformations.nbMembers.');
            }
            this.enabled = param1.readBoolean();
        };
        GuildInAllianceInformations.ID = 420;
        return GuildInAllianceInformations;
    })(GuildInformations);
    Protocol.GuildInAllianceInformations = GuildInAllianceInformations;
    var GuildInformations = (function (_super) {
        __extends(GuildInformations, _super);
        function GuildInformations() {
            this.guildEmblem = new GuildEmblem();
            _super.call(this);
        }
        GuildInformations.prototype.getTypeId = function () {
            return GuildInformations.ID;
        };
        GuildInformations.prototype.reset = function () {
            this.guildEmblem = new GuildEmblem();
        };
        GuildInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildInformations(param1);
        };
        GuildInformations.prototype.serializeAs_GuildInformations = function (param1) {
            _super.prototype.serializeAs_BasicGuildInformations.call(this, param1);
            this.guildEmblem.serializeAs_GuildEmblem(param1);
        };
        GuildInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInformations(param1);
        };
        GuildInformations.prototype.deserializeAs_GuildInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildEmblem = new GuildEmblem();
            this.guildEmblem.deserialize(param1);
        };
        GuildInformations.ID = 127;
        return GuildInformations;
    })(BasicGuildInformations);
    Protocol.GuildInformations = GuildInformations;
    var HumanInformations = (function () {
        function HumanInformations() {
            this.restrictions = new ActorRestrictionsInformations();
            this.sex = false;
            this.options = [];
        }
        HumanInformations.prototype.getTypeId = function () {
            return HumanInformations.ID;
        };
        HumanInformations.prototype.reset = function () {
            this.restrictions = new ActorRestrictionsInformations();
            this.sex = false;
            this.options = [];
        };
        HumanInformations.prototype.serialize = function (param1) {
            this.serializeAs_HumanInformations(param1);
        };
        HumanInformations.prototype.serializeAs_HumanInformations = function (param1) {
            this.restrictions.serializeAs_ActorRestrictionsInformations(param1);
            param1.writeBoolean(this.sex);
            param1.writeShort(this.options.length);
            var _loc2_ = 0;
            while (_loc2_ < this.options.length) {
                param1.writeShort((this.options[_loc2_]).getTypeId());
                (this.options[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        HumanInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanInformations(param1);
        };
        HumanInformations.prototype.deserializeAs_HumanInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.restrictions = new ActorRestrictionsInformations();
            this.restrictions.deserialize(param1);
            this.sex = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(HumanOption, _loc4_);
                _loc5_.deserialize(param1);
                this.options.push(_loc5_);
                _loc3_++;
            }
        };
        HumanInformations.ID = 157;
        return HumanInformations;
    })();
    Protocol.HumanInformations = HumanInformations;
    var HumanOption = (function () {
        function HumanOption() {
        }
        HumanOption.prototype.getTypeId = function () {
            return HumanOption.ID;
        };
        HumanOption.prototype.reset = function () {
        };
        HumanOption.prototype.serialize = function (param1) {
            this.serializeAs_HumanOption(param1);
        };
        HumanOption.prototype.serializeAs_HumanOption = function (param1) {
        };
        HumanOption.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOption(param1);
        };
        HumanOption.prototype.deserializeAs_HumanOption = function (param1) {
        };
        HumanOption.ID = 406;
        return HumanOption;
    })();
    Protocol.HumanOption = HumanOption;
    var HumanOptionAlliance = (function (_super) {
        __extends(HumanOptionAlliance, _super);
        function HumanOptionAlliance() {
            this.allianceInformations = new AllianceInformations();
            this.aggressable = 0;
            _super.call(this);
        }
        HumanOptionAlliance.prototype.getTypeId = function () {
            return HumanOptionAlliance.ID;
        };
        HumanOptionAlliance.prototype.reset = function () {
            this.allianceInformations = new AllianceInformations();
            this.aggressable = 0;
        };
        HumanOptionAlliance.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionAlliance(param1);
        };
        HumanOptionAlliance.prototype.serializeAs_HumanOptionAlliance = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            this.allianceInformations.serializeAs_AllianceInformations(param1);
            param1.writeByte(this.aggressable);
        };
        HumanOptionAlliance.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionAlliance(param1);
        };
        HumanOptionAlliance.prototype.deserializeAs_HumanOptionAlliance = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceInformations = new AllianceInformations();
            this.allianceInformations.deserialize(param1);
            this.aggressable = param1.readByte();
            if (this.aggressable < 0) {
                throw new Error('Forbidden value (' + this.aggressable + ') on element of HumanOptionAlliance.aggressable.');
            }
        };
        HumanOptionAlliance.ID = 425;
        return HumanOptionAlliance;
    })(HumanOption);
    Protocol.HumanOptionAlliance = HumanOptionAlliance;
    var HumanOptionEmote = (function (_super) {
        __extends(HumanOptionEmote, _super);
        function HumanOptionEmote() {
            this.emoteId = 0;
            this.emoteStartTime = 0;
            _super.call(this);
        }
        HumanOptionEmote.prototype.getTypeId = function () {
            return HumanOptionEmote.ID;
        };
        HumanOptionEmote.prototype.reset = function () {
            this.emoteId = 0;
            this.emoteStartTime = 0;
        };
        HumanOptionEmote.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionEmote(param1);
        };
        HumanOptionEmote.prototype.serializeAs_HumanOptionEmote = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
            if (this.emoteStartTime < -9.007199254740992E15 || this.emoteStartTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.emoteStartTime + ') on element emoteStartTime.');
            }
            param1.writeDouble(this.emoteStartTime);
        };
        HumanOptionEmote.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionEmote(param1);
        };
        HumanOptionEmote.prototype.deserializeAs_HumanOptionEmote = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of HumanOptionEmote.emoteId.');
            }
            this.emoteStartTime = param1.readDouble();
            if (this.emoteStartTime < -9.007199254740992E15 || this.emoteStartTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.emoteStartTime + ') on element of HumanOptionEmote.emoteStartTime.');
            }
        };
        HumanOptionEmote.ID = 407;
        return HumanOptionEmote;
    })(HumanOption);
    Protocol.HumanOptionEmote = HumanOptionEmote;
    var HumanOptionFollowers = (function (_super) {
        __extends(HumanOptionFollowers, _super);
        function HumanOptionFollowers() {
            this.followingCharactersLook = [];
            _super.call(this);
        }
        HumanOptionFollowers.prototype.getTypeId = function () {
            return HumanOptionFollowers.ID;
        };
        HumanOptionFollowers.prototype.reset = function () {
            this.followingCharactersLook = [];
        };
        HumanOptionFollowers.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionFollowers(param1);
        };
        HumanOptionFollowers.prototype.serializeAs_HumanOptionFollowers = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            param1.writeShort(this.followingCharactersLook.length);
            var _loc2_ = 0;
            while (_loc2_ < this.followingCharactersLook.length) {
                (this.followingCharactersLook[_loc2_]).serializeAs_IndexedEntityLook(param1);
                _loc2_++;
            }
        };
        HumanOptionFollowers.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionFollowers(param1);
        };
        HumanOptionFollowers.prototype.deserializeAs_HumanOptionFollowers = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new IndexedEntityLook();
                _loc4_.deserialize(param1);
                this.followingCharactersLook.push(_loc4_);
                _loc3_++;
            }
        };
        HumanOptionFollowers.ID = 410;
        return HumanOptionFollowers;
    })(HumanOption);
    Protocol.HumanOptionFollowers = HumanOptionFollowers;
    var HumanOptionGuild = (function (_super) {
        __extends(HumanOptionGuild, _super);
        function HumanOptionGuild() {
            this.guildInformations = new GuildInformations();
            _super.call(this);
        }
        HumanOptionGuild.prototype.getTypeId = function () {
            return HumanOptionGuild.ID;
        };
        HumanOptionGuild.prototype.reset = function () {
            this.guildInformations = new GuildInformations();
        };
        HumanOptionGuild.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionGuild(param1);
        };
        HumanOptionGuild.prototype.serializeAs_HumanOptionGuild = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            this.guildInformations.serializeAs_GuildInformations(param1);
        };
        HumanOptionGuild.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionGuild(param1);
        };
        HumanOptionGuild.prototype.deserializeAs_HumanOptionGuild = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildInformations = new GuildInformations();
            this.guildInformations.deserialize(param1);
        };
        HumanOptionGuild.ID = 409;
        return HumanOptionGuild;
    })(HumanOption);
    Protocol.HumanOptionGuild = HumanOptionGuild;
    var HumanOptionObjectUse = (function (_super) {
        __extends(HumanOptionObjectUse, _super);
        function HumanOptionObjectUse() {
            this.delayTypeId = 0;
            this.delayEndTime = 0;
            this.objectGID = 0;
            _super.call(this);
        }
        HumanOptionObjectUse.prototype.getTypeId = function () {
            return HumanOptionObjectUse.ID;
        };
        HumanOptionObjectUse.prototype.reset = function () {
            this.delayTypeId = 0;
            this.delayEndTime = 0;
            this.objectGID = 0;
        };
        HumanOptionObjectUse.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionObjectUse(param1);
        };
        HumanOptionObjectUse.prototype.serializeAs_HumanOptionObjectUse = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            param1.writeByte(this.delayTypeId);
            if (this.delayEndTime < 0 || this.delayEndTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.delayEndTime + ') on element delayEndTime.');
            }
            param1.writeDouble(this.delayEndTime);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
        };
        HumanOptionObjectUse.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionObjectUse(param1);
        };
        HumanOptionObjectUse.prototype.deserializeAs_HumanOptionObjectUse = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.delayTypeId = param1.readByte();
            if (this.delayTypeId < 0) {
                throw new Error('Forbidden value (' + this.delayTypeId + ') on element of HumanOptionObjectUse.delayTypeId.');
            }
            this.delayEndTime = param1.readDouble();
            if (this.delayEndTime < 0 || this.delayEndTime > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.delayEndTime + ') on element of HumanOptionObjectUse.delayEndTime.');
            }
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of HumanOptionObjectUse.objectGID.');
            }
        };
        HumanOptionObjectUse.ID = 449;
        return HumanOptionObjectUse;
    })(HumanOption);
    Protocol.HumanOptionObjectUse = HumanOptionObjectUse;
    var HumanOptionOrnament = (function (_super) {
        __extends(HumanOptionOrnament, _super);
        function HumanOptionOrnament() {
            this.ornamentId = 0;
            _super.call(this);
        }
        HumanOptionOrnament.prototype.getTypeId = function () {
            return HumanOptionOrnament.ID;
        };
        HumanOptionOrnament.prototype.reset = function () {
            this.ornamentId = 0;
        };
        HumanOptionOrnament.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionOrnament(param1);
        };
        HumanOptionOrnament.prototype.serializeAs_HumanOptionOrnament = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element ornamentId.');
            }
            param1.writeVarShort(this.ornamentId);
        };
        HumanOptionOrnament.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionOrnament(param1);
        };
        HumanOptionOrnament.prototype.deserializeAs_HumanOptionOrnament = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.ornamentId = param1.readVarUhShort();
            if (this.ornamentId < 0) {
                throw new Error('Forbidden value (' + this.ornamentId + ') on element of HumanOptionOrnament.ornamentId.');
            }
        };
        HumanOptionOrnament.ID = 411;
        return HumanOptionOrnament;
    })(HumanOption);
    Protocol.HumanOptionOrnament = HumanOptionOrnament;
    var HumanOptionTitle = (function (_super) {
        __extends(HumanOptionTitle, _super);
        function HumanOptionTitle() {
            this.titleId = 0;
            this.titleParam = '';
            _super.call(this);
        }
        HumanOptionTitle.prototype.getTypeId = function () {
            return HumanOptionTitle.ID;
        };
        HumanOptionTitle.prototype.reset = function () {
            this.titleId = 0;
            this.titleParam = '';
        };
        HumanOptionTitle.prototype.serialize = function (param1) {
            this.serializeAs_HumanOptionTitle(param1);
        };
        HumanOptionTitle.prototype.serializeAs_HumanOptionTitle = function (param1) {
            _super.prototype.serializeAs_HumanOption.call(this, param1);
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element titleId.');
            }
            param1.writeVarShort(this.titleId);
            param1.writeUTF(this.titleParam);
        };
        HumanOptionTitle.prototype.deserialize = function (param1) {
            this.deserializeAs_HumanOptionTitle(param1);
        };
        HumanOptionTitle.prototype.deserializeAs_HumanOptionTitle = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.titleId = param1.readVarUhShort();
            if (this.titleId < 0) {
                throw new Error('Forbidden value (' + this.titleId + ') on element of HumanOptionTitle.titleId.');
            }
            this.titleParam = param1.readUTF();
        };
        HumanOptionTitle.ID = 408;
        return HumanOptionTitle;
    })(HumanOption);
    Protocol.HumanOptionTitle = HumanOptionTitle;
    var MonsterInGroupInformations = (function (_super) {
        __extends(MonsterInGroupInformations, _super);
        function MonsterInGroupInformations() {
            this.look = new EntityLook();
            _super.call(this);
        }
        MonsterInGroupInformations.prototype.getTypeId = function () {
            return MonsterInGroupInformations.ID;
        };
        MonsterInGroupInformations.prototype.reset = function () {
            this.look = new EntityLook();
        };
        MonsterInGroupInformations.prototype.serialize = function (param1) {
            this.serializeAs_MonsterInGroupInformations(param1);
        };
        MonsterInGroupInformations.prototype.serializeAs_MonsterInGroupInformations = function (param1) {
            _super.prototype.serializeAs_MonsterInGroupLightInformations.call(this, param1);
            this.look.serializeAs_EntityLook(param1);
        };
        MonsterInGroupInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_MonsterInGroupInformations(param1);
        };
        MonsterInGroupInformations.prototype.deserializeAs_MonsterInGroupInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.look = new EntityLook();
            this.look.deserialize(param1);
        };
        MonsterInGroupInformations.ID = 144;
        return MonsterInGroupInformations;
    })(MonsterInGroupLightInformations);
    Protocol.MonsterInGroupInformations = MonsterInGroupInformations;
    var MonsterInGroupLightInformations = (function () {
        function MonsterInGroupLightInformations() {
            this.creatureGenericId = 0;
            this.grade = 0;
        }
        MonsterInGroupLightInformations.prototype.getTypeId = function () {
            return MonsterInGroupLightInformations.ID;
        };
        MonsterInGroupLightInformations.prototype.reset = function () {
            this.creatureGenericId = 0;
            this.grade = 0;
        };
        MonsterInGroupLightInformations.prototype.serialize = function (param1) {
            this.serializeAs_MonsterInGroupLightInformations(param1);
        };
        MonsterInGroupLightInformations.prototype.serializeAs_MonsterInGroupLightInformations = function (param1) {
            param1.writeInt(this.creatureGenericId);
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element grade.');
            }
            param1.writeByte(this.grade);
        };
        MonsterInGroupLightInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_MonsterInGroupLightInformations(param1);
        };
        MonsterInGroupLightInformations.prototype.deserializeAs_MonsterInGroupLightInformations = function (param1) {
            this.creatureGenericId = param1.readInt();
            this.grade = param1.readByte();
            if (this.grade < 0) {
                throw new Error('Forbidden value (' + this.grade + ') on element of MonsterInGroupLightInformations.grade.');
            }
        };
        MonsterInGroupLightInformations.ID = 395;
        return MonsterInGroupLightInformations;
    })();
    Protocol.MonsterInGroupLightInformations = MonsterInGroupLightInformations;
    var ObjectItemInRolePlay = (function () {
        function ObjectItemInRolePlay() {
            this.cellId = 0;
            this.objectGID = 0;
        }
        ObjectItemInRolePlay.prototype.getTypeId = function () {
            return ObjectItemInRolePlay.ID;
        };
        ObjectItemInRolePlay.prototype.reset = function () {
            this.cellId = 0;
            this.objectGID = 0;
        };
        ObjectItemInRolePlay.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemInRolePlay(param1);
        };
        ObjectItemInRolePlay.prototype.serializeAs_ObjectItemInRolePlay = function (param1) {
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element cellId.');
            }
            param1.writeVarShort(this.cellId);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
        };
        ObjectItemInRolePlay.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemInRolePlay(param1);
        };
        ObjectItemInRolePlay.prototype.deserializeAs_ObjectItemInRolePlay = function (param1) {
            this.cellId = param1.readVarUhShort();
            if (this.cellId < 0 || this.cellId > 559) {
                throw new Error('Forbidden value (' + this.cellId + ') on element of ObjectItemInRolePlay.cellId.');
            }
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemInRolePlay.objectGID.');
            }
        };
        ObjectItemInRolePlay.ID = 198;
        return ObjectItemInRolePlay;
    })();
    Protocol.ObjectItemInRolePlay = ObjectItemInRolePlay;
    var DecraftedItemStackInfo = (function () {
        function DecraftedItemStackInfo() {
            this.objectUID = 0;
            this.bonusMin = 0;
            this.bonusMax = 0;
            this.runesId = [];
            this.runesQty = [];
        }
        DecraftedItemStackInfo.prototype.getTypeId = function () {
            return DecraftedItemStackInfo.ID;
        };
        DecraftedItemStackInfo.prototype.reset = function () {
            this.objectUID = 0;
            this.bonusMin = 0;
            this.bonusMax = 0;
            this.runesId = [];
            this.runesQty = [];
        };
        DecraftedItemStackInfo.prototype.serialize = function (param1) {
            this.serializeAs_DecraftedItemStackInfo(param1);
        };
        DecraftedItemStackInfo.prototype.serializeAs_DecraftedItemStackInfo = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeFloat(this.bonusMin);
            param1.writeFloat(this.bonusMax);
            param1.writeShort(this.runesId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.runesId.length) {
                if (this.runesId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.runesId[_loc2_] + ') on element 4 (starting at 1) of runesId.');
                }
                param1.writeVarShort(this.runesId[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.runesQty.length);
            var _loc3_ = 0;
            while (_loc3_ < this.runesQty.length) {
                if (this.runesQty[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.runesQty[_loc3_] + ') on element 5 (starting at 1) of runesQty.');
                }
                param1.writeVarInt(this.runesQty[_loc3_]);
                _loc3_++;
            }
        };
        DecraftedItemStackInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_DecraftedItemStackInfo(param1);
        };
        DecraftedItemStackInfo.prototype.deserializeAs_DecraftedItemStackInfo = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of DecraftedItemStackInfo.objectUID.');
            }
            this.bonusMin = param1.readFloat();
            this.bonusMax = param1.readFloat();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of runesId.');
                }
                this.runesId.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of runesQty.');
                }
                this.runesQty.push(_loc7_);
                _loc5_++;
            }
        };
        DecraftedItemStackInfo.ID = 481;
        return DecraftedItemStackInfo;
    })();
    Protocol.DecraftedItemStackInfo = DecraftedItemStackInfo;
    var JobCrafterDirectoryEntryJobInfo = (function () {
        function JobCrafterDirectoryEntryJobInfo() {
            this.jobId = 0;
            this.jobLevel = 0;
            this.free = false;
            this.minLevel = 0;
        }
        JobCrafterDirectoryEntryJobInfo.prototype.getTypeId = function () {
            return JobCrafterDirectoryEntryJobInfo.ID;
        };
        JobCrafterDirectoryEntryJobInfo.prototype.reset = function () {
            this.jobId = 0;
            this.jobLevel = 0;
            this.free = false;
            this.minLevel = 0;
        };
        JobCrafterDirectoryEntryJobInfo.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryEntryJobInfo(param1);
        };
        JobCrafterDirectoryEntryJobInfo.prototype.serializeAs_JobCrafterDirectoryEntryJobInfo = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
            if (this.jobLevel < 1 || this.jobLevel > 200) {
                throw new Error('Forbidden value (' + this.jobLevel + ') on element jobLevel.');
            }
            param1.writeByte(this.jobLevel);
            param1.writeBoolean(this.free);
            if (this.minLevel < 0 || this.minLevel > 255) {
                throw new Error('Forbidden value (' + this.minLevel + ') on element minLevel.');
            }
            param1.writeByte(this.minLevel);
        };
        JobCrafterDirectoryEntryJobInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryEntryJobInfo(param1);
        };
        JobCrafterDirectoryEntryJobInfo.prototype.deserializeAs_JobCrafterDirectoryEntryJobInfo = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobCrafterDirectoryEntryJobInfo.jobId.');
            }
            this.jobLevel = param1.readUnsignedByte();
            if (this.jobLevel < 1 || this.jobLevel > 200) {
                throw new Error('Forbidden value (' + this.jobLevel + ') on element of JobCrafterDirectoryEntryJobInfo.jobLevel.');
            }
            this.free = param1.readBoolean();
            this.minLevel = param1.readUnsignedByte();
            if (this.minLevel < 0 || this.minLevel > 255) {
                throw new Error('Forbidden value (' + this.minLevel + ') on element of JobCrafterDirectoryEntryJobInfo.minLevel.');
            }
        };
        JobCrafterDirectoryEntryJobInfo.ID = 195;
        return JobCrafterDirectoryEntryJobInfo;
    })();
    Protocol.JobCrafterDirectoryEntryJobInfo = JobCrafterDirectoryEntryJobInfo;
    var JobCrafterDirectoryEntryPlayerInfo = (function () {
        function JobCrafterDirectoryEntryPlayerInfo() {
            this.playerId = 0;
            this.playerName = '';
            this.alignmentSide = 0;
            this.breed = 0;
            this.sex = false;
            this.isInWorkshop = false;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.status = new PlayerStatus();
        }
        JobCrafterDirectoryEntryPlayerInfo.prototype.getTypeId = function () {
            return JobCrafterDirectoryEntryPlayerInfo.ID;
        };
        JobCrafterDirectoryEntryPlayerInfo.prototype.reset = function () {
            this.playerId = 0;
            this.playerName = '';
            this.alignmentSide = 0;
            this.breed = 0;
            this.sex = false;
            this.isInWorkshop = false;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.status = new PlayerStatus();
        };
        JobCrafterDirectoryEntryPlayerInfo.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryEntryPlayerInfo(param1);
        };
        JobCrafterDirectoryEntryPlayerInfo.prototype.serializeAs_JobCrafterDirectoryEntryPlayerInfo = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeUTF(this.playerName);
            param1.writeByte(this.alignmentSide);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            param1.writeBoolean(this.isInWorkshop);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
        };
        JobCrafterDirectoryEntryPlayerInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryEntryPlayerInfo(param1);
        };
        JobCrafterDirectoryEntryPlayerInfo.prototype.deserializeAs_JobCrafterDirectoryEntryPlayerInfo = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of JobCrafterDirectoryEntryPlayerInfo.playerId.');
            }
            this.playerName = param1.readUTF();
            this.alignmentSide = param1.readByte();
            this.breed = param1.readByte();
            if (this.breed < PlayableBreedEnum.Feca || this.breed > PlayableBreedEnum.Eliotrope) {
                throw new Error('Forbidden value (' + this.breed + ') on element of JobCrafterDirectoryEntryPlayerInfo.breed.');
            }
            this.sex = param1.readBoolean();
            this.isInWorkshop = param1.readBoolean();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of JobCrafterDirectoryEntryPlayerInfo.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of JobCrafterDirectoryEntryPlayerInfo.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of JobCrafterDirectoryEntryPlayerInfo.subAreaId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
        };
        JobCrafterDirectoryEntryPlayerInfo.ID = 194;
        return JobCrafterDirectoryEntryPlayerInfo;
    })();
    Protocol.JobCrafterDirectoryEntryPlayerInfo = JobCrafterDirectoryEntryPlayerInfo;
    var JobCrafterDirectoryListEntry = (function () {
        function JobCrafterDirectoryListEntry() {
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.jobInfo = new JobCrafterDirectoryEntryJobInfo();
        }
        JobCrafterDirectoryListEntry.prototype.getTypeId = function () {
            return JobCrafterDirectoryListEntry.ID;
        };
        JobCrafterDirectoryListEntry.prototype.reset = function () {
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.jobInfo = new JobCrafterDirectoryEntryJobInfo();
        };
        JobCrafterDirectoryListEntry.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectoryListEntry(param1);
        };
        JobCrafterDirectoryListEntry.prototype.serializeAs_JobCrafterDirectoryListEntry = function (param1) {
            this.playerInfo.serializeAs_JobCrafterDirectoryEntryPlayerInfo(param1);
            this.jobInfo.serializeAs_JobCrafterDirectoryEntryJobInfo(param1);
        };
        JobCrafterDirectoryListEntry.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectoryListEntry(param1);
        };
        JobCrafterDirectoryListEntry.prototype.deserializeAs_JobCrafterDirectoryListEntry = function (param1) {
            this.playerInfo = new JobCrafterDirectoryEntryPlayerInfo();
            this.playerInfo.deserialize(param1);
            this.jobInfo = new JobCrafterDirectoryEntryJobInfo();
            this.jobInfo.deserialize(param1);
        };
        JobCrafterDirectoryListEntry.ID = 196;
        return JobCrafterDirectoryListEntry;
    })();
    Protocol.JobCrafterDirectoryListEntry = JobCrafterDirectoryListEntry;
    var JobCrafterDirectorySettings = (function () {
        function JobCrafterDirectorySettings() {
            this.jobId = 0;
            this.minLevel = 0;
            this.free = false;
        }
        JobCrafterDirectorySettings.prototype.getTypeId = function () {
            return JobCrafterDirectorySettings.ID;
        };
        JobCrafterDirectorySettings.prototype.reset = function () {
            this.jobId = 0;
            this.minLevel = 0;
            this.free = false;
        };
        JobCrafterDirectorySettings.prototype.serialize = function (param1) {
            this.serializeAs_JobCrafterDirectorySettings(param1);
        };
        JobCrafterDirectorySettings.prototype.serializeAs_JobCrafterDirectorySettings = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
            if (this.minLevel < 0 || this.minLevel > 255) {
                throw new Error('Forbidden value (' + this.minLevel + ') on element minLevel.');
            }
            param1.writeByte(this.minLevel);
            param1.writeBoolean(this.free);
        };
        JobCrafterDirectorySettings.prototype.deserialize = function (param1) {
            this.deserializeAs_JobCrafterDirectorySettings(param1);
        };
        JobCrafterDirectorySettings.prototype.deserializeAs_JobCrafterDirectorySettings = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobCrafterDirectorySettings.jobId.');
            }
            this.minLevel = param1.readUnsignedByte();
            if (this.minLevel < 0 || this.minLevel > 255) {
                throw new Error('Forbidden value (' + this.minLevel + ') on element of JobCrafterDirectorySettings.minLevel.');
            }
            this.free = param1.readBoolean();
        };
        JobCrafterDirectorySettings.ID = 97;
        return JobCrafterDirectorySettings;
    })();
    Protocol.JobCrafterDirectorySettings = JobCrafterDirectorySettings;
    var JobDescription = (function () {
        function JobDescription() {
            this.jobId = 0;
            this.skills = [];
        }
        JobDescription.prototype.getTypeId = function () {
            return JobDescription.ID;
        };
        JobDescription.prototype.reset = function () {
            this.jobId = 0;
            this.skills = [];
        };
        JobDescription.prototype.serialize = function (param1) {
            this.serializeAs_JobDescription(param1);
        };
        JobDescription.prototype.serializeAs_JobDescription = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
            param1.writeShort(this.skills.length);
            var _loc2_ = 0;
            while (_loc2_ < this.skills.length) {
                param1.writeShort((this.skills[_loc2_]).getTypeId());
                (this.skills[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        JobDescription.prototype.deserialize = function (param1) {
            this.deserializeAs_JobDescription(param1);
        };
        JobDescription.prototype.deserializeAs_JobDescription = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobDescription.jobId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(SkillActionDescription, _loc4_);
                _loc5_.deserialize(param1);
                this.skills.push(_loc5_);
                _loc3_++;
            }
        };
        JobDescription.ID = 101;
        return JobDescription;
    })();
    Protocol.JobDescription = JobDescription;
    var JobExperience = (function () {
        function JobExperience() {
            this.jobId = 0;
            this.jobLevel = 0;
            this.jobXP = 0;
            this.jobXpLevelFloor = 0;
            this.jobXpNextLevelFloor = 0;
        }
        JobExperience.prototype.getTypeId = function () {
            return JobExperience.ID;
        };
        JobExperience.prototype.reset = function () {
            this.jobId = 0;
            this.jobLevel = 0;
            this.jobXP = 0;
            this.jobXpLevelFloor = 0;
            this.jobXpNextLevelFloor = 0;
        };
        JobExperience.prototype.serialize = function (param1) {
            this.serializeAs_JobExperience(param1);
        };
        JobExperience.prototype.serializeAs_JobExperience = function (param1) {
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element jobId.');
            }
            param1.writeByte(this.jobId);
            if (this.jobLevel < 0 || this.jobLevel > 255) {
                throw new Error('Forbidden value (' + this.jobLevel + ') on element jobLevel.');
            }
            param1.writeByte(this.jobLevel);
            if (this.jobXP < 0 || this.jobXP > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXP + ') on element jobXP.');
            }
            param1.writeVarLong(this.jobXP);
            if (this.jobXpLevelFloor < 0 || this.jobXpLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXpLevelFloor + ') on element jobXpLevelFloor.');
            }
            param1.writeVarLong(this.jobXpLevelFloor);
            if (this.jobXpNextLevelFloor < 0 || this.jobXpNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXpNextLevelFloor + ') on element jobXpNextLevelFloor.');
            }
            param1.writeVarLong(this.jobXpNextLevelFloor);
        };
        JobExperience.prototype.deserialize = function (param1) {
            this.deserializeAs_JobExperience(param1);
        };
        JobExperience.prototype.deserializeAs_JobExperience = function (param1) {
            this.jobId = param1.readByte();
            if (this.jobId < 0) {
                throw new Error('Forbidden value (' + this.jobId + ') on element of JobExperience.jobId.');
            }
            this.jobLevel = param1.readUnsignedByte();
            if (this.jobLevel < 0 || this.jobLevel > 255) {
                throw new Error('Forbidden value (' + this.jobLevel + ') on element of JobExperience.jobLevel.');
            }
            this.jobXP = param1.readVarUhLong();
            if (this.jobXP < 0 || this.jobXP > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXP + ') on element of JobExperience.jobXP.');
            }
            this.jobXpLevelFloor = param1.readVarUhLong();
            if (this.jobXpLevelFloor < 0 || this.jobXpLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXpLevelFloor + ') on element of JobExperience.jobXpLevelFloor.');
            }
            this.jobXpNextLevelFloor = param1.readVarUhLong();
            if (this.jobXpNextLevelFloor < 0 || this.jobXpNextLevelFloor > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.jobXpNextLevelFloor + ') on element of JobExperience.jobXpNextLevelFloor.');
            }
        };
        JobExperience.ID = 98;
        return JobExperience;
    })();
    Protocol.JobExperience = JobExperience;
    var DungeonPartyFinderPlayer = (function () {
        function DungeonPartyFinderPlayer() {
            this.playerId = 0;
            this.playerName = '';
            this.breed = 0;
            this.sex = false;
            this.level = 0;
        }
        DungeonPartyFinderPlayer.prototype.getTypeId = function () {
            return DungeonPartyFinderPlayer.ID;
        };
        DungeonPartyFinderPlayer.prototype.reset = function () {
            this.playerId = 0;
            this.playerName = '';
            this.breed = 0;
            this.sex = false;
            this.level = 0;
        };
        DungeonPartyFinderPlayer.prototype.serialize = function (param1) {
            this.serializeAs_DungeonPartyFinderPlayer(param1);
        };
        DungeonPartyFinderPlayer.prototype.serializeAs_DungeonPartyFinderPlayer = function (param1) {
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeUTF(this.playerName);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
        };
        DungeonPartyFinderPlayer.prototype.deserialize = function (param1) {
            this.deserializeAs_DungeonPartyFinderPlayer(param1);
        };
        DungeonPartyFinderPlayer.prototype.deserializeAs_DungeonPartyFinderPlayer = function (param1) {
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of DungeonPartyFinderPlayer.playerId.');
            }
            this.playerName = param1.readUTF();
            this.breed = param1.readByte();
            if (this.breed < PlayableBreedEnum.Feca || this.breed > PlayableBreedEnum.Eliotrope) {
                throw new Error('Forbidden value (' + this.breed + ') on element of DungeonPartyFinderPlayer.breed.');
            }
            this.sex = param1.readBoolean();
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 255) {
                throw new Error('Forbidden value (' + this.level + ') on element of DungeonPartyFinderPlayer.level.');
            }
        };
        DungeonPartyFinderPlayer.ID = 373;
        return DungeonPartyFinderPlayer;
    })();
    Protocol.DungeonPartyFinderPlayer = DungeonPartyFinderPlayer;
    var NamedPartyTeam = (function () {
        function NamedPartyTeam() {
            this.teamId = 2;
            this.partyName = '';
        }
        NamedPartyTeam.prototype.getTypeId = function () {
            return NamedPartyTeam.ID;
        };
        NamedPartyTeam.prototype.reset = function () {
            this.teamId = 2;
            this.partyName = '';
        };
        NamedPartyTeam.prototype.serialize = function (param1) {
            this.serializeAs_NamedPartyTeam(param1);
        };
        NamedPartyTeam.prototype.serializeAs_NamedPartyTeam = function (param1) {
            param1.writeByte(this.teamId);
            param1.writeUTF(this.partyName);
        };
        NamedPartyTeam.prototype.deserialize = function (param1) {
            this.deserializeAs_NamedPartyTeam(param1);
        };
        NamedPartyTeam.prototype.deserializeAs_NamedPartyTeam = function (param1) {
            this.teamId = param1.readByte();
            if (this.teamId < 0) {
                throw new Error('Forbidden value (' + this.teamId + ') on element of NamedPartyTeam.teamId.');
            }
            this.partyName = param1.readUTF();
        };
        NamedPartyTeam.ID = 469;
        return NamedPartyTeam;
    })();
    Protocol.NamedPartyTeam = NamedPartyTeam;
    var NamedPartyTeamWithOutcome = (function () {
        function NamedPartyTeamWithOutcome() {
            this.team = new NamedPartyTeam();
            this.outcome = 0;
        }
        NamedPartyTeamWithOutcome.prototype.getTypeId = function () {
            return NamedPartyTeamWithOutcome.ID;
        };
        NamedPartyTeamWithOutcome.prototype.reset = function () {
            this.team = new NamedPartyTeam();
            this.outcome = 0;
        };
        NamedPartyTeamWithOutcome.prototype.serialize = function (param1) {
            this.serializeAs_NamedPartyTeamWithOutcome(param1);
        };
        NamedPartyTeamWithOutcome.prototype.serializeAs_NamedPartyTeamWithOutcome = function (param1) {
            this.team.serializeAs_NamedPartyTeam(param1);
            param1.writeVarShort(this.outcome);
        };
        NamedPartyTeamWithOutcome.prototype.deserialize = function (param1) {
            this.deserializeAs_NamedPartyTeamWithOutcome(param1);
        };
        NamedPartyTeamWithOutcome.prototype.deserializeAs_NamedPartyTeamWithOutcome = function (param1) {
            this.team = new NamedPartyTeam();
            this.team.deserialize(param1);
            this.outcome = param1.readVarUhShort();
            if (this.outcome < 0) {
                throw new Error('Forbidden value (' + this.outcome + ') on element of NamedPartyTeamWithOutcome.outcome.');
            }
        };
        NamedPartyTeamWithOutcome.ID = 470;
        return NamedPartyTeamWithOutcome;
    })();
    Protocol.NamedPartyTeamWithOutcome = NamedPartyTeamWithOutcome;
    var PartyGuestInformations = (function () {
        function PartyGuestInformations() {
            this.guestId = 0;
            this.hostId = 0;
            this.name = '';
            this.guestLook = new EntityLook();
            this.breed = 0;
            this.sex = false;
            this.status = new PlayerStatus();
            this.companions = [];
        }
        PartyGuestInformations.prototype.getTypeId = function () {
            return PartyGuestInformations.ID;
        };
        PartyGuestInformations.prototype.reset = function () {
            this.guestId = 0;
            this.hostId = 0;
            this.name = '';
            this.guestLook = new EntityLook();
            this.breed = 0;
            this.sex = false;
            this.status = new PlayerStatus();
            this.companions = [];
        };
        PartyGuestInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyGuestInformations(param1);
        };
        PartyGuestInformations.prototype.serializeAs_PartyGuestInformations = function (param1) {
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element guestId.');
            }
            param1.writeInt(this.guestId);
            if (this.hostId < 0) {
                throw new Error('Forbidden value (' + this.hostId + ') on element hostId.');
            }
            param1.writeInt(this.hostId);
            param1.writeUTF(this.name);
            this.guestLook.serializeAs_EntityLook(param1);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
            param1.writeShort(this.companions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.companions.length) {
                (this.companions[_loc2_]).serializeAs_PartyCompanionBaseInformations(param1);
                _loc2_++;
            }
        };
        PartyGuestInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyGuestInformations(param1);
        };
        PartyGuestInformations.prototype.deserializeAs_PartyGuestInformations = function (param1) {
            var _loc5_ = null;
            this.guestId = param1.readInt();
            if (this.guestId < 0) {
                throw new Error('Forbidden value (' + this.guestId + ') on element of PartyGuestInformations.guestId.');
            }
            this.hostId = param1.readInt();
            if (this.hostId < 0) {
                throw new Error('Forbidden value (' + this.hostId + ') on element of PartyGuestInformations.hostId.');
            }
            this.name = param1.readUTF();
            this.guestLook = new EntityLook();
            this.guestLook.deserialize(param1);
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = new PartyCompanionBaseInformations();
                _loc5_.deserialize(param1);
                this.companions.push(_loc5_);
                _loc4_++;
            }
        };
        PartyGuestInformations.ID = 374;
        return PartyGuestInformations;
    })();
    Protocol.PartyGuestInformations = PartyGuestInformations;
    var PartyInvitationMemberInformations = (function (_super) {
        __extends(PartyInvitationMemberInformations, _super);
        function PartyInvitationMemberInformations() {
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.companions = [];
            _super.call(this);
        }
        PartyInvitationMemberInformations.prototype.getTypeId = function () {
            return PartyInvitationMemberInformations.ID;
        };
        PartyInvitationMemberInformations.prototype.reset = function () {
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.companions = [];
        };
        PartyInvitationMemberInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyInvitationMemberInformations(param1);
        };
        PartyInvitationMemberInformations.prototype.serializeAs_PartyInvitationMemberInformations = function (param1) {
            _super.prototype.serializeAs_CharacterBaseInformations.call(this, param1);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeShort(this.companions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.companions.length) {
                (this.companions[_loc2_]).serializeAs_PartyCompanionBaseInformations(param1);
                _loc2_++;
            }
        };
        PartyInvitationMemberInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyInvitationMemberInformations(param1);
        };
        PartyInvitationMemberInformations.prototype.deserializeAs_PartyInvitationMemberInformations = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PartyInvitationMemberInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PartyInvitationMemberInformations.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PartyInvitationMemberInformations.subAreaId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PartyCompanionBaseInformations();
                _loc4_.deserialize(param1);
                this.companions.push(_loc4_);
                _loc3_++;
            }
        };
        PartyInvitationMemberInformations.ID = 376;
        return PartyInvitationMemberInformations;
    })(CharacterBaseInformations);
    Protocol.PartyInvitationMemberInformations = PartyInvitationMemberInformations;
    var PartyMemberArenaInformations = (function (_super) {
        __extends(PartyMemberArenaInformations, _super);
        function PartyMemberArenaInformations() {
            this.rank = 0;
            _super.call(this);
        }
        PartyMemberArenaInformations.prototype.getTypeId = function () {
            return PartyMemberArenaInformations.ID;
        };
        PartyMemberArenaInformations.prototype.reset = function () {
            this.rank = 0;
        };
        PartyMemberArenaInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberArenaInformations(param1);
        };
        PartyMemberArenaInformations.prototype.serializeAs_PartyMemberArenaInformations = function (param1) {
            _super.prototype.serializeAs_PartyMemberInformations.call(this, param1);
            if (this.rank < 0 || this.rank > 2300) {
                throw new Error('Forbidden value (' + this.rank + ') on element rank.');
            }
            param1.writeVarShort(this.rank);
        };
        PartyMemberArenaInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberArenaInformations(param1);
        };
        PartyMemberArenaInformations.prototype.deserializeAs_PartyMemberArenaInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.rank = param1.readVarUhShort();
            if (this.rank < 0 || this.rank > 2300) {
                throw new Error('Forbidden value (' + this.rank + ') on element of PartyMemberArenaInformations.rank.');
            }
        };
        PartyMemberArenaInformations.ID = 391;
        return PartyMemberArenaInformations;
    })(PartyMemberInformations);
    Protocol.PartyMemberArenaInformations = PartyMemberArenaInformations;
    var PartyMemberGeoPosition = (function () {
        function PartyMemberGeoPosition() {
            this.memberId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        }
        PartyMemberGeoPosition.prototype.getTypeId = function () {
            return PartyMemberGeoPosition.ID;
        };
        PartyMemberGeoPosition.prototype.reset = function () {
            this.memberId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        };
        PartyMemberGeoPosition.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberGeoPosition(param1);
        };
        PartyMemberGeoPosition.prototype.serializeAs_PartyMemberGeoPosition = function (param1) {
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element memberId.');
            }
            param1.writeInt(this.memberId);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        PartyMemberGeoPosition.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberGeoPosition(param1);
        };
        PartyMemberGeoPosition.prototype.deserializeAs_PartyMemberGeoPosition = function (param1) {
            this.memberId = param1.readInt();
            if (this.memberId < 0) {
                throw new Error('Forbidden value (' + this.memberId + ') on element of PartyMemberGeoPosition.memberId.');
            }
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PartyMemberGeoPosition.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PartyMemberGeoPosition.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PartyMemberGeoPosition.subAreaId.');
            }
        };
        PartyMemberGeoPosition.ID = 378;
        return PartyMemberGeoPosition;
    })();
    Protocol.PartyMemberGeoPosition = PartyMemberGeoPosition;
    var PartyMemberInformations = (function (_super) {
        __extends(PartyMemberInformations, _super);
        function PartyMemberInformations() {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
            this.initiative = 0;
            this.alignmentSide = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.status = new PlayerStatus();
            this.companions = [];
            _super.call(this);
        }
        PartyMemberInformations.prototype.getTypeId = function () {
            return PartyMemberInformations.ID;
        };
        PartyMemberInformations.prototype.reset = function () {
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
            this.initiative = 0;
            this.alignmentSide = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.status = new PlayerStatus();
            this.companions = [];
        };
        PartyMemberInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyMemberInformations(param1);
        };
        PartyMemberInformations.prototype.serializeAs_PartyMemberInformations = function (param1) {
            _super.prototype.serializeAs_CharacterBaseInformations.call(this, param1);
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element prospecting.');
            }
            param1.writeVarShort(this.prospecting);
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element regenRate.');
            }
            param1.writeByte(this.regenRate);
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element initiative.');
            }
            param1.writeVarShort(this.initiative);
            param1.writeByte(this.alignmentSide);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
            param1.writeShort(this.companions.length);
            var _loc2_ = 0;
            while (_loc2_ < this.companions.length) {
                (this.companions[_loc2_]).serializeAs_PartyCompanionMemberInformations(param1);
                _loc2_++;
            }
        };
        PartyMemberInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyMemberInformations(param1);
        };
        PartyMemberInformations.prototype.deserializeAs_PartyMemberInformations = function (param1) {
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of PartyMemberInformations.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of PartyMemberInformations.maxLifePoints.');
            }
            this.prospecting = param1.readVarUhShort();
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element of PartyMemberInformations.prospecting.');
            }
            this.regenRate = param1.readUnsignedByte();
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element of PartyMemberInformations.regenRate.');
            }
            this.initiative = param1.readVarUhShort();
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element of PartyMemberInformations.initiative.');
            }
            this.alignmentSide = param1.readByte();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PartyMemberInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PartyMemberInformations.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PartyMemberInformations.subAreaId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = new PartyCompanionMemberInformations();
                _loc5_.deserialize(param1);
                this.companions.push(_loc5_);
                _loc4_++;
            }
        };
        PartyMemberInformations.ID = 90;
        return PartyMemberInformations;
    })(CharacterBaseInformations);
    Protocol.PartyMemberInformations = PartyMemberInformations;
    var PartyCompanionBaseInformations = (function () {
        function PartyCompanionBaseInformations() {
            this.indexId = 0;
            this.companionGenericId = 0;
            this.entityLook = new EntityLook();
        }
        PartyCompanionBaseInformations.prototype.getTypeId = function () {
            return PartyCompanionBaseInformations.ID;
        };
        PartyCompanionBaseInformations.prototype.reset = function () {
            this.indexId = 0;
            this.companionGenericId = 0;
            this.entityLook = new EntityLook();
        };
        PartyCompanionBaseInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyCompanionBaseInformations(param1);
        };
        PartyCompanionBaseInformations.prototype.serializeAs_PartyCompanionBaseInformations = function (param1) {
            if (this.indexId < 0) {
                throw new Error('Forbidden value (' + this.indexId + ') on element indexId.');
            }
            param1.writeByte(this.indexId);
            if (this.companionGenericId < 0) {
                throw new Error('Forbidden value (' + this.companionGenericId + ') on element companionGenericId.');
            }
            param1.writeByte(this.companionGenericId);
            this.entityLook.serializeAs_EntityLook(param1);
        };
        PartyCompanionBaseInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCompanionBaseInformations(param1);
        };
        PartyCompanionBaseInformations.prototype.deserializeAs_PartyCompanionBaseInformations = function (param1) {
            this.indexId = param1.readByte();
            if (this.indexId < 0) {
                throw new Error('Forbidden value (' + this.indexId + ') on element of PartyCompanionBaseInformations.indexId.');
            }
            this.companionGenericId = param1.readByte();
            if (this.companionGenericId < 0) {
                throw new Error('Forbidden value (' + this.companionGenericId + ') on element of PartyCompanionBaseInformations.companionGenericId.');
            }
            this.entityLook = new EntityLook();
            this.entityLook.deserialize(param1);
        };
        PartyCompanionBaseInformations.ID = 453;
        return PartyCompanionBaseInformations;
    })();
    Protocol.PartyCompanionBaseInformations = PartyCompanionBaseInformations;
    var PartyCompanionMemberInformations = (function (_super) {
        __extends(PartyCompanionMemberInformations, _super);
        function PartyCompanionMemberInformations() {
            this.initiative = 0;
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
            _super.call(this);
        }
        PartyCompanionMemberInformations.prototype.getTypeId = function () {
            return PartyCompanionMemberInformations.ID;
        };
        PartyCompanionMemberInformations.prototype.reset = function () {
            this.initiative = 0;
            this.lifePoints = 0;
            this.maxLifePoints = 0;
            this.prospecting = 0;
            this.regenRate = 0;
        };
        PartyCompanionMemberInformations.prototype.serialize = function (param1) {
            this.serializeAs_PartyCompanionMemberInformations(param1);
        };
        PartyCompanionMemberInformations.prototype.serializeAs_PartyCompanionMemberInformations = function (param1) {
            _super.prototype.serializeAs_PartyCompanionBaseInformations.call(this, param1);
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element initiative.');
            }
            param1.writeVarShort(this.initiative);
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element lifePoints.');
            }
            param1.writeVarInt(this.lifePoints);
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element maxLifePoints.');
            }
            param1.writeVarInt(this.maxLifePoints);
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element prospecting.');
            }
            param1.writeVarShort(this.prospecting);
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element regenRate.');
            }
            param1.writeByte(this.regenRate);
        };
        PartyCompanionMemberInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyCompanionMemberInformations(param1);
        };
        PartyCompanionMemberInformations.prototype.deserializeAs_PartyCompanionMemberInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.initiative = param1.readVarUhShort();
            if (this.initiative < 0) {
                throw new Error('Forbidden value (' + this.initiative + ') on element of PartyCompanionMemberInformations.initiative.');
            }
            this.lifePoints = param1.readVarUhInt();
            if (this.lifePoints < 0) {
                throw new Error('Forbidden value (' + this.lifePoints + ') on element of PartyCompanionMemberInformations.lifePoints.');
            }
            this.maxLifePoints = param1.readVarUhInt();
            if (this.maxLifePoints < 0) {
                throw new Error('Forbidden value (' + this.maxLifePoints + ') on element of PartyCompanionMemberInformations.maxLifePoints.');
            }
            this.prospecting = param1.readVarUhShort();
            if (this.prospecting < 0) {
                throw new Error('Forbidden value (' + this.prospecting + ') on element of PartyCompanionMemberInformations.prospecting.');
            }
            this.regenRate = param1.readUnsignedByte();
            if (this.regenRate < 0 || this.regenRate > 255) {
                throw new Error('Forbidden value (' + this.regenRate + ') on element of PartyCompanionMemberInformations.regenRate.');
            }
        };
        PartyCompanionMemberInformations.ID = 452;
        return PartyCompanionMemberInformations;
    })(PartyCompanionBaseInformations);
    Protocol.PartyCompanionMemberInformations = PartyCompanionMemberInformations;
    var GameRolePlayNpcQuestFlag = (function () {
        function GameRolePlayNpcQuestFlag() {
            this.questsToValidId = [];
            this.questsToStartId = [];
        }
        GameRolePlayNpcQuestFlag.prototype.getTypeId = function () {
            return GameRolePlayNpcQuestFlag.ID;
        };
        GameRolePlayNpcQuestFlag.prototype.reset = function () {
            this.questsToValidId = [];
            this.questsToStartId = [];
        };
        GameRolePlayNpcQuestFlag.prototype.serialize = function (param1) {
            this.serializeAs_GameRolePlayNpcQuestFlag(param1);
        };
        GameRolePlayNpcQuestFlag.prototype.serializeAs_GameRolePlayNpcQuestFlag = function (param1) {
            param1.writeShort(this.questsToValidId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.questsToValidId.length) {
                if (this.questsToValidId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.questsToValidId[_loc2_] + ') on element 1 (starting at 1) of questsToValidId.');
                }
                param1.writeVarShort(this.questsToValidId[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.questsToStartId.length);
            var _loc3_ = 0;
            while (_loc3_ < this.questsToStartId.length) {
                if (this.questsToStartId[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.questsToStartId[_loc3_] + ') on element 2 (starting at 1) of questsToStartId.');
                }
                param1.writeVarShort(this.questsToStartId[_loc3_]);
                _loc3_++;
            }
        };
        GameRolePlayNpcQuestFlag.prototype.deserialize = function (param1) {
            this.deserializeAs_GameRolePlayNpcQuestFlag(param1);
        };
        GameRolePlayNpcQuestFlag.prototype.deserializeAs_GameRolePlayNpcQuestFlag = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhShort();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of questsToValidId.');
                }
                this.questsToValidId.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhShort();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of questsToStartId.');
                }
                this.questsToStartId.push(_loc7_);
                _loc5_++;
            }
        };
        GameRolePlayNpcQuestFlag.ID = 384;
        return GameRolePlayNpcQuestFlag;
    })();
    Protocol.GameRolePlayNpcQuestFlag = GameRolePlayNpcQuestFlag;
    var QuestActiveDetailedInformations = (function (_super) {
        __extends(QuestActiveDetailedInformations, _super);
        function QuestActiveDetailedInformations() {
            this.stepId = 0;
            this.objectives = [];
            _super.call(this);
        }
        QuestActiveDetailedInformations.prototype.getTypeId = function () {
            return QuestActiveDetailedInformations.ID;
        };
        QuestActiveDetailedInformations.prototype.reset = function () {
            this.stepId = 0;
            this.objectives = [];
        };
        QuestActiveDetailedInformations.prototype.serialize = function (param1) {
            this.serializeAs_QuestActiveDetailedInformations(param1);
        };
        QuestActiveDetailedInformations.prototype.serializeAs_QuestActiveDetailedInformations = function (param1) {
            _super.prototype.serializeAs_QuestActiveInformations.call(this, param1);
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element stepId.');
            }
            param1.writeVarShort(this.stepId);
            param1.writeShort(this.objectives.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objectives.length) {
                param1.writeShort((this.objectives[_loc2_]).getTypeId());
                (this.objectives[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        QuestActiveDetailedInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestActiveDetailedInformations(param1);
        };
        QuestActiveDetailedInformations.prototype.deserializeAs_QuestActiveDetailedInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.stepId = param1.readVarUhShort();
            if (this.stepId < 0) {
                throw new Error('Forbidden value (' + this.stepId + ') on element of QuestActiveDetailedInformations.stepId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(QuestObjectiveInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.objectives.push(_loc5_);
                _loc3_++;
            }
        };
        QuestActiveDetailedInformations.ID = 382;
        return QuestActiveDetailedInformations;
    })(QuestActiveInformations);
    Protocol.QuestActiveDetailedInformations = QuestActiveDetailedInformations;
    var QuestActiveInformations = (function () {
        function QuestActiveInformations() {
            this.questId = 0;
        }
        QuestActiveInformations.prototype.getTypeId = function () {
            return QuestActiveInformations.ID;
        };
        QuestActiveInformations.prototype.reset = function () {
            this.questId = 0;
        };
        QuestActiveInformations.prototype.serialize = function (param1) {
            this.serializeAs_QuestActiveInformations(param1);
        };
        QuestActiveInformations.prototype.serializeAs_QuestActiveInformations = function (param1) {
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element questId.');
            }
            param1.writeVarShort(this.questId);
        };
        QuestActiveInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestActiveInformations(param1);
        };
        QuestActiveInformations.prototype.deserializeAs_QuestActiveInformations = function (param1) {
            this.questId = param1.readVarUhShort();
            if (this.questId < 0) {
                throw new Error('Forbidden value (' + this.questId + ') on element of QuestActiveInformations.questId.');
            }
        };
        QuestActiveInformations.ID = 381;
        return QuestActiveInformations;
    })();
    Protocol.QuestActiveInformations = QuestActiveInformations;
    var QuestObjectiveInformations = (function () {
        function QuestObjectiveInformations() {
            this.objectiveId = 0;
            this.objectiveStatus = false;
            this.dialogParams = [];
        }
        QuestObjectiveInformations.prototype.getTypeId = function () {
            return QuestObjectiveInformations.ID;
        };
        QuestObjectiveInformations.prototype.reset = function () {
            this.objectiveId = 0;
            this.objectiveStatus = false;
            this.dialogParams = [];
        };
        QuestObjectiveInformations.prototype.serialize = function (param1) {
            this.serializeAs_QuestObjectiveInformations(param1);
        };
        QuestObjectiveInformations.prototype.serializeAs_QuestObjectiveInformations = function (param1) {
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element objectiveId.');
            }
            param1.writeVarShort(this.objectiveId);
            param1.writeBoolean(this.objectiveStatus);
            param1.writeShort(this.dialogParams.length);
            var _loc2_ = 0;
            while (_loc2_ < this.dialogParams.length) {
                param1.writeUTF(this.dialogParams[_loc2_]);
                _loc2_++;
            }
        };
        QuestObjectiveInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestObjectiveInformations(param1);
        };
        QuestObjectiveInformations.prototype.deserializeAs_QuestObjectiveInformations = function (param1) {
            var _loc4_ = null;
            this.objectiveId = param1.readVarUhShort();
            if (this.objectiveId < 0) {
                throw new Error('Forbidden value (' + this.objectiveId + ') on element of QuestObjectiveInformations.objectiveId.');
            }
            this.objectiveStatus = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUTF();
                this.dialogParams.push(_loc4_);
                _loc3_++;
            }
        };
        QuestObjectiveInformations.ID = 385;
        return QuestObjectiveInformations;
    })();
    Protocol.QuestObjectiveInformations = QuestObjectiveInformations;
    var QuestObjectiveInformationsWithCompletion = (function (_super) {
        __extends(QuestObjectiveInformationsWithCompletion, _super);
        function QuestObjectiveInformationsWithCompletion() {
            this.curCompletion = 0;
            this.maxCompletion = 0;
            _super.call(this);
        }
        QuestObjectiveInformationsWithCompletion.prototype.getTypeId = function () {
            return QuestObjectiveInformationsWithCompletion.ID;
        };
        QuestObjectiveInformationsWithCompletion.prototype.reset = function () {
            this.curCompletion = 0;
            this.maxCompletion = 0;
        };
        QuestObjectiveInformationsWithCompletion.prototype.serialize = function (param1) {
            this.serializeAs_QuestObjectiveInformationsWithCompletion(param1);
        };
        QuestObjectiveInformationsWithCompletion.prototype.serializeAs_QuestObjectiveInformationsWithCompletion = function (param1) {
            _super.prototype.serializeAs_QuestObjectiveInformations.call(this, param1);
            if (this.curCompletion < 0) {
                throw new Error('Forbidden value (' + this.curCompletion + ') on element curCompletion.');
            }
            param1.writeVarShort(this.curCompletion);
            if (this.maxCompletion < 0) {
                throw new Error('Forbidden value (' + this.maxCompletion + ') on element maxCompletion.');
            }
            param1.writeVarShort(this.maxCompletion);
        };
        QuestObjectiveInformationsWithCompletion.prototype.deserialize = function (param1) {
            this.deserializeAs_QuestObjectiveInformationsWithCompletion(param1);
        };
        QuestObjectiveInformationsWithCompletion.prototype.deserializeAs_QuestObjectiveInformationsWithCompletion = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.curCompletion = param1.readVarUhShort();
            if (this.curCompletion < 0) {
                throw new Error('Forbidden value (' + this.curCompletion + ') on element of QuestObjectiveInformationsWithCompletion.curCompletion.');
            }
            this.maxCompletion = param1.readVarUhShort();
            if (this.maxCompletion < 0) {
                throw new Error('Forbidden value (' + this.maxCompletion + ') on element of QuestObjectiveInformationsWithCompletion.maxCompletion.');
            }
        };
        QuestObjectiveInformationsWithCompletion.ID = 386;
        return QuestObjectiveInformationsWithCompletion;
    })(QuestObjectiveInformations);
    Protocol.QuestObjectiveInformationsWithCompletion = QuestObjectiveInformationsWithCompletion;
    var PortalInformation = (function () {
        function PortalInformation() {
            this.portalId = 0;
            this.areaId = 0;
        }
        PortalInformation.prototype.getTypeId = function () {
            return PortalInformation.ID;
        };
        PortalInformation.prototype.reset = function () {
            this.portalId = 0;
            this.areaId = 0;
        };
        PortalInformation.prototype.serialize = function (param1) {
            this.serializeAs_PortalInformation(param1);
        };
        PortalInformation.prototype.serializeAs_PortalInformation = function (param1) {
            if (this.portalId < 0) {
                throw new Error('Forbidden value (' + this.portalId + ') on element portalId.');
            }
            param1.writeVarShort(this.portalId);
            param1.writeShort(this.areaId);
        };
        PortalInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_PortalInformation(param1);
        };
        PortalInformation.prototype.deserializeAs_PortalInformation = function (param1) {
            this.portalId = param1.readVarUhShort();
            if (this.portalId < 0) {
                throw new Error('Forbidden value (' + this.portalId + ') on element of PortalInformation.portalId.');
            }
            this.areaId = param1.readShort();
        };
        PortalInformation.ID = 466;
        return PortalInformation;
    })();
    Protocol.PortalInformation = PortalInformation;
    var TreasureHuntFlag = (function () {
        function TreasureHuntFlag() {
            this.mapId = 0;
            this.state = 0;
        }
        TreasureHuntFlag.prototype.getTypeId = function () {
            return TreasureHuntFlag.ID;
        };
        TreasureHuntFlag.prototype.reset = function () {
            this.mapId = 0;
            this.state = 0;
        };
        TreasureHuntFlag.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntFlag(param1);
        };
        TreasureHuntFlag.prototype.serializeAs_TreasureHuntFlag = function (param1) {
            param1.writeInt(this.mapId);
            param1.writeByte(this.state);
        };
        TreasureHuntFlag.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntFlag(param1);
        };
        TreasureHuntFlag.prototype.deserializeAs_TreasureHuntFlag = function (param1) {
            this.mapId = param1.readInt();
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of TreasureHuntFlag.state.');
            }
        };
        TreasureHuntFlag.ID = 473;
        return TreasureHuntFlag;
    })();
    Protocol.TreasureHuntFlag = TreasureHuntFlag;
    var TreasureHuntStep = (function () {
        function TreasureHuntStep() {
        }
        TreasureHuntStep.prototype.getTypeId = function () {
            return TreasureHuntStep.ID;
        };
        TreasureHuntStep.prototype.reset = function () {
        };
        TreasureHuntStep.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStep(param1);
        };
        TreasureHuntStep.prototype.serializeAs_TreasureHuntStep = function (param1) {
        };
        TreasureHuntStep.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStep(param1);
        };
        TreasureHuntStep.prototype.deserializeAs_TreasureHuntStep = function (param1) {
        };
        TreasureHuntStep.ID = 463;
        return TreasureHuntStep;
    })();
    Protocol.TreasureHuntStep = TreasureHuntStep;
    var TreasureHuntStepDig = (function (_super) {
        __extends(TreasureHuntStepDig, _super);
        function TreasureHuntStepDig() {
            _super.call(this);
        }
        TreasureHuntStepDig.prototype.getTypeId = function () {
            return TreasureHuntStepDig.ID;
        };
        TreasureHuntStepDig.prototype.reset = function () {
        };
        TreasureHuntStepDig.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStepDig(param1);
        };
        TreasureHuntStepDig.prototype.serializeAs_TreasureHuntStepDig = function (param1) {
        };
        TreasureHuntStepDig.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStepDig(param1);
        };
        TreasureHuntStepDig.prototype.deserializeAs_TreasureHuntStepDig = function (param1) {
        };
        TreasureHuntStepDig.ID = 465;
        return TreasureHuntStepDig;
    })(TreasureHuntStep);
    Protocol.TreasureHuntStepDig = TreasureHuntStepDig;
    var TreasureHuntStepFight = (function (_super) {
        __extends(TreasureHuntStepFight, _super);
        function TreasureHuntStepFight() {
            _super.call(this);
        }
        TreasureHuntStepFight.prototype.getTypeId = function () {
            return TreasureHuntStepFight.ID;
        };
        TreasureHuntStepFight.prototype.reset = function () {
        };
        TreasureHuntStepFight.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStepFight(param1);
        };
        TreasureHuntStepFight.prototype.serializeAs_TreasureHuntStepFight = function (param1) {
        };
        TreasureHuntStepFight.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStepFight(param1);
        };
        TreasureHuntStepFight.prototype.deserializeAs_TreasureHuntStepFight = function (param1) {
        };
        TreasureHuntStepFight.ID = 462;
        return TreasureHuntStepFight;
    })(TreasureHuntStep);
    Protocol.TreasureHuntStepFight = TreasureHuntStepFight;
    var TreasureHuntStepFollowDirection = (function (_super) {
        __extends(TreasureHuntStepFollowDirection, _super);
        function TreasureHuntStepFollowDirection() {
            this.direction = 1;
            this.mapCount = 0;
            _super.call(this);
        }
        TreasureHuntStepFollowDirection.prototype.getTypeId = function () {
            return TreasureHuntStepFollowDirection.ID;
        };
        TreasureHuntStepFollowDirection.prototype.reset = function () {
            this.direction = 1;
            this.mapCount = 0;
        };
        TreasureHuntStepFollowDirection.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStepFollowDirection(param1);
        };
        TreasureHuntStepFollowDirection.prototype.serializeAs_TreasureHuntStepFollowDirection = function (param1) {
            _super.prototype.serializeAs_TreasureHuntStep.call(this, param1);
            param1.writeByte(this.direction);
            if (this.mapCount < 0) {
                throw new Error('Forbidden value (' + this.mapCount + ') on element mapCount.');
            }
            param1.writeVarShort(this.mapCount);
        };
        TreasureHuntStepFollowDirection.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStepFollowDirection(param1);
        };
        TreasureHuntStepFollowDirection.prototype.deserializeAs_TreasureHuntStepFollowDirection = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of TreasureHuntStepFollowDirection.direction.');
            }
            this.mapCount = param1.readVarUhShort();
            if (this.mapCount < 0) {
                throw new Error('Forbidden value (' + this.mapCount + ') on element of TreasureHuntStepFollowDirection.mapCount.');
            }
        };
        TreasureHuntStepFollowDirection.ID = 468;
        return TreasureHuntStepFollowDirection;
    })(TreasureHuntStep);
    Protocol.TreasureHuntStepFollowDirection = TreasureHuntStepFollowDirection;
    var TreasureHuntStepFollowDirectionToHint = (function (_super) {
        __extends(TreasureHuntStepFollowDirectionToHint, _super);
        function TreasureHuntStepFollowDirectionToHint() {
            this.direction = 1;
            this.npcId = 0;
            _super.call(this);
        }
        TreasureHuntStepFollowDirectionToHint.prototype.getTypeId = function () {
            return TreasureHuntStepFollowDirectionToHint.ID;
        };
        TreasureHuntStepFollowDirectionToHint.prototype.reset = function () {
            this.direction = 1;
            this.npcId = 0;
        };
        TreasureHuntStepFollowDirectionToHint.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStepFollowDirectionToHint(param1);
        };
        TreasureHuntStepFollowDirectionToHint.prototype.serializeAs_TreasureHuntStepFollowDirectionToHint = function (param1) {
            _super.prototype.serializeAs_TreasureHuntStep.call(this, param1);
            param1.writeByte(this.direction);
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element npcId.');
            }
            param1.writeVarShort(this.npcId);
        };
        TreasureHuntStepFollowDirectionToHint.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStepFollowDirectionToHint(param1);
        };
        TreasureHuntStepFollowDirectionToHint.prototype.deserializeAs_TreasureHuntStepFollowDirectionToHint = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of TreasureHuntStepFollowDirectionToHint.direction.');
            }
            this.npcId = param1.readVarUhShort();
            if (this.npcId < 0) {
                throw new Error('Forbidden value (' + this.npcId + ') on element of TreasureHuntStepFollowDirectionToHint.npcId.');
            }
        };
        TreasureHuntStepFollowDirectionToHint.ID = 472;
        return TreasureHuntStepFollowDirectionToHint;
    })(TreasureHuntStep);
    Protocol.TreasureHuntStepFollowDirectionToHint = TreasureHuntStepFollowDirectionToHint;
    var TreasureHuntStepFollowDirectionToPOI = (function (_super) {
        __extends(TreasureHuntStepFollowDirectionToPOI, _super);
        function TreasureHuntStepFollowDirectionToPOI() {
            this.direction = 1;
            this.poiLabelId = 0;
            _super.call(this);
        }
        TreasureHuntStepFollowDirectionToPOI.prototype.getTypeId = function () {
            return TreasureHuntStepFollowDirectionToPOI.ID;
        };
        TreasureHuntStepFollowDirectionToPOI.prototype.reset = function () {
            this.direction = 1;
            this.poiLabelId = 0;
        };
        TreasureHuntStepFollowDirectionToPOI.prototype.serialize = function (param1) {
            this.serializeAs_TreasureHuntStepFollowDirectionToPOI(param1);
        };
        TreasureHuntStepFollowDirectionToPOI.prototype.serializeAs_TreasureHuntStepFollowDirectionToPOI = function (param1) {
            _super.prototype.serializeAs_TreasureHuntStep.call(this, param1);
            param1.writeByte(this.direction);
            if (this.poiLabelId < 0) {
                throw new Error('Forbidden value (' + this.poiLabelId + ') on element poiLabelId.');
            }
            param1.writeVarShort(this.poiLabelId);
        };
        TreasureHuntStepFollowDirectionToPOI.prototype.deserialize = function (param1) {
            this.deserializeAs_TreasureHuntStepFollowDirectionToPOI(param1);
        };
        TreasureHuntStepFollowDirectionToPOI.prototype.deserializeAs_TreasureHuntStepFollowDirectionToPOI = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.direction = param1.readByte();
            if (this.direction < 0) {
                throw new Error('Forbidden value (' + this.direction + ') on element of TreasureHuntStepFollowDirectionToPOI.direction.');
            }
            this.poiLabelId = param1.readVarUhShort();
            if (this.poiLabelId < 0) {
                throw new Error('Forbidden value (' + this.poiLabelId + ') on element of TreasureHuntStepFollowDirectionToPOI.poiLabelId.');
            }
        };
        TreasureHuntStepFollowDirectionToPOI.ID = 461;
        return TreasureHuntStepFollowDirectionToPOI;
    })(TreasureHuntStep);
    Protocol.TreasureHuntStepFollowDirectionToPOI = TreasureHuntStepFollowDirectionToPOI;
    var BidExchangerObjectInfo = (function () {
        function BidExchangerObjectInfo() {
            this.objectUID = 0;
            this.effects = [];
            this.prices = [];
        }
        BidExchangerObjectInfo.prototype.getTypeId = function () {
            return BidExchangerObjectInfo.ID;
        };
        BidExchangerObjectInfo.prototype.reset = function () {
            this.objectUID = 0;
            this.effects = [];
            this.prices = [];
        };
        BidExchangerObjectInfo.prototype.serialize = function (param1) {
            this.serializeAs_BidExchangerObjectInfo(param1);
        };
        BidExchangerObjectInfo.prototype.serializeAs_BidExchangerObjectInfo = function (param1) {
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.prices.length);
            var _loc3_ = 0;
            while (_loc3_ < this.prices.length) {
                if (this.prices[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.prices[_loc3_] + ') on element 3 (starting at 1) of prices.');
                }
                param1.writeInt(this.prices[_loc3_]);
                _loc3_++;
            }
        };
        BidExchangerObjectInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_BidExchangerObjectInfo(param1);
        };
        BidExchangerObjectInfo.prototype.deserializeAs_BidExchangerObjectInfo = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of BidExchangerObjectInfo.objectUID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc6_);
                _loc7_.deserialize(param1);
                this.effects.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readInt();
                if (_loc8_ < 0) {
                    throw new Error('Forbidden value (' + _loc8_ + ') on elements of prices.');
                }
                this.prices.push(_loc8_);
                _loc5_++;
            }
        };
        BidExchangerObjectInfo.ID = 122;
        return BidExchangerObjectInfo;
    })();
    Protocol.BidExchangerObjectInfo = BidExchangerObjectInfo;
    var GoldItem = (function (_super) {
        __extends(GoldItem, _super);
        function GoldItem() {
            this.sum = 0;
            _super.call(this);
        }
        GoldItem.prototype.getTypeId = function () {
            return GoldItem.ID;
        };
        GoldItem.prototype.reset = function () {
            this.sum = 0;
        };
        GoldItem.prototype.serialize = function (param1) {
            this.serializeAs_GoldItem(param1);
        };
        GoldItem.prototype.serializeAs_GoldItem = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.sum < 0) {
                throw new Error('Forbidden value (' + this.sum + ') on element sum.');
            }
            param1.writeVarInt(this.sum);
        };
        GoldItem.prototype.deserialize = function (param1) {
            this.deserializeAs_GoldItem(param1);
        };
        GoldItem.prototype.deserializeAs_GoldItem = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.sum = param1.readVarUhInt();
            if (this.sum < 0) {
                throw new Error('Forbidden value (' + this.sum + ') on element of GoldItem.sum.');
            }
        };
        GoldItem.ID = 123;
        return GoldItem;
    })(Item);
    Protocol.GoldItem = GoldItem;
    var Item = (function () {
        function Item() {
        }
        Item.prototype.getTypeId = function () {
            return Item.ID;
        };
        Item.prototype.reset = function () {
        };
        Item.prototype.serialize = function (param1) {
            this.serializeAs_Item(param1);
        };
        Item.prototype.serializeAs_Item = function (param1) {
        };
        Item.prototype.deserialize = function (param1) {
            this.deserializeAs_Item(param1);
        };
        Item.prototype.deserializeAs_Item = function (param1) {
        };
        Item.ID = 7;
        return Item;
    })();
    Protocol.Item = Item;
    var ObjectItem = (function (_super) {
        __extends(ObjectItem, _super);
        function ObjectItem() {
            this.position = 63;
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectItem.prototype.getTypeId = function () {
            return ObjectItem.ID;
        };
        ObjectItem.prototype.reset = function () {
            this.position = 63;
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectItem.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItem(param1);
        };
        ObjectItem.prototype.serializeAs_ObjectItem = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            param1.writeByte(this.position);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectItem.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItem(param1);
        };
        ObjectItem.prototype.deserializeAs_ObjectItem = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.position = param1.readUnsignedByte();
            if (this.position < 0 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of ObjectItem.position.');
            }
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItem.objectGID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc4_);
                _loc5_.deserialize(param1);
                this.effects.push(_loc5_);
                _loc3_++;
            }
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectItem.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItem.quantity.');
            }
        };
        ObjectItem.ID = 37;
        return ObjectItem;
    })(Item);
    Protocol.ObjectItem = ObjectItem;
    var ObjectItemGenericQuantity = (function (_super) {
        __extends(ObjectItemGenericQuantity, _super);
        function ObjectItemGenericQuantity() {
            this.objectGID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectItemGenericQuantity.prototype.getTypeId = function () {
            return ObjectItemGenericQuantity.ID;
        };
        ObjectItemGenericQuantity.prototype.reset = function () {
            this.objectGID = 0;
            this.quantity = 0;
        };
        ObjectItemGenericQuantity.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemGenericQuantity(param1);
        };
        ObjectItemGenericQuantity.prototype.serializeAs_ObjectItemGenericQuantity = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectItemGenericQuantity.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemGenericQuantity(param1);
        };
        ObjectItemGenericQuantity.prototype.deserializeAs_ObjectItemGenericQuantity = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemGenericQuantity.objectGID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemGenericQuantity.quantity.');
            }
        };
        ObjectItemGenericQuantity.ID = 483;
        return ObjectItemGenericQuantity;
    })(Item);
    Protocol.ObjectItemGenericQuantity = ObjectItemGenericQuantity;
    var ObjectItemInformationWithQuantity = (function (_super) {
        __extends(ObjectItemInformationWithQuantity, _super);
        function ObjectItemInformationWithQuantity() {
            this.quantity = 0;
            _super.call(this);
        }
        ObjectItemInformationWithQuantity.prototype.getTypeId = function () {
            return ObjectItemInformationWithQuantity.ID;
        };
        ObjectItemInformationWithQuantity.prototype.reset = function () {
            this.quantity = 0;
        };
        ObjectItemInformationWithQuantity.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemInformationWithQuantity(param1);
        };
        ObjectItemInformationWithQuantity.prototype.serializeAs_ObjectItemInformationWithQuantity = function (param1) {
            _super.prototype.serializeAs_ObjectItemMinimalInformation.call(this, param1);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectItemInformationWithQuantity.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemInformationWithQuantity(param1);
        };
        ObjectItemInformationWithQuantity.prototype.deserializeAs_ObjectItemInformationWithQuantity = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemInformationWithQuantity.quantity.');
            }
        };
        ObjectItemInformationWithQuantity.ID = 387;
        return ObjectItemInformationWithQuantity;
    })(ObjectItemMinimalInformation);
    Protocol.ObjectItemInformationWithQuantity = ObjectItemInformationWithQuantity;
    var ObjectItemMinimalInformation = (function (_super) {
        __extends(ObjectItemMinimalInformation, _super);
        function ObjectItemMinimalInformation() {
            this.objectGID = 0;
            this.effects = [];
            _super.call(this);
        }
        ObjectItemMinimalInformation.prototype.getTypeId = function () {
            return ObjectItemMinimalInformation.ID;
        };
        ObjectItemMinimalInformation.prototype.reset = function () {
            this.objectGID = 0;
            this.effects = [];
        };
        ObjectItemMinimalInformation.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemMinimalInformation(param1);
        };
        ObjectItemMinimalInformation.prototype.serializeAs_ObjectItemMinimalInformation = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        ObjectItemMinimalInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemMinimalInformation(param1);
        };
        ObjectItemMinimalInformation.prototype.deserializeAs_ObjectItemMinimalInformation = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemMinimalInformation.objectGID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc4_);
                _loc5_.deserialize(param1);
                this.effects.push(_loc5_);
                _loc3_++;
            }
        };
        ObjectItemMinimalInformation.ID = 124;
        return ObjectItemMinimalInformation;
    })(Item);
    Protocol.ObjectItemMinimalInformation = ObjectItemMinimalInformation;
    var ObjectItemNotInContainer = (function (_super) {
        __extends(ObjectItemNotInContainer, _super);
        function ObjectItemNotInContainer() {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectItemNotInContainer.prototype.getTypeId = function () {
            return ObjectItemNotInContainer.ID;
        };
        ObjectItemNotInContainer.prototype.reset = function () {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectItemNotInContainer.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemNotInContainer(param1);
        };
        ObjectItemNotInContainer.prototype.serializeAs_ObjectItemNotInContainer = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectItemNotInContainer.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemNotInContainer(param1);
        };
        ObjectItemNotInContainer.prototype.deserializeAs_ObjectItemNotInContainer = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemNotInContainer.objectGID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc4_);
                _loc5_.deserialize(param1);
                this.effects.push(_loc5_);
                _loc3_++;
            }
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectItemNotInContainer.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemNotInContainer.quantity.');
            }
        };
        ObjectItemNotInContainer.ID = 134;
        return ObjectItemNotInContainer;
    })(Item);
    Protocol.ObjectItemNotInContainer = ObjectItemNotInContainer;
    var ObjectItemQuantity = (function (_super) {
        __extends(ObjectItemQuantity, _super);
        function ObjectItemQuantity() {
            this.objectUID = 0;
            this.quantity = 0;
            _super.call(this);
        }
        ObjectItemQuantity.prototype.getTypeId = function () {
            return ObjectItemQuantity.ID;
        };
        ObjectItemQuantity.prototype.reset = function () {
            this.objectUID = 0;
            this.quantity = 0;
        };
        ObjectItemQuantity.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemQuantity(param1);
        };
        ObjectItemQuantity.prototype.serializeAs_ObjectItemQuantity = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
        };
        ObjectItemQuantity.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemQuantity(param1);
        };
        ObjectItemQuantity.prototype.deserializeAs_ObjectItemQuantity = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectItemQuantity.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemQuantity.quantity.');
            }
        };
        ObjectItemQuantity.ID = 119;
        return ObjectItemQuantity;
    })(Item);
    Protocol.ObjectItemQuantity = ObjectItemQuantity;
    var ObjectItemToSell = (function (_super) {
        __extends(ObjectItemToSell, _super);
        function ObjectItemToSell() {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            this.objectPrice = 0;
            _super.call(this);
        }
        ObjectItemToSell.prototype.getTypeId = function () {
            return ObjectItemToSell.ID;
        };
        ObjectItemToSell.prototype.reset = function () {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            this.objectPrice = 0;
        };
        ObjectItemToSell.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemToSell(param1);
        };
        ObjectItemToSell.prototype.serializeAs_ObjectItemToSell = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element objectPrice.');
            }
            param1.writeVarInt(this.objectPrice);
        };
        ObjectItemToSell.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemToSell(param1);
        };
        ObjectItemToSell.prototype.deserializeAs_ObjectItemToSell = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemToSell.objectGID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc4_);
                _loc5_.deserialize(param1);
                this.effects.push(_loc5_);
                _loc3_++;
            }
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectItemToSell.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemToSell.quantity.');
            }
            this.objectPrice = param1.readVarUhInt();
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element of ObjectItemToSell.objectPrice.');
            }
        };
        ObjectItemToSell.ID = 120;
        return ObjectItemToSell;
    })(Item);
    Protocol.ObjectItemToSell = ObjectItemToSell;
    var ObjectItemToSellInBid = (function (_super) {
        __extends(ObjectItemToSellInBid, _super);
        function ObjectItemToSellInBid() {
            this.unsoldDelay = 0;
            _super.call(this);
        }
        ObjectItemToSellInBid.prototype.getTypeId = function () {
            return ObjectItemToSellInBid.ID;
        };
        ObjectItemToSellInBid.prototype.reset = function () {
            this.unsoldDelay = 0;
        };
        ObjectItemToSellInBid.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemToSellInBid(param1);
        };
        ObjectItemToSellInBid.prototype.serializeAs_ObjectItemToSellInBid = function (param1) {
            _super.prototype.serializeAs_ObjectItemToSell.call(this, param1);
            if (this.unsoldDelay < 0) {
                throw new Error('Forbidden value (' + this.unsoldDelay + ') on element unsoldDelay.');
            }
            param1.writeInt(this.unsoldDelay);
        };
        ObjectItemToSellInBid.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemToSellInBid(param1);
        };
        ObjectItemToSellInBid.prototype.deserializeAs_ObjectItemToSellInBid = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.unsoldDelay = param1.readInt();
            if (this.unsoldDelay < 0) {
                throw new Error('Forbidden value (' + this.unsoldDelay + ') on element of ObjectItemToSellInBid.unsoldDelay.');
            }
        };
        ObjectItemToSellInBid.ID = 164;
        return ObjectItemToSellInBid;
    })(ObjectItemToSell);
    Protocol.ObjectItemToSellInBid = ObjectItemToSellInBid;
    var ObjectItemToSellInHumanVendorShop = (function (_super) {
        __extends(ObjectItemToSellInHumanVendorShop, _super);
        function ObjectItemToSellInHumanVendorShop() {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            this.objectPrice = 0;
            this.publicPrice = 0;
            _super.call(this);
        }
        ObjectItemToSellInHumanVendorShop.prototype.getTypeId = function () {
            return ObjectItemToSellInHumanVendorShop.ID;
        };
        ObjectItemToSellInHumanVendorShop.prototype.reset = function () {
            this.objectGID = 0;
            this.effects = [];
            this.objectUID = 0;
            this.quantity = 0;
            this.objectPrice = 0;
            this.publicPrice = 0;
        };
        ObjectItemToSellInHumanVendorShop.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemToSellInHumanVendorShop(param1);
        };
        ObjectItemToSellInHumanVendorShop.prototype.serializeAs_ObjectItemToSellInHumanVendorShop = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element objectGID.');
            }
            param1.writeVarShort(this.objectGID);
            param1.writeShort(this.effects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.effects.length) {
                param1.writeShort((this.effects[_loc2_]).getTypeId());
                (this.effects[_loc2_]).serialize(param1);
                _loc2_++;
            }
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element objectUID.');
            }
            param1.writeVarInt(this.objectUID);
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element quantity.');
            }
            param1.writeVarInt(this.quantity);
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element objectPrice.');
            }
            param1.writeVarInt(this.objectPrice);
            if (this.publicPrice < 0) {
                throw new Error('Forbidden value (' + this.publicPrice + ') on element publicPrice.');
            }
            param1.writeVarInt(this.publicPrice);
        };
        ObjectItemToSellInHumanVendorShop.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemToSellInHumanVendorShop(param1);
        };
        ObjectItemToSellInHumanVendorShop.prototype.deserializeAs_ObjectItemToSellInHumanVendorShop = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.objectGID = param1.readVarUhShort();
            if (this.objectGID < 0) {
                throw new Error('Forbidden value (' + this.objectGID + ') on element of ObjectItemToSellInHumanVendorShop.objectGID.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(ObjectEffect, _loc4_);
                _loc5_.deserialize(param1);
                this.effects.push(_loc5_);
                _loc3_++;
            }
            this.objectUID = param1.readVarUhInt();
            if (this.objectUID < 0) {
                throw new Error('Forbidden value (' + this.objectUID + ') on element of ObjectItemToSellInHumanVendorShop.objectUID.');
            }
            this.quantity = param1.readVarUhInt();
            if (this.quantity < 0) {
                throw new Error('Forbidden value (' + this.quantity + ') on element of ObjectItemToSellInHumanVendorShop.quantity.');
            }
            this.objectPrice = param1.readVarUhInt();
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element of ObjectItemToSellInHumanVendorShop.objectPrice.');
            }
            this.publicPrice = param1.readVarUhInt();
            if (this.publicPrice < 0) {
                throw new Error('Forbidden value (' + this.publicPrice + ') on element of ObjectItemToSellInHumanVendorShop.publicPrice.');
            }
        };
        ObjectItemToSellInHumanVendorShop.ID = 359;
        return ObjectItemToSellInHumanVendorShop;
    })(Item);
    Protocol.ObjectItemToSellInHumanVendorShop = ObjectItemToSellInHumanVendorShop;
    var ObjectItemToSellInNpcShop = (function (_super) {
        __extends(ObjectItemToSellInNpcShop, _super);
        function ObjectItemToSellInNpcShop() {
            this.objectPrice = 0;
            this.buyCriterion = '';
            _super.call(this);
        }
        ObjectItemToSellInNpcShop.prototype.getTypeId = function () {
            return ObjectItemToSellInNpcShop.ID;
        };
        ObjectItemToSellInNpcShop.prototype.reset = function () {
            this.objectPrice = 0;
            this.buyCriterion = '';
        };
        ObjectItemToSellInNpcShop.prototype.serialize = function (param1) {
            this.serializeAs_ObjectItemToSellInNpcShop(param1);
        };
        ObjectItemToSellInNpcShop.prototype.serializeAs_ObjectItemToSellInNpcShop = function (param1) {
            _super.prototype.serializeAs_ObjectItemMinimalInformation.call(this, param1);
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element objectPrice.');
            }
            param1.writeVarInt(this.objectPrice);
            param1.writeUTF(this.buyCriterion);
        };
        ObjectItemToSellInNpcShop.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectItemToSellInNpcShop(param1);
        };
        ObjectItemToSellInNpcShop.prototype.deserializeAs_ObjectItemToSellInNpcShop = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.objectPrice = param1.readVarUhInt();
            if (this.objectPrice < 0) {
                throw new Error('Forbidden value (' + this.objectPrice + ') on element of ObjectItemToSellInNpcShop.objectPrice.');
            }
            this.buyCriterion = param1.readUTF();
        };
        ObjectItemToSellInNpcShop.ID = 352;
        return ObjectItemToSellInNpcShop;
    })(ObjectItemMinimalInformation);
    Protocol.ObjectItemToSellInNpcShop = ObjectItemToSellInNpcShop;
    var SellerBuyerDescriptor = (function () {
        function SellerBuyerDescriptor() {
            this.quantities = [];
            this.types = [];
            this.taxPercentage = 0;
            this.taxModificationPercentage = 0;
            this.maxItemLevel = 0;
            this.maxItemPerAccount = 0;
            this.npcContextualId = 0;
            this.unsoldDelay = 0;
        }
        SellerBuyerDescriptor.prototype.getTypeId = function () {
            return SellerBuyerDescriptor.ID;
        };
        SellerBuyerDescriptor.prototype.reset = function () {
            this.quantities = [];
            this.types = [];
            this.taxPercentage = 0;
            this.taxModificationPercentage = 0;
            this.maxItemLevel = 0;
            this.maxItemPerAccount = 0;
            this.npcContextualId = 0;
            this.unsoldDelay = 0;
        };
        SellerBuyerDescriptor.prototype.serialize = function (param1) {
            this.serializeAs_SellerBuyerDescriptor(param1);
        };
        SellerBuyerDescriptor.prototype.serializeAs_SellerBuyerDescriptor = function (param1) {
            param1.writeShort(this.quantities.length);
            var _loc2_ = 0;
            while (_loc2_ < this.quantities.length) {
                if (this.quantities[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.quantities[_loc2_] + ') on element 1 (starting at 1) of quantities.');
                }
                param1.writeVarInt(this.quantities[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.types.length);
            var _loc3_ = 0;
            while (_loc3_ < this.types.length) {
                if (this.types[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.types[_loc3_] + ') on element 2 (starting at 1) of types.');
                }
                param1.writeVarInt(this.types[_loc3_]);
                _loc3_++;
            }
            param1.writeFloat(this.taxPercentage);
            param1.writeFloat(this.taxModificationPercentage);
            if (this.maxItemLevel < 0 || this.maxItemLevel > 255) {
                throw new Error('Forbidden value (' + this.maxItemLevel + ') on element maxItemLevel.');
            }
            param1.writeByte(this.maxItemLevel);
            if (this.maxItemPerAccount < 0) {
                throw new Error('Forbidden value (' + this.maxItemPerAccount + ') on element maxItemPerAccount.');
            }
            param1.writeVarInt(this.maxItemPerAccount);
            param1.writeInt(this.npcContextualId);
            if (this.unsoldDelay < 0) {
                throw new Error('Forbidden value (' + this.unsoldDelay + ') on element unsoldDelay.');
            }
            param1.writeVarShort(this.unsoldDelay);
        };
        SellerBuyerDescriptor.prototype.deserialize = function (param1) {
            this.deserializeAs_SellerBuyerDescriptor(param1);
        };
        SellerBuyerDescriptor.prototype.deserializeAs_SellerBuyerDescriptor = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = 0;
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readVarUhInt();
                if (_loc6_ < 0) {
                    throw new Error('Forbidden value (' + _loc6_ + ') on elements of quantities.');
                }
                this.quantities.push(_loc6_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc7_ = param1.readVarUhInt();
                if (_loc7_ < 0) {
                    throw new Error('Forbidden value (' + _loc7_ + ') on elements of types.');
                }
                this.types.push(_loc7_);
                _loc5_++;
            }
            this.taxPercentage = param1.readFloat();
            this.taxModificationPercentage = param1.readFloat();
            this.maxItemLevel = param1.readUnsignedByte();
            if (this.maxItemLevel < 0 || this.maxItemLevel > 255) {
                throw new Error('Forbidden value (' + this.maxItemLevel + ') on element of SellerBuyerDescriptor.maxItemLevel.');
            }
            this.maxItemPerAccount = param1.readVarUhInt();
            if (this.maxItemPerAccount < 0) {
                throw new Error('Forbidden value (' + this.maxItemPerAccount + ') on element of SellerBuyerDescriptor.maxItemPerAccount.');
            }
            this.npcContextualId = param1.readInt();
            this.unsoldDelay = param1.readVarUhShort();
            if (this.unsoldDelay < 0) {
                throw new Error('Forbidden value (' + this.unsoldDelay + ') on element of SellerBuyerDescriptor.unsoldDelay.');
            }
        };
        SellerBuyerDescriptor.ID = 121;
        return SellerBuyerDescriptor;
    })();
    Protocol.SellerBuyerDescriptor = SellerBuyerDescriptor;
    var SpellItem = (function (_super) {
        __extends(SpellItem, _super);
        function SpellItem() {
            this.position = 0;
            this.spellId = 0;
            this.spellLevel = 0;
            _super.call(this);
        }
        SpellItem.prototype.getTypeId = function () {
            return SpellItem.ID;
        };
        SpellItem.prototype.reset = function () {
            this.position = 0;
            this.spellId = 0;
            this.spellLevel = 0;
        };
        SpellItem.prototype.serialize = function (param1) {
            this.serializeAs_SpellItem(param1);
        };
        SpellItem.prototype.serializeAs_SpellItem = function (param1) {
            _super.prototype.serializeAs_Item.call(this, param1);
            if (this.position < 63 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element position.');
            }
            param1.writeByte(this.position);
            param1.writeInt(this.spellId);
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element spellLevel.');
            }
            param1.writeByte(this.spellLevel);
        };
        SpellItem.prototype.deserialize = function (param1) {
            this.deserializeAs_SpellItem(param1);
        };
        SpellItem.prototype.deserializeAs_SpellItem = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.position = param1.readUnsignedByte();
            if (this.position < 63 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of SpellItem.position.');
            }
            this.spellId = param1.readInt();
            this.spellLevel = param1.readByte();
            if (this.spellLevel < 1 || this.spellLevel > 6) {
                throw new Error('Forbidden value (' + this.spellLevel + ') on element of SpellItem.spellLevel.');
            }
        };
        SpellItem.ID = 49;
        return SpellItem;
    })(Item);
    Protocol.SpellItem = SpellItem;
    var ObjectEffect = (function () {
        function ObjectEffect() {
            this.actionId = 0;
        }
        ObjectEffect.prototype.getTypeId = function () {
            return ObjectEffect.ID;
        };
        ObjectEffect.prototype.reset = function () {
            this.actionId = 0;
        };
        ObjectEffect.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffect(param1);
        };
        ObjectEffect.prototype.serializeAs_ObjectEffect = function (param1) {
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element actionId.');
            }
            param1.writeVarShort(this.actionId);
        };
        ObjectEffect.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffect(param1);
        };
        ObjectEffect.prototype.deserializeAs_ObjectEffect = function (param1) {
            this.actionId = param1.readVarUhShort();
            if (this.actionId < 0) {
                throw new Error('Forbidden value (' + this.actionId + ') on element of ObjectEffect.actionId.');
            }
        };
        ObjectEffect.ID = 76;
        return ObjectEffect;
    })();
    Protocol.ObjectEffect = ObjectEffect;
    var ObjectEffectCreature = (function (_super) {
        __extends(ObjectEffectCreature, _super);
        function ObjectEffectCreature() {
            this.monsterFamilyId = 0;
            _super.call(this);
        }
        ObjectEffectCreature.prototype.getTypeId = function () {
            return ObjectEffectCreature.ID;
        };
        ObjectEffectCreature.prototype.reset = function () {
            this.monsterFamilyId = 0;
        };
        ObjectEffectCreature.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectCreature(param1);
        };
        ObjectEffectCreature.prototype.serializeAs_ObjectEffectCreature = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.monsterFamilyId < 0) {
                throw new Error('Forbidden value (' + this.monsterFamilyId + ') on element monsterFamilyId.');
            }
            param1.writeVarShort(this.monsterFamilyId);
        };
        ObjectEffectCreature.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectCreature(param1);
        };
        ObjectEffectCreature.prototype.deserializeAs_ObjectEffectCreature = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.monsterFamilyId = param1.readVarUhShort();
            if (this.monsterFamilyId < 0) {
                throw new Error('Forbidden value (' + this.monsterFamilyId + ') on element of ObjectEffectCreature.monsterFamilyId.');
            }
        };
        ObjectEffectCreature.ID = 71;
        return ObjectEffectCreature;
    })(ObjectEffect);
    Protocol.ObjectEffectCreature = ObjectEffectCreature;
    var ObjectEffectDate = (function (_super) {
        __extends(ObjectEffectDate, _super);
        function ObjectEffectDate() {
            this.year = 0;
            this.month = 0;
            this.day = 0;
            this.hour = 0;
            this.minute = 0;
            _super.call(this);
        }
        ObjectEffectDate.prototype.getTypeId = function () {
            return ObjectEffectDate.ID;
        };
        ObjectEffectDate.prototype.reset = function () {
            this.year = 0;
            this.month = 0;
            this.day = 0;
            this.hour = 0;
            this.minute = 0;
        };
        ObjectEffectDate.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectDate(param1);
        };
        ObjectEffectDate.prototype.serializeAs_ObjectEffectDate = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.year < 0) {
                throw new Error('Forbidden value (' + this.year + ') on element year.');
            }
            param1.writeVarShort(this.year);
            if (this.month < 0) {
                throw new Error('Forbidden value (' + this.month + ') on element month.');
            }
            param1.writeByte(this.month);
            if (this.day < 0) {
                throw new Error('Forbidden value (' + this.day + ') on element day.');
            }
            param1.writeByte(this.day);
            if (this.hour < 0) {
                throw new Error('Forbidden value (' + this.hour + ') on element hour.');
            }
            param1.writeByte(this.hour);
            if (this.minute < 0) {
                throw new Error('Forbidden value (' + this.minute + ') on element minute.');
            }
            param1.writeByte(this.minute);
        };
        ObjectEffectDate.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectDate(param1);
        };
        ObjectEffectDate.prototype.deserializeAs_ObjectEffectDate = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.year = param1.readVarUhShort();
            if (this.year < 0) {
                throw new Error('Forbidden value (' + this.year + ') on element of ObjectEffectDate.year.');
            }
            this.month = param1.readByte();
            if (this.month < 0) {
                throw new Error('Forbidden value (' + this.month + ') on element of ObjectEffectDate.month.');
            }
            this.day = param1.readByte();
            if (this.day < 0) {
                throw new Error('Forbidden value (' + this.day + ') on element of ObjectEffectDate.day.');
            }
            this.hour = param1.readByte();
            if (this.hour < 0) {
                throw new Error('Forbidden value (' + this.hour + ') on element of ObjectEffectDate.hour.');
            }
            this.minute = param1.readByte();
            if (this.minute < 0) {
                throw new Error('Forbidden value (' + this.minute + ') on element of ObjectEffectDate.minute.');
            }
        };
        ObjectEffectDate.ID = 72;
        return ObjectEffectDate;
    })(ObjectEffect);
    Protocol.ObjectEffectDate = ObjectEffectDate;
    var ObjectEffectDice = (function (_super) {
        __extends(ObjectEffectDice, _super);
        function ObjectEffectDice() {
            this.diceNum = 0;
            this.diceSide = 0;
            this.diceConst = 0;
            _super.call(this);
        }
        ObjectEffectDice.prototype.getTypeId = function () {
            return ObjectEffectDice.ID;
        };
        ObjectEffectDice.prototype.reset = function () {
            this.diceNum = 0;
            this.diceSide = 0;
            this.diceConst = 0;
        };
        ObjectEffectDice.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectDice(param1);
        };
        ObjectEffectDice.prototype.serializeAs_ObjectEffectDice = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.diceNum < 0) {
                throw new Error('Forbidden value (' + this.diceNum + ') on element diceNum.');
            }
            param1.writeVarShort(this.diceNum);
            if (this.diceSide < 0) {
                throw new Error('Forbidden value (' + this.diceSide + ') on element diceSide.');
            }
            param1.writeVarShort(this.diceSide);
            if (this.diceConst < 0) {
                throw new Error('Forbidden value (' + this.diceConst + ') on element diceConst.');
            }
            param1.writeVarShort(this.diceConst);
        };
        ObjectEffectDice.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectDice(param1);
        };
        ObjectEffectDice.prototype.deserializeAs_ObjectEffectDice = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.diceNum = param1.readVarUhShort();
            if (this.diceNum < 0) {
                throw new Error('Forbidden value (' + this.diceNum + ') on element of ObjectEffectDice.diceNum.');
            }
            this.diceSide = param1.readVarUhShort();
            if (this.diceSide < 0) {
                throw new Error('Forbidden value (' + this.diceSide + ') on element of ObjectEffectDice.diceSide.');
            }
            this.diceConst = param1.readVarUhShort();
            if (this.diceConst < 0) {
                throw new Error('Forbidden value (' + this.diceConst + ') on element of ObjectEffectDice.diceConst.');
            }
        };
        ObjectEffectDice.ID = 73;
        return ObjectEffectDice;
    })(ObjectEffect);
    Protocol.ObjectEffectDice = ObjectEffectDice;
    var ObjectEffectDuration = (function (_super) {
        __extends(ObjectEffectDuration, _super);
        function ObjectEffectDuration() {
            this.days = 0;
            this.hours = 0;
            this.minutes = 0;
            _super.call(this);
        }
        ObjectEffectDuration.prototype.getTypeId = function () {
            return ObjectEffectDuration.ID;
        };
        ObjectEffectDuration.prototype.reset = function () {
            this.days = 0;
            this.hours = 0;
            this.minutes = 0;
        };
        ObjectEffectDuration.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectDuration(param1);
        };
        ObjectEffectDuration.prototype.serializeAs_ObjectEffectDuration = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.days < 0) {
                throw new Error('Forbidden value (' + this.days + ') on element days.');
            }
            param1.writeVarShort(this.days);
            if (this.hours < 0) {
                throw new Error('Forbidden value (' + this.hours + ') on element hours.');
            }
            param1.writeByte(this.hours);
            if (this.minutes < 0) {
                throw new Error('Forbidden value (' + this.minutes + ') on element minutes.');
            }
            param1.writeByte(this.minutes);
        };
        ObjectEffectDuration.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectDuration(param1);
        };
        ObjectEffectDuration.prototype.deserializeAs_ObjectEffectDuration = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.days = param1.readVarUhShort();
            if (this.days < 0) {
                throw new Error('Forbidden value (' + this.days + ') on element of ObjectEffectDuration.days.');
            }
            this.hours = param1.readByte();
            if (this.hours < 0) {
                throw new Error('Forbidden value (' + this.hours + ') on element of ObjectEffectDuration.hours.');
            }
            this.minutes = param1.readByte();
            if (this.minutes < 0) {
                throw new Error('Forbidden value (' + this.minutes + ') on element of ObjectEffectDuration.minutes.');
            }
        };
        ObjectEffectDuration.ID = 75;
        return ObjectEffectDuration;
    })(ObjectEffect);
    Protocol.ObjectEffectDuration = ObjectEffectDuration;
    var ObjectEffectInteger = (function (_super) {
        __extends(ObjectEffectInteger, _super);
        function ObjectEffectInteger() {
            this.value = 0;
            _super.call(this);
        }
        ObjectEffectInteger.prototype.getTypeId = function () {
            return ObjectEffectInteger.ID;
        };
        ObjectEffectInteger.prototype.reset = function () {
            this.value = 0;
        };
        ObjectEffectInteger.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectInteger(param1);
        };
        ObjectEffectInteger.prototype.serializeAs_ObjectEffectInteger = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.value < 0) {
                throw new Error('Forbidden value (' + this.value + ') on element value.');
            }
            param1.writeVarShort(this.value);
        };
        ObjectEffectInteger.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectInteger(param1);
        };
        ObjectEffectInteger.prototype.deserializeAs_ObjectEffectInteger = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readVarUhShort();
            if (this.value < 0) {
                throw new Error('Forbidden value (' + this.value + ') on element of ObjectEffectInteger.value.');
            }
        };
        ObjectEffectInteger.ID = 70;
        return ObjectEffectInteger;
    })(ObjectEffect);
    Protocol.ObjectEffectInteger = ObjectEffectInteger;
    var ObjectEffectLadder = (function (_super) {
        __extends(ObjectEffectLadder, _super);
        function ObjectEffectLadder() {
            this.monsterCount = 0;
            _super.call(this);
        }
        ObjectEffectLadder.prototype.getTypeId = function () {
            return ObjectEffectLadder.ID;
        };
        ObjectEffectLadder.prototype.reset = function () {
            this.monsterCount = 0;
        };
        ObjectEffectLadder.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectLadder(param1);
        };
        ObjectEffectLadder.prototype.serializeAs_ObjectEffectLadder = function (param1) {
            _super.prototype.serializeAs_ObjectEffectCreature.call(this, param1);
            if (this.monsterCount < 0) {
                throw new Error('Forbidden value (' + this.monsterCount + ') on element monsterCount.');
            }
            param1.writeVarInt(this.monsterCount);
        };
        ObjectEffectLadder.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectLadder(param1);
        };
        ObjectEffectLadder.prototype.deserializeAs_ObjectEffectLadder = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.monsterCount = param1.readVarUhInt();
            if (this.monsterCount < 0) {
                throw new Error('Forbidden value (' + this.monsterCount + ') on element of ObjectEffectLadder.monsterCount.');
            }
        };
        ObjectEffectLadder.ID = 81;
        return ObjectEffectLadder;
    })(ObjectEffectCreature);
    Protocol.ObjectEffectLadder = ObjectEffectLadder;
    var ObjectEffectMinMax = (function (_super) {
        __extends(ObjectEffectMinMax, _super);
        function ObjectEffectMinMax() {
            this.min = 0;
            this.max = 0;
            _super.call(this);
        }
        ObjectEffectMinMax.prototype.getTypeId = function () {
            return ObjectEffectMinMax.ID;
        };
        ObjectEffectMinMax.prototype.reset = function () {
            this.min = 0;
            this.max = 0;
        };
        ObjectEffectMinMax.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectMinMax(param1);
        };
        ObjectEffectMinMax.prototype.serializeAs_ObjectEffectMinMax = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.min < 0) {
                throw new Error('Forbidden value (' + this.min + ') on element min.');
            }
            param1.writeVarInt(this.min);
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element max.');
            }
            param1.writeVarInt(this.max);
        };
        ObjectEffectMinMax.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectMinMax(param1);
        };
        ObjectEffectMinMax.prototype.deserializeAs_ObjectEffectMinMax = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.min = param1.readVarUhInt();
            if (this.min < 0) {
                throw new Error('Forbidden value (' + this.min + ') on element of ObjectEffectMinMax.min.');
            }
            this.max = param1.readVarUhInt();
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element of ObjectEffectMinMax.max.');
            }
        };
        ObjectEffectMinMax.ID = 82;
        return ObjectEffectMinMax;
    })(ObjectEffect);
    Protocol.ObjectEffectMinMax = ObjectEffectMinMax;
    var ObjectEffectMount = (function (_super) {
        __extends(ObjectEffectMount, _super);
        function ObjectEffectMount() {
            this.mountId = 0;
            this.date = 0;
            this.modelId = 0;
            _super.call(this);
        }
        ObjectEffectMount.prototype.getTypeId = function () {
            return ObjectEffectMount.ID;
        };
        ObjectEffectMount.prototype.reset = function () {
            this.mountId = 0;
            this.date = 0;
            this.modelId = 0;
        };
        ObjectEffectMount.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectMount(param1);
        };
        ObjectEffectMount.prototype.serializeAs_ObjectEffectMount = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            if (this.mountId < 0) {
                throw new Error('Forbidden value (' + this.mountId + ') on element mountId.');
            }
            param1.writeInt(this.mountId);
            if (this.date < -9.007199254740992E15 || this.date > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.date + ') on element date.');
            }
            param1.writeDouble(this.date);
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarShort(this.modelId);
        };
        ObjectEffectMount.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectMount(param1);
        };
        ObjectEffectMount.prototype.deserializeAs_ObjectEffectMount = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.mountId = param1.readInt();
            if (this.mountId < 0) {
                throw new Error('Forbidden value (' + this.mountId + ') on element of ObjectEffectMount.mountId.');
            }
            this.date = param1.readDouble();
            if (this.date < -9.007199254740992E15 || this.date > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.date + ') on element of ObjectEffectMount.date.');
            }
            this.modelId = param1.readVarUhShort();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of ObjectEffectMount.modelId.');
            }
        };
        ObjectEffectMount.ID = 179;
        return ObjectEffectMount;
    })(ObjectEffect);
    Protocol.ObjectEffectMount = ObjectEffectMount;
    var ObjectEffectString = (function (_super) {
        __extends(ObjectEffectString, _super);
        function ObjectEffectString() {
            this.value = '';
            _super.call(this);
        }
        ObjectEffectString.prototype.getTypeId = function () {
            return ObjectEffectString.ID;
        };
        ObjectEffectString.prototype.reset = function () {
            this.value = '';
        };
        ObjectEffectString.prototype.serialize = function (param1) {
            this.serializeAs_ObjectEffectString(param1);
        };
        ObjectEffectString.prototype.serializeAs_ObjectEffectString = function (param1) {
            _super.prototype.serializeAs_ObjectEffect.call(this, param1);
            param1.writeUTF(this.value);
        };
        ObjectEffectString.prototype.deserialize = function (param1) {
            this.deserializeAs_ObjectEffectString(param1);
        };
        ObjectEffectString.prototype.deserializeAs_ObjectEffectString = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readUTF();
        };
        ObjectEffectString.ID = 74;
        return ObjectEffectString;
    })(ObjectEffect);
    Protocol.ObjectEffectString = ObjectEffectString;
    var ProtectedEntityWaitingForHelpInfo = (function () {
        function ProtectedEntityWaitingForHelpInfo() {
            this.timeLeftBeforeFight = 0;
            this.waitTimeForPlacement = 0;
            this.nbPositionForDefensors = 0;
        }
        ProtectedEntityWaitingForHelpInfo.prototype.getTypeId = function () {
            return ProtectedEntityWaitingForHelpInfo.ID;
        };
        ProtectedEntityWaitingForHelpInfo.prototype.reset = function () {
            this.timeLeftBeforeFight = 0;
            this.waitTimeForPlacement = 0;
            this.nbPositionForDefensors = 0;
        };
        ProtectedEntityWaitingForHelpInfo.prototype.serialize = function (param1) {
            this.serializeAs_ProtectedEntityWaitingForHelpInfo(param1);
        };
        ProtectedEntityWaitingForHelpInfo.prototype.serializeAs_ProtectedEntityWaitingForHelpInfo = function (param1) {
            param1.writeInt(this.timeLeftBeforeFight);
            param1.writeInt(this.waitTimeForPlacement);
            if (this.nbPositionForDefensors < 0) {
                throw new Error('Forbidden value (' + this.nbPositionForDefensors + ') on element nbPositionForDefensors.');
            }
            param1.writeByte(this.nbPositionForDefensors);
        };
        ProtectedEntityWaitingForHelpInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_ProtectedEntityWaitingForHelpInfo(param1);
        };
        ProtectedEntityWaitingForHelpInfo.prototype.deserializeAs_ProtectedEntityWaitingForHelpInfo = function (param1) {
            this.timeLeftBeforeFight = param1.readInt();
            this.waitTimeForPlacement = param1.readInt();
            this.nbPositionForDefensors = param1.readByte();
            if (this.nbPositionForDefensors < 0) {
                throw new Error('Forbidden value (' + this.nbPositionForDefensors + ') on element of ProtectedEntityWaitingForHelpInfo.nbPositionForDefensors.');
            }
        };
        ProtectedEntityWaitingForHelpInfo.ID = 186;
        return ProtectedEntityWaitingForHelpInfo;
    })();
    Protocol.ProtectedEntityWaitingForHelpInfo = ProtectedEntityWaitingForHelpInfo;
    var AbstractContactInformations = (function () {
        function AbstractContactInformations() {
            this.accountId = 0;
            this.accountName = '';
        }
        AbstractContactInformations.prototype.getTypeId = function () {
            return AbstractContactInformations.ID;
        };
        AbstractContactInformations.prototype.reset = function () {
            this.accountId = 0;
            this.accountName = '';
        };
        AbstractContactInformations.prototype.serialize = function (param1) {
            this.serializeAs_AbstractContactInformations(param1);
        };
        AbstractContactInformations.prototype.serializeAs_AbstractContactInformations = function (param1) {
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            param1.writeUTF(this.accountName);
        };
        AbstractContactInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractContactInformations(param1);
        };
        AbstractContactInformations.prototype.deserializeAs_AbstractContactInformations = function (param1) {
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of AbstractContactInformations.accountId.');
            }
            this.accountName = param1.readUTF();
        };
        AbstractContactInformations.ID = 380;
        return AbstractContactInformations;
    })();
    Protocol.AbstractContactInformations = AbstractContactInformations;
    var FriendInformations = (function (_super) {
        __extends(FriendInformations, _super);
        function FriendInformations() {
            this.playerState = 99;
            this.lastConnection = 0;
            this.achievementPoints = 0;
            _super.call(this);
        }
        FriendInformations.prototype.getTypeId = function () {
            return FriendInformations.ID;
        };
        FriendInformations.prototype.reset = function () {
            this.playerState = 99;
            this.lastConnection = 0;
            this.achievementPoints = 0;
        };
        FriendInformations.prototype.serialize = function (param1) {
            this.serializeAs_FriendInformations(param1);
        };
        FriendInformations.prototype.serializeAs_FriendInformations = function (param1) {
            _super.prototype.serializeAs_AbstractContactInformations.call(this, param1);
            param1.writeByte(this.playerState);
            if (this.lastConnection < 0) {
                throw new Error('Forbidden value (' + this.lastConnection + ') on element lastConnection.');
            }
            param1.writeVarShort(this.lastConnection);
            param1.writeInt(this.achievementPoints);
        };
        FriendInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendInformations(param1);
        };
        FriendInformations.prototype.deserializeAs_FriendInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerState = param1.readByte();
            if (this.playerState < 0) {
                throw new Error('Forbidden value (' + this.playerState + ') on element of FriendInformations.playerState.');
            }
            this.lastConnection = param1.readVarUhShort();
            if (this.lastConnection < 0) {
                throw new Error('Forbidden value (' + this.lastConnection + ') on element of FriendInformations.lastConnection.');
            }
            this.achievementPoints = param1.readInt();
        };
        FriendInformations.ID = 78;
        return FriendInformations;
    })(AbstractContactInformations);
    Protocol.FriendInformations = FriendInformations;
    var FriendOnlineInformations = (function (_super) {
        __extends(FriendOnlineInformations, _super);
        function FriendOnlineInformations() {
            this.playerId = 0;
            this.playerName = '';
            this.level = 0;
            this.alignmentSide = 0;
            this.breed = 0;
            this.sex = false;
            this.guildInfo = new BasicGuildInformations();
            this.moodSmileyId = 0;
            this.status = new PlayerStatus();
            _super.call(this);
        }
        FriendOnlineInformations.prototype.getTypeId = function () {
            return FriendOnlineInformations.ID;
        };
        FriendOnlineInformations.prototype.reset = function () {
            this.playerId = 0;
            this.playerName = '';
            this.level = 0;
            this.alignmentSide = 0;
            this.breed = 0;
            this.sex = false;
            this.guildInfo = new BasicGuildInformations();
            this.moodSmileyId = 0;
            this.status = new PlayerStatus();
        };
        FriendOnlineInformations.prototype.serialize = function (param1) {
            this.serializeAs_FriendOnlineInformations(param1);
        };
        FriendOnlineInformations.prototype.serializeAs_FriendOnlineInformations = function (param1) {
            _super.prototype.serializeAs_FriendInformations.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeUTF(this.playerName);
            if (this.level < 0 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            param1.writeByte(this.alignmentSide);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            this.guildInfo.serializeAs_BasicGuildInformations(param1);
            if (this.moodSmileyId < 0) {
                throw new Error('Forbidden value (' + this.moodSmileyId + ') on element moodSmileyId.');
            }
            param1.writeVarShort(this.moodSmileyId);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
        };
        FriendOnlineInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendOnlineInformations(param1);
        };
        FriendOnlineInformations.prototype.deserializeAs_FriendOnlineInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of FriendOnlineInformations.playerId.');
            }
            this.playerName = param1.readUTF();
            this.level = param1.readUnsignedByte();
            if (this.level < 0 || this.level > 200) {
                throw new Error('Forbidden value (' + this.level + ') on element of FriendOnlineInformations.level.');
            }
            this.alignmentSide = param1.readByte();
            this.breed = param1.readByte();
            if (this.breed < PlayableBreedEnum.Feca || this.breed > PlayableBreedEnum.Eliotrope) {
                throw new Error('Forbidden value (' + this.breed + ') on element of FriendOnlineInformations.breed.');
            }
            this.sex = param1.readBoolean();
            this.guildInfo = new BasicGuildInformations();
            this.guildInfo.deserialize(param1);
            this.moodSmileyId = param1.readVarUhShort();
            if (this.moodSmileyId < 0) {
                throw new Error('Forbidden value (' + this.moodSmileyId + ') on element of FriendOnlineInformations.moodSmileyId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
        };
        FriendOnlineInformations.ID = 92;
        return FriendOnlineInformations;
    })(FriendInformations);
    Protocol.FriendOnlineInformations = FriendOnlineInformations;
    var FriendSpouseInformations = (function () {
        function FriendSpouseInformations() {
            this.spouseAccountId = 0;
            this.spouseId = 0;
            this.spouseName = '';
            this.spouseLevel = 0;
            this.breed = 0;
            this.sex = 0;
            this.spouseEntityLook = new EntityLook();
            this.guildInfo = new BasicGuildInformations();
            this.alignmentSide = 0;
        }
        FriendSpouseInformations.prototype.getTypeId = function () {
            return FriendSpouseInformations.ID;
        };
        FriendSpouseInformations.prototype.reset = function () {
            this.spouseAccountId = 0;
            this.spouseId = 0;
            this.spouseName = '';
            this.spouseLevel = 0;
            this.breed = 0;
            this.sex = 0;
            this.spouseEntityLook = new EntityLook();
            this.guildInfo = new BasicGuildInformations();
            this.alignmentSide = 0;
        };
        FriendSpouseInformations.prototype.serialize = function (param1) {
            this.serializeAs_FriendSpouseInformations(param1);
        };
        FriendSpouseInformations.prototype.serializeAs_FriendSpouseInformations = function (param1) {
            if (this.spouseAccountId < 0) {
                throw new Error('Forbidden value (' + this.spouseAccountId + ') on element spouseAccountId.');
            }
            param1.writeInt(this.spouseAccountId);
            if (this.spouseId < 0) {
                throw new Error('Forbidden value (' + this.spouseId + ') on element spouseId.');
            }
            param1.writeVarInt(this.spouseId);
            param1.writeUTF(this.spouseName);
            if (this.spouseLevel < 1 || this.spouseLevel > 200) {
                throw new Error('Forbidden value (' + this.spouseLevel + ') on element spouseLevel.');
            }
            param1.writeByte(this.spouseLevel);
            param1.writeByte(this.breed);
            param1.writeByte(this.sex);
            this.spouseEntityLook.serializeAs_EntityLook(param1);
            this.guildInfo.serializeAs_BasicGuildInformations(param1);
            param1.writeByte(this.alignmentSide);
        };
        FriendSpouseInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSpouseInformations(param1);
        };
        FriendSpouseInformations.prototype.deserializeAs_FriendSpouseInformations = function (param1) {
            this.spouseAccountId = param1.readInt();
            if (this.spouseAccountId < 0) {
                throw new Error('Forbidden value (' + this.spouseAccountId + ') on element of FriendSpouseInformations.spouseAccountId.');
            }
            this.spouseId = param1.readVarUhInt();
            if (this.spouseId < 0) {
                throw new Error('Forbidden value (' + this.spouseId + ') on element of FriendSpouseInformations.spouseId.');
            }
            this.spouseName = param1.readUTF();
            this.spouseLevel = param1.readUnsignedByte();
            if (this.spouseLevel < 1 || this.spouseLevel > 200) {
                throw new Error('Forbidden value (' + this.spouseLevel + ') on element of FriendSpouseInformations.spouseLevel.');
            }
            this.breed = param1.readByte();
            this.sex = param1.readByte();
            this.spouseEntityLook = new EntityLook();
            this.spouseEntityLook.deserialize(param1);
            this.guildInfo = new BasicGuildInformations();
            this.guildInfo.deserialize(param1);
            this.alignmentSide = param1.readByte();
        };
        FriendSpouseInformations.ID = 77;
        return FriendSpouseInformations;
    })();
    Protocol.FriendSpouseInformations = FriendSpouseInformations;
    var FriendSpouseOnlineInformations = (function (_super) {
        __extends(FriendSpouseOnlineInformations, _super);
        function FriendSpouseOnlineInformations() {
            this.mapId = 0;
            this.subAreaId = 0;
            this.inFight = false;
            this.followSpouse = false;
            _super.call(this);
        }
        FriendSpouseOnlineInformations.prototype.getTypeId = function () {
            return FriendSpouseOnlineInformations.ID;
        };
        FriendSpouseOnlineInformations.prototype.reset = function () {
            this.mapId = 0;
            this.subAreaId = 0;
            this.inFight = false;
            this.followSpouse = false;
        };
        FriendSpouseOnlineInformations.prototype.serialize = function (param1) {
            this.serializeAs_FriendSpouseOnlineInformations(param1);
        };
        FriendSpouseOnlineInformations.prototype.serializeAs_FriendSpouseOnlineInformations = function (param1) {
            _super.prototype.serializeAs_FriendSpouseInformations.call(this, param1);
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.inFight);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.followSpouse);
            param1.writeByte(_loc2_);
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element mapId.');
            }
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        FriendSpouseOnlineInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_FriendSpouseOnlineInformations(param1);
        };
        FriendSpouseOnlineInformations.prototype.deserializeAs_FriendSpouseOnlineInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readByte();
            this.inFight = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.followSpouse = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.mapId = param1.readInt();
            if (this.mapId < 0) {
                throw new Error('Forbidden value (' + this.mapId + ') on element of FriendSpouseOnlineInformations.mapId.');
            }
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of FriendSpouseOnlineInformations.subAreaId.');
            }
        };
        FriendSpouseOnlineInformations.ID = 93;
        return FriendSpouseOnlineInformations;
    })(FriendSpouseInformations);
    Protocol.FriendSpouseOnlineInformations = FriendSpouseOnlineInformations;
    var IgnoredInformations = (function (_super) {
        __extends(IgnoredInformations, _super);
        function IgnoredInformations() {
            _super.call(this);
        }
        IgnoredInformations.prototype.getTypeId = function () {
            return IgnoredInformations.ID;
        };
        IgnoredInformations.prototype.reset = function () {
        };
        IgnoredInformations.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredInformations(param1);
        };
        IgnoredInformations.prototype.serializeAs_IgnoredInformations = function (param1) {
            _super.prototype.serializeAs_AbstractContactInformations.call(this, param1);
        };
        IgnoredInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredInformations(param1);
        };
        IgnoredInformations.prototype.deserializeAs_IgnoredInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        IgnoredInformations.ID = 106;
        return IgnoredInformations;
    })(AbstractContactInformations);
    Protocol.IgnoredInformations = IgnoredInformations;
    var IgnoredOnlineInformations = (function (_super) {
        __extends(IgnoredOnlineInformations, _super);
        function IgnoredOnlineInformations() {
            this.playerId = 0;
            this.playerName = '';
            this.breed = 0;
            this.sex = false;
            _super.call(this);
        }
        IgnoredOnlineInformations.prototype.getTypeId = function () {
            return IgnoredOnlineInformations.ID;
        };
        IgnoredOnlineInformations.prototype.reset = function () {
            this.playerId = 0;
            this.playerName = '';
            this.breed = 0;
            this.sex = false;
        };
        IgnoredOnlineInformations.prototype.serialize = function (param1) {
            this.serializeAs_IgnoredOnlineInformations(param1);
        };
        IgnoredOnlineInformations.prototype.serializeAs_IgnoredOnlineInformations = function (param1) {
            _super.prototype.serializeAs_IgnoredInformations.call(this, param1);
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element playerId.');
            }
            param1.writeVarInt(this.playerId);
            param1.writeUTF(this.playerName);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
        };
        IgnoredOnlineInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_IgnoredOnlineInformations(param1);
        };
        IgnoredOnlineInformations.prototype.deserializeAs_IgnoredOnlineInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.playerId = param1.readVarUhInt();
            if (this.playerId < 0) {
                throw new Error('Forbidden value (' + this.playerId + ') on element of IgnoredOnlineInformations.playerId.');
            }
            this.playerName = param1.readUTF();
            this.breed = param1.readByte();
            if (this.breed < PlayableBreedEnum.Feca || this.breed > PlayableBreedEnum.Eliotrope) {
                throw new Error('Forbidden value (' + this.breed + ') on element of IgnoredOnlineInformations.breed.');
            }
            this.sex = param1.readBoolean();
        };
        IgnoredOnlineInformations.ID = 105;
        return IgnoredOnlineInformations;
    })(IgnoredInformations);
    Protocol.IgnoredOnlineInformations = IgnoredOnlineInformations;
    var GuildEmblem = (function () {
        function GuildEmblem() {
            this.symbolShape = 0;
            this.symbolColor = 0;
            this.backgroundShape = 0;
            this.backgroundColor = 0;
        }
        GuildEmblem.prototype.getTypeId = function () {
            return GuildEmblem.ID;
        };
        GuildEmblem.prototype.reset = function () {
            this.symbolShape = 0;
            this.symbolColor = 0;
            this.backgroundShape = 0;
            this.backgroundColor = 0;
        };
        GuildEmblem.prototype.serialize = function (param1) {
            this.serializeAs_GuildEmblem(param1);
        };
        GuildEmblem.prototype.serializeAs_GuildEmblem = function (param1) {
            if (this.symbolShape < 0) {
                throw new Error('Forbidden value (' + this.symbolShape + ') on element symbolShape.');
            }
            param1.writeVarShort(this.symbolShape);
            param1.writeInt(this.symbolColor);
            if (this.backgroundShape < 0) {
                throw new Error('Forbidden value (' + this.backgroundShape + ') on element backgroundShape.');
            }
            param1.writeByte(this.backgroundShape);
            param1.writeInt(this.backgroundColor);
        };
        GuildEmblem.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildEmblem(param1);
        };
        GuildEmblem.prototype.deserializeAs_GuildEmblem = function (param1) {
            this.symbolShape = param1.readVarUhShort();
            if (this.symbolShape < 0) {
                throw new Error('Forbidden value (' + this.symbolShape + ') on element of GuildEmblem.symbolShape.');
            }
            this.symbolColor = param1.readInt();
            this.backgroundShape = param1.readByte();
            if (this.backgroundShape < 0) {
                throw new Error('Forbidden value (' + this.backgroundShape + ') on element of GuildEmblem.backgroundShape.');
            }
            this.backgroundColor = param1.readInt();
        };
        GuildEmblem.ID = 87;
        return GuildEmblem;
    })();
    Protocol.GuildEmblem = GuildEmblem;
    var GuildMember = (function (_super) {
        __extends(GuildMember, _super);
        function GuildMember() {
            this.breed = 0;
            this.sex = false;
            this.rank = 0;
            this.givenExperience = 0;
            this.experienceGivenPercent = 0;
            this.rights = 0;
            this.connected = 99;
            this.alignmentSide = 0;
            this.hoursSinceLastConnection = 0;
            this.moodSmileyId = 0;
            this.accountId = 0;
            this.achievementPoints = 0;
            this.status = new PlayerStatus();
            _super.call(this);
        }
        GuildMember.prototype.getTypeId = function () {
            return GuildMember.ID;
        };
        GuildMember.prototype.reset = function () {
            this.breed = 0;
            this.sex = false;
            this.rank = 0;
            this.givenExperience = 0;
            this.experienceGivenPercent = 0;
            this.rights = 0;
            this.connected = 99;
            this.alignmentSide = 0;
            this.hoursSinceLastConnection = 0;
            this.moodSmileyId = 0;
            this.accountId = 0;
            this.achievementPoints = 0;
            this.status = new PlayerStatus();
        };
        GuildMember.prototype.serialize = function (param1) {
            this.serializeAs_GuildMember(param1);
        };
        GuildMember.prototype.serializeAs_GuildMember = function (param1) {
            _super.prototype.serializeAs_CharacterMinimalInformations.call(this, param1);
            param1.writeByte(this.breed);
            param1.writeBoolean(this.sex);
            if (this.rank < 0) {
                throw new Error('Forbidden value (' + this.rank + ') on element rank.');
            }
            param1.writeVarShort(this.rank);
            if (this.givenExperience < 0 || this.givenExperience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.givenExperience + ') on element givenExperience.');
            }
            param1.writeVarLong(this.givenExperience);
            if (this.experienceGivenPercent < 0 || this.experienceGivenPercent > 100) {
                throw new Error('Forbidden value (' + this.experienceGivenPercent + ') on element experienceGivenPercent.');
            }
            param1.writeByte(this.experienceGivenPercent);
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element rights.');
            }
            param1.writeVarInt(this.rights);
            param1.writeByte(this.connected);
            param1.writeByte(this.alignmentSide);
            if (this.hoursSinceLastConnection < 0 || this.hoursSinceLastConnection > 65535) {
                throw new Error('Forbidden value (' + this.hoursSinceLastConnection + ') on element hoursSinceLastConnection.');
            }
            param1.writeShort(this.hoursSinceLastConnection);
            if (this.moodSmileyId < 0) {
                throw new Error('Forbidden value (' + this.moodSmileyId + ') on element moodSmileyId.');
            }
            param1.writeVarShort(this.moodSmileyId);
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element accountId.');
            }
            param1.writeInt(this.accountId);
            param1.writeInt(this.achievementPoints);
            param1.writeShort(this.status.getTypeId());
            this.status.serialize(param1);
        };
        GuildMember.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildMember(param1);
        };
        GuildMember.prototype.deserializeAs_GuildMember = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.breed = param1.readByte();
            this.sex = param1.readBoolean();
            this.rank = param1.readVarUhShort();
            if (this.rank < 0) {
                throw new Error('Forbidden value (' + this.rank + ') on element of GuildMember.rank.');
            }
            this.givenExperience = param1.readVarUhLong();
            if (this.givenExperience < 0 || this.givenExperience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.givenExperience + ') on element of GuildMember.givenExperience.');
            }
            this.experienceGivenPercent = param1.readByte();
            if (this.experienceGivenPercent < 0 || this.experienceGivenPercent > 100) {
                throw new Error('Forbidden value (' + this.experienceGivenPercent + ') on element of GuildMember.experienceGivenPercent.');
            }
            this.rights = param1.readVarUhInt();
            if (this.rights < 0) {
                throw new Error('Forbidden value (' + this.rights + ') on element of GuildMember.rights.');
            }
            this.connected = param1.readByte();
            if (this.connected < 0) {
                throw new Error('Forbidden value (' + this.connected + ') on element of GuildMember.connected.');
            }
            this.alignmentSide = param1.readByte();
            this.hoursSinceLastConnection = param1.readUnsignedShort();
            if (this.hoursSinceLastConnection < 0 || this.hoursSinceLastConnection > 65535) {
                throw new Error('Forbidden value (' + this.hoursSinceLastConnection + ') on element of GuildMember.hoursSinceLastConnection.');
            }
            this.moodSmileyId = param1.readVarUhShort();
            if (this.moodSmileyId < 0) {
                throw new Error('Forbidden value (' + this.moodSmileyId + ') on element of GuildMember.moodSmileyId.');
            }
            this.accountId = param1.readInt();
            if (this.accountId < 0) {
                throw new Error('Forbidden value (' + this.accountId + ') on element of GuildMember.accountId.');
            }
            this.achievementPoints = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            this.status = ProtocolTypeManager.getInstance(PlayerStatus, _loc2_);
            this.status.deserialize(param1);
        };
        GuildMember.ID = 88;
        return GuildMember;
    })(CharacterMinimalInformations);
    Protocol.GuildMember = GuildMember;
    var AdditionalTaxCollectorInformations = (function () {
        function AdditionalTaxCollectorInformations() {
            this.collectorCallerName = '';
            this.date = 0;
        }
        AdditionalTaxCollectorInformations.prototype.getTypeId = function () {
            return AdditionalTaxCollectorInformations.ID;
        };
        AdditionalTaxCollectorInformations.prototype.reset = function () {
            this.collectorCallerName = '';
            this.date = 0;
        };
        AdditionalTaxCollectorInformations.prototype.serialize = function (param1) {
            this.serializeAs_AdditionalTaxCollectorInformations(param1);
        };
        AdditionalTaxCollectorInformations.prototype.serializeAs_AdditionalTaxCollectorInformations = function (param1) {
            param1.writeUTF(this.collectorCallerName);
            if (this.date < 0) {
                throw new Error('Forbidden value (' + this.date + ') on element date.');
            }
            param1.writeInt(this.date);
        };
        AdditionalTaxCollectorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AdditionalTaxCollectorInformations(param1);
        };
        AdditionalTaxCollectorInformations.prototype.deserializeAs_AdditionalTaxCollectorInformations = function (param1) {
            this.collectorCallerName = param1.readUTF();
            this.date = param1.readInt();
            if (this.date < 0) {
                throw new Error('Forbidden value (' + this.date + ') on element of AdditionalTaxCollectorInformations.date.');
            }
        };
        AdditionalTaxCollectorInformations.ID = 165;
        return AdditionalTaxCollectorInformations;
    })();
    Protocol.AdditionalTaxCollectorInformations = AdditionalTaxCollectorInformations;
    var TaxCollectorBasicInformations = (function () {
        function TaxCollectorBasicInformations() {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        }
        TaxCollectorBasicInformations.prototype.getTypeId = function () {
            return TaxCollectorBasicInformations.ID;
        };
        TaxCollectorBasicInformations.prototype.reset = function () {
            this.firstNameId = 0;
            this.lastNameId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        };
        TaxCollectorBasicInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorBasicInformations(param1);
        };
        TaxCollectorBasicInformations.prototype.serializeAs_TaxCollectorBasicInformations = function (param1) {
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element firstNameId.');
            }
            param1.writeVarShort(this.firstNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        TaxCollectorBasicInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorBasicInformations(param1);
        };
        TaxCollectorBasicInformations.prototype.deserializeAs_TaxCollectorBasicInformations = function (param1) {
            this.firstNameId = param1.readVarUhShort();
            if (this.firstNameId < 0) {
                throw new Error('Forbidden value (' + this.firstNameId + ') on element of TaxCollectorBasicInformations.firstNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of TaxCollectorBasicInformations.lastNameId.');
            }
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of TaxCollectorBasicInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of TaxCollectorBasicInformations.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of TaxCollectorBasicInformations.subAreaId.');
            }
        };
        TaxCollectorBasicInformations.ID = 96;
        return TaxCollectorBasicInformations;
    })();
    Protocol.TaxCollectorBasicInformations = TaxCollectorBasicInformations;
    var TaxCollectorComplementaryInformations = (function () {
        function TaxCollectorComplementaryInformations() {
        }
        TaxCollectorComplementaryInformations.prototype.getTypeId = function () {
            return TaxCollectorComplementaryInformations.ID;
        };
        TaxCollectorComplementaryInformations.prototype.reset = function () {
        };
        TaxCollectorComplementaryInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorComplementaryInformations(param1);
        };
        TaxCollectorComplementaryInformations.prototype.serializeAs_TaxCollectorComplementaryInformations = function (param1) {
        };
        TaxCollectorComplementaryInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorComplementaryInformations(param1);
        };
        TaxCollectorComplementaryInformations.prototype.deserializeAs_TaxCollectorComplementaryInformations = function (param1) {
        };
        TaxCollectorComplementaryInformations.ID = 448;
        return TaxCollectorComplementaryInformations;
    })();
    Protocol.TaxCollectorComplementaryInformations = TaxCollectorComplementaryInformations;
    var TaxCollectorFightersInformation = (function () {
        function TaxCollectorFightersInformation() {
            this.collectorId = 0;
            this.allyCharactersInformations = [];
            this.enemyCharactersInformations = [];
        }
        TaxCollectorFightersInformation.prototype.getTypeId = function () {
            return TaxCollectorFightersInformation.ID;
        };
        TaxCollectorFightersInformation.prototype.reset = function () {
            this.collectorId = 0;
            this.allyCharactersInformations = [];
            this.enemyCharactersInformations = [];
        };
        TaxCollectorFightersInformation.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorFightersInformation(param1);
        };
        TaxCollectorFightersInformation.prototype.serializeAs_TaxCollectorFightersInformation = function (param1) {
            param1.writeInt(this.collectorId);
            param1.writeShort(this.allyCharactersInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.allyCharactersInformations.length) {
                param1.writeShort((this.allyCharactersInformations[_loc2_]).getTypeId());
                (this.allyCharactersInformations[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.enemyCharactersInformations.length);
            var _loc3_ = 0;
            while (_loc3_ < this.enemyCharactersInformations.length) {
                param1.writeShort((this.enemyCharactersInformations[_loc3_]).getTypeId());
                (this.enemyCharactersInformations[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        TaxCollectorFightersInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorFightersInformation(param1);
        };
        TaxCollectorFightersInformation.prototype.deserializeAs_TaxCollectorFightersInformation = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            var _loc9_ = null;
            this.collectorId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc6_);
                _loc7_.deserialize(param1);
                this.allyCharactersInformations.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readUnsignedShort();
                _loc9_ = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc8_);
                _loc9_.deserialize(param1);
                this.enemyCharactersInformations.push(_loc9_);
                _loc5_++;
            }
        };
        TaxCollectorFightersInformation.ID = 169;
        return TaxCollectorFightersInformation;
    })();
    Protocol.TaxCollectorFightersInformation = TaxCollectorFightersInformation;
    var TaxCollectorGuildInformations = (function (_super) {
        __extends(TaxCollectorGuildInformations, _super);
        function TaxCollectorGuildInformations() {
            this.guild = new BasicGuildInformations();
            _super.call(this);
        }
        TaxCollectorGuildInformations.prototype.getTypeId = function () {
            return TaxCollectorGuildInformations.ID;
        };
        TaxCollectorGuildInformations.prototype.reset = function () {
            this.guild = new BasicGuildInformations();
        };
        TaxCollectorGuildInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorGuildInformations(param1);
        };
        TaxCollectorGuildInformations.prototype.serializeAs_TaxCollectorGuildInformations = function (param1) {
            _super.prototype.serializeAs_TaxCollectorComplementaryInformations.call(this, param1);
            this.guild.serializeAs_BasicGuildInformations(param1);
        };
        TaxCollectorGuildInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorGuildInformations(param1);
        };
        TaxCollectorGuildInformations.prototype.deserializeAs_TaxCollectorGuildInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guild = new BasicGuildInformations();
            this.guild.deserialize(param1);
        };
        TaxCollectorGuildInformations.ID = 446;
        return TaxCollectorGuildInformations;
    })(TaxCollectorComplementaryInformations);
    Protocol.TaxCollectorGuildInformations = TaxCollectorGuildInformations;
    var TaxCollectorInformations = (function () {
        function TaxCollectorInformations() {
            this.uniqueId = 0;
            this.firtNameId = 0;
            this.lastNameId = 0;
            this.additionalInfos = new AdditionalTaxCollectorInformations();
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.state = 0;
            this.look = new EntityLook();
            this.complements = [];
        }
        TaxCollectorInformations.prototype.getTypeId = function () {
            return TaxCollectorInformations.ID;
        };
        TaxCollectorInformations.prototype.reset = function () {
            this.uniqueId = 0;
            this.firtNameId = 0;
            this.lastNameId = 0;
            this.additionalInfos = new AdditionalTaxCollectorInformations();
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.state = 0;
            this.look = new EntityLook();
            this.complements = [];
        };
        TaxCollectorInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorInformations(param1);
        };
        TaxCollectorInformations.prototype.serializeAs_TaxCollectorInformations = function (param1) {
            param1.writeInt(this.uniqueId);
            if (this.firtNameId < 0) {
                throw new Error('Forbidden value (' + this.firtNameId + ') on element firtNameId.');
            }
            param1.writeVarShort(this.firtNameId);
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element lastNameId.');
            }
            param1.writeVarShort(this.lastNameId);
            this.additionalInfos.serializeAs_AdditionalTaxCollectorInformations(param1);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeByte(this.state);
            this.look.serializeAs_EntityLook(param1);
            param1.writeShort(this.complements.length);
            var _loc2_ = 0;
            while (_loc2_ < this.complements.length) {
                param1.writeShort((this.complements[_loc2_]).getTypeId());
                (this.complements[_loc2_]).serialize(param1);
                _loc2_++;
            }
        };
        TaxCollectorInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorInformations(param1);
        };
        TaxCollectorInformations.prototype.deserializeAs_TaxCollectorInformations = function (param1) {
            var _loc4_ = 0;
            var _loc5_ = null;
            this.uniqueId = param1.readInt();
            this.firtNameId = param1.readVarUhShort();
            if (this.firtNameId < 0) {
                throw new Error('Forbidden value (' + this.firtNameId + ') on element of TaxCollectorInformations.firtNameId.');
            }
            this.lastNameId = param1.readVarUhShort();
            if (this.lastNameId < 0) {
                throw new Error('Forbidden value (' + this.lastNameId + ') on element of TaxCollectorInformations.lastNameId.');
            }
            this.additionalInfos = new AdditionalTaxCollectorInformations();
            this.additionalInfos.deserialize(param1);
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of TaxCollectorInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of TaxCollectorInformations.worldY.');
            }
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of TaxCollectorInformations.subAreaId.');
            }
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of TaxCollectorInformations.state.');
            }
            this.look = new EntityLook();
            this.look.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readUnsignedShort();
                _loc5_ = ProtocolTypeManager.getInstance(TaxCollectorComplementaryInformations, _loc4_);
                _loc5_.deserialize(param1);
                this.complements.push(_loc5_);
                _loc3_++;
            }
        };
        TaxCollectorInformations.ID = 167;
        return TaxCollectorInformations;
    })();
    Protocol.TaxCollectorInformations = TaxCollectorInformations;
    var TaxCollectorLootInformations = (function (_super) {
        __extends(TaxCollectorLootInformations, _super);
        function TaxCollectorLootInformations() {
            this.kamas = 0;
            this.experience = 0;
            this.pods = 0;
            this.itemsValue = 0;
            _super.call(this);
        }
        TaxCollectorLootInformations.prototype.getTypeId = function () {
            return TaxCollectorLootInformations.ID;
        };
        TaxCollectorLootInformations.prototype.reset = function () {
            this.kamas = 0;
            this.experience = 0;
            this.pods = 0;
            this.itemsValue = 0;
        };
        TaxCollectorLootInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorLootInformations(param1);
        };
        TaxCollectorLootInformations.prototype.serializeAs_TaxCollectorLootInformations = function (param1) {
            _super.prototype.serializeAs_TaxCollectorComplementaryInformations.call(this, param1);
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element kamas.');
            }
            param1.writeVarInt(this.kamas);
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.pods < 0) {
                throw new Error('Forbidden value (' + this.pods + ') on element pods.');
            }
            param1.writeVarInt(this.pods);
            if (this.itemsValue < 0) {
                throw new Error('Forbidden value (' + this.itemsValue + ') on element itemsValue.');
            }
            param1.writeVarInt(this.itemsValue);
        };
        TaxCollectorLootInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorLootInformations(param1);
        };
        TaxCollectorLootInformations.prototype.deserializeAs_TaxCollectorLootInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.kamas = param1.readVarUhInt();
            if (this.kamas < 0) {
                throw new Error('Forbidden value (' + this.kamas + ') on element of TaxCollectorLootInformations.kamas.');
            }
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of TaxCollectorLootInformations.experience.');
            }
            this.pods = param1.readVarUhInt();
            if (this.pods < 0) {
                throw new Error('Forbidden value (' + this.pods + ') on element of TaxCollectorLootInformations.pods.');
            }
            this.itemsValue = param1.readVarUhInt();
            if (this.itemsValue < 0) {
                throw new Error('Forbidden value (' + this.itemsValue + ') on element of TaxCollectorLootInformations.itemsValue.');
            }
        };
        TaxCollectorLootInformations.ID = 372;
        return TaxCollectorLootInformations;
    })(TaxCollectorComplementaryInformations);
    Protocol.TaxCollectorLootInformations = TaxCollectorLootInformations;
    var TaxCollectorWaitingForHelpInformations = (function (_super) {
        __extends(TaxCollectorWaitingForHelpInformations, _super);
        function TaxCollectorWaitingForHelpInformations() {
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
            _super.call(this);
        }
        TaxCollectorWaitingForHelpInformations.prototype.getTypeId = function () {
            return TaxCollectorWaitingForHelpInformations.ID;
        };
        TaxCollectorWaitingForHelpInformations.prototype.reset = function () {
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
        };
        TaxCollectorWaitingForHelpInformations.prototype.serialize = function (param1) {
            this.serializeAs_TaxCollectorWaitingForHelpInformations(param1);
        };
        TaxCollectorWaitingForHelpInformations.prototype.serializeAs_TaxCollectorWaitingForHelpInformations = function (param1) {
            _super.prototype.serializeAs_TaxCollectorComplementaryInformations.call(this, param1);
            this.waitingForHelpInfo.serializeAs_ProtectedEntityWaitingForHelpInfo(param1);
        };
        TaxCollectorWaitingForHelpInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_TaxCollectorWaitingForHelpInformations(param1);
        };
        TaxCollectorWaitingForHelpInformations.prototype.deserializeAs_TaxCollectorWaitingForHelpInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
            this.waitingForHelpInfo.deserialize(param1);
        };
        TaxCollectorWaitingForHelpInformations.ID = 447;
        return TaxCollectorWaitingForHelpInformations;
    })(TaxCollectorComplementaryInformations);
    Protocol.TaxCollectorWaitingForHelpInformations = TaxCollectorWaitingForHelpInformations;
    var AccountHouseInformations = (function () {
        function AccountHouseInformations() {
            this.houseId = 0;
            this.modelId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        }
        AccountHouseInformations.prototype.getTypeId = function () {
            return AccountHouseInformations.ID;
        };
        AccountHouseInformations.prototype.reset = function () {
            this.houseId = 0;
            this.modelId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
        };
        AccountHouseInformations.prototype.serialize = function (param1) {
            this.serializeAs_AccountHouseInformations(param1);
        };
        AccountHouseInformations.prototype.serializeAs_AccountHouseInformations = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarShort(this.modelId);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
        };
        AccountHouseInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AccountHouseInformations(param1);
        };
        AccountHouseInformations.prototype.deserializeAs_AccountHouseInformations = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of AccountHouseInformations.houseId.');
            }
            this.modelId = param1.readVarUhShort();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of AccountHouseInformations.modelId.');
            }
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of AccountHouseInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of AccountHouseInformations.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of AccountHouseInformations.subAreaId.');
            }
        };
        AccountHouseInformations.ID = 390;
        return AccountHouseInformations;
    })();
    Protocol.AccountHouseInformations = AccountHouseInformations;
    var HouseInformations = (function () {
        function HouseInformations() {
            this.houseId = 0;
            this.doorsOnMap = [];
            this.ownerName = '';
            this.isOnSale = false;
            this.isSaleLocked = false;
            this.modelId = 0;
        }
        HouseInformations.prototype.getTypeId = function () {
            return HouseInformations.ID;
        };
        HouseInformations.prototype.reset = function () {
            this.houseId = 0;
            this.doorsOnMap = [];
            this.ownerName = '';
            this.isOnSale = false;
            this.isSaleLocked = false;
            this.modelId = 0;
        };
        HouseInformations.prototype.serialize = function (param1) {
            this.serializeAs_HouseInformations(param1);
        };
        HouseInformations.prototype.serializeAs_HouseInformations = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.isOnSale);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.isSaleLocked);
            param1.writeByte(_loc2_);
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            param1.writeShort(this.doorsOnMap.length);
            var _loc3_ = 0;
            while (_loc3_ < this.doorsOnMap.length) {
                if (this.doorsOnMap[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.doorsOnMap[_loc3_] + ') on element 2 (starting at 1) of doorsOnMap.');
                }
                param1.writeInt(this.doorsOnMap[_loc3_]);
                _loc3_++;
            }
            param1.writeUTF(this.ownerName);
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarShort(this.modelId);
        };
        HouseInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseInformations(param1);
        };
        HouseInformations.prototype.deserializeAs_HouseInformations = function (param1) {
            var _loc5_ = 0;
            var _loc2_ = param1.readByte();
            this.isOnSale = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.isSaleLocked = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseInformations.houseId.');
            }
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc5_ = param1.readInt();
                if (_loc5_ < 0) {
                    throw new Error('Forbidden value (' + _loc5_ + ') on elements of doorsOnMap.');
                }
                this.doorsOnMap.push(_loc5_);
                _loc4_++;
            }
            this.ownerName = param1.readUTF();
            this.modelId = param1.readVarUhShort();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of HouseInformations.modelId.');
            }
        };
        HouseInformations.ID = 111;
        return HouseInformations;
    })();
    Protocol.HouseInformations = HouseInformations;
    var HouseInformationsExtended = (function (_super) {
        __extends(HouseInformationsExtended, _super);
        function HouseInformationsExtended() {
            this.guildInfo = new GuildInformations();
            _super.call(this);
        }
        HouseInformationsExtended.prototype.getTypeId = function () {
            return HouseInformationsExtended.ID;
        };
        HouseInformationsExtended.prototype.reset = function () {
            this.guildInfo = new GuildInformations();
        };
        HouseInformationsExtended.prototype.serialize = function (param1) {
            this.serializeAs_HouseInformationsExtended(param1);
        };
        HouseInformationsExtended.prototype.serializeAs_HouseInformationsExtended = function (param1) {
            _super.prototype.serializeAs_HouseInformations.call(this, param1);
            this.guildInfo.serializeAs_GuildInformations(param1);
        };
        HouseInformationsExtended.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseInformationsExtended(param1);
        };
        HouseInformationsExtended.prototype.deserializeAs_HouseInformationsExtended = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildInfo = new GuildInformations();
            this.guildInfo.deserialize(param1);
        };
        HouseInformationsExtended.ID = 112;
        return HouseInformationsExtended;
    })(HouseInformations);
    Protocol.HouseInformationsExtended = HouseInformationsExtended;
    var HouseInformationsForGuild = (function () {
        function HouseInformationsForGuild() {
            this.houseId = 0;
            this.modelId = 0;
            this.ownerName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.skillListIds = [];
            this.guildshareParams = 0;
        }
        HouseInformationsForGuild.prototype.getTypeId = function () {
            return HouseInformationsForGuild.ID;
        };
        HouseInformationsForGuild.prototype.reset = function () {
            this.houseId = 0;
            this.modelId = 0;
            this.ownerName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.skillListIds = [];
            this.guildshareParams = 0;
        };
        HouseInformationsForGuild.prototype.serialize = function (param1) {
            this.serializeAs_HouseInformationsForGuild(param1);
        };
        HouseInformationsForGuild.prototype.serializeAs_HouseInformationsForGuild = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarInt(this.modelId);
            param1.writeUTF(this.ownerName);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeShort(this.skillListIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.skillListIds.length) {
                param1.writeInt(this.skillListIds[_loc2_]);
                _loc2_++;
            }
            if (this.guildshareParams < 0) {
                throw new Error('Forbidden value (' + this.guildshareParams + ') on element guildshareParams.');
            }
            param1.writeVarInt(this.guildshareParams);
        };
        HouseInformationsForGuild.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseInformationsForGuild(param1);
        };
        HouseInformationsForGuild.prototype.deserializeAs_HouseInformationsForGuild = function (param1) {
            var _loc4_ = 0;
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseInformationsForGuild.houseId.');
            }
            this.modelId = param1.readVarUhInt();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of HouseInformationsForGuild.modelId.');
            }
            this.ownerName = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of HouseInformationsForGuild.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of HouseInformationsForGuild.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of HouseInformationsForGuild.subAreaId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.skillListIds.push(_loc4_);
                _loc3_++;
            }
            this.guildshareParams = param1.readVarUhInt();
            if (this.guildshareParams < 0) {
                throw new Error('Forbidden value (' + this.guildshareParams + ') on element of HouseInformationsForGuild.guildshareParams.');
            }
        };
        HouseInformationsForGuild.ID = 170;
        return HouseInformationsForGuild;
    })();
    Protocol.HouseInformationsForGuild = HouseInformationsForGuild;
    var HouseInformationsForSell = (function () {
        function HouseInformationsForSell() {
            this.modelId = 0;
            this.ownerName = '';
            this.ownerConnected = false;
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.nbRoom = 0;
            this.nbChest = 0;
            this.skillListIds = [];
            this.isLocked = false;
            this.price = 0;
        }
        HouseInformationsForSell.prototype.getTypeId = function () {
            return HouseInformationsForSell.ID;
        };
        HouseInformationsForSell.prototype.reset = function () {
            this.modelId = 0;
            this.ownerName = '';
            this.ownerConnected = false;
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.nbRoom = 0;
            this.nbChest = 0;
            this.skillListIds = [];
            this.isLocked = false;
            this.price = 0;
        };
        HouseInformationsForSell.prototype.serialize = function (param1) {
            this.serializeAs_HouseInformationsForSell(param1);
        };
        HouseInformationsForSell.prototype.serializeAs_HouseInformationsForSell = function (param1) {
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarInt(this.modelId);
            param1.writeUTF(this.ownerName);
            param1.writeBoolean(this.ownerConnected);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeByte(this.nbRoom);
            param1.writeByte(this.nbChest);
            param1.writeShort(this.skillListIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.skillListIds.length) {
                param1.writeInt(this.skillListIds[_loc2_]);
                _loc2_++;
            }
            param1.writeBoolean(this.isLocked);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        HouseInformationsForSell.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseInformationsForSell(param1);
        };
        HouseInformationsForSell.prototype.deserializeAs_HouseInformationsForSell = function (param1) {
            var _loc4_ = 0;
            this.modelId = param1.readVarUhInt();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of HouseInformationsForSell.modelId.');
            }
            this.ownerName = param1.readUTF();
            this.ownerConnected = param1.readBoolean();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of HouseInformationsForSell.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of HouseInformationsForSell.worldY.');
            }
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of HouseInformationsForSell.subAreaId.');
            }
            this.nbRoom = param1.readByte();
            this.nbChest = param1.readByte();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.skillListIds.push(_loc4_);
                _loc3_++;
            }
            this.isLocked = param1.readBoolean();
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of HouseInformationsForSell.price.');
            }
        };
        HouseInformationsForSell.ID = 221;
        return HouseInformationsForSell;
    })();
    Protocol.HouseInformationsForSell = HouseInformationsForSell;
    var HouseInformationsInside = (function () {
        function HouseInformationsInside() {
            this.houseId = 0;
            this.modelId = 0;
            this.ownerId = 0;
            this.ownerName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.price = 0;
            this.isLocked = false;
        }
        HouseInformationsInside.prototype.getTypeId = function () {
            return HouseInformationsInside.ID;
        };
        HouseInformationsInside.prototype.reset = function () {
            this.houseId = 0;
            this.modelId = 0;
            this.ownerId = 0;
            this.ownerName = '';
            this.worldX = 0;
            this.worldY = 0;
            this.price = 0;
            this.isLocked = false;
        };
        HouseInformationsInside.prototype.serialize = function (param1) {
            this.serializeAs_HouseInformationsInside(param1);
        };
        HouseInformationsInside.prototype.serializeAs_HouseInformationsInside = function (param1) {
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element houseId.');
            }
            param1.writeVarInt(this.houseId);
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeVarShort(this.modelId);
            param1.writeInt(this.ownerId);
            param1.writeUTF(this.ownerName);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeInt(this.price);
            param1.writeBoolean(this.isLocked);
        };
        HouseInformationsInside.prototype.deserialize = function (param1) {
            this.deserializeAs_HouseInformationsInside(param1);
        };
        HouseInformationsInside.prototype.deserializeAs_HouseInformationsInside = function (param1) {
            this.houseId = param1.readVarUhInt();
            if (this.houseId < 0) {
                throw new Error('Forbidden value (' + this.houseId + ') on element of HouseInformationsInside.houseId.');
            }
            this.modelId = param1.readVarUhShort();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of HouseInformationsInside.modelId.');
            }
            this.ownerId = param1.readInt();
            this.ownerName = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of HouseInformationsInside.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of HouseInformationsInside.worldY.');
            }
            this.price = param1.readInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of HouseInformationsInside.price.');
            }
            this.isLocked = param1.readBoolean();
        };
        HouseInformationsInside.ID = 218;
        return HouseInformationsInside;
    })();
    Protocol.HouseInformationsInside = HouseInformationsInside;
    var Idol = (function () {
        function Idol() {
            this.id = 0;
            this.xpBonusPercent = 0;
            this.dropBonusPercent = 0;
        }
        Idol.prototype.getTypeId = function () {
            return Idol.ID;
        };
        Idol.prototype.reset = function () {
            this.id = 0;
            this.xpBonusPercent = 0;
            this.dropBonusPercent = 0;
        };
        Idol.prototype.serialize = function (param1) {
            this.serializeAs_Idol(param1);
        };
        Idol.prototype.serializeAs_Idol = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeVarShort(this.id);
            if (this.xpBonusPercent < 0) {
                throw new Error('Forbidden value (' + this.xpBonusPercent + ') on element xpBonusPercent.');
            }
            param1.writeVarShort(this.xpBonusPercent);
            if (this.dropBonusPercent < 0) {
                throw new Error('Forbidden value (' + this.dropBonusPercent + ') on element dropBonusPercent.');
            }
            param1.writeVarShort(this.dropBonusPercent);
        };
        Idol.prototype.deserialize = function (param1) {
            this.deserializeAs_Idol(param1);
        };
        Idol.prototype.deserializeAs_Idol = function (param1) {
            this.id = param1.readVarUhShort();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of Idol.id.');
            }
            this.xpBonusPercent = param1.readVarUhShort();
            if (this.xpBonusPercent < 0) {
                throw new Error('Forbidden value (' + this.xpBonusPercent + ') on element of Idol.xpBonusPercent.');
            }
            this.dropBonusPercent = param1.readVarUhShort();
            if (this.dropBonusPercent < 0) {
                throw new Error('Forbidden value (' + this.dropBonusPercent + ') on element of Idol.dropBonusPercent.');
            }
        };
        Idol.ID = 489;
        return Idol;
    })();
    Protocol.Idol = Idol;
    var PartyIdol = (function (_super) {
        __extends(PartyIdol, _super);
        function PartyIdol() {
            this.ownersIds = [];
            _super.call(this);
        }
        PartyIdol.prototype.getTypeId = function () {
            return PartyIdol.ID;
        };
        PartyIdol.prototype.reset = function () {
            this.ownersIds = [];
        };
        PartyIdol.prototype.serialize = function (param1) {
            this.serializeAs_PartyIdol(param1);
        };
        PartyIdol.prototype.serializeAs_PartyIdol = function (param1) {
            _super.prototype.serializeAs_Idol.call(this, param1);
            param1.writeShort(this.ownersIds.length);
            var _loc2_ = 0;
            while (_loc2_ < this.ownersIds.length) {
                param1.writeInt(this.ownersIds[_loc2_]);
                _loc2_++;
            }
        };
        PartyIdol.prototype.deserialize = function (param1) {
            this.deserializeAs_PartyIdol(param1);
        };
        PartyIdol.prototype.deserializeAs_PartyIdol = function (param1) {
            var _loc4_ = 0;
            _super.prototype.deserialize.call(this, param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readInt();
                this.ownersIds.push(_loc4_);
                _loc3_++;
            }
        };
        PartyIdol.ID = 490;
        return PartyIdol;
    })(Idol);
    Protocol.PartyIdol = PartyIdol;
    var InteractiveElement = (function () {
        function InteractiveElement() {
            this.elementId = 0;
            this.elementTypeId = 0;
            this.enabledSkills = [];
            this.disabledSkills = [];
        }
        InteractiveElement.prototype.getTypeId = function () {
            return InteractiveElement.ID;
        };
        InteractiveElement.prototype.reset = function () {
            this.elementId = 0;
            this.elementTypeId = 0;
            this.enabledSkills = [];
            this.disabledSkills = [];
        };
        InteractiveElement.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveElement(param1);
        };
        InteractiveElement.prototype.serializeAs_InteractiveElement = function (param1) {
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element elementId.');
            }
            param1.writeInt(this.elementId);
            param1.writeInt(this.elementTypeId);
            param1.writeShort(this.enabledSkills.length);
            var _loc2_ = 0;
            while (_loc2_ < this.enabledSkills.length) {
                param1.writeShort((this.enabledSkills[_loc2_]).getTypeId());
                (this.enabledSkills[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.disabledSkills.length);
            var _loc3_ = 0;
            while (_loc3_ < this.disabledSkills.length) {
                param1.writeShort((this.disabledSkills[_loc3_]).getTypeId());
                (this.disabledSkills[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        InteractiveElement.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveElement(param1);
        };
        InteractiveElement.prototype.deserializeAs_InteractiveElement = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            var _loc9_ = null;
            this.elementId = param1.readInt();
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element of InteractiveElement.elementId.');
            }
            this.elementTypeId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(InteractiveElementSkill, _loc6_);
                _loc7_.deserialize(param1);
                this.enabledSkills.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readUnsignedShort();
                _loc9_ = ProtocolTypeManager.getInstance(InteractiveElementSkill, _loc8_);
                _loc9_.deserialize(param1);
                this.disabledSkills.push(_loc9_);
                _loc5_++;
            }
        };
        InteractiveElement.ID = 80;
        return InteractiveElement;
    })();
    Protocol.InteractiveElement = InteractiveElement;
    var InteractiveElementNamedSkill = (function (_super) {
        __extends(InteractiveElementNamedSkill, _super);
        function InteractiveElementNamedSkill() {
            this.nameId = 0;
            _super.call(this);
        }
        InteractiveElementNamedSkill.prototype.getTypeId = function () {
            return InteractiveElementNamedSkill.ID;
        };
        InteractiveElementNamedSkill.prototype.reset = function () {
            this.nameId = 0;
        };
        InteractiveElementNamedSkill.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveElementNamedSkill(param1);
        };
        InteractiveElementNamedSkill.prototype.serializeAs_InteractiveElementNamedSkill = function (param1) {
            _super.prototype.serializeAs_InteractiveElementSkill.call(this, param1);
            if (this.nameId < 0) {
                throw new Error('Forbidden value (' + this.nameId + ') on element nameId.');
            }
            param1.writeVarInt(this.nameId);
        };
        InteractiveElementNamedSkill.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveElementNamedSkill(param1);
        };
        InteractiveElementNamedSkill.prototype.deserializeAs_InteractiveElementNamedSkill = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.nameId = param1.readVarUhInt();
            if (this.nameId < 0) {
                throw new Error('Forbidden value (' + this.nameId + ') on element of InteractiveElementNamedSkill.nameId.');
            }
        };
        InteractiveElementNamedSkill.ID = 220;
        return InteractiveElementNamedSkill;
    })(InteractiveElementSkill);
    Protocol.InteractiveElementNamedSkill = InteractiveElementNamedSkill;
    var InteractiveElementSkill = (function () {
        function InteractiveElementSkill() {
            this.skillId = 0;
            this.skillInstanceUid = 0;
        }
        InteractiveElementSkill.prototype.getTypeId = function () {
            return InteractiveElementSkill.ID;
        };
        InteractiveElementSkill.prototype.reset = function () {
            this.skillId = 0;
            this.skillInstanceUid = 0;
        };
        InteractiveElementSkill.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveElementSkill(param1);
        };
        InteractiveElementSkill.prototype.serializeAs_InteractiveElementSkill = function (param1) {
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarInt(this.skillId);
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element skillInstanceUid.');
            }
            param1.writeInt(this.skillInstanceUid);
        };
        InteractiveElementSkill.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveElementSkill(param1);
        };
        InteractiveElementSkill.prototype.deserializeAs_InteractiveElementSkill = function (param1) {
            this.skillId = param1.readVarUhInt();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of InteractiveElementSkill.skillId.');
            }
            this.skillInstanceUid = param1.readInt();
            if (this.skillInstanceUid < 0) {
                throw new Error('Forbidden value (' + this.skillInstanceUid + ') on element of InteractiveElementSkill.skillInstanceUid.');
            }
        };
        InteractiveElementSkill.ID = 219;
        return InteractiveElementSkill;
    })();
    Protocol.InteractiveElementSkill = InteractiveElementSkill;
    var InteractiveElementWithAgeBonus = (function (_super) {
        __extends(InteractiveElementWithAgeBonus, _super);
        function InteractiveElementWithAgeBonus() {
            this.ageBonus = 0;
            _super.call(this);
        }
        InteractiveElementWithAgeBonus.prototype.getTypeId = function () {
            return InteractiveElementWithAgeBonus.ID;
        };
        InteractiveElementWithAgeBonus.prototype.reset = function () {
            this.ageBonus = 0;
        };
        InteractiveElementWithAgeBonus.prototype.serialize = function (param1) {
            this.serializeAs_InteractiveElementWithAgeBonus(param1);
        };
        InteractiveElementWithAgeBonus.prototype.serializeAs_InteractiveElementWithAgeBonus = function (param1) {
            _super.prototype.serializeAs_InteractiveElement.call(this, param1);
            if (this.ageBonus < -1 || this.ageBonus > 1000) {
                throw new Error('Forbidden value (' + this.ageBonus + ') on element ageBonus.');
            }
            param1.writeShort(this.ageBonus);
        };
        InteractiveElementWithAgeBonus.prototype.deserialize = function (param1) {
            this.deserializeAs_InteractiveElementWithAgeBonus(param1);
        };
        InteractiveElementWithAgeBonus.prototype.deserializeAs_InteractiveElementWithAgeBonus = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.ageBonus = param1.readShort();
            if (this.ageBonus < -1 || this.ageBonus > 1000) {
                throw new Error('Forbidden value (' + this.ageBonus + ') on element of InteractiveElementWithAgeBonus.ageBonus.');
            }
        };
        InteractiveElementWithAgeBonus.ID = 398;
        return InteractiveElementWithAgeBonus;
    })(InteractiveElement);
    Protocol.InteractiveElementWithAgeBonus = InteractiveElementWithAgeBonus;
    var MapObstacle = (function () {
        function MapObstacle() {
            this.obstacleCellId = 0;
            this.state = 0;
        }
        MapObstacle.prototype.getTypeId = function () {
            return MapObstacle.ID;
        };
        MapObstacle.prototype.reset = function () {
            this.obstacleCellId = 0;
            this.state = 0;
        };
        MapObstacle.prototype.serialize = function (param1) {
            this.serializeAs_MapObstacle(param1);
        };
        MapObstacle.prototype.serializeAs_MapObstacle = function (param1) {
            if (this.obstacleCellId < 0 || this.obstacleCellId > 559) {
                throw new Error('Forbidden value (' + this.obstacleCellId + ') on element obstacleCellId.');
            }
            param1.writeVarShort(this.obstacleCellId);
            param1.writeByte(this.state);
        };
        MapObstacle.prototype.deserialize = function (param1) {
            this.deserializeAs_MapObstacle(param1);
        };
        MapObstacle.prototype.deserializeAs_MapObstacle = function (param1) {
            this.obstacleCellId = param1.readVarUhShort();
            if (this.obstacleCellId < 0 || this.obstacleCellId > 559) {
                throw new Error('Forbidden value (' + this.obstacleCellId + ') on element of MapObstacle.obstacleCellId.');
            }
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of MapObstacle.state.');
            }
        };
        MapObstacle.ID = 200;
        return MapObstacle;
    })();
    Protocol.MapObstacle = MapObstacle;
    var StatedElement = (function () {
        function StatedElement() {
            this.elementId = 0;
            this.elementCellId = 0;
            this.elementState = 0;
        }
        StatedElement.prototype.getTypeId = function () {
            return StatedElement.ID;
        };
        StatedElement.prototype.reset = function () {
            this.elementId = 0;
            this.elementCellId = 0;
            this.elementState = 0;
        };
        StatedElement.prototype.serialize = function (param1) {
            this.serializeAs_StatedElement(param1);
        };
        StatedElement.prototype.serializeAs_StatedElement = function (param1) {
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element elementId.');
            }
            param1.writeInt(this.elementId);
            if (this.elementCellId < 0 || this.elementCellId > 559) {
                throw new Error('Forbidden value (' + this.elementCellId + ') on element elementCellId.');
            }
            param1.writeVarShort(this.elementCellId);
            if (this.elementState < 0) {
                throw new Error('Forbidden value (' + this.elementState + ') on element elementState.');
            }
            param1.writeVarInt(this.elementState);
        };
        StatedElement.prototype.deserialize = function (param1) {
            this.deserializeAs_StatedElement(param1);
        };
        StatedElement.prototype.deserializeAs_StatedElement = function (param1) {
            this.elementId = param1.readInt();
            if (this.elementId < 0) {
                throw new Error('Forbidden value (' + this.elementId + ') on element of StatedElement.elementId.');
            }
            this.elementCellId = param1.readVarUhShort();
            if (this.elementCellId < 0 || this.elementCellId > 559) {
                throw new Error('Forbidden value (' + this.elementCellId + ') on element of StatedElement.elementCellId.');
            }
            this.elementState = param1.readVarUhInt();
            if (this.elementState < 0) {
                throw new Error('Forbidden value (' + this.elementState + ') on element of StatedElement.elementState.');
            }
        };
        StatedElement.ID = 108;
        return StatedElement;
    })();
    Protocol.StatedElement = StatedElement;
    var SkillActionDescription = (function () {
        function SkillActionDescription() {
            this.skillId = 0;
        }
        SkillActionDescription.prototype.getTypeId = function () {
            return SkillActionDescription.ID;
        };
        SkillActionDescription.prototype.reset = function () {
            this.skillId = 0;
        };
        SkillActionDescription.prototype.serialize = function (param1) {
            this.serializeAs_SkillActionDescription(param1);
        };
        SkillActionDescription.prototype.serializeAs_SkillActionDescription = function (param1) {
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element skillId.');
            }
            param1.writeVarShort(this.skillId);
        };
        SkillActionDescription.prototype.deserialize = function (param1) {
            this.deserializeAs_SkillActionDescription(param1);
        };
        SkillActionDescription.prototype.deserializeAs_SkillActionDescription = function (param1) {
            this.skillId = param1.readVarUhShort();
            if (this.skillId < 0) {
                throw new Error('Forbidden value (' + this.skillId + ') on element of SkillActionDescription.skillId.');
            }
        };
        SkillActionDescription.ID = 102;
        return SkillActionDescription;
    })();
    Protocol.SkillActionDescription = SkillActionDescription;
    var SkillActionDescriptionCollect = (function (_super) {
        __extends(SkillActionDescriptionCollect, _super);
        function SkillActionDescriptionCollect() {
            this.min = 0;
            this.max = 0;
            _super.call(this);
        }
        SkillActionDescriptionCollect.prototype.getTypeId = function () {
            return SkillActionDescriptionCollect.ID;
        };
        SkillActionDescriptionCollect.prototype.reset = function () {
            this.min = 0;
            this.max = 0;
        };
        SkillActionDescriptionCollect.prototype.serialize = function (param1) {
            this.serializeAs_SkillActionDescriptionCollect(param1);
        };
        SkillActionDescriptionCollect.prototype.serializeAs_SkillActionDescriptionCollect = function (param1) {
            _super.prototype.serializeAs_SkillActionDescriptionTimed.call(this, param1);
            if (this.min < 0) {
                throw new Error('Forbidden value (' + this.min + ') on element min.');
            }
            param1.writeVarShort(this.min);
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element max.');
            }
            param1.writeVarShort(this.max);
        };
        SkillActionDescriptionCollect.prototype.deserialize = function (param1) {
            this.deserializeAs_SkillActionDescriptionCollect(param1);
        };
        SkillActionDescriptionCollect.prototype.deserializeAs_SkillActionDescriptionCollect = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.min = param1.readVarUhShort();
            if (this.min < 0) {
                throw new Error('Forbidden value (' + this.min + ') on element of SkillActionDescriptionCollect.min.');
            }
            this.max = param1.readVarUhShort();
            if (this.max < 0) {
                throw new Error('Forbidden value (' + this.max + ') on element of SkillActionDescriptionCollect.max.');
            }
        };
        SkillActionDescriptionCollect.ID = 99;
        return SkillActionDescriptionCollect;
    })(SkillActionDescriptionTimed);
    Protocol.SkillActionDescriptionCollect = SkillActionDescriptionCollect;
    var SkillActionDescriptionCraft = (function (_super) {
        __extends(SkillActionDescriptionCraft, _super);
        function SkillActionDescriptionCraft() {
            this.probability = 0;
            _super.call(this);
        }
        SkillActionDescriptionCraft.prototype.getTypeId = function () {
            return SkillActionDescriptionCraft.ID;
        };
        SkillActionDescriptionCraft.prototype.reset = function () {
            this.probability = 0;
        };
        SkillActionDescriptionCraft.prototype.serialize = function (param1) {
            this.serializeAs_SkillActionDescriptionCraft(param1);
        };
        SkillActionDescriptionCraft.prototype.serializeAs_SkillActionDescriptionCraft = function (param1) {
            _super.prototype.serializeAs_SkillActionDescription.call(this, param1);
            if (this.probability < 0) {
                throw new Error('Forbidden value (' + this.probability + ') on element probability.');
            }
            param1.writeByte(this.probability);
        };
        SkillActionDescriptionCraft.prototype.deserialize = function (param1) {
            this.deserializeAs_SkillActionDescriptionCraft(param1);
        };
        SkillActionDescriptionCraft.prototype.deserializeAs_SkillActionDescriptionCraft = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.probability = param1.readByte();
            if (this.probability < 0) {
                throw new Error('Forbidden value (' + this.probability + ') on element of SkillActionDescriptionCraft.probability.');
            }
        };
        SkillActionDescriptionCraft.ID = 100;
        return SkillActionDescriptionCraft;
    })(SkillActionDescription);
    Protocol.SkillActionDescriptionCraft = SkillActionDescriptionCraft;
    var SkillActionDescriptionTimed = (function (_super) {
        __extends(SkillActionDescriptionTimed, _super);
        function SkillActionDescriptionTimed() {
            this.time = 0;
            _super.call(this);
        }
        SkillActionDescriptionTimed.prototype.getTypeId = function () {
            return SkillActionDescriptionTimed.ID;
        };
        SkillActionDescriptionTimed.prototype.reset = function () {
            this.time = 0;
        };
        SkillActionDescriptionTimed.prototype.serialize = function (param1) {
            this.serializeAs_SkillActionDescriptionTimed(param1);
        };
        SkillActionDescriptionTimed.prototype.serializeAs_SkillActionDescriptionTimed = function (param1) {
            _super.prototype.serializeAs_SkillActionDescription.call(this, param1);
            if (this.time < 0 || this.time > 255) {
                throw new Error('Forbidden value (' + this.time + ') on element time.');
            }
            param1.writeByte(this.time);
        };
        SkillActionDescriptionTimed.prototype.deserialize = function (param1) {
            this.deserializeAs_SkillActionDescriptionTimed(param1);
        };
        SkillActionDescriptionTimed.prototype.deserializeAs_SkillActionDescriptionTimed = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.time = param1.readUnsignedByte();
            if (this.time < 0 || this.time > 255) {
                throw new Error('Forbidden value (' + this.time + ') on element of SkillActionDescriptionTimed.time.');
            }
        };
        SkillActionDescriptionTimed.ID = 103;
        return SkillActionDescriptionTimed;
    })(SkillActionDescription);
    Protocol.SkillActionDescriptionTimed = SkillActionDescriptionTimed;
    var IdolsPreset = (function () {
        function IdolsPreset() {
            this.presetId = 0;
            this.symbolId = 0;
            this.idolId = [];
        }
        IdolsPreset.prototype.getTypeId = function () {
            return IdolsPreset.ID;
        };
        IdolsPreset.prototype.reset = function () {
            this.presetId = 0;
            this.symbolId = 0;
            this.idolId = [];
        };
        IdolsPreset.prototype.serialize = function (param1) {
            this.serializeAs_IdolsPreset(param1);
        };
        IdolsPreset.prototype.serializeAs_IdolsPreset = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element symbolId.');
            }
            param1.writeByte(this.symbolId);
            param1.writeShort(this.idolId.length);
            var _loc2_ = 0;
            while (_loc2_ < this.idolId.length) {
                if (this.idolId[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.idolId[_loc2_] + ') on element 3 (starting at 1) of idolId.');
                }
                param1.writeVarShort(this.idolId[_loc2_]);
                _loc2_++;
            }
        };
        IdolsPreset.prototype.deserialize = function (param1) {
            this.deserializeAs_IdolsPreset(param1);
        };
        IdolsPreset.prototype.deserializeAs_IdolsPreset = function (param1) {
            var _loc4_ = 0;
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of IdolsPreset.presetId.');
            }
            this.symbolId = param1.readByte();
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element of IdolsPreset.symbolId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = param1.readVarUhShort();
                if (_loc4_ < 0) {
                    throw new Error('Forbidden value (' + _loc4_ + ') on elements of idolId.');
                }
                this.idolId.push(_loc4_);
                _loc3_++;
            }
        };
        IdolsPreset.ID = 491;
        return IdolsPreset;
    })();
    Protocol.IdolsPreset = IdolsPreset;
    var Preset = (function () {
        function Preset() {
            this.presetId = 0;
            this.symbolId = 0;
            this.mount = false;
            this.objects = [];
        }
        Preset.prototype.getTypeId = function () {
            return Preset.ID;
        };
        Preset.prototype.reset = function () {
            this.presetId = 0;
            this.symbolId = 0;
            this.mount = false;
            this.objects = [];
        };
        Preset.prototype.serialize = function (param1) {
            this.serializeAs_Preset(param1);
        };
        Preset.prototype.serializeAs_Preset = function (param1) {
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element symbolId.');
            }
            param1.writeByte(this.symbolId);
            param1.writeBoolean(this.mount);
            param1.writeShort(this.objects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.objects.length) {
                (this.objects[_loc2_]).serializeAs_PresetItem(param1);
                _loc2_++;
            }
        };
        Preset.prototype.deserialize = function (param1) {
            this.deserializeAs_Preset(param1);
        };
        Preset.prototype.deserializeAs_Preset = function (param1) {
            var _loc4_ = null;
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of Preset.presetId.');
            }
            this.symbolId = param1.readByte();
            if (this.symbolId < 0) {
                throw new Error('Forbidden value (' + this.symbolId + ') on element of Preset.symbolId.');
            }
            this.mount = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new PresetItem();
                _loc4_.deserialize(param1);
                this.objects.push(_loc4_);
                _loc3_++;
            }
        };
        Preset.ID = 355;
        return Preset;
    })();
    Protocol.Preset = Preset;
    var PresetItem = (function () {
        function PresetItem() {
            this.position = 63;
            this.objGid = 0;
            this.objUid = 0;
        }
        PresetItem.prototype.getTypeId = function () {
            return PresetItem.ID;
        };
        PresetItem.prototype.reset = function () {
            this.position = 63;
            this.objGid = 0;
            this.objUid = 0;
        };
        PresetItem.prototype.serialize = function (param1) {
            this.serializeAs_PresetItem(param1);
        };
        PresetItem.prototype.serializeAs_PresetItem = function (param1) {
            param1.writeByte(this.position);
            if (this.objGid < 0) {
                throw new Error('Forbidden value (' + this.objGid + ') on element objGid.');
            }
            param1.writeVarShort(this.objGid);
            if (this.objUid < 0) {
                throw new Error('Forbidden value (' + this.objUid + ') on element objUid.');
            }
            param1.writeVarInt(this.objUid);
        };
        PresetItem.prototype.deserialize = function (param1) {
            this.deserializeAs_PresetItem(param1);
        };
        PresetItem.prototype.deserializeAs_PresetItem = function (param1) {
            this.position = param1.readUnsignedByte();
            if (this.position < 0 || this.position > 255) {
                throw new Error('Forbidden value (' + this.position + ') on element of PresetItem.position.');
            }
            this.objGid = param1.readVarUhShort();
            if (this.objGid < 0) {
                throw new Error('Forbidden value (' + this.objGid + ') on element of PresetItem.objGid.');
            }
            this.objUid = param1.readVarUhInt();
            if (this.objUid < 0) {
                throw new Error('Forbidden value (' + this.objUid + ') on element of PresetItem.objUid.');
            }
        };
        PresetItem.ID = 354;
        return PresetItem;
    })();
    Protocol.PresetItem = PresetItem;
    var EntityLook = (function () {
        function EntityLook() {
            this.bonesId = 0;
            this.skins = [];
            this.indexedColors = [];
            this.scales = [];
            this.subentities = [];
        }
        EntityLook.prototype.getTypeId = function () {
            return EntityLook.ID;
        };
        EntityLook.prototype.reset = function () {
            this.bonesId = 0;
            this.skins = [];
            this.indexedColors = [];
            this.scales = [];
            this.subentities = [];
        };
        EntityLook.prototype.serialize = function (param1) {
            this.serializeAs_EntityLook(param1);
        };
        EntityLook.prototype.serializeAs_EntityLook = function (param1) {
            if (this.bonesId < 0) {
                throw new Error('Forbidden value (' + this.bonesId + ') on element bonesId.');
            }
            param1.writeVarShort(this.bonesId);
            param1.writeShort(this.skins.length);
            var _loc2_ = 0;
            while (_loc2_ < this.skins.length) {
                if (this.skins[_loc2_] < 0) {
                    throw new Error('Forbidden value (' + this.skins[_loc2_] + ') on element 2 (starting at 1) of skins.');
                }
                param1.writeVarShort(this.skins[_loc2_]);
                _loc2_++;
            }
            param1.writeShort(this.indexedColors.length);
            var _loc3_ = 0;
            while (_loc3_ < this.indexedColors.length) {
                param1.writeInt(this.indexedColors[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.scales.length);
            var _loc4_ = 0;
            while (_loc4_ < this.scales.length) {
                param1.writeVarShort(this.scales[_loc4_]);
                _loc4_++;
            }
            param1.writeShort(this.subentities.length);
            var _loc5_ = 0;
            while (_loc5_ < this.subentities.length) {
                (this.subentities[_loc5_]).serializeAs_SubEntity(param1);
                _loc5_++;
            }
        };
        EntityLook.prototype.deserialize = function (param1) {
            this.deserializeAs_EntityLook(param1);
        };
        EntityLook.prototype.deserializeAs_EntityLook = function (param1) {
            var _loc10_ = 0;
            var _loc11_ = 0;
            var _loc12_ = 0;
            var _loc13_ = null;
            this.bonesId = param1.readVarUhShort();
            if (this.bonesId < 0) {
                throw new Error('Forbidden value (' + this.bonesId + ') on element of EntityLook.bonesId.');
            }
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc10_ = param1.readVarUhShort();
                if (_loc10_ < 0) {
                    throw new Error('Forbidden value (' + _loc10_ + ') on elements of skins.');
                }
                this.skins.push(_loc10_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc11_ = param1.readInt();
                this.indexedColors.push(_loc11_);
                _loc5_++;
            }
            var _loc6_ = param1.readUnsignedShort();
            var _loc7_ = 0;
            while (_loc7_ < _loc6_) {
                _loc12_ = param1.readVarShort();
                this.scales.push(_loc12_);
                _loc7_++;
            }
            var _loc8_ = param1.readUnsignedShort();
            var _loc9_ = 0;
            while (_loc9_ < _loc8_) {
                _loc13_ = new SubEntity();
                _loc13_.deserialize(param1);
                this.subentities.push(_loc13_);
                _loc9_++;
            }
        };
        EntityLook.ID = 55;
        return EntityLook;
    })();
    Protocol.EntityLook = EntityLook;
    var IndexedEntityLook = (function () {
        function IndexedEntityLook() {
            this.look = new EntityLook();
            this.index = 0;
        }
        IndexedEntityLook.prototype.getTypeId = function () {
            return IndexedEntityLook.ID;
        };
        IndexedEntityLook.prototype.reset = function () {
            this.look = new EntityLook();
            this.index = 0;
        };
        IndexedEntityLook.prototype.serialize = function (param1) {
            this.serializeAs_IndexedEntityLook(param1);
        };
        IndexedEntityLook.prototype.serializeAs_IndexedEntityLook = function (param1) {
            this.look.serializeAs_EntityLook(param1);
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element index.');
            }
            param1.writeByte(this.index);
        };
        IndexedEntityLook.prototype.deserialize = function (param1) {
            this.deserializeAs_IndexedEntityLook(param1);
        };
        IndexedEntityLook.prototype.deserializeAs_IndexedEntityLook = function (param1) {
            this.look = new EntityLook();
            this.look.deserialize(param1);
            this.index = param1.readByte();
            if (this.index < 0) {
                throw new Error('Forbidden value (' + this.index + ') on element of IndexedEntityLook.index.');
            }
        };
        IndexedEntityLook.ID = 405;
        return IndexedEntityLook;
    })();
    Protocol.IndexedEntityLook = IndexedEntityLook;
    var SubEntity = (function () {
        function SubEntity() {
            this.bindingPointCategory = 0;
            this.bindingPointIndex = 0;
            this.subEntityLook = new EntityLook();
        }
        SubEntity.prototype.getTypeId = function () {
            return SubEntity.ID;
        };
        SubEntity.prototype.reset = function () {
            this.bindingPointCategory = 0;
            this.bindingPointIndex = 0;
            this.subEntityLook = new EntityLook();
        };
        SubEntity.prototype.serialize = function (param1) {
            this.serializeAs_SubEntity(param1);
        };
        SubEntity.prototype.serializeAs_SubEntity = function (param1) {
            param1.writeByte(this.bindingPointCategory);
            if (this.bindingPointIndex < 0) {
                throw new Error('Forbidden value (' + this.bindingPointIndex + ') on element bindingPointIndex.');
            }
            param1.writeByte(this.bindingPointIndex);
            this.subEntityLook.serializeAs_EntityLook(param1);
        };
        SubEntity.prototype.deserialize = function (param1) {
            this.deserializeAs_SubEntity(param1);
        };
        SubEntity.prototype.deserializeAs_SubEntity = function (param1) {
            this.bindingPointCategory = param1.readByte();
            if (this.bindingPointCategory < 0) {
                throw new Error('Forbidden value (' + this.bindingPointCategory + ') on element of SubEntity.bindingPointCategory.');
            }
            this.bindingPointIndex = param1.readByte();
            if (this.bindingPointIndex < 0) {
                throw new Error('Forbidden value (' + this.bindingPointIndex + ') on element of SubEntity.bindingPointIndex.');
            }
            this.subEntityLook = new EntityLook();
            this.subEntityLook.deserialize(param1);
        };
        SubEntity.ID = 54;
        return SubEntity;
    })();
    Protocol.SubEntity = SubEntity;
    var ItemDurability = (function () {
        function ItemDurability() {
            this.durability = 0;
            this.durabilityMax = 0;
        }
        ItemDurability.prototype.getTypeId = function () {
            return ItemDurability.ID;
        };
        ItemDurability.prototype.reset = function () {
            this.durability = 0;
            this.durabilityMax = 0;
        };
        ItemDurability.prototype.serialize = function (param1) {
            this.serializeAs_ItemDurability(param1);
        };
        ItemDurability.prototype.serializeAs_ItemDurability = function (param1) {
            param1.writeShort(this.durability);
            param1.writeShort(this.durabilityMax);
        };
        ItemDurability.prototype.deserialize = function (param1) {
            this.deserializeAs_ItemDurability(param1);
        };
        ItemDurability.prototype.deserializeAs_ItemDurability = function (param1) {
            this.durability = param1.readShort();
            this.durabilityMax = param1.readShort();
        };
        ItemDurability.ID = 168;
        return ItemDurability;
    })();
    Protocol.ItemDurability = ItemDurability;
    var MountClientData = (function () {
        function MountClientData() {
            this.id = 0;
            this.model = 0;
            this.ancestor = [];
            this.behaviors = [];
            this.name = '';
            this.sex = false;
            this.ownerId = 0;
            this.experience = 0;
            this.experienceForLevel = 0;
            this.experienceForNextLevel = 0;
            this.level = 0;
            this.isRideable = false;
            this.maxPods = 0;
            this.isWild = false;
            this.stamina = 0;
            this.staminaMax = 0;
            this.maturity = 0;
            this.maturityForAdult = 0;
            this.energy = 0;
            this.energyMax = 0;
            this.serenity = 0;
            this.aggressivityMax = 0;
            this.serenityMax = 0;
            this.love = 0;
            this.loveMax = 0;
            this.fecondationTime = 0;
            this.isFecondationReady = false;
            this.boostLimiter = 0;
            this.boostMax = 0;
            this.reproductionCount = 0;
            this.reproductionCountMax = 0;
            this.effectList = [];
        }
        MountClientData.prototype.getTypeId = function () {
            return MountClientData.ID;
        };
        MountClientData.prototype.reset = function () {
            this.id = 0;
            this.model = 0;
            this.ancestor = [];
            this.behaviors = [];
            this.name = '';
            this.sex = false;
            this.ownerId = 0;
            this.experience = 0;
            this.experienceForLevel = 0;
            this.experienceForNextLevel = 0;
            this.level = 0;
            this.isRideable = false;
            this.maxPods = 0;
            this.isWild = false;
            this.stamina = 0;
            this.staminaMax = 0;
            this.maturity = 0;
            this.maturityForAdult = 0;
            this.energy = 0;
            this.energyMax = 0;
            this.serenity = 0;
            this.aggressivityMax = 0;
            this.serenityMax = 0;
            this.love = 0;
            this.loveMax = 0;
            this.fecondationTime = 0;
            this.isFecondationReady = false;
            this.boostLimiter = 0;
            this.boostMax = 0;
            this.reproductionCount = 0;
            this.reproductionCountMax = 0;
            this.effectList = [];
        };
        MountClientData.prototype.serialize = function (param1) {
            this.serializeAs_MountClientData(param1);
        };
        MountClientData.prototype.serializeAs_MountClientData = function (param1) {
            var _loc2_ = 0;
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 0, this.sex);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 1, this.isRideable);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 2, this.isWild);
            _loc2_ = BooleanByteWrapper.setFlag(_loc2_, 3, this.isFecondationReady);
            param1.writeByte(_loc2_);
            if (this.id < -9.007199254740992E15 || this.id > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeDouble(this.id);
            if (this.model < 0) {
                throw new Error('Forbidden value (' + this.model + ') on element model.');
            }
            param1.writeVarInt(this.model);
            param1.writeShort(this.ancestor.length);
            var _loc3_ = 0;
            while (_loc3_ < this.ancestor.length) {
                if (this.ancestor[_loc3_] < 0) {
                    throw new Error('Forbidden value (' + this.ancestor[_loc3_] + ') on element 3 (starting at 1) of ancestor.');
                }
                param1.writeInt(this.ancestor[_loc3_]);
                _loc3_++;
            }
            param1.writeShort(this.behaviors.length);
            var _loc4_ = 0;
            while (_loc4_ < this.behaviors.length) {
                if (this.behaviors[_loc4_] < 0) {
                    throw new Error('Forbidden value (' + this.behaviors[_loc4_] + ') on element 4 (starting at 1) of behaviors.');
                }
                param1.writeInt(this.behaviors[_loc4_]);
                _loc4_++;
            }
            param1.writeUTF(this.name);
            if (this.ownerId < 0) {
                throw new Error('Forbidden value (' + this.ownerId + ') on element ownerId.');
            }
            param1.writeInt(this.ownerId);
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element experience.');
            }
            param1.writeVarLong(this.experience);
            if (this.experienceForLevel < 0 || this.experienceForLevel > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceForLevel + ') on element experienceForLevel.');
            }
            param1.writeVarLong(this.experienceForLevel);
            if (this.experienceForNextLevel < -9.007199254740992E15 || this.experienceForNextLevel > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceForNextLevel + ') on element experienceForNextLevel.');
            }
            param1.writeDouble(this.experienceForNextLevel);
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element level.');
            }
            param1.writeByte(this.level);
            if (this.maxPods < 0) {
                throw new Error('Forbidden value (' + this.maxPods + ') on element maxPods.');
            }
            param1.writeVarInt(this.maxPods);
            if (this.stamina < 0) {
                throw new Error('Forbidden value (' + this.stamina + ') on element stamina.');
            }
            param1.writeVarInt(this.stamina);
            if (this.staminaMax < 0) {
                throw new Error('Forbidden value (' + this.staminaMax + ') on element staminaMax.');
            }
            param1.writeVarInt(this.staminaMax);
            if (this.maturity < 0) {
                throw new Error('Forbidden value (' + this.maturity + ') on element maturity.');
            }
            param1.writeVarInt(this.maturity);
            if (this.maturityForAdult < 0) {
                throw new Error('Forbidden value (' + this.maturityForAdult + ') on element maturityForAdult.');
            }
            param1.writeVarInt(this.maturityForAdult);
            if (this.energy < 0) {
                throw new Error('Forbidden value (' + this.energy + ') on element energy.');
            }
            param1.writeVarInt(this.energy);
            if (this.energyMax < 0) {
                throw new Error('Forbidden value (' + this.energyMax + ') on element energyMax.');
            }
            param1.writeVarInt(this.energyMax);
            param1.writeInt(this.serenity);
            param1.writeInt(this.aggressivityMax);
            if (this.serenityMax < 0) {
                throw new Error('Forbidden value (' + this.serenityMax + ') on element serenityMax.');
            }
            param1.writeVarInt(this.serenityMax);
            if (this.love < 0) {
                throw new Error('Forbidden value (' + this.love + ') on element love.');
            }
            param1.writeVarInt(this.love);
            if (this.loveMax < 0) {
                throw new Error('Forbidden value (' + this.loveMax + ') on element loveMax.');
            }
            param1.writeVarInt(this.loveMax);
            param1.writeInt(this.fecondationTime);
            if (this.boostLimiter < 0) {
                throw new Error('Forbidden value (' + this.boostLimiter + ') on element boostLimiter.');
            }
            param1.writeInt(this.boostLimiter);
            if (this.boostMax < -9.007199254740992E15 || this.boostMax > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.boostMax + ') on element boostMax.');
            }
            param1.writeDouble(this.boostMax);
            param1.writeInt(this.reproductionCount);
            if (this.reproductionCountMax < 0) {
                throw new Error('Forbidden value (' + this.reproductionCountMax + ') on element reproductionCountMax.');
            }
            param1.writeVarInt(this.reproductionCountMax);
            param1.writeShort(this.effectList.length);
            var _loc5_ = 0;
            while (_loc5_ < this.effectList.length) {
                (this.effectList[_loc5_]).serializeAs_ObjectEffectInteger(param1);
                _loc5_++;
            }
        };
        MountClientData.prototype.deserialize = function (param1) {
            this.deserializeAs_MountClientData(param1);
        };
        MountClientData.prototype.deserializeAs_MountClientData = function (param1) {
            var _loc9_ = 0;
            var _loc10_ = 0;
            var _loc11_ = null;
            var _loc2_ = param1.readByte();
            this.sex = BooleanByteWrapper.getFlag(_loc2_, 0);
            this.isRideable = BooleanByteWrapper.getFlag(_loc2_, 1);
            this.isWild = BooleanByteWrapper.getFlag(_loc2_, 2);
            this.isFecondationReady = BooleanByteWrapper.getFlag(_loc2_, 3);
            this.id = param1.readDouble();
            if (this.id < -9.007199254740992E15 || this.id > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.id + ') on element of MountClientData.id.');
            }
            this.model = param1.readVarUhInt();
            if (this.model < 0) {
                throw new Error('Forbidden value (' + this.model + ') on element of MountClientData.model.');
            }
            var _loc3_ = param1.readUnsignedShort();
            var _loc4_ = 0;
            while (_loc4_ < _loc3_) {
                _loc9_ = param1.readInt();
                if (_loc9_ < 0) {
                    throw new Error('Forbidden value (' + _loc9_ + ') on elements of ancestor.');
                }
                this.ancestor.push(_loc9_);
                _loc4_++;
            }
            var _loc5_ = param1.readUnsignedShort();
            var _loc6_ = 0;
            while (_loc6_ < _loc5_) {
                _loc10_ = param1.readInt();
                if (_loc10_ < 0) {
                    throw new Error('Forbidden value (' + _loc10_ + ') on elements of behaviors.');
                }
                this.behaviors.push(_loc10_);
                _loc6_++;
            }
            this.name = param1.readUTF();
            this.ownerId = param1.readInt();
            if (this.ownerId < 0) {
                throw new Error('Forbidden value (' + this.ownerId + ') on element of MountClientData.ownerId.');
            }
            this.experience = param1.readVarUhLong();
            if (this.experience < 0 || this.experience > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experience + ') on element of MountClientData.experience.');
            }
            this.experienceForLevel = param1.readVarUhLong();
            if (this.experienceForLevel < 0 || this.experienceForLevel > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceForLevel + ') on element of MountClientData.experienceForLevel.');
            }
            this.experienceForNextLevel = param1.readDouble();
            if (this.experienceForNextLevel < -9.007199254740992E15 || this.experienceForNextLevel > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.experienceForNextLevel + ') on element of MountClientData.experienceForNextLevel.');
            }
            this.level = param1.readByte();
            if (this.level < 0) {
                throw new Error('Forbidden value (' + this.level + ') on element of MountClientData.level.');
            }
            this.maxPods = param1.readVarUhInt();
            if (this.maxPods < 0) {
                throw new Error('Forbidden value (' + this.maxPods + ') on element of MountClientData.maxPods.');
            }
            this.stamina = param1.readVarUhInt();
            if (this.stamina < 0) {
                throw new Error('Forbidden value (' + this.stamina + ') on element of MountClientData.stamina.');
            }
            this.staminaMax = param1.readVarUhInt();
            if (this.staminaMax < 0) {
                throw new Error('Forbidden value (' + this.staminaMax + ') on element of MountClientData.staminaMax.');
            }
            this.maturity = param1.readVarUhInt();
            if (this.maturity < 0) {
                throw new Error('Forbidden value (' + this.maturity + ') on element of MountClientData.maturity.');
            }
            this.maturityForAdult = param1.readVarUhInt();
            if (this.maturityForAdult < 0) {
                throw new Error('Forbidden value (' + this.maturityForAdult + ') on element of MountClientData.maturityForAdult.');
            }
            this.energy = param1.readVarUhInt();
            if (this.energy < 0) {
                throw new Error('Forbidden value (' + this.energy + ') on element of MountClientData.energy.');
            }
            this.energyMax = param1.readVarUhInt();
            if (this.energyMax < 0) {
                throw new Error('Forbidden value (' + this.energyMax + ') on element of MountClientData.energyMax.');
            }
            this.serenity = param1.readInt();
            this.aggressivityMax = param1.readInt();
            this.serenityMax = param1.readVarUhInt();
            if (this.serenityMax < 0) {
                throw new Error('Forbidden value (' + this.serenityMax + ') on element of MountClientData.serenityMax.');
            }
            this.love = param1.readVarUhInt();
            if (this.love < 0) {
                throw new Error('Forbidden value (' + this.love + ') on element of MountClientData.love.');
            }
            this.loveMax = param1.readVarUhInt();
            if (this.loveMax < 0) {
                throw new Error('Forbidden value (' + this.loveMax + ') on element of MountClientData.loveMax.');
            }
            this.fecondationTime = param1.readInt();
            this.boostLimiter = param1.readInt();
            if (this.boostLimiter < 0) {
                throw new Error('Forbidden value (' + this.boostLimiter + ') on element of MountClientData.boostLimiter.');
            }
            this.boostMax = param1.readDouble();
            if (this.boostMax < -9.007199254740992E15 || this.boostMax > 9.007199254740992E15) {
                throw new Error('Forbidden value (' + this.boostMax + ') on element of MountClientData.boostMax.');
            }
            this.reproductionCount = param1.readInt();
            this.reproductionCountMax = param1.readVarUhInt();
            if (this.reproductionCountMax < 0) {
                throw new Error('Forbidden value (' + this.reproductionCountMax + ') on element of MountClientData.reproductionCountMax.');
            }
            var _loc7_ = param1.readUnsignedShort();
            var _loc8_ = 0;
            while (_loc8_ < _loc7_) {
                _loc11_ = new ObjectEffectInteger();
                _loc11_.deserialize(param1);
                this.effectList.push(_loc11_);
                _loc8_++;
            }
        };
        MountClientData.ID = 178;
        return MountClientData;
    })();
    Protocol.MountClientData = MountClientData;
    var UpdateMountBoost = (function () {
        function UpdateMountBoost() {
            this.type = 0;
        }
        UpdateMountBoost.prototype.getTypeId = function () {
            return UpdateMountBoost.ID;
        };
        UpdateMountBoost.prototype.reset = function () {
            this.type = 0;
        };
        UpdateMountBoost.prototype.serialize = function (param1) {
            this.serializeAs_UpdateMountBoost(param1);
        };
        UpdateMountBoost.prototype.serializeAs_UpdateMountBoost = function (param1) {
            param1.writeByte(this.type);
        };
        UpdateMountBoost.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateMountBoost(param1);
        };
        UpdateMountBoost.prototype.deserializeAs_UpdateMountBoost = function (param1) {
            this.type = param1.readByte();
            if (this.type < 0) {
                throw new Error('Forbidden value (' + this.type + ') on element of UpdateMountBoost.type.');
            }
        };
        UpdateMountBoost.ID = 356;
        return UpdateMountBoost;
    })();
    Protocol.UpdateMountBoost = UpdateMountBoost;
    var UpdateMountIntBoost = (function (_super) {
        __extends(UpdateMountIntBoost, _super);
        function UpdateMountIntBoost() {
            this.value = 0;
            _super.call(this);
        }
        UpdateMountIntBoost.prototype.getTypeId = function () {
            return UpdateMountIntBoost.ID;
        };
        UpdateMountIntBoost.prototype.reset = function () {
            this.value = 0;
        };
        UpdateMountIntBoost.prototype.serialize = function (param1) {
            this.serializeAs_UpdateMountIntBoost(param1);
        };
        UpdateMountIntBoost.prototype.serializeAs_UpdateMountIntBoost = function (param1) {
            _super.prototype.serializeAs_UpdateMountBoost.call(this, param1);
            param1.writeInt(this.value);
        };
        UpdateMountIntBoost.prototype.deserialize = function (param1) {
            this.deserializeAs_UpdateMountIntBoost(param1);
        };
        UpdateMountIntBoost.prototype.deserializeAs_UpdateMountIntBoost = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.value = param1.readInt();
        };
        UpdateMountIntBoost.ID = 357;
        return UpdateMountIntBoost;
    })(UpdateMountBoost);
    Protocol.UpdateMountIntBoost = UpdateMountIntBoost;
    var MountInformationsForPaddock = (function () {
        function MountInformationsForPaddock() {
            this.modelId = 0;
            this.name = '';
            this.ownerName = '';
        }
        MountInformationsForPaddock.prototype.getTypeId = function () {
            return MountInformationsForPaddock.ID;
        };
        MountInformationsForPaddock.prototype.reset = function () {
            this.modelId = 0;
            this.name = '';
            this.ownerName = '';
        };
        MountInformationsForPaddock.prototype.serialize = function (param1) {
            this.serializeAs_MountInformationsForPaddock(param1);
        };
        MountInformationsForPaddock.prototype.serializeAs_MountInformationsForPaddock = function (param1) {
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element modelId.');
            }
            param1.writeByte(this.modelId);
            param1.writeUTF(this.name);
            param1.writeUTF(this.ownerName);
        };
        MountInformationsForPaddock.prototype.deserialize = function (param1) {
            this.deserializeAs_MountInformationsForPaddock(param1);
        };
        MountInformationsForPaddock.prototype.deserializeAs_MountInformationsForPaddock = function (param1) {
            this.modelId = param1.readByte();
            if (this.modelId < 0) {
                throw new Error('Forbidden value (' + this.modelId + ') on element of MountInformationsForPaddock.modelId.');
            }
            this.name = param1.readUTF();
            this.ownerName = param1.readUTF();
        };
        MountInformationsForPaddock.ID = 184;
        return MountInformationsForPaddock;
    })();
    Protocol.MountInformationsForPaddock = MountInformationsForPaddock;
    var PaddockAbandonnedInformations = (function (_super) {
        __extends(PaddockAbandonnedInformations, _super);
        function PaddockAbandonnedInformations() {
            this.guildId = 0;
            _super.call(this);
        }
        PaddockAbandonnedInformations.prototype.getTypeId = function () {
            return PaddockAbandonnedInformations.ID;
        };
        PaddockAbandonnedInformations.prototype.reset = function () {
            this.guildId = 0;
        };
        PaddockAbandonnedInformations.prototype.serialize = function (param1) {
            this.serializeAs_PaddockAbandonnedInformations(param1);
        };
        PaddockAbandonnedInformations.prototype.serializeAs_PaddockAbandonnedInformations = function (param1) {
            _super.prototype.serializeAs_PaddockBuyableInformations.call(this, param1);
            param1.writeInt(this.guildId);
        };
        PaddockAbandonnedInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockAbandonnedInformations(param1);
        };
        PaddockAbandonnedInformations.prototype.deserializeAs_PaddockAbandonnedInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildId = param1.readInt();
        };
        PaddockAbandonnedInformations.ID = 133;
        return PaddockAbandonnedInformations;
    })(PaddockBuyableInformations);
    Protocol.PaddockAbandonnedInformations = PaddockAbandonnedInformations;
    var PaddockBuyableInformations = (function (_super) {
        __extends(PaddockBuyableInformations, _super);
        function PaddockBuyableInformations() {
            this.price = 0;
            this.locked = false;
            _super.call(this);
        }
        PaddockBuyableInformations.prototype.getTypeId = function () {
            return PaddockBuyableInformations.ID;
        };
        PaddockBuyableInformations.prototype.reset = function () {
            this.price = 0;
            this.locked = false;
        };
        PaddockBuyableInformations.prototype.serialize = function (param1) {
            this.serializeAs_PaddockBuyableInformations(param1);
        };
        PaddockBuyableInformations.prototype.serializeAs_PaddockBuyableInformations = function (param1) {
            _super.prototype.serializeAs_PaddockInformations.call(this, param1);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
            param1.writeBoolean(this.locked);
        };
        PaddockBuyableInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockBuyableInformations(param1);
        };
        PaddockBuyableInformations.prototype.deserializeAs_PaddockBuyableInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of PaddockBuyableInformations.price.');
            }
            this.locked = param1.readBoolean();
        };
        PaddockBuyableInformations.ID = 130;
        return PaddockBuyableInformations;
    })(PaddockInformations);
    Protocol.PaddockBuyableInformations = PaddockBuyableInformations;
    var PaddockContentInformations = (function (_super) {
        __extends(PaddockContentInformations, _super);
        function PaddockContentInformations() {
            this.paddockId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.abandonned = false;
            this.mountsInformations = [];
            _super.call(this);
        }
        PaddockContentInformations.prototype.getTypeId = function () {
            return PaddockContentInformations.ID;
        };
        PaddockContentInformations.prototype.reset = function () {
            this.paddockId = 0;
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.subAreaId = 0;
            this.abandonned = false;
            this.mountsInformations = [];
        };
        PaddockContentInformations.prototype.serialize = function (param1) {
            this.serializeAs_PaddockContentInformations(param1);
        };
        PaddockContentInformations.prototype.serializeAs_PaddockContentInformations = function (param1) {
            _super.prototype.serializeAs_PaddockInformations.call(this, param1);
            param1.writeInt(this.paddockId);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeBoolean(this.abandonned);
            param1.writeShort(this.mountsInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.mountsInformations.length) {
                (this.mountsInformations[_loc2_]).serializeAs_MountInformationsForPaddock(param1);
                _loc2_++;
            }
        };
        PaddockContentInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockContentInformations(param1);
        };
        PaddockContentInformations.prototype.deserializeAs_PaddockContentInformations = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.paddockId = param1.readInt();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PaddockContentInformations.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PaddockContentInformations.worldY.');
            }
            this.mapId = param1.readInt();
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PaddockContentInformations.subAreaId.');
            }
            this.abandonned = param1.readBoolean();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new MountInformationsForPaddock();
                _loc4_.deserialize(param1);
                this.mountsInformations.push(_loc4_);
                _loc3_++;
            }
        };
        PaddockContentInformations.ID = 183;
        return PaddockContentInformations;
    })(PaddockInformations);
    Protocol.PaddockContentInformations = PaddockContentInformations;
    var PaddockInformations = (function () {
        function PaddockInformations() {
            this.maxOutdoorMount = 0;
            this.maxItems = 0;
        }
        PaddockInformations.prototype.getTypeId = function () {
            return PaddockInformations.ID;
        };
        PaddockInformations.prototype.reset = function () {
            this.maxOutdoorMount = 0;
            this.maxItems = 0;
        };
        PaddockInformations.prototype.serialize = function (param1) {
            this.serializeAs_PaddockInformations(param1);
        };
        PaddockInformations.prototype.serializeAs_PaddockInformations = function (param1) {
            if (this.maxOutdoorMount < 0) {
                throw new Error('Forbidden value (' + this.maxOutdoorMount + ') on element maxOutdoorMount.');
            }
            param1.writeVarShort(this.maxOutdoorMount);
            if (this.maxItems < 0) {
                throw new Error('Forbidden value (' + this.maxItems + ') on element maxItems.');
            }
            param1.writeVarShort(this.maxItems);
        };
        PaddockInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockInformations(param1);
        };
        PaddockInformations.prototype.deserializeAs_PaddockInformations = function (param1) {
            this.maxOutdoorMount = param1.readVarUhShort();
            if (this.maxOutdoorMount < 0) {
                throw new Error('Forbidden value (' + this.maxOutdoorMount + ') on element of PaddockInformations.maxOutdoorMount.');
            }
            this.maxItems = param1.readVarUhShort();
            if (this.maxItems < 0) {
                throw new Error('Forbidden value (' + this.maxItems + ') on element of PaddockInformations.maxItems.');
            }
        };
        PaddockInformations.ID = 132;
        return PaddockInformations;
    })();
    Protocol.PaddockInformations = PaddockInformations;
    var PaddockInformationsForSell = (function () {
        function PaddockInformationsForSell() {
            this.guildOwner = '';
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.nbMount = 0;
            this.nbObject = 0;
            this.price = 0;
        }
        PaddockInformationsForSell.prototype.getTypeId = function () {
            return PaddockInformationsForSell.ID;
        };
        PaddockInformationsForSell.prototype.reset = function () {
            this.guildOwner = '';
            this.worldX = 0;
            this.worldY = 0;
            this.subAreaId = 0;
            this.nbMount = 0;
            this.nbObject = 0;
            this.price = 0;
        };
        PaddockInformationsForSell.prototype.serialize = function (param1) {
            this.serializeAs_PaddockInformationsForSell(param1);
        };
        PaddockInformationsForSell.prototype.serializeAs_PaddockInformationsForSell = function (param1) {
            param1.writeUTF(this.guildOwner);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            param1.writeByte(this.nbMount);
            param1.writeByte(this.nbObject);
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element price.');
            }
            param1.writeVarInt(this.price);
        };
        PaddockInformationsForSell.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockInformationsForSell(param1);
        };
        PaddockInformationsForSell.prototype.deserializeAs_PaddockInformationsForSell = function (param1) {
            this.guildOwner = param1.readUTF();
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PaddockInformationsForSell.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PaddockInformationsForSell.worldY.');
            }
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PaddockInformationsForSell.subAreaId.');
            }
            this.nbMount = param1.readByte();
            this.nbObject = param1.readByte();
            this.price = param1.readVarUhInt();
            if (this.price < 0) {
                throw new Error('Forbidden value (' + this.price + ') on element of PaddockInformationsForSell.price.');
            }
        };
        PaddockInformationsForSell.ID = 222;
        return PaddockInformationsForSell;
    })();
    Protocol.PaddockInformationsForSell = PaddockInformationsForSell;
    var PaddockItem = (function (_super) {
        __extends(PaddockItem, _super);
        function PaddockItem() {
            this.durability = new ItemDurability();
            _super.call(this);
        }
        PaddockItem.prototype.getTypeId = function () {
            return PaddockItem.ID;
        };
        PaddockItem.prototype.reset = function () {
            this.durability = new ItemDurability();
        };
        PaddockItem.prototype.serialize = function (param1) {
            this.serializeAs_PaddockItem(param1);
        };
        PaddockItem.prototype.serializeAs_PaddockItem = function (param1) {
            _super.prototype.serializeAs_ObjectItemInRolePlay.call(this, param1);
            this.durability.serializeAs_ItemDurability(param1);
        };
        PaddockItem.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockItem(param1);
        };
        PaddockItem.prototype.deserializeAs_PaddockItem = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.durability = new ItemDurability();
            this.durability.deserialize(param1);
        };
        PaddockItem.ID = 185;
        return PaddockItem;
    })(ObjectItemInRolePlay);
    Protocol.PaddockItem = PaddockItem;
    var PaddockPrivateInformations = (function (_super) {
        __extends(PaddockPrivateInformations, _super);
        function PaddockPrivateInformations() {
            this.guildInfo = new GuildInformations();
            _super.call(this);
        }
        PaddockPrivateInformations.prototype.getTypeId = function () {
            return PaddockPrivateInformations.ID;
        };
        PaddockPrivateInformations.prototype.reset = function () {
            this.guildInfo = new GuildInformations();
        };
        PaddockPrivateInformations.prototype.serialize = function (param1) {
            this.serializeAs_PaddockPrivateInformations(param1);
        };
        PaddockPrivateInformations.prototype.serializeAs_PaddockPrivateInformations = function (param1) {
            _super.prototype.serializeAs_PaddockAbandonnedInformations.call(this, param1);
            this.guildInfo.serializeAs_GuildInformations(param1);
        };
        PaddockPrivateInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_PaddockPrivateInformations(param1);
        };
        PaddockPrivateInformations.prototype.deserializeAs_PaddockPrivateInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.guildInfo = new GuildInformations();
            this.guildInfo.deserialize(param1);
        };
        PaddockPrivateInformations.ID = 131;
        return PaddockPrivateInformations;
    })(PaddockAbandonnedInformations);
    Protocol.PaddockPrivateInformations = PaddockPrivateInformations;
    var AllianceInsiderPrismInformation = (function (_super) {
        __extends(AllianceInsiderPrismInformation, _super);
        function AllianceInsiderPrismInformation() {
            this.lastTimeSlotModificationDate = 0;
            this.lastTimeSlotModificationAuthorGuildId = 0;
            this.lastTimeSlotModificationAuthorId = 0;
            this.lastTimeSlotModificationAuthorName = '';
            this.modulesObjects = [];
            _super.call(this);
        }
        AllianceInsiderPrismInformation.prototype.getTypeId = function () {
            return AllianceInsiderPrismInformation.ID;
        };
        AllianceInsiderPrismInformation.prototype.reset = function () {
            this.lastTimeSlotModificationDate = 0;
            this.lastTimeSlotModificationAuthorGuildId = 0;
            this.lastTimeSlotModificationAuthorId = 0;
            this.lastTimeSlotModificationAuthorName = '';
            this.modulesObjects = [];
        };
        AllianceInsiderPrismInformation.prototype.serialize = function (param1) {
            this.serializeAs_AllianceInsiderPrismInformation(param1);
        };
        AllianceInsiderPrismInformation.prototype.serializeAs_AllianceInsiderPrismInformation = function (param1) {
            _super.prototype.serializeAs_PrismInformation.call(this, param1);
            if (this.lastTimeSlotModificationDate < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationDate + ') on element lastTimeSlotModificationDate.');
            }
            param1.writeInt(this.lastTimeSlotModificationDate);
            if (this.lastTimeSlotModificationAuthorGuildId < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationAuthorGuildId + ') on element lastTimeSlotModificationAuthorGuildId.');
            }
            param1.writeVarInt(this.lastTimeSlotModificationAuthorGuildId);
            if (this.lastTimeSlotModificationAuthorId < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationAuthorId + ') on element lastTimeSlotModificationAuthorId.');
            }
            param1.writeVarInt(this.lastTimeSlotModificationAuthorId);
            param1.writeUTF(this.lastTimeSlotModificationAuthorName);
            param1.writeShort(this.modulesObjects.length);
            var _loc2_ = 0;
            while (_loc2_ < this.modulesObjects.length) {
                (this.modulesObjects[_loc2_]).serializeAs_ObjectItem(param1);
                _loc2_++;
            }
        };
        AllianceInsiderPrismInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceInsiderPrismInformation(param1);
        };
        AllianceInsiderPrismInformation.prototype.deserializeAs_AllianceInsiderPrismInformation = function (param1) {
            var _loc4_ = null;
            _super.prototype.deserialize.call(this, param1);
            this.lastTimeSlotModificationDate = param1.readInt();
            if (this.lastTimeSlotModificationDate < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationDate + ') on element of AllianceInsiderPrismInformation.lastTimeSlotModificationDate.');
            }
            this.lastTimeSlotModificationAuthorGuildId = param1.readVarUhInt();
            if (this.lastTimeSlotModificationAuthorGuildId < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationAuthorGuildId + ') on element of AllianceInsiderPrismInformation.lastTimeSlotModificationAuthorGuildId.');
            }
            this.lastTimeSlotModificationAuthorId = param1.readVarUhInt();
            if (this.lastTimeSlotModificationAuthorId < 0) {
                throw new Error('Forbidden value (' + this.lastTimeSlotModificationAuthorId + ') on element of AllianceInsiderPrismInformation.lastTimeSlotModificationAuthorId.');
            }
            this.lastTimeSlotModificationAuthorName = param1.readUTF();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItem();
                _loc4_.deserialize(param1);
                this.modulesObjects.push(_loc4_);
                _loc3_++;
            }
        };
        AllianceInsiderPrismInformation.ID = 431;
        return AllianceInsiderPrismInformation;
    })(PrismInformation);
    Protocol.AllianceInsiderPrismInformation = AllianceInsiderPrismInformation;
    var AlliancePrismInformation = (function (_super) {
        __extends(AlliancePrismInformation, _super);
        function AlliancePrismInformation() {
            this.alliance = new AllianceInformations();
            _super.call(this);
        }
        AlliancePrismInformation.prototype.getTypeId = function () {
            return AlliancePrismInformation.ID;
        };
        AlliancePrismInformation.prototype.reset = function () {
            this.alliance = new AllianceInformations();
        };
        AlliancePrismInformation.prototype.serialize = function (param1) {
            this.serializeAs_AlliancePrismInformation(param1);
        };
        AlliancePrismInformation.prototype.serializeAs_AlliancePrismInformation = function (param1) {
            _super.prototype.serializeAs_PrismInformation.call(this, param1);
            this.alliance.serializeAs_AllianceInformations(param1);
        };
        AlliancePrismInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_AlliancePrismInformation(param1);
        };
        AlliancePrismInformation.prototype.deserializeAs_AlliancePrismInformation = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.alliance = new AllianceInformations();
            this.alliance.deserialize(param1);
        };
        AlliancePrismInformation.ID = 427;
        return AlliancePrismInformation;
    })(PrismInformation);
    Protocol.AlliancePrismInformation = AlliancePrismInformation;
    var PrismFightersInformation = (function () {
        function PrismFightersInformation() {
            this.subAreaId = 0;
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
            this.allyCharactersInformations = [];
            this.enemyCharactersInformations = [];
        }
        PrismFightersInformation.prototype.getTypeId = function () {
            return PrismFightersInformation.ID;
        };
        PrismFightersInformation.prototype.reset = function () {
            this.subAreaId = 0;
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
            this.allyCharactersInformations = [];
            this.enemyCharactersInformations = [];
        };
        PrismFightersInformation.prototype.serialize = function (param1) {
            this.serializeAs_PrismFightersInformation(param1);
        };
        PrismFightersInformation.prototype.serializeAs_PrismFightersInformation = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            this.waitingForHelpInfo.serializeAs_ProtectedEntityWaitingForHelpInfo(param1);
            param1.writeShort(this.allyCharactersInformations.length);
            var _loc2_ = 0;
            while (_loc2_ < this.allyCharactersInformations.length) {
                param1.writeShort((this.allyCharactersInformations[_loc2_]).getTypeId());
                (this.allyCharactersInformations[_loc2_]).serialize(param1);
                _loc2_++;
            }
            param1.writeShort(this.enemyCharactersInformations.length);
            var _loc3_ = 0;
            while (_loc3_ < this.enemyCharactersInformations.length) {
                param1.writeShort((this.enemyCharactersInformations[_loc3_]).getTypeId());
                (this.enemyCharactersInformations[_loc3_]).serialize(param1);
                _loc3_++;
            }
        };
        PrismFightersInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismFightersInformation(param1);
        };
        PrismFightersInformation.prototype.deserializeAs_PrismFightersInformation = function (param1) {
            var _loc6_ = 0;
            var _loc7_ = null;
            var _loc8_ = 0;
            var _loc9_ = null;
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismFightersInformation.subAreaId.');
            }
            this.waitingForHelpInfo = new ProtectedEntityWaitingForHelpInfo();
            this.waitingForHelpInfo.deserialize(param1);
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc6_ = param1.readUnsignedShort();
                _loc7_ = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc6_);
                _loc7_.deserialize(param1);
                this.allyCharactersInformations.push(_loc7_);
                _loc3_++;
            }
            var _loc4_ = param1.readUnsignedShort();
            var _loc5_ = 0;
            while (_loc5_ < _loc4_) {
                _loc8_ = param1.readUnsignedShort();
                _loc9_ = ProtocolTypeManager.getInstance(CharacterMinimalPlusLookInformations, _loc8_);
                _loc9_.deserialize(param1);
                this.enemyCharactersInformations.push(_loc9_);
                _loc5_++;
            }
        };
        PrismFightersInformation.ID = 443;
        return PrismFightersInformation;
    })();
    Protocol.PrismFightersInformation = PrismFightersInformation;
    var PrismGeolocalizedInformation = (function (_super) {
        __extends(PrismGeolocalizedInformation, _super);
        function PrismGeolocalizedInformation() {
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.prism = new PrismInformation();
            _super.call(this);
        }
        PrismGeolocalizedInformation.prototype.getTypeId = function () {
            return PrismGeolocalizedInformation.ID;
        };
        PrismGeolocalizedInformation.prototype.reset = function () {
            this.worldX = 0;
            this.worldY = 0;
            this.mapId = 0;
            this.prism = new PrismInformation();
        };
        PrismGeolocalizedInformation.prototype.serialize = function (param1) {
            this.serializeAs_PrismGeolocalizedInformation(param1);
        };
        PrismGeolocalizedInformation.prototype.serializeAs_PrismGeolocalizedInformation = function (param1) {
            _super.prototype.serializeAs_PrismSubareaEmptyInfo.call(this, param1);
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element worldX.');
            }
            param1.writeShort(this.worldX);
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element worldY.');
            }
            param1.writeShort(this.worldY);
            param1.writeInt(this.mapId);
            param1.writeShort(this.prism.getTypeId());
            this.prism.serialize(param1);
        };
        PrismGeolocalizedInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismGeolocalizedInformation(param1);
        };
        PrismGeolocalizedInformation.prototype.deserializeAs_PrismGeolocalizedInformation = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.worldX = param1.readShort();
            if (this.worldX < -255 || this.worldX > 255) {
                throw new Error('Forbidden value (' + this.worldX + ') on element of PrismGeolocalizedInformation.worldX.');
            }
            this.worldY = param1.readShort();
            if (this.worldY < -255 || this.worldY > 255) {
                throw new Error('Forbidden value (' + this.worldY + ') on element of PrismGeolocalizedInformation.worldY.');
            }
            this.mapId = param1.readInt();
            var _loc2_ = param1.readUnsignedShort();
            this.prism = ProtocolTypeManager.getInstance(PrismInformation, _loc2_);
            this.prism.deserialize(param1);
        };
        PrismGeolocalizedInformation.ID = 434;
        return PrismGeolocalizedInformation;
    })(PrismSubareaEmptyInfo);
    Protocol.PrismGeolocalizedInformation = PrismGeolocalizedInformation;
    var PrismInformation = (function () {
        function PrismInformation() {
            this.typeId = 0;
            this.state = 1;
            this.nextVulnerabilityDate = 0;
            this.placementDate = 0;
            this.rewardTokenCount = 0;
        }
        PrismInformation.prototype.getTypeId = function () {
            return PrismInformation.ID;
        };
        PrismInformation.prototype.reset = function () {
            this.typeId = 0;
            this.state = 1;
            this.nextVulnerabilityDate = 0;
            this.placementDate = 0;
            this.rewardTokenCount = 0;
        };
        PrismInformation.prototype.serialize = function (param1) {
            this.serializeAs_PrismInformation(param1);
        };
        PrismInformation.prototype.serializeAs_PrismInformation = function (param1) {
            if (this.typeId < 0) {
                throw new Error('Forbidden value (' + this.typeId + ') on element typeId.');
            }
            param1.writeByte(this.typeId);
            param1.writeByte(this.state);
            if (this.nextVulnerabilityDate < 0) {
                throw new Error('Forbidden value (' + this.nextVulnerabilityDate + ') on element nextVulnerabilityDate.');
            }
            param1.writeInt(this.nextVulnerabilityDate);
            if (this.placementDate < 0) {
                throw new Error('Forbidden value (' + this.placementDate + ') on element placementDate.');
            }
            param1.writeInt(this.placementDate);
            if (this.rewardTokenCount < 0) {
                throw new Error('Forbidden value (' + this.rewardTokenCount + ') on element rewardTokenCount.');
            }
            param1.writeVarInt(this.rewardTokenCount);
        };
        PrismInformation.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismInformation(param1);
        };
        PrismInformation.prototype.deserializeAs_PrismInformation = function (param1) {
            this.typeId = param1.readByte();
            if (this.typeId < 0) {
                throw new Error('Forbidden value (' + this.typeId + ') on element of PrismInformation.typeId.');
            }
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of PrismInformation.state.');
            }
            this.nextVulnerabilityDate = param1.readInt();
            if (this.nextVulnerabilityDate < 0) {
                throw new Error('Forbidden value (' + this.nextVulnerabilityDate + ') on element of PrismInformation.nextVulnerabilityDate.');
            }
            this.placementDate = param1.readInt();
            if (this.placementDate < 0) {
                throw new Error('Forbidden value (' + this.placementDate + ') on element of PrismInformation.placementDate.');
            }
            this.rewardTokenCount = param1.readVarUhInt();
            if (this.rewardTokenCount < 0) {
                throw new Error('Forbidden value (' + this.rewardTokenCount + ') on element of PrismInformation.rewardTokenCount.');
            }
        };
        PrismInformation.ID = 428;
        return PrismInformation;
    })();
    Protocol.PrismInformation = PrismInformation;
    var PrismSubareaEmptyInfo = (function () {
        function PrismSubareaEmptyInfo() {
            this.subAreaId = 0;
            this.allianceId = 0;
        }
        PrismSubareaEmptyInfo.prototype.getTypeId = function () {
            return PrismSubareaEmptyInfo.ID;
        };
        PrismSubareaEmptyInfo.prototype.reset = function () {
            this.subAreaId = 0;
            this.allianceId = 0;
        };
        PrismSubareaEmptyInfo.prototype.serialize = function (param1) {
            this.serializeAs_PrismSubareaEmptyInfo(param1);
        };
        PrismSubareaEmptyInfo.prototype.serializeAs_PrismSubareaEmptyInfo = function (param1) {
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element subAreaId.');
            }
            param1.writeVarShort(this.subAreaId);
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
        };
        PrismSubareaEmptyInfo.prototype.deserialize = function (param1) {
            this.deserializeAs_PrismSubareaEmptyInfo(param1);
        };
        PrismSubareaEmptyInfo.prototype.deserializeAs_PrismSubareaEmptyInfo = function (param1) {
            this.subAreaId = param1.readVarUhShort();
            if (this.subAreaId < 0) {
                throw new Error('Forbidden value (' + this.subAreaId + ') on element of PrismSubareaEmptyInfo.subAreaId.');
            }
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of PrismSubareaEmptyInfo.allianceId.');
            }
        };
        PrismSubareaEmptyInfo.ID = 438;
        return PrismSubareaEmptyInfo;
    })();
    Protocol.PrismSubareaEmptyInfo = PrismSubareaEmptyInfo;
    var Shortcut = (function () {
        function Shortcut() {
            this.slot = 0;
        }
        Shortcut.prototype.getTypeId = function () {
            return Shortcut.ID;
        };
        Shortcut.prototype.reset = function () {
            this.slot = 0;
        };
        Shortcut.prototype.serialize = function (param1) {
            this.serializeAs_Shortcut(param1);
        };
        Shortcut.prototype.serializeAs_Shortcut = function (param1) {
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element slot.');
            }
            param1.writeByte(this.slot);
        };
        Shortcut.prototype.deserialize = function (param1) {
            this.deserializeAs_Shortcut(param1);
        };
        Shortcut.prototype.deserializeAs_Shortcut = function (param1) {
            this.slot = param1.readByte();
            if (this.slot < 0 || this.slot > 99) {
                throw new Error('Forbidden value (' + this.slot + ') on element of Shortcut.slot.');
            }
        };
        Shortcut.ID = 369;
        return Shortcut;
    })();
    Protocol.Shortcut = Shortcut;
    var ShortcutEmote = (function (_super) {
        __extends(ShortcutEmote, _super);
        function ShortcutEmote() {
            this.emoteId = 0;
            _super.call(this);
        }
        ShortcutEmote.prototype.getTypeId = function () {
            return ShortcutEmote.ID;
        };
        ShortcutEmote.prototype.reset = function () {
            this.emoteId = 0;
        };
        ShortcutEmote.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutEmote(param1);
        };
        ShortcutEmote.prototype.serializeAs_ShortcutEmote = function (param1) {
            _super.prototype.serializeAs_Shortcut.call(this, param1);
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element emoteId.');
            }
            param1.writeByte(this.emoteId);
        };
        ShortcutEmote.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutEmote(param1);
        };
        ShortcutEmote.prototype.deserializeAs_ShortcutEmote = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.emoteId = param1.readUnsignedByte();
            if (this.emoteId < 0 || this.emoteId > 255) {
                throw new Error('Forbidden value (' + this.emoteId + ') on element of ShortcutEmote.emoteId.');
            }
        };
        ShortcutEmote.ID = 389;
        return ShortcutEmote;
    })(Shortcut);
    Protocol.ShortcutEmote = ShortcutEmote;
    var ShortcutObject = (function (_super) {
        __extends(ShortcutObject, _super);
        function ShortcutObject() {
            _super.call(this);
        }
        ShortcutObject.prototype.getTypeId = function () {
            return ShortcutObject.ID;
        };
        ShortcutObject.prototype.reset = function () {
        };
        ShortcutObject.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutObject(param1);
        };
        ShortcutObject.prototype.serializeAs_ShortcutObject = function (param1) {
            _super.prototype.serializeAs_Shortcut.call(this, param1);
        };
        ShortcutObject.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutObject(param1);
        };
        ShortcutObject.prototype.deserializeAs_ShortcutObject = function (param1) {
            _super.prototype.deserialize.call(this, param1);
        };
        ShortcutObject.ID = 367;
        return ShortcutObject;
    })(Shortcut);
    Protocol.ShortcutObject = ShortcutObject;
    var ShortcutObjectIdolsPreset = (function (_super) {
        __extends(ShortcutObjectIdolsPreset, _super);
        function ShortcutObjectIdolsPreset() {
            this.presetId = 0;
            _super.call(this);
        }
        ShortcutObjectIdolsPreset.prototype.getTypeId = function () {
            return ShortcutObjectIdolsPreset.ID;
        };
        ShortcutObjectIdolsPreset.prototype.reset = function () {
            this.presetId = 0;
        };
        ShortcutObjectIdolsPreset.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutObjectIdolsPreset(param1);
        };
        ShortcutObjectIdolsPreset.prototype.serializeAs_ShortcutObjectIdolsPreset = function (param1) {
            _super.prototype.serializeAs_ShortcutObject.call(this, param1);
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
        };
        ShortcutObjectIdolsPreset.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutObjectIdolsPreset(param1);
        };
        ShortcutObjectIdolsPreset.prototype.deserializeAs_ShortcutObjectIdolsPreset = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of ShortcutObjectIdolsPreset.presetId.');
            }
        };
        ShortcutObjectIdolsPreset.ID = 492;
        return ShortcutObjectIdolsPreset;
    })(ShortcutObject);
    Protocol.ShortcutObjectIdolsPreset = ShortcutObjectIdolsPreset;
    var ShortcutObjectItem = (function (_super) {
        __extends(ShortcutObjectItem, _super);
        function ShortcutObjectItem() {
            this.itemUID = 0;
            this.itemGID = 0;
            _super.call(this);
        }
        ShortcutObjectItem.prototype.getTypeId = function () {
            return ShortcutObjectItem.ID;
        };
        ShortcutObjectItem.prototype.reset = function () {
            this.itemUID = 0;
            this.itemGID = 0;
        };
        ShortcutObjectItem.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutObjectItem(param1);
        };
        ShortcutObjectItem.prototype.serializeAs_ShortcutObjectItem = function (param1) {
            _super.prototype.serializeAs_ShortcutObject.call(this, param1);
            param1.writeInt(this.itemUID);
            param1.writeInt(this.itemGID);
        };
        ShortcutObjectItem.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutObjectItem(param1);
        };
        ShortcutObjectItem.prototype.deserializeAs_ShortcutObjectItem = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.itemUID = param1.readInt();
            this.itemGID = param1.readInt();
        };
        ShortcutObjectItem.ID = 371;
        return ShortcutObjectItem;
    })(ShortcutObject);
    Protocol.ShortcutObjectItem = ShortcutObjectItem;
    var ShortcutObjectPreset = (function (_super) {
        __extends(ShortcutObjectPreset, _super);
        function ShortcutObjectPreset() {
            this.presetId = 0;
            _super.call(this);
        }
        ShortcutObjectPreset.prototype.getTypeId = function () {
            return ShortcutObjectPreset.ID;
        };
        ShortcutObjectPreset.prototype.reset = function () {
            this.presetId = 0;
        };
        ShortcutObjectPreset.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutObjectPreset(param1);
        };
        ShortcutObjectPreset.prototype.serializeAs_ShortcutObjectPreset = function (param1) {
            _super.prototype.serializeAs_ShortcutObject.call(this, param1);
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element presetId.');
            }
            param1.writeByte(this.presetId);
        };
        ShortcutObjectPreset.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutObjectPreset(param1);
        };
        ShortcutObjectPreset.prototype.deserializeAs_ShortcutObjectPreset = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.presetId = param1.readByte();
            if (this.presetId < 0) {
                throw new Error('Forbidden value (' + this.presetId + ') on element of ShortcutObjectPreset.presetId.');
            }
        };
        ShortcutObjectPreset.ID = 370;
        return ShortcutObjectPreset;
    })(ShortcutObject);
    Protocol.ShortcutObjectPreset = ShortcutObjectPreset;
    var ShortcutSmiley = (function (_super) {
        __extends(ShortcutSmiley, _super);
        function ShortcutSmiley() {
            this.smileyId = 0;
            _super.call(this);
        }
        ShortcutSmiley.prototype.getTypeId = function () {
            return ShortcutSmiley.ID;
        };
        ShortcutSmiley.prototype.reset = function () {
            this.smileyId = 0;
        };
        ShortcutSmiley.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutSmiley(param1);
        };
        ShortcutSmiley.prototype.serializeAs_ShortcutSmiley = function (param1) {
            _super.prototype.serializeAs_Shortcut.call(this, param1);
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element smileyId.');
            }
            param1.writeVarShort(this.smileyId);
        };
        ShortcutSmiley.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutSmiley(param1);
        };
        ShortcutSmiley.prototype.deserializeAs_ShortcutSmiley = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.smileyId = param1.readVarUhShort();
            if (this.smileyId < 0) {
                throw new Error('Forbidden value (' + this.smileyId + ') on element of ShortcutSmiley.smileyId.');
            }
        };
        ShortcutSmiley.ID = 388;
        return ShortcutSmiley;
    })(Shortcut);
    Protocol.ShortcutSmiley = ShortcutSmiley;
    var ShortcutSpell = (function (_super) {
        __extends(ShortcutSpell, _super);
        function ShortcutSpell() {
            this.spellId = 0;
            _super.call(this);
        }
        ShortcutSpell.prototype.getTypeId = function () {
            return ShortcutSpell.ID;
        };
        ShortcutSpell.prototype.reset = function () {
            this.spellId = 0;
        };
        ShortcutSpell.prototype.serialize = function (param1) {
            this.serializeAs_ShortcutSpell(param1);
        };
        ShortcutSpell.prototype.serializeAs_ShortcutSpell = function (param1) {
            _super.prototype.serializeAs_Shortcut.call(this, param1);
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element spellId.');
            }
            param1.writeVarShort(this.spellId);
        };
        ShortcutSpell.prototype.deserialize = function (param1) {
            this.deserializeAs_ShortcutSpell(param1);
        };
        ShortcutSpell.prototype.deserializeAs_ShortcutSpell = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.spellId = param1.readVarUhShort();
            if (this.spellId < 0) {
                throw new Error('Forbidden value (' + this.spellId + ') on element of ShortcutSpell.spellId.');
            }
        };
        ShortcutSpell.ID = 368;
        return ShortcutSpell;
    })(Shortcut);
    Protocol.ShortcutSpell = ShortcutSpell;
    var AbstractSocialGroupInfos = (function () {
        function AbstractSocialGroupInfos() {
        }
        AbstractSocialGroupInfos.prototype.getTypeId = function () {
            return AbstractSocialGroupInfos.ID;
        };
        AbstractSocialGroupInfos.prototype.reset = function () {
        };
        AbstractSocialGroupInfos.prototype.serialize = function (param1) {
            this.serializeAs_AbstractSocialGroupInfos(param1);
        };
        AbstractSocialGroupInfos.prototype.serializeAs_AbstractSocialGroupInfos = function (param1) {
        };
        AbstractSocialGroupInfos.prototype.deserialize = function (param1) {
            this.deserializeAs_AbstractSocialGroupInfos(param1);
        };
        AbstractSocialGroupInfos.prototype.deserializeAs_AbstractSocialGroupInfos = function (param1) {
        };
        AbstractSocialGroupInfos.ID = 416;
        return AbstractSocialGroupInfos;
    })();
    Protocol.AbstractSocialGroupInfos = AbstractSocialGroupInfos;
    var AllianceFactSheetInformations = (function (_super) {
        __extends(AllianceFactSheetInformations, _super);
        function AllianceFactSheetInformations() {
            this.creationDate = 0;
            _super.call(this);
        }
        AllianceFactSheetInformations.prototype.getTypeId = function () {
            return AllianceFactSheetInformations.ID;
        };
        AllianceFactSheetInformations.prototype.reset = function () {
            this.creationDate = 0;
        };
        AllianceFactSheetInformations.prototype.serialize = function (param1) {
            this.serializeAs_AllianceFactSheetInformations(param1);
        };
        AllianceFactSheetInformations.prototype.serializeAs_AllianceFactSheetInformations = function (param1) {
            _super.prototype.serializeAs_AllianceInformations.call(this, param1);
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element creationDate.');
            }
            param1.writeInt(this.creationDate);
        };
        AllianceFactSheetInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceFactSheetInformations(param1);
        };
        AllianceFactSheetInformations.prototype.deserializeAs_AllianceFactSheetInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.creationDate = param1.readInt();
            if (this.creationDate < 0) {
                throw new Error('Forbidden value (' + this.creationDate + ') on element of AllianceFactSheetInformations.creationDate.');
            }
        };
        AllianceFactSheetInformations.ID = 421;
        return AllianceFactSheetInformations;
    })(AllianceInformations);
    Protocol.AllianceFactSheetInformations = AllianceFactSheetInformations;
    var AllianceVersatileInformations = (function () {
        function AllianceVersatileInformations() {
            this.allianceId = 0;
            this.nbGuilds = 0;
            this.nbMembers = 0;
            this.nbSubarea = 0;
        }
        AllianceVersatileInformations.prototype.getTypeId = function () {
            return AllianceVersatileInformations.ID;
        };
        AllianceVersatileInformations.prototype.reset = function () {
            this.allianceId = 0;
            this.nbGuilds = 0;
            this.nbMembers = 0;
            this.nbSubarea = 0;
        };
        AllianceVersatileInformations.prototype.serialize = function (param1) {
            this.serializeAs_AllianceVersatileInformations(param1);
        };
        AllianceVersatileInformations.prototype.serializeAs_AllianceVersatileInformations = function (param1) {
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
            if (this.nbGuilds < 0) {
                throw new Error('Forbidden value (' + this.nbGuilds + ') on element nbGuilds.');
            }
            param1.writeVarShort(this.nbGuilds);
            if (this.nbMembers < 0) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element nbMembers.');
            }
            param1.writeVarShort(this.nbMembers);
            if (this.nbSubarea < 0) {
                throw new Error('Forbidden value (' + this.nbSubarea + ') on element nbSubarea.');
            }
            param1.writeVarShort(this.nbSubarea);
        };
        AllianceVersatileInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AllianceVersatileInformations(param1);
        };
        AllianceVersatileInformations.prototype.deserializeAs_AllianceVersatileInformations = function (param1) {
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of AllianceVersatileInformations.allianceId.');
            }
            this.nbGuilds = param1.readVarUhShort();
            if (this.nbGuilds < 0) {
                throw new Error('Forbidden value (' + this.nbGuilds + ') on element of AllianceVersatileInformations.nbGuilds.');
            }
            this.nbMembers = param1.readVarUhShort();
            if (this.nbMembers < 0) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element of AllianceVersatileInformations.nbMembers.');
            }
            this.nbSubarea = param1.readVarUhShort();
            if (this.nbSubarea < 0) {
                throw new Error('Forbidden value (' + this.nbSubarea + ') on element of AllianceVersatileInformations.nbSubarea.');
            }
        };
        AllianceVersatileInformations.ID = 432;
        return AllianceVersatileInformations;
    })();
    Protocol.AllianceVersatileInformations = AllianceVersatileInformations;
    var AlliancedGuildFactSheetInformations = (function (_super) {
        __extends(AlliancedGuildFactSheetInformations, _super);
        function AlliancedGuildFactSheetInformations() {
            this.allianceInfos = new BasicNamedAllianceInformations();
            _super.call(this);
        }
        AlliancedGuildFactSheetInformations.prototype.getTypeId = function () {
            return AlliancedGuildFactSheetInformations.ID;
        };
        AlliancedGuildFactSheetInformations.prototype.reset = function () {
            this.allianceInfos = new BasicNamedAllianceInformations();
        };
        AlliancedGuildFactSheetInformations.prototype.serialize = function (param1) {
            this.serializeAs_AlliancedGuildFactSheetInformations(param1);
        };
        AlliancedGuildFactSheetInformations.prototype.serializeAs_AlliancedGuildFactSheetInformations = function (param1) {
            _super.prototype.serializeAs_GuildInformations.call(this, param1);
            this.allianceInfos.serializeAs_BasicNamedAllianceInformations(param1);
        };
        AlliancedGuildFactSheetInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_AlliancedGuildFactSheetInformations(param1);
        };
        AlliancedGuildFactSheetInformations.prototype.deserializeAs_AlliancedGuildFactSheetInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceInfos = new BasicNamedAllianceInformations();
            this.allianceInfos.deserialize(param1);
        };
        AlliancedGuildFactSheetInformations.ID = 422;
        return AlliancedGuildFactSheetInformations;
    })(GuildInformations);
    Protocol.AlliancedGuildFactSheetInformations = AlliancedGuildFactSheetInformations;
    var GuildFactSheetInformations = (function (_super) {
        __extends(GuildFactSheetInformations, _super);
        function GuildFactSheetInformations() {
            this.leaderId = 0;
            this.guildLevel = 0;
            this.nbMembers = 0;
            _super.call(this);
        }
        GuildFactSheetInformations.prototype.getTypeId = function () {
            return GuildFactSheetInformations.ID;
        };
        GuildFactSheetInformations.prototype.reset = function () {
            this.leaderId = 0;
            this.guildLevel = 0;
            this.nbMembers = 0;
        };
        GuildFactSheetInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildFactSheetInformations(param1);
        };
        GuildFactSheetInformations.prototype.serializeAs_GuildFactSheetInformations = function (param1) {
            _super.prototype.serializeAs_GuildInformations.call(this, param1);
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element leaderId.');
            }
            param1.writeVarInt(this.leaderId);
            if (this.guildLevel < 0 || this.guildLevel > 255) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element guildLevel.');
            }
            param1.writeByte(this.guildLevel);
            if (this.nbMembers < 0) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element nbMembers.');
            }
            param1.writeVarShort(this.nbMembers);
        };
        GuildFactSheetInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildFactSheetInformations(param1);
        };
        GuildFactSheetInformations.prototype.deserializeAs_GuildFactSheetInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.leaderId = param1.readVarUhInt();
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element of GuildFactSheetInformations.leaderId.');
            }
            this.guildLevel = param1.readUnsignedByte();
            if (this.guildLevel < 0 || this.guildLevel > 255) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element of GuildFactSheetInformations.guildLevel.');
            }
            this.nbMembers = param1.readVarUhShort();
            if (this.nbMembers < 0) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element of GuildFactSheetInformations.nbMembers.');
            }
        };
        GuildFactSheetInformations.ID = 424;
        return GuildFactSheetInformations;
    })(GuildInformations);
    Protocol.GuildFactSheetInformations = GuildFactSheetInformations;
    var GuildInAllianceVersatileInformations = (function (_super) {
        __extends(GuildInAllianceVersatileInformations, _super);
        function GuildInAllianceVersatileInformations() {
            this.allianceId = 0;
            _super.call(this);
        }
        GuildInAllianceVersatileInformations.prototype.getTypeId = function () {
            return GuildInAllianceVersatileInformations.ID;
        };
        GuildInAllianceVersatileInformations.prototype.reset = function () {
            this.allianceId = 0;
        };
        GuildInAllianceVersatileInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildInAllianceVersatileInformations(param1);
        };
        GuildInAllianceVersatileInformations.prototype.serializeAs_GuildInAllianceVersatileInformations = function (param1) {
            _super.prototype.serializeAs_GuildVersatileInformations.call(this, param1);
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element allianceId.');
            }
            param1.writeVarInt(this.allianceId);
        };
        GuildInAllianceVersatileInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInAllianceVersatileInformations(param1);
        };
        GuildInAllianceVersatileInformations.prototype.deserializeAs_GuildInAllianceVersatileInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.allianceId = param1.readVarUhInt();
            if (this.allianceId < 0) {
                throw new Error('Forbidden value (' + this.allianceId + ') on element of GuildInAllianceVersatileInformations.allianceId.');
            }
        };
        GuildInAllianceVersatileInformations.ID = 437;
        return GuildInAllianceVersatileInformations;
    })(GuildVersatileInformations);
    Protocol.GuildInAllianceVersatileInformations = GuildInAllianceVersatileInformations;
    var GuildInsiderFactSheetInformations = (function (_super) {
        __extends(GuildInsiderFactSheetInformations, _super);
        function GuildInsiderFactSheetInformations() {
            this.leaderName = '';
            this.nbConnectedMembers = 0;
            this.nbTaxCollectors = 0;
            this.lastActivity = 0;
            this.enabled = false;
            _super.call(this);
        }
        GuildInsiderFactSheetInformations.prototype.getTypeId = function () {
            return GuildInsiderFactSheetInformations.ID;
        };
        GuildInsiderFactSheetInformations.prototype.reset = function () {
            this.leaderName = '';
            this.nbConnectedMembers = 0;
            this.nbTaxCollectors = 0;
            this.lastActivity = 0;
            this.enabled = false;
        };
        GuildInsiderFactSheetInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildInsiderFactSheetInformations(param1);
        };
        GuildInsiderFactSheetInformations.prototype.serializeAs_GuildInsiderFactSheetInformations = function (param1) {
            _super.prototype.serializeAs_GuildFactSheetInformations.call(this, param1);
            param1.writeUTF(this.leaderName);
            if (this.nbConnectedMembers < 0) {
                throw new Error('Forbidden value (' + this.nbConnectedMembers + ') on element nbConnectedMembers.');
            }
            param1.writeVarShort(this.nbConnectedMembers);
            if (this.nbTaxCollectors < 0) {
                throw new Error('Forbidden value (' + this.nbTaxCollectors + ') on element nbTaxCollectors.');
            }
            param1.writeByte(this.nbTaxCollectors);
            if (this.lastActivity < 0) {
                throw new Error('Forbidden value (' + this.lastActivity + ') on element lastActivity.');
            }
            param1.writeInt(this.lastActivity);
            param1.writeBoolean(this.enabled);
        };
        GuildInsiderFactSheetInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildInsiderFactSheetInformations(param1);
        };
        GuildInsiderFactSheetInformations.prototype.deserializeAs_GuildInsiderFactSheetInformations = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.leaderName = param1.readUTF();
            this.nbConnectedMembers = param1.readVarUhShort();
            if (this.nbConnectedMembers < 0) {
                throw new Error('Forbidden value (' + this.nbConnectedMembers + ') on element of GuildInsiderFactSheetInformations.nbConnectedMembers.');
            }
            this.nbTaxCollectors = param1.readByte();
            if (this.nbTaxCollectors < 0) {
                throw new Error('Forbidden value (' + this.nbTaxCollectors + ') on element of GuildInsiderFactSheetInformations.nbTaxCollectors.');
            }
            this.lastActivity = param1.readInt();
            if (this.lastActivity < 0) {
                throw new Error('Forbidden value (' + this.lastActivity + ') on element of GuildInsiderFactSheetInformations.lastActivity.');
            }
            this.enabled = param1.readBoolean();
        };
        GuildInsiderFactSheetInformations.ID = 423;
        return GuildInsiderFactSheetInformations;
    })(GuildFactSheetInformations);
    Protocol.GuildInsiderFactSheetInformations = GuildInsiderFactSheetInformations;
    var GuildVersatileInformations = (function () {
        function GuildVersatileInformations() {
            this.guildId = 0;
            this.leaderId = 0;
            this.guildLevel = 0;
            this.nbMembers = 0;
        }
        GuildVersatileInformations.prototype.getTypeId = function () {
            return GuildVersatileInformations.ID;
        };
        GuildVersatileInformations.prototype.reset = function () {
            this.guildId = 0;
            this.leaderId = 0;
            this.guildLevel = 0;
            this.nbMembers = 0;
        };
        GuildVersatileInformations.prototype.serialize = function (param1) {
            this.serializeAs_GuildVersatileInformations(param1);
        };
        GuildVersatileInformations.prototype.serializeAs_GuildVersatileInformations = function (param1) {
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element guildId.');
            }
            param1.writeVarInt(this.guildId);
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element leaderId.');
            }
            param1.writeVarInt(this.leaderId);
            if (this.guildLevel < 1 || this.guildLevel > 200) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element guildLevel.');
            }
            param1.writeByte(this.guildLevel);
            if (this.nbMembers < 1 || this.nbMembers > 240) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element nbMembers.');
            }
            param1.writeByte(this.nbMembers);
        };
        GuildVersatileInformations.prototype.deserialize = function (param1) {
            this.deserializeAs_GuildVersatileInformations(param1);
        };
        GuildVersatileInformations.prototype.deserializeAs_GuildVersatileInformations = function (param1) {
            this.guildId = param1.readVarUhInt();
            if (this.guildId < 0) {
                throw new Error('Forbidden value (' + this.guildId + ') on element of GuildVersatileInformations.guildId.');
            }
            this.leaderId = param1.readVarUhInt();
            if (this.leaderId < 0) {
                throw new Error('Forbidden value (' + this.leaderId + ') on element of GuildVersatileInformations.leaderId.');
            }
            this.guildLevel = param1.readUnsignedByte();
            if (this.guildLevel < 1 || this.guildLevel > 200) {
                throw new Error('Forbidden value (' + this.guildLevel + ') on element of GuildVersatileInformations.guildLevel.');
            }
            this.nbMembers = param1.readUnsignedByte();
            if (this.nbMembers < 1 || this.nbMembers > 240) {
                throw new Error('Forbidden value (' + this.nbMembers + ') on element of GuildVersatileInformations.nbMembers.');
            }
        };
        GuildVersatileInformations.ID = 435;
        return GuildVersatileInformations;
    })();
    Protocol.GuildVersatileInformations = GuildVersatileInformations;
    var StartupActionAddObject = (function () {
        function StartupActionAddObject() {
            this.uid = 0;
            this.title = '';
            this.text = '';
            this.descUrl = '';
            this.pictureUrl = '';
            this.items = [];
        }
        StartupActionAddObject.prototype.getTypeId = function () {
            return StartupActionAddObject.ID;
        };
        StartupActionAddObject.prototype.reset = function () {
            this.uid = 0;
            this.title = '';
            this.text = '';
            this.descUrl = '';
            this.pictureUrl = '';
            this.items = [];
        };
        StartupActionAddObject.prototype.serialize = function (param1) {
            this.serializeAs_StartupActionAddObject(param1);
        };
        StartupActionAddObject.prototype.serializeAs_StartupActionAddObject = function (param1) {
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element uid.');
            }
            param1.writeInt(this.uid);
            param1.writeUTF(this.title);
            param1.writeUTF(this.text);
            param1.writeUTF(this.descUrl);
            param1.writeUTF(this.pictureUrl);
            param1.writeShort(this.items.length);
            var _loc2_ = 0;
            while (_loc2_ < this.items.length) {
                (this.items[_loc2_]).serializeAs_ObjectItemInformationWithQuantity(param1);
                _loc2_++;
            }
        };
        StartupActionAddObject.prototype.deserialize = function (param1) {
            this.deserializeAs_StartupActionAddObject(param1);
        };
        StartupActionAddObject.prototype.deserializeAs_StartupActionAddObject = function (param1) {
            var _loc4_ = null;
            this.uid = param1.readInt();
            if (this.uid < 0) {
                throw new Error('Forbidden value (' + this.uid + ') on element of StartupActionAddObject.uid.');
            }
            this.title = param1.readUTF();
            this.text = param1.readUTF();
            this.descUrl = param1.readUTF();
            this.pictureUrl = param1.readUTF();
            var _loc2_ = param1.readUnsignedShort();
            var _loc3_ = 0;
            while (_loc3_ < _loc2_) {
                _loc4_ = new ObjectItemInformationWithQuantity();
                _loc4_.deserialize(param1);
                this.items.push(_loc4_);
                _loc3_++;
            }
        };
        StartupActionAddObject.ID = 52;
        return StartupActionAddObject;
    })();
    Protocol.StartupActionAddObject = StartupActionAddObject;
    var TrustCertificate = (function () {
        function TrustCertificate() {
            this.id = 0;
            this.hash = '';
        }
        TrustCertificate.prototype.getTypeId = function () {
            return TrustCertificate.ID;
        };
        TrustCertificate.prototype.reset = function () {
            this.id = 0;
            this.hash = '';
        };
        TrustCertificate.prototype.serialize = function (param1) {
            this.serializeAs_TrustCertificate(param1);
        };
        TrustCertificate.prototype.serializeAs_TrustCertificate = function (param1) {
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element id.');
            }
            param1.writeInt(this.id);
            param1.writeUTF(this.hash);
        };
        TrustCertificate.prototype.deserialize = function (param1) {
            this.deserializeAs_TrustCertificate(param1);
        };
        TrustCertificate.prototype.deserializeAs_TrustCertificate = function (param1) {
            this.id = param1.readInt();
            if (this.id < 0) {
                throw new Error('Forbidden value (' + this.id + ') on element of TrustCertificate.id.');
            }
            this.hash = param1.readUTF();
        };
        TrustCertificate.ID = 377;
        return TrustCertificate;
    })();
    Protocol.TrustCertificate = TrustCertificate;
    var ContentPart = (function () {
        function ContentPart() {
            this.id = '';
            this.state = 0;
        }
        ContentPart.prototype.getTypeId = function () {
            return ContentPart.ID;
        };
        ContentPart.prototype.reset = function () {
            this.id = '';
            this.state = 0;
        };
        ContentPart.prototype.serialize = function (param1) {
            this.serializeAs_ContentPart(param1);
        };
        ContentPart.prototype.serializeAs_ContentPart = function (param1) {
            param1.writeUTF(this.id);
            param1.writeByte(this.state);
        };
        ContentPart.prototype.deserialize = function (param1) {
            this.deserializeAs_ContentPart(param1);
        };
        ContentPart.prototype.deserializeAs_ContentPart = function (param1) {
            this.id = param1.readUTF();
            this.state = param1.readByte();
            if (this.state < 0) {
                throw new Error('Forbidden value (' + this.state + ') on element of ContentPart.state.');
            }
        };
        ContentPart.ID = 350;
        return ContentPart;
    })();
    Protocol.ContentPart = ContentPart;
    var Version = (function () {
        function Version() {
            this.major = 0;
            this.minor = 0;
            this.release = 0;
            this.revision = 0;
            this.patch = 0;
            this.buildType = 0;
        }
        Version.prototype.getTypeId = function () {
            return Version.ID;
        };
        Version.prototype.reset = function () {
            this.major = 0;
            this.minor = 0;
            this.release = 0;
            this.revision = 0;
            this.patch = 0;
            this.buildType = 0;
        };
        Version.prototype.serialize = function (param1) {
            this.serializeAs_Version(param1);
        };
        Version.prototype.serializeAs_Version = function (param1) {
            if (this.major < 0) {
                throw new Error('Forbidden value (' + this.major + ') on element major.');
            }
            param1.writeByte(this.major);
            if (this.minor < 0) {
                throw new Error('Forbidden value (' + this.minor + ') on element minor.');
            }
            param1.writeByte(this.minor);
            if (this.release < 0) {
                throw new Error('Forbidden value (' + this.release + ') on element release.');
            }
            param1.writeByte(this.release);
            if (this.revision < 0) {
                throw new Error('Forbidden value (' + this.revision + ') on element revision.');
            }
            param1.writeInt(this.revision);
            if (this.patch < 0) {
                throw new Error('Forbidden value (' + this.patch + ') on element patch.');
            }
            param1.writeByte(this.patch);
            param1.writeByte(this.buildType);
        };
        Version.prototype.deserialize = function (param1) {
            this.deserializeAs_Version(param1);
        };
        Version.prototype.deserializeAs_Version = function (param1) {
            this.major = param1.readByte();
            if (this.major < 0) {
                throw new Error('Forbidden value (' + this.major + ') on element of Version.major.');
            }
            this.minor = param1.readByte();
            if (this.minor < 0) {
                throw new Error('Forbidden value (' + this.minor + ') on element of Version.minor.');
            }
            this.release = param1.readByte();
            if (this.release < 0) {
                throw new Error('Forbidden value (' + this.release + ') on element of Version.release.');
            }
            this.revision = param1.readInt();
            if (this.revision < 0) {
                throw new Error('Forbidden value (' + this.revision + ') on element of Version.revision.');
            }
            this.patch = param1.readByte();
            if (this.patch < 0) {
                throw new Error('Forbidden value (' + this.patch + ') on element of Version.patch.');
            }
            this.buildType = param1.readByte();
            if (this.buildType < 0) {
                throw new Error('Forbidden value (' + this.buildType + ') on element of Version.buildType.');
            }
        };
        Version.ID = 11;
        return Version;
    })();
    Protocol.Version = Version;
    var VersionExtended = (function (_super) {
        __extends(VersionExtended, _super);
        function VersionExtended() {
            this.install = 0;
            this.technology = 0;
            _super.call(this);
        }
        VersionExtended.prototype.getTypeId = function () {
            return VersionExtended.ID;
        };
        VersionExtended.prototype.reset = function () {
            this.install = 0;
            this.technology = 0;
        };
        VersionExtended.prototype.serialize = function (param1) {
            this.serializeAs_VersionExtended(param1);
        };
        VersionExtended.prototype.serializeAs_VersionExtended = function (param1) {
            _super.prototype.serializeAs_Version.call(this, param1);
            param1.writeByte(this.install);
            param1.writeByte(this.technology);
        };
        VersionExtended.prototype.deserialize = function (param1) {
            this.deserializeAs_VersionExtended(param1);
        };
        VersionExtended.prototype.deserializeAs_VersionExtended = function (param1) {
            _super.prototype.deserialize.call(this, param1);
            this.install = param1.readByte();
            if (this.install < 0) {
                throw new Error('Forbidden value (' + this.install + ') on element of VersionExtended.install.');
            }
            this.technology = param1.readByte();
            if (this.technology < 0) {
                throw new Error('Forbidden value (' + this.technology + ') on element of VersionExtended.technology.');
            }
        };
        VersionExtended.ID = 393;
        return VersionExtended;
    })(Version);
    Protocol.VersionExtended = VersionExtended;
    var KrosmasterFigure = (function () {
        function KrosmasterFigure() {
            this.uid = '';
            this.figure = 0;
            this.pedestal = 0;
            this.bound = false;
        }
        KrosmasterFigure.prototype.getTypeId = function () {
            return KrosmasterFigure.ID;
        };
        KrosmasterFigure.prototype.reset = function () {
            this.uid = '';
            this.figure = 0;
            this.pedestal = 0;
            this.bound = false;
        };
        KrosmasterFigure.prototype.serialize = function (param1) {
            this.serializeAs_KrosmasterFigure(param1);
        };
        KrosmasterFigure.prototype.serializeAs_KrosmasterFigure = function (param1) {
            param1.writeUTF(this.uid);
            if (this.figure < 0) {
                throw new Error('Forbidden value (' + this.figure + ') on element figure.');
            }
            param1.writeVarShort(this.figure);
            if (this.pedestal < 0) {
                throw new Error('Forbidden value (' + this.pedestal + ') on element pedestal.');
            }
            param1.writeVarShort(this.pedestal);
            param1.writeBoolean(this.bound);
        };
        KrosmasterFigure.prototype.deserialize = function (param1) {
            this.deserializeAs_KrosmasterFigure(param1);
        };
        KrosmasterFigure.prototype.deserializeAs_KrosmasterFigure = function (param1) {
            this.uid = param1.readUTF();
            this.figure = param1.readVarUhShort();
            if (this.figure < 0) {
                throw new Error('Forbidden value (' + this.figure + ') on element of KrosmasterFigure.figure.');
            }
            this.pedestal = param1.readVarUhShort();
            if (this.pedestal < 0) {
                throw new Error('Forbidden value (' + this.pedestal + ') on element of KrosmasterFigure.pedestal.');
            }
            this.bound = param1.readBoolean();
        };
        KrosmasterFigure.ID = 397;
        return KrosmasterFigure;
    })();
    Protocol.KrosmasterFigure = KrosmasterFigure;
    var MessageReceiver = (function () {
        function MessageReceiver() {
            MessageReceiver._list = {};
            MessageReceiver._list[AdminCommandMessage.ID] = function () { return new AdminCommandMessage(); };
            MessageReceiver._list[AdminQuietCommandMessage.ID] = function () { return new AdminQuietCommandMessage(); };
            MessageReceiver._list[ConsoleCommandsListMessage.ID] = function () { return new ConsoleCommandsListMessage(); };
            MessageReceiver._list[ConsoleMessage.ID] = function () { return new ConsoleMessage(); };
            MessageReceiver._list[NetworkDataContainerMessage.ID] = function () { return new NetworkDataContainerMessage(); };
            MessageReceiver._list[BasicPingMessage.ID] = function () { return new BasicPingMessage(); };
            MessageReceiver._list[BasicPongMessage.ID] = function () { return new BasicPongMessage(); };
            MessageReceiver._list[BasicStatMessage.ID] = function () { return new BasicStatMessage(); };
            MessageReceiver._list[CredentialsAcknowledgementMessage.ID] = function () { return new CredentialsAcknowledgementMessage(); };
            MessageReceiver._list[HelloConnectMessage.ID] = function () { return new HelloConnectMessage(); };
            MessageReceiver._list[IdentificationAccountForceMessage.ID] = function () { return new IdentificationAccountForceMessage(); };
            MessageReceiver._list[IdentificationFailedBannedMessage.ID] = function () { return new IdentificationFailedBannedMessage(); };
            MessageReceiver._list[IdentificationFailedForBadVersionMessage.ID] = function () { return new IdentificationFailedForBadVersionMessage(); };
            MessageReceiver._list[IdentificationFailedMessage.ID] = function () { return new IdentificationFailedMessage(); };
            MessageReceiver._list[IdentificationMessage.ID] = function () { return new IdentificationMessage(); };
            MessageReceiver._list[IdentificationSuccessMessage.ID] = function () { return new IdentificationSuccessMessage(); };
            MessageReceiver._list[IdentificationSuccessWithLoginTokenMessage.ID] = function () { return new IdentificationSuccessWithLoginTokenMessage(); };
            MessageReceiver._list[SelectedServerDataExtendedMessage.ID] = function () { return new SelectedServerDataExtendedMessage(); };
            MessageReceiver._list[SelectedServerDataMessage.ID] = function () { return new SelectedServerDataMessage(); };
            MessageReceiver._list[SelectedServerRefusedMessage.ID] = function () { return new SelectedServerRefusedMessage(); };
            MessageReceiver._list[ServerSelectionMessage.ID] = function () { return new ServerSelectionMessage(); };
            MessageReceiver._list[ServerStatusUpdateMessage.ID] = function () { return new ServerStatusUpdateMessage(); };
            MessageReceiver._list[ServersListMessage.ID] = function () { return new ServersListMessage(); };
            MessageReceiver._list[AccountLinkRequiredMessage.ID] = function () { return new AccountLinkRequiredMessage(); };
            MessageReceiver._list[NicknameAcceptedMessage.ID] = function () { return new NicknameAcceptedMessage(); };
            MessageReceiver._list[NicknameChoiceRequestMessage.ID] = function () { return new NicknameChoiceRequestMessage(); };
            MessageReceiver._list[NicknameRefusedMessage.ID] = function () { return new NicknameRefusedMessage(); };
            MessageReceiver._list[NicknameRegistrationMessage.ID] = function () { return new NicknameRegistrationMessage(); };
            MessageReceiver._list[AcquaintanceSearchErrorMessage.ID] = function () { return new AcquaintanceSearchErrorMessage(); };
            MessageReceiver._list[AcquaintanceSearchMessage.ID] = function () { return new AcquaintanceSearchMessage(); };
            MessageReceiver._list[AcquaintanceServerListMessage.ID] = function () { return new AcquaintanceServerListMessage(); };
            MessageReceiver._list[DebugClearHighlightCellsMessage.ID] = function () { return new DebugClearHighlightCellsMessage(); };
            MessageReceiver._list[DebugHighlightCellsMessage.ID] = function () { return new DebugHighlightCellsMessage(); };
            MessageReceiver._list[DebugInClientMessage.ID] = function () { return new DebugInClientMessage(); };
            MessageReceiver._list[AchievementDetailedListMessage.ID] = function () { return new AchievementDetailedListMessage(); };
            MessageReceiver._list[AchievementDetailedListRequestMessage.ID] = function () { return new AchievementDetailedListRequestMessage(); };
            MessageReceiver._list[AchievementDetailsMessage.ID] = function () { return new AchievementDetailsMessage(); };
            MessageReceiver._list[AchievementDetailsRequestMessage.ID] = function () { return new AchievementDetailsRequestMessage(); };
            MessageReceiver._list[AchievementFinishedInformationMessage.ID] = function () { return new AchievementFinishedInformationMessage(); };
            MessageReceiver._list[AchievementFinishedMessage.ID] = function () { return new AchievementFinishedMessage(); };
            MessageReceiver._list[AchievementListMessage.ID] = function () { return new AchievementListMessage(); };
            MessageReceiver._list[AchievementRewardErrorMessage.ID] = function () { return new AchievementRewardErrorMessage(); };
            MessageReceiver._list[AchievementRewardRequestMessage.ID] = function () { return new AchievementRewardRequestMessage(); };
            MessageReceiver._list[AchievementRewardSuccessMessage.ID] = function () { return new AchievementRewardSuccessMessage(); };
            MessageReceiver._list[FriendGuildSetWarnOnAchievementCompleteMessage.ID] = function () { return new FriendGuildSetWarnOnAchievementCompleteMessage(); };
            MessageReceiver._list[FriendGuildWarnOnAchievementCompleteStateMessage.ID] = function () { return new FriendGuildWarnOnAchievementCompleteStateMessage(); };
            MessageReceiver._list[AbstractGameActionMessage.ID] = function () { return new AbstractGameActionMessage(); };
            MessageReceiver._list[AbstractGameActionWithAckMessage.ID] = function () { return new AbstractGameActionWithAckMessage(); };
            MessageReceiver._list[GameActionAcknowledgementMessage.ID] = function () { return new GameActionAcknowledgementMessage(); };
            MessageReceiver._list[GameActionNoopMessage.ID] = function () { return new GameActionNoopMessage(); };
            MessageReceiver._list[AbstractGameActionFightTargetedAbilityMessage.ID] = function () { return new AbstractGameActionFightTargetedAbilityMessage(); };
            MessageReceiver._list[GameActionFightActivateGlyphTrapMessage.ID] = function () { return new GameActionFightActivateGlyphTrapMessage(); };
            MessageReceiver._list[GameActionFightCarryCharacterMessage.ID] = function () { return new GameActionFightCarryCharacterMessage(); };
            MessageReceiver._list[GameActionFightCastOnTargetRequestMessage.ID] = function () { return new GameActionFightCastOnTargetRequestMessage(); };
            MessageReceiver._list[GameActionFightCastRequestMessage.ID] = function () { return new GameActionFightCastRequestMessage(); };
            MessageReceiver._list[GameActionFightChangeLookMessage.ID] = function () { return new GameActionFightChangeLookMessage(); };
            MessageReceiver._list[GameActionFightCloseCombatMessage.ID] = function () { return new GameActionFightCloseCombatMessage(); };
            MessageReceiver._list[GameActionFightDeathMessage.ID] = function () { return new GameActionFightDeathMessage(); };
            MessageReceiver._list[GameActionFightDispellEffectMessage.ID] = function () { return new GameActionFightDispellEffectMessage(); };
            MessageReceiver._list[GameActionFightDispellMessage.ID] = function () { return new GameActionFightDispellMessage(); };
            MessageReceiver._list[GameActionFightDispellSpellMessage.ID] = function () { return new GameActionFightDispellSpellMessage(); };
            MessageReceiver._list[GameActionFightDispellableEffectMessage.ID] = function () { return new GameActionFightDispellableEffectMessage(); };
            MessageReceiver._list[GameActionFightDodgePointLossMessage.ID] = function () { return new GameActionFightDodgePointLossMessage(); };
            MessageReceiver._list[GameActionFightDropCharacterMessage.ID] = function () { return new GameActionFightDropCharacterMessage(); };
            MessageReceiver._list[GameActionFightExchangePositionsMessage.ID] = function () { return new GameActionFightExchangePositionsMessage(); };
            MessageReceiver._list[GameActionFightInvisibilityMessage.ID] = function () { return new GameActionFightInvisibilityMessage(); };
            MessageReceiver._list[GameActionFightInvisibleDetectedMessage.ID] = function () { return new GameActionFightInvisibleDetectedMessage(); };
            MessageReceiver._list[GameActionFightKillMessage.ID] = function () { return new GameActionFightKillMessage(); };
            MessageReceiver._list[GameActionFightLifeAndShieldPointsLostMessage.ID] = function () { return new GameActionFightLifeAndShieldPointsLostMessage(); };
            MessageReceiver._list[GameActionFightLifePointsGainMessage.ID] = function () { return new GameActionFightLifePointsGainMessage(); };
            MessageReceiver._list[GameActionFightLifePointsLostMessage.ID] = function () { return new GameActionFightLifePointsLostMessage(); };
            MessageReceiver._list[GameActionFightMarkCellsMessage.ID] = function () { return new GameActionFightMarkCellsMessage(); };
            MessageReceiver._list[GameActionFightModifyEffectsDurationMessage.ID] = function () { return new GameActionFightModifyEffectsDurationMessage(); };
            MessageReceiver._list[GameActionFightNoSpellCastMessage.ID] = function () { return new GameActionFightNoSpellCastMessage(); };
            MessageReceiver._list[GameActionFightPointsVariationMessage.ID] = function () { return new GameActionFightPointsVariationMessage(); };
            MessageReceiver._list[GameActionFightReduceDamagesMessage.ID] = function () { return new GameActionFightReduceDamagesMessage(); };
            MessageReceiver._list[GameActionFightReflectDamagesMessage.ID] = function () { return new GameActionFightReflectDamagesMessage(); };
            MessageReceiver._list[GameActionFightReflectSpellMessage.ID] = function () { return new GameActionFightReflectSpellMessage(); };
            MessageReceiver._list[GameActionFightSlideMessage.ID] = function () { return new GameActionFightSlideMessage(); };
            MessageReceiver._list[GameActionFightSpellCastMessage.ID] = function () { return new GameActionFightSpellCastMessage(); };
            MessageReceiver._list[GameActionFightSpellCooldownVariationMessage.ID] = function () { return new GameActionFightSpellCooldownVariationMessage(); };
            MessageReceiver._list[GameActionFightSpellImmunityMessage.ID] = function () { return new GameActionFightSpellImmunityMessage(); };
            MessageReceiver._list[GameActionFightStealKamaMessage.ID] = function () { return new GameActionFightStealKamaMessage(); };
            MessageReceiver._list[GameActionFightSummonMessage.ID] = function () { return new GameActionFightSummonMessage(); };
            MessageReceiver._list[GameActionFightTackledMessage.ID] = function () { return new GameActionFightTackledMessage(); };
            MessageReceiver._list[GameActionFightTeleportOnSameMapMessage.ID] = function () { return new GameActionFightTeleportOnSameMapMessage(); };
            MessageReceiver._list[GameActionFightThrowCharacterMessage.ID] = function () { return new GameActionFightThrowCharacterMessage(); };
            MessageReceiver._list[GameActionFightTriggerEffectMessage.ID] = function () { return new GameActionFightTriggerEffectMessage(); };
            MessageReceiver._list[GameActionFightTriggerGlyphTrapMessage.ID] = function () { return new GameActionFightTriggerGlyphTrapMessage(); };
            MessageReceiver._list[GameActionFightUnmarkCellsMessage.ID] = function () { return new GameActionFightUnmarkCellsMessage(); };
            MessageReceiver._list[GameActionFightVanishMessage.ID] = function () { return new GameActionFightVanishMessage(); };
            MessageReceiver._list[SequenceEndMessage.ID] = function () { return new SequenceEndMessage(); };
            MessageReceiver._list[SequenceStartMessage.ID] = function () { return new SequenceStartMessage(); };
            MessageReceiver._list[AllianceChangeGuildRightsMessage.ID] = function () { return new AllianceChangeGuildRightsMessage(); };
            MessageReceiver._list[AllianceCreationResultMessage.ID] = function () { return new AllianceCreationResultMessage(); };
            MessageReceiver._list[AllianceCreationStartedMessage.ID] = function () { return new AllianceCreationStartedMessage(); };
            MessageReceiver._list[AllianceCreationValidMessage.ID] = function () { return new AllianceCreationValidMessage(); };
            MessageReceiver._list[AllianceFactsErrorMessage.ID] = function () { return new AllianceFactsErrorMessage(); };
            MessageReceiver._list[AllianceFactsMessage.ID] = function () { return new AllianceFactsMessage(); };
            MessageReceiver._list[AllianceFactsRequestMessage.ID] = function () { return new AllianceFactsRequestMessage(); };
            MessageReceiver._list[AllianceGuildLeavingMessage.ID] = function () { return new AllianceGuildLeavingMessage(); };
            MessageReceiver._list[AllianceInsiderInfoMessage.ID] = function () { return new AllianceInsiderInfoMessage(); };
            MessageReceiver._list[AllianceInsiderInfoRequestMessage.ID] = function () { return new AllianceInsiderInfoRequestMessage(); };
            MessageReceiver._list[AllianceInvitationAnswerMessage.ID] = function () { return new AllianceInvitationAnswerMessage(); };
            MessageReceiver._list[AllianceInvitationMessage.ID] = function () { return new AllianceInvitationMessage(); };
            MessageReceiver._list[AllianceInvitationStateRecrutedMessage.ID] = function () { return new AllianceInvitationStateRecrutedMessage(); };
            MessageReceiver._list[AllianceInvitationStateRecruterMessage.ID] = function () { return new AllianceInvitationStateRecruterMessage(); };
            MessageReceiver._list[AllianceInvitedMessage.ID] = function () { return new AllianceInvitedMessage(); };
            MessageReceiver._list[AllianceJoinedMessage.ID] = function () { return new AllianceJoinedMessage(); };
            MessageReceiver._list[AllianceKickRequestMessage.ID] = function () { return new AllianceKickRequestMessage(); };
            MessageReceiver._list[AllianceLeftMessage.ID] = function () { return new AllianceLeftMessage(); };
            MessageReceiver._list[AllianceListMessage.ID] = function () { return new AllianceListMessage(); };
            MessageReceiver._list[AllianceMembershipMessage.ID] = function () { return new AllianceMembershipMessage(); };
            MessageReceiver._list[AllianceModificationEmblemValidMessage.ID] = function () { return new AllianceModificationEmblemValidMessage(); };
            MessageReceiver._list[AllianceModificationNameAndTagValidMessage.ID] = function () { return new AllianceModificationNameAndTagValidMessage(); };
            MessageReceiver._list[AllianceModificationStartedMessage.ID] = function () { return new AllianceModificationStartedMessage(); };
            MessageReceiver._list[AllianceModificationValidMessage.ID] = function () { return new AllianceModificationValidMessage(); };
            MessageReceiver._list[AlliancePartialListMessage.ID] = function () { return new AlliancePartialListMessage(); };
            MessageReceiver._list[AllianceVersatileInfoListMessage.ID] = function () { return new AllianceVersatileInfoListMessage(); };
            MessageReceiver._list[KohUpdateMessage.ID] = function () { return new KohUpdateMessage(); };
            MessageReceiver._list[AlmanachCalendarDateMessage.ID] = function () { return new AlmanachCalendarDateMessage(); };
            MessageReceiver._list[AccountCapabilitiesMessage.ID] = function () { return new AccountCapabilitiesMessage(); };
            MessageReceiver._list[AccountLoggingKickedMessage.ID] = function () { return new AccountLoggingKickedMessage(); };
            MessageReceiver._list[AlreadyConnectedMessage.ID] = function () { return new AlreadyConnectedMessage(); };
            MessageReceiver._list[AuthenticationTicketAcceptedMessage.ID] = function () { return new AuthenticationTicketAcceptedMessage(); };
            MessageReceiver._list[AuthenticationTicketMessage.ID] = function () { return new AuthenticationTicketMessage(); };
            MessageReceiver._list[AuthenticationTicketRefusedMessage.ID] = function () { return new AuthenticationTicketRefusedMessage(); };
            MessageReceiver._list[HelloGameMessage.ID] = function () { return new HelloGameMessage(); };
            MessageReceiver._list[ReloginTokenRequestMessage.ID] = function () { return new ReloginTokenRequestMessage(); };
            MessageReceiver._list[ReloginTokenStatusMessage.ID] = function () { return new ReloginTokenStatusMessage(); };
            MessageReceiver._list[ServerOptionalFeaturesMessage.ID] = function () { return new ServerOptionalFeaturesMessage(); };
            MessageReceiver._list[ServerSessionConstantsMessage.ID] = function () { return new ServerSessionConstantsMessage(); };
            MessageReceiver._list[ServerSettingsMessage.ID] = function () { return new ServerSettingsMessage(); };
            MessageReceiver._list[AtlasPointInformationsMessage.ID] = function () { return new AtlasPointInformationsMessage(); };
            MessageReceiver._list[CompassResetMessage.ID] = function () { return new CompassResetMessage(); };
            MessageReceiver._list[CompassUpdateMessage.ID] = function () { return new CompassUpdateMessage(); };
            MessageReceiver._list[CompassUpdatePartyMemberMessage.ID] = function () { return new CompassUpdatePartyMemberMessage(); };
            MessageReceiver._list[CompassUpdatePvpSeekMessage.ID] = function () { return new CompassUpdatePvpSeekMessage(); };
            MessageReceiver._list[BasicAckMessage.ID] = function () { return new BasicAckMessage(); };
            MessageReceiver._list[BasicDateMessage.ID] = function () { return new BasicDateMessage(); };
            MessageReceiver._list[BasicLatencyStatsMessage.ID] = function () { return new BasicLatencyStatsMessage(); };
            MessageReceiver._list[BasicLatencyStatsRequestMessage.ID] = function () { return new BasicLatencyStatsRequestMessage(); };
            MessageReceiver._list[BasicNoOperationMessage.ID] = function () { return new BasicNoOperationMessage(); };
            MessageReceiver._list[BasicTimeMessage.ID] = function () { return new BasicTimeMessage(); };
            MessageReceiver._list[BasicWhoAmIRequestMessage.ID] = function () { return new BasicWhoAmIRequestMessage(); };
            MessageReceiver._list[BasicWhoIsMessage.ID] = function () { return new BasicWhoIsMessage(); };
            MessageReceiver._list[BasicWhoIsNoMatchMessage.ID] = function () { return new BasicWhoIsNoMatchMessage(); };
            MessageReceiver._list[BasicWhoIsRequestMessage.ID] = function () { return new BasicWhoIsRequestMessage(); };
            MessageReceiver._list[CurrentServerStatusUpdateMessage.ID] = function () { return new CurrentServerStatusUpdateMessage(); };
            MessageReceiver._list[NumericWhoIsMessage.ID] = function () { return new NumericWhoIsMessage(); };
            MessageReceiver._list[NumericWhoIsRequestMessage.ID] = function () { return new NumericWhoIsRequestMessage(); };
            MessageReceiver._list[SequenceNumberMessage.ID] = function () { return new SequenceNumberMessage(); };
            MessageReceiver._list[SequenceNumberRequestMessage.ID] = function () { return new SequenceNumberRequestMessage(); };
            MessageReceiver._list[TextInformationMessage.ID] = function () { return new TextInformationMessage(); };
            MessageReceiver._list[BasicCharactersListMessage.ID] = function () { return new BasicCharactersListMessage(); };
            MessageReceiver._list[CharacterFirstSelectionMessage.ID] = function () { return new CharacterFirstSelectionMessage(); };
            MessageReceiver._list[CharacterReplayWithRemodelRequestMessage.ID] = function () { return new CharacterReplayWithRemodelRequestMessage(); };
            MessageReceiver._list[CharacterSelectedErrorMessage.ID] = function () { return new CharacterSelectedErrorMessage(); };
            MessageReceiver._list[CharacterSelectedForceMessage.ID] = function () { return new CharacterSelectedForceMessage(); };
            MessageReceiver._list[CharacterSelectedForceReadyMessage.ID] = function () { return new CharacterSelectedForceReadyMessage(); };
            MessageReceiver._list[CharacterSelectedSuccessMessage.ID] = function () { return new CharacterSelectedSuccessMessage(); };
            MessageReceiver._list[CharacterSelectionMessage.ID] = function () { return new CharacterSelectionMessage(); };
            MessageReceiver._list[CharacterSelectionWithRemodelMessage.ID] = function () { return new CharacterSelectionWithRemodelMessage(); };
            MessageReceiver._list[CharactersListErrorMessage.ID] = function () { return new CharactersListErrorMessage(); };
            MessageReceiver._list[CharactersListMessage.ID] = function () { return new CharactersListMessage(); };
            MessageReceiver._list[CharactersListRequestMessage.ID] = function () { return new CharactersListRequestMessage(); };
            MessageReceiver._list[CharactersListWithModificationsMessage.ID] = function () { return new CharactersListWithModificationsMessage(); };
            MessageReceiver._list[CharactersListWithRemodelingMessage.ID] = function () { return new CharactersListWithRemodelingMessage(); };
            MessageReceiver._list[CharacterCreationRequestMessage.ID] = function () { return new CharacterCreationRequestMessage(); };
            MessageReceiver._list[CharacterCreationResultMessage.ID] = function () { return new CharacterCreationResultMessage(); };
            MessageReceiver._list[CharacterNameSuggestionFailureMessage.ID] = function () { return new CharacterNameSuggestionFailureMessage(); };
            MessageReceiver._list[CharacterNameSuggestionRequestMessage.ID] = function () { return new CharacterNameSuggestionRequestMessage(); };
            MessageReceiver._list[CharacterNameSuggestionSuccessMessage.ID] = function () { return new CharacterNameSuggestionSuccessMessage(); };
            MessageReceiver._list[CharacterDeletionErrorMessage.ID] = function () { return new CharacterDeletionErrorMessage(); };
            MessageReceiver._list[CharacterDeletionRequestMessage.ID] = function () { return new CharacterDeletionRequestMessage(); };
            MessageReceiver._list[CharacterReplayRequestMessage.ID] = function () { return new CharacterReplayRequestMessage(); };
            MessageReceiver._list[CharacterExperienceGainMessage.ID] = function () { return new CharacterExperienceGainMessage(); };
            MessageReceiver._list[CharacterLevelUpInformationMessage.ID] = function () { return new CharacterLevelUpInformationMessage(); };
            MessageReceiver._list[CharacterLevelUpMessage.ID] = function () { return new CharacterLevelUpMessage(); };
            MessageReceiver._list[CharacterStatsListMessage.ID] = function () { return new CharacterStatsListMessage(); };
            MessageReceiver._list[FighterStatsListMessage.ID] = function () { return new FighterStatsListMessage(); };
            MessageReceiver._list[LifePointsRegenBeginMessage.ID] = function () { return new LifePointsRegenBeginMessage(); };
            MessageReceiver._list[LifePointsRegenEndMessage.ID] = function () { return new LifePointsRegenEndMessage(); };
            MessageReceiver._list[UpdateLifePointsMessage.ID] = function () { return new UpdateLifePointsMessage(); };
            MessageReceiver._list[PlayerStatusUpdateErrorMessage.ID] = function () { return new PlayerStatusUpdateErrorMessage(); };
            MessageReceiver._list[PlayerStatusUpdateMessage.ID] = function () { return new PlayerStatusUpdateMessage(); };
            MessageReceiver._list[PlayerStatusUpdateRequestMessage.ID] = function () { return new PlayerStatusUpdateRequestMessage(); };
            MessageReceiver._list[ChatAbstractClientMessage.ID] = function () { return new ChatAbstractClientMessage(); };
            MessageReceiver._list[ChatAbstractServerMessage.ID] = function () { return new ChatAbstractServerMessage(); };
            MessageReceiver._list[ChatAdminServerMessage.ID] = function () { return new ChatAdminServerMessage(); };
            MessageReceiver._list[ChatClientMultiMessage.ID] = function () { return new ChatClientMultiMessage(); };
            MessageReceiver._list[ChatClientMultiWithObjectMessage.ID] = function () { return new ChatClientMultiWithObjectMessage(); };
            MessageReceiver._list[ChatClientPrivateMessage.ID] = function () { return new ChatClientPrivateMessage(); };
            MessageReceiver._list[ChatClientPrivateWithObjectMessage.ID] = function () { return new ChatClientPrivateWithObjectMessage(); };
            MessageReceiver._list[ChatErrorMessage.ID] = function () { return new ChatErrorMessage(); };
            MessageReceiver._list[ChatServerCopyMessage.ID] = function () { return new ChatServerCopyMessage(); };
            MessageReceiver._list[ChatServerCopyWithObjectMessage.ID] = function () { return new ChatServerCopyWithObjectMessage(); };
            MessageReceiver._list[ChatServerMessage.ID] = function () { return new ChatServerMessage(); };
            MessageReceiver._list[ChatServerWithObjectMessage.ID] = function () { return new ChatServerWithObjectMessage(); };
            MessageReceiver._list[ChannelEnablingChangeMessage.ID] = function () { return new ChannelEnablingChangeMessage(); };
            MessageReceiver._list[ChannelEnablingMessage.ID] = function () { return new ChannelEnablingMessage(); };
            MessageReceiver._list[EnabledChannelsMessage.ID] = function () { return new EnabledChannelsMessage(); };
            MessageReceiver._list[ChatMessageReportMessage.ID] = function () { return new ChatMessageReportMessage(); };
            MessageReceiver._list[ChatSmileyExtraPackListMessage.ID] = function () { return new ChatSmileyExtraPackListMessage(); };
            MessageReceiver._list[ChatSmileyMessage.ID] = function () { return new ChatSmileyMessage(); };
            MessageReceiver._list[ChatSmileyRequestMessage.ID] = function () { return new ChatSmileyRequestMessage(); };
            MessageReceiver._list[LocalizedChatSmileyMessage.ID] = function () { return new LocalizedChatSmileyMessage(); };
            MessageReceiver._list[MoodSmileyRequestMessage.ID] = function () { return new MoodSmileyRequestMessage(); };
            MessageReceiver._list[MoodSmileyResultMessage.ID] = function () { return new MoodSmileyResultMessage(); };
            MessageReceiver._list[MoodSmileyUpdateMessage.ID] = function () { return new MoodSmileyUpdateMessage(); };
            MessageReceiver._list[GameCautiousMapMovementMessage.ID] = function () { return new GameCautiousMapMovementMessage(); };
            MessageReceiver._list[GameCautiousMapMovementRequestMessage.ID] = function () { return new GameCautiousMapMovementRequestMessage(); };
            MessageReceiver._list[GameContextCreateErrorMessage.ID] = function () { return new GameContextCreateErrorMessage(); };
            MessageReceiver._list[GameContextCreateMessage.ID] = function () { return new GameContextCreateMessage(); };
            MessageReceiver._list[GameContextCreateRequestMessage.ID] = function () { return new GameContextCreateRequestMessage(); };
            MessageReceiver._list[GameContextDestroyMessage.ID] = function () { return new GameContextDestroyMessage(); };
            MessageReceiver._list[GameContextKickMessage.ID] = function () { return new GameContextKickMessage(); };
            MessageReceiver._list[GameContextMoveElementMessage.ID] = function () { return new GameContextMoveElementMessage(); };
            MessageReceiver._list[GameContextMoveMultipleElementsMessage.ID] = function () { return new GameContextMoveMultipleElementsMessage(); };
            MessageReceiver._list[GameContextQuitMessage.ID] = function () { return new GameContextQuitMessage(); };
            MessageReceiver._list[GameContextReadyMessage.ID] = function () { return new GameContextReadyMessage(); };
            MessageReceiver._list[GameContextRefreshEntityLookMessage.ID] = function () { return new GameContextRefreshEntityLookMessage(); };
            MessageReceiver._list[GameContextRemoveElementMessage.ID] = function () { return new GameContextRemoveElementMessage(); };
            MessageReceiver._list[GameContextRemoveElementWithEventMessage.ID] = function () { return new GameContextRemoveElementWithEventMessage(); };
            MessageReceiver._list[GameContextRemoveMultipleElementsMessage.ID] = function () { return new GameContextRemoveMultipleElementsMessage(); };
            MessageReceiver._list[GameContextRemoveMultipleElementsWithEventsMessage.ID] = function () { return new GameContextRemoveMultipleElementsWithEventsMessage(); };
            MessageReceiver._list[GameEntitiesDispositionMessage.ID] = function () { return new GameEntitiesDispositionMessage(); };
            MessageReceiver._list[GameEntityDispositionErrorMessage.ID] = function () { return new GameEntityDispositionErrorMessage(); };
            MessageReceiver._list[GameEntityDispositionMessage.ID] = function () { return new GameEntityDispositionMessage(); };
            MessageReceiver._list[GameMapChangeOrientationMessage.ID] = function () { return new GameMapChangeOrientationMessage(); };
            MessageReceiver._list[GameMapChangeOrientationRequestMessage.ID] = function () { return new GameMapChangeOrientationRequestMessage(); };
            MessageReceiver._list[GameMapChangeOrientationsMessage.ID] = function () { return new GameMapChangeOrientationsMessage(); };
            MessageReceiver._list[GameMapMovementCancelMessage.ID] = function () { return new GameMapMovementCancelMessage(); };
            MessageReceiver._list[GameMapMovementConfirmMessage.ID] = function () { return new GameMapMovementConfirmMessage(); };
            MessageReceiver._list[GameMapMovementMessage.ID] = function () { return new GameMapMovementMessage(); };
            MessageReceiver._list[GameMapMovementRequestMessage.ID] = function () { return new GameMapMovementRequestMessage(); };
            MessageReceiver._list[GameMapNoMovementMessage.ID] = function () { return new GameMapNoMovementMessage(); };
            MessageReceiver._list[ShowCellMessage.ID] = function () { return new ShowCellMessage(); };
            MessageReceiver._list[ShowCellRequestMessage.ID] = function () { return new ShowCellRequestMessage(); };
            MessageReceiver._list[ShowCellSpectatorMessage.ID] = function () { return new ShowCellSpectatorMessage(); };
            MessageReceiver._list[DisplayNumericalValuePaddockMessage.ID] = function () { return new DisplayNumericalValuePaddockMessage(); };
            MessageReceiver._list[DungeonKeyRingMessage.ID] = function () { return new DungeonKeyRingMessage(); };
            MessageReceiver._list[DungeonKeyRingUpdateMessage.ID] = function () { return new DungeonKeyRingUpdateMessage(); };
            MessageReceiver._list[GameFightEndMessage.ID] = function () { return new GameFightEndMessage(); };
            MessageReceiver._list[GameFightHumanReadyStateMessage.ID] = function () { return new GameFightHumanReadyStateMessage(); };
            MessageReceiver._list[GameFightJoinMessage.ID] = function () { return new GameFightJoinMessage(); };
            MessageReceiver._list[GameFightJoinRequestMessage.ID] = function () { return new GameFightJoinRequestMessage(); };
            MessageReceiver._list[GameFightLeaveMessage.ID] = function () { return new GameFightLeaveMessage(); };
            MessageReceiver._list[GameFightNewRoundMessage.ID] = function () { return new GameFightNewRoundMessage(); };
            MessageReceiver._list[GameFightNewWaveMessage.ID] = function () { return new GameFightNewWaveMessage(); };
            MessageReceiver._list[GameFightOptionStateUpdateMessage.ID] = function () { return new GameFightOptionStateUpdateMessage(); };
            MessageReceiver._list[GameFightOptionToggleMessage.ID] = function () { return new GameFightOptionToggleMessage(); };
            MessageReceiver._list[GameFightPlacementPositionRequestMessage.ID] = function () { return new GameFightPlacementPositionRequestMessage(); };
            MessageReceiver._list[GameFightPlacementPossiblePositionsMessage.ID] = function () { return new GameFightPlacementPossiblePositionsMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsAcceptMessage.ID] = function () { return new GameFightPlacementSwapPositionsAcceptMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsCancelMessage.ID] = function () { return new GameFightPlacementSwapPositionsCancelMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsCancelledMessage.ID] = function () { return new GameFightPlacementSwapPositionsCancelledMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsErrorMessage.ID] = function () { return new GameFightPlacementSwapPositionsErrorMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsMessage.ID] = function () { return new GameFightPlacementSwapPositionsMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsOfferMessage.ID] = function () { return new GameFightPlacementSwapPositionsOfferMessage(); };
            MessageReceiver._list[GameFightPlacementSwapPositionsRequestMessage.ID] = function () { return new GameFightPlacementSwapPositionsRequestMessage(); };
            MessageReceiver._list[GameFightReadyMessage.ID] = function () { return new GameFightReadyMessage(); };
            MessageReceiver._list[GameFightRemoveTeamMemberMessage.ID] = function () { return new GameFightRemoveTeamMemberMessage(); };
            MessageReceiver._list[GameFightResumeMessage.ID] = function () { return new GameFightResumeMessage(); };
            MessageReceiver._list[GameFightResumeWithSlavesMessage.ID] = function () { return new GameFightResumeWithSlavesMessage(); };
            MessageReceiver._list[GameFightSpectateMessage.ID] = function () { return new GameFightSpectateMessage(); };
            MessageReceiver._list[GameFightSpectatePlayerRequestMessage.ID] = function () { return new GameFightSpectatePlayerRequestMessage(); };
            MessageReceiver._list[GameFightSpectatorJoinMessage.ID] = function () { return new GameFightSpectatorJoinMessage(); };
            MessageReceiver._list[GameFightStartMessage.ID] = function () { return new GameFightStartMessage(); };
            MessageReceiver._list[GameFightStartingMessage.ID] = function () { return new GameFightStartingMessage(); };
            MessageReceiver._list[GameFightSynchronizeMessage.ID] = function () { return new GameFightSynchronizeMessage(); };
            MessageReceiver._list[GameFightTurnEndMessage.ID] = function () { return new GameFightTurnEndMessage(); };
            MessageReceiver._list[GameFightTurnFinishMessage.ID] = function () { return new GameFightTurnFinishMessage(); };
            MessageReceiver._list[GameFightTurnListMessage.ID] = function () { return new GameFightTurnListMessage(); };
            MessageReceiver._list[GameFightTurnReadyMessage.ID] = function () { return new GameFightTurnReadyMessage(); };
            MessageReceiver._list[GameFightTurnReadyRequestMessage.ID] = function () { return new GameFightTurnReadyRequestMessage(); };
            MessageReceiver._list[GameFightTurnResumeMessage.ID] = function () { return new GameFightTurnResumeMessage(); };
            MessageReceiver._list[GameFightTurnStartMessage.ID] = function () { return new GameFightTurnStartMessage(); };
            MessageReceiver._list[GameFightTurnStartPlayingMessage.ID] = function () { return new GameFightTurnStartPlayingMessage(); };
            MessageReceiver._list[GameFightUpdateTeamMessage.ID] = function () { return new GameFightUpdateTeamMessage(); };
            MessageReceiver._list[SlaveSwitchContextMessage.ID] = function () { return new SlaveSwitchContextMessage(); };
            MessageReceiver._list[ChallengeInfoMessage.ID] = function () { return new ChallengeInfoMessage(); };
            MessageReceiver._list[ChallengeResultMessage.ID] = function () { return new ChallengeResultMessage(); };
            MessageReceiver._list[ChallengeTargetUpdateMessage.ID] = function () { return new ChallengeTargetUpdateMessage(); };
            MessageReceiver._list[ChallengeTargetsListMessage.ID] = function () { return new ChallengeTargetsListMessage(); };
            MessageReceiver._list[ChallengeTargetsListRequestMessage.ID] = function () { return new ChallengeTargetsListRequestMessage(); };
            MessageReceiver._list[GameFightRefreshFighterMessage.ID] = function () { return new GameFightRefreshFighterMessage(); };
            MessageReceiver._list[GameFightShowFighterMessage.ID] = function () { return new GameFightShowFighterMessage(); };
            MessageReceiver._list[GameFightShowFighterRandomStaticPoseMessage.ID] = function () { return new GameFightShowFighterRandomStaticPoseMessage(); };
            MessageReceiver._list[GameDataPaddockObjectAddMessage.ID] = function () { return new GameDataPaddockObjectAddMessage(); };
            MessageReceiver._list[GameDataPaddockObjectListAddMessage.ID] = function () { return new GameDataPaddockObjectListAddMessage(); };
            MessageReceiver._list[GameDataPaddockObjectRemoveMessage.ID] = function () { return new GameDataPaddockObjectRemoveMessage(); };
            MessageReceiver._list[MountDataErrorMessage.ID] = function () { return new MountDataErrorMessage(); };
            MessageReceiver._list[MountDataMessage.ID] = function () { return new MountDataMessage(); };
            MessageReceiver._list[MountEmoteIconUsedOkMessage.ID] = function () { return new MountEmoteIconUsedOkMessage(); };
            MessageReceiver._list[MountEquipedErrorMessage.ID] = function () { return new MountEquipedErrorMessage(); };
            MessageReceiver._list[MountFeedRequestMessage.ID] = function () { return new MountFeedRequestMessage(); };
            MessageReceiver._list[MountInformationInPaddockRequestMessage.ID] = function () { return new MountInformationInPaddockRequestMessage(); };
            MessageReceiver._list[MountInformationRequestMessage.ID] = function () { return new MountInformationRequestMessage(); };
            MessageReceiver._list[MountReleaseRequestMessage.ID] = function () { return new MountReleaseRequestMessage(); };
            MessageReceiver._list[MountReleasedMessage.ID] = function () { return new MountReleasedMessage(); };
            MessageReceiver._list[MountRenameRequestMessage.ID] = function () { return new MountRenameRequestMessage(); };
            MessageReceiver._list[MountRenamedMessage.ID] = function () { return new MountRenamedMessage(); };
            MessageReceiver._list[MountRidingMessage.ID] = function () { return new MountRidingMessage(); };
            MessageReceiver._list[MountSetMessage.ID] = function () { return new MountSetMessage(); };
            MessageReceiver._list[MountSetXpRatioRequestMessage.ID] = function () { return new MountSetXpRatioRequestMessage(); };
            MessageReceiver._list[MountSterilizeRequestMessage.ID] = function () { return new MountSterilizeRequestMessage(); };
            MessageReceiver._list[MountSterilizedMessage.ID] = function () { return new MountSterilizedMessage(); };
            MessageReceiver._list[MountToggleRidingRequestMessage.ID] = function () { return new MountToggleRidingRequestMessage(); };
            MessageReceiver._list[MountUnSetMessage.ID] = function () { return new MountUnSetMessage(); };
            MessageReceiver._list[MountXpRatioMessage.ID] = function () { return new MountXpRatioMessage(); };
            MessageReceiver._list[PaddockBuyRequestMessage.ID] = function () { return new PaddockBuyRequestMessage(); };
            MessageReceiver._list[PaddockBuyResultMessage.ID] = function () { return new PaddockBuyResultMessage(); };
            MessageReceiver._list[PaddockMoveItemRequestMessage.ID] = function () { return new PaddockMoveItemRequestMessage(); };
            MessageReceiver._list[PaddockRemoveItemRequestMessage.ID] = function () { return new PaddockRemoveItemRequestMessage(); };
            MessageReceiver._list[PaddockSellRequestMessage.ID] = function () { return new PaddockSellRequestMessage(); };
            MessageReceiver._list[NotificationByServerMessage.ID] = function () { return new NotificationByServerMessage(); };
            MessageReceiver._list[NotificationListMessage.ID] = function () { return new NotificationListMessage(); };
            MessageReceiver._list[NotificationResetMessage.ID] = function () { return new NotificationResetMessage(); };
            MessageReceiver._list[NotificationUpdateFlagMessage.ID] = function () { return new NotificationUpdateFlagMessage(); };
            MessageReceiver._list[ChangeMapMessage.ID] = function () { return new ChangeMapMessage(); };
            MessageReceiver._list[CurrentMapMessage.ID] = function () { return new CurrentMapMessage(); };
            MessageReceiver._list[ErrorMapNotFoundMessage.ID] = function () { return new ErrorMapNotFoundMessage(); };
            MessageReceiver._list[GameRolePlayShowActorMessage.ID] = function () { return new GameRolePlayShowActorMessage(); };
            MessageReceiver._list[GameRolePlayShowActorWithEventMessage.ID] = function () { return new GameRolePlayShowActorWithEventMessage(); };
            MessageReceiver._list[MapComplementaryInformationsDataInHouseMessage.ID] = function () { return new MapComplementaryInformationsDataInHouseMessage(); };
            MessageReceiver._list[MapComplementaryInformationsDataMessage.ID] = function () { return new MapComplementaryInformationsDataMessage(); };
            MessageReceiver._list[MapComplementaryInformationsWithCoordsMessage.ID] = function () { return new MapComplementaryInformationsWithCoordsMessage(); };
            MessageReceiver._list[MapFightCountMessage.ID] = function () { return new MapFightCountMessage(); };
            MessageReceiver._list[MapInformationsRequestMessage.ID] = function () { return new MapInformationsRequestMessage(); };
            MessageReceiver._list[MapObstacleUpdateMessage.ID] = function () { return new MapObstacleUpdateMessage(); };
            MessageReceiver._list[MapRunningFightDetailsExtendedMessage.ID] = function () { return new MapRunningFightDetailsExtendedMessage(); };
            MessageReceiver._list[MapRunningFightDetailsMessage.ID] = function () { return new MapRunningFightDetailsMessage(); };
            MessageReceiver._list[MapRunningFightDetailsRequestMessage.ID] = function () { return new MapRunningFightDetailsRequestMessage(); };
            MessageReceiver._list[MapRunningFightListMessage.ID] = function () { return new MapRunningFightListMessage(); };
            MessageReceiver._list[MapRunningFightListRequestMessage.ID] = function () { return new MapRunningFightListRequestMessage(); };
            MessageReceiver._list[StopToListenRunningFightRequestMessage.ID] = function () { return new StopToListenRunningFightRequestMessage(); };
            MessageReceiver._list[TeleportOnSameMapMessage.ID] = function () { return new TeleportOnSameMapMessage(); };
            MessageReceiver._list[GameRolePlayFreeSoulRequestMessage.ID] = function () { return new GameRolePlayFreeSoulRequestMessage(); };
            MessageReceiver._list[GameRolePlayGameOverMessage.ID] = function () { return new GameRolePlayGameOverMessage(); };
            MessageReceiver._list[GameRolePlayPlayerLifeStatusMessage.ID] = function () { return new GameRolePlayPlayerLifeStatusMessage(); };
            MessageReceiver._list[WarnOnPermaDeathMessage.ID] = function () { return new WarnOnPermaDeathMessage(); };
            MessageReceiver._list[GameRolePlayDelayedActionFinishedMessage.ID] = function () { return new GameRolePlayDelayedActionFinishedMessage(); };
            MessageReceiver._list[GameRolePlayDelayedActionMessage.ID] = function () { return new GameRolePlayDelayedActionMessage(); };
            MessageReceiver._list[GameRolePlayDelayedObjectUseMessage.ID] = function () { return new GameRolePlayDelayedObjectUseMessage(); };
            MessageReceiver._list[ComicReadingBeginMessage.ID] = function () { return new ComicReadingBeginMessage(); };
            MessageReceiver._list[DocumentReadingBeginMessage.ID] = function () { return new DocumentReadingBeginMessage(); };
            MessageReceiver._list[EmoteAddMessage.ID] = function () { return new EmoteAddMessage(); };
            MessageReceiver._list[EmoteListMessage.ID] = function () { return new EmoteListMessage(); };
            MessageReceiver._list[EmotePlayAbstractMessage.ID] = function () { return new EmotePlayAbstractMessage(); };
            MessageReceiver._list[EmotePlayErrorMessage.ID] = function () { return new EmotePlayErrorMessage(); };
            MessageReceiver._list[EmotePlayMassiveMessage.ID] = function () { return new EmotePlayMassiveMessage(); };
            MessageReceiver._list[EmotePlayMessage.ID] = function () { return new EmotePlayMessage(); };
            MessageReceiver._list[EmotePlayRequestMessage.ID] = function () { return new EmotePlayRequestMessage(); };
            MessageReceiver._list[EmoteRemoveMessage.ID] = function () { return new EmoteRemoveMessage(); };
            MessageReceiver._list[GameRolePlayAggressionMessage.ID] = function () { return new GameRolePlayAggressionMessage(); };
            MessageReceiver._list[GameRolePlayAttackMonsterRequestMessage.ID] = function () { return new GameRolePlayAttackMonsterRequestMessage(); };
            MessageReceiver._list[GameRolePlayFightRequestCanceledMessage.ID] = function () { return new GameRolePlayFightRequestCanceledMessage(); };
            MessageReceiver._list[GameRolePlayPlayerFightFriendlyAnswerMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyAnswerMessage(); };
            MessageReceiver._list[GameRolePlayPlayerFightFriendlyAnsweredMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyAnsweredMessage(); };
            MessageReceiver._list[GameRolePlayPlayerFightFriendlyRequestedMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyRequestedMessage(); };
            MessageReceiver._list[GameRolePlayPlayerFightRequestMessage.ID] = function () { return new GameRolePlayPlayerFightRequestMessage(); };
            MessageReceiver._list[GameRolePlayRemoveChallengeMessage.ID] = function () { return new GameRolePlayRemoveChallengeMessage(); };
            MessageReceiver._list[GameRolePlayShowChallengeMessage.ID] = function () { return new GameRolePlayShowChallengeMessage(); };
            MessageReceiver._list[GameRolePlayArenaFightAnswerMessage.ID] = function () { return new GameRolePlayArenaFightAnswerMessage(); };
            MessageReceiver._list[GameRolePlayArenaFightPropositionMessage.ID] = function () { return new GameRolePlayArenaFightPropositionMessage(); };
            MessageReceiver._list[GameRolePlayArenaFighterStatusMessage.ID] = function () { return new GameRolePlayArenaFighterStatusMessage(); };
            MessageReceiver._list[GameRolePlayArenaRegisterMessage.ID] = function () { return new GameRolePlayArenaRegisterMessage(); };
            MessageReceiver._list[GameRolePlayArenaRegistrationStatusMessage.ID] = function () { return new GameRolePlayArenaRegistrationStatusMessage(); };
            MessageReceiver._list[GameRolePlayArenaSwitchToFightServerMessage.ID] = function () { return new GameRolePlayArenaSwitchToFightServerMessage(); };
            MessageReceiver._list[GameRolePlayArenaSwitchToGameServerMessage.ID] = function () { return new GameRolePlayArenaSwitchToGameServerMessage(); };
            MessageReceiver._list[GameRolePlayArenaUnregisterMessage.ID] = function () { return new GameRolePlayArenaUnregisterMessage(); };
            MessageReceiver._list[GameRolePlayArenaUpdatePlayerInfosMessage.ID] = function () { return new GameRolePlayArenaUpdatePlayerInfosMessage(); };
            MessageReceiver._list[AccountHouseMessage.ID] = function () { return new AccountHouseMessage(); };
            MessageReceiver._list[HouseBuyRequestMessage.ID] = function () { return new HouseBuyRequestMessage(); };
            MessageReceiver._list[HouseBuyResultMessage.ID] = function () { return new HouseBuyResultMessage(); };
            MessageReceiver._list[HouseKickIndoorMerchantRequestMessage.ID] = function () { return new HouseKickIndoorMerchantRequestMessage(); };
            MessageReceiver._list[HouseKickRequestMessage.ID] = function () { return new HouseKickRequestMessage(); };
            MessageReceiver._list[HouseLockFromInsideRequestMessage.ID] = function () { return new HouseLockFromInsideRequestMessage(); };
            MessageReceiver._list[HousePropertiesMessage.ID] = function () { return new HousePropertiesMessage(); };
            MessageReceiver._list[HouseSellFromInsideRequestMessage.ID] = function () { return new HouseSellFromInsideRequestMessage(); };
            MessageReceiver._list[HouseSellRequestMessage.ID] = function () { return new HouseSellRequestMessage(); };
            MessageReceiver._list[HouseSoldMessage.ID] = function () { return new HouseSoldMessage(); };
            MessageReceiver._list[HouseToSellFilterMessage.ID] = function () { return new HouseToSellFilterMessage(); };
            MessageReceiver._list[HouseToSellListMessage.ID] = function () { return new HouseToSellListMessage(); };
            MessageReceiver._list[HouseToSellListRequestMessage.ID] = function () { return new HouseToSellListRequestMessage(); };
            MessageReceiver._list[HouseGuildNoneMessage.ID] = function () { return new HouseGuildNoneMessage(); };
            MessageReceiver._list[HouseGuildRightsMessage.ID] = function () { return new HouseGuildRightsMessage(); };
            MessageReceiver._list[HouseGuildRightsViewMessage.ID] = function () { return new HouseGuildRightsViewMessage(); };
            MessageReceiver._list[HouseGuildShareRequestMessage.ID] = function () { return new HouseGuildShareRequestMessage(); };
            MessageReceiver._list[JobAllowMultiCraftRequestMessage.ID] = function () { return new JobAllowMultiCraftRequestMessage(); };
            MessageReceiver._list[JobBookSubscriptionMessage.ID] = function () { return new JobBookSubscriptionMessage(); };
            MessageReceiver._list[JobCrafterDirectoryAddMessage.ID] = function () { return new JobCrafterDirectoryAddMessage(); };
            MessageReceiver._list[JobCrafterDirectoryDefineSettingsMessage.ID] = function () { return new JobCrafterDirectoryDefineSettingsMessage(); };
            MessageReceiver._list[JobCrafterDirectoryEntryMessage.ID] = function () { return new JobCrafterDirectoryEntryMessage(); };
            MessageReceiver._list[JobCrafterDirectoryEntryRequestMessage.ID] = function () { return new JobCrafterDirectoryEntryRequestMessage(); };
            MessageReceiver._list[JobCrafterDirectoryListMessage.ID] = function () { return new JobCrafterDirectoryListMessage(); };
            MessageReceiver._list[JobCrafterDirectoryListRequestMessage.ID] = function () { return new JobCrafterDirectoryListRequestMessage(); };
            MessageReceiver._list[JobCrafterDirectoryRemoveMessage.ID] = function () { return new JobCrafterDirectoryRemoveMessage(); };
            MessageReceiver._list[JobCrafterDirectorySettingsMessage.ID] = function () { return new JobCrafterDirectorySettingsMessage(); };
            MessageReceiver._list[JobDescriptionMessage.ID] = function () { return new JobDescriptionMessage(); };
            MessageReceiver._list[JobExperienceMultiUpdateMessage.ID] = function () { return new JobExperienceMultiUpdateMessage(); };
            MessageReceiver._list[JobExperienceOtherPlayerUpdateMessage.ID] = function () { return new JobExperienceOtherPlayerUpdateMessage(); };
            MessageReceiver._list[JobExperienceUpdateMessage.ID] = function () { return new JobExperienceUpdateMessage(); };
            MessageReceiver._list[JobLevelUpMessage.ID] = function () { return new JobLevelUpMessage(); };
            MessageReceiver._list[JobMultiCraftAvailableSkillsMessage.ID] = function () { return new JobMultiCraftAvailableSkillsMessage(); };
            MessageReceiver._list[LockableChangeCodeMessage.ID] = function () { return new LockableChangeCodeMessage(); };
            MessageReceiver._list[LockableCodeResultMessage.ID] = function () { return new LockableCodeResultMessage(); };
            MessageReceiver._list[LockableShowCodeDialogMessage.ID] = function () { return new LockableShowCodeDialogMessage(); };
            MessageReceiver._list[LockableStateUpdateAbstractMessage.ID] = function () { return new LockableStateUpdateAbstractMessage(); };
            MessageReceiver._list[LockableStateUpdateHouseDoorMessage.ID] = function () { return new LockableStateUpdateHouseDoorMessage(); };
            MessageReceiver._list[LockableStateUpdateStorageMessage.ID] = function () { return new LockableStateUpdateStorageMessage(); };
            MessageReceiver._list[LockableUseCodeMessage.ID] = function () { return new LockableUseCodeMessage(); };
            MessageReceiver._list[AlliancePrismDialogQuestionMessage.ID] = function () { return new AlliancePrismDialogQuestionMessage(); };
            MessageReceiver._list[AllianceTaxCollectorDialogQuestionExtendedMessage.ID] = function () { return new AllianceTaxCollectorDialogQuestionExtendedMessage(); };
            MessageReceiver._list[EntityTalkMessage.ID] = function () { return new EntityTalkMessage(); };
            MessageReceiver._list[MapNpcsQuestStatusUpdateMessage.ID] = function () { return new MapNpcsQuestStatusUpdateMessage(); };
            MessageReceiver._list[NpcDialogCreationMessage.ID] = function () { return new NpcDialogCreationMessage(); };
            MessageReceiver._list[NpcDialogQuestionMessage.ID] = function () { return new NpcDialogQuestionMessage(); };
            MessageReceiver._list[NpcDialogReplyMessage.ID] = function () { return new NpcDialogReplyMessage(); };
            MessageReceiver._list[NpcGenericActionFailureMessage.ID] = function () { return new NpcGenericActionFailureMessage(); };
            MessageReceiver._list[NpcGenericActionRequestMessage.ID] = function () { return new NpcGenericActionRequestMessage(); };
            MessageReceiver._list[TaxCollectorDialogQuestionBasicMessage.ID] = function () { return new TaxCollectorDialogQuestionBasicMessage(); };
            MessageReceiver._list[TaxCollectorDialogQuestionExtendedMessage.ID] = function () { return new TaxCollectorDialogQuestionExtendedMessage(); };
            MessageReceiver._list[ObjectGroundAddedMessage.ID] = function () { return new ObjectGroundAddedMessage(); };
            MessageReceiver._list[ObjectGroundListAddedMessage.ID] = function () { return new ObjectGroundListAddedMessage(); };
            MessageReceiver._list[ObjectGroundRemovedMessage.ID] = function () { return new ObjectGroundRemovedMessage(); };
            MessageReceiver._list[ObjectGroundRemovedMultipleMessage.ID] = function () { return new ObjectGroundRemovedMultipleMessage(); };
            MessageReceiver._list[GameDataPlayFarmObjectAnimationMessage.ID] = function () { return new GameDataPlayFarmObjectAnimationMessage(); };
            MessageReceiver._list[PaddockPropertiesMessage.ID] = function () { return new PaddockPropertiesMessage(); };
            MessageReceiver._list[PaddockSellBuyDialogMessage.ID] = function () { return new PaddockSellBuyDialogMessage(); };
            MessageReceiver._list[PaddockToSellFilterMessage.ID] = function () { return new PaddockToSellFilterMessage(); };
            MessageReceiver._list[PaddockToSellListMessage.ID] = function () { return new PaddockToSellListMessage(); };
            MessageReceiver._list[PaddockToSellListRequestMessage.ID] = function () { return new PaddockToSellListRequestMessage(); };
            MessageReceiver._list[AbstractPartyEventMessage.ID] = function () { return new AbstractPartyEventMessage(); };
            MessageReceiver._list[AbstractPartyMessage.ID] = function () { return new AbstractPartyMessage(); };
            MessageReceiver._list[DungeonPartyFinderAvailableDungeonsMessage.ID] = function () { return new DungeonPartyFinderAvailableDungeonsMessage(); };
            MessageReceiver._list[DungeonPartyFinderAvailableDungeonsRequestMessage.ID] = function () { return new DungeonPartyFinderAvailableDungeonsRequestMessage(); };
            MessageReceiver._list[DungeonPartyFinderListenErrorMessage.ID] = function () { return new DungeonPartyFinderListenErrorMessage(); };
            MessageReceiver._list[DungeonPartyFinderListenRequestMessage.ID] = function () { return new DungeonPartyFinderListenRequestMessage(); };
            MessageReceiver._list[DungeonPartyFinderRegisterErrorMessage.ID] = function () { return new DungeonPartyFinderRegisterErrorMessage(); };
            MessageReceiver._list[DungeonPartyFinderRegisterRequestMessage.ID] = function () { return new DungeonPartyFinderRegisterRequestMessage(); };
            MessageReceiver._list[DungeonPartyFinderRegisterSuccessMessage.ID] = function () { return new DungeonPartyFinderRegisterSuccessMessage(); };
            MessageReceiver._list[DungeonPartyFinderRoomContentMessage.ID] = function () { return new DungeonPartyFinderRoomContentMessage(); };
            MessageReceiver._list[DungeonPartyFinderRoomContentUpdateMessage.ID] = function () { return new DungeonPartyFinderRoomContentUpdateMessage(); };
            MessageReceiver._list[PartyAbdicateThroneMessage.ID] = function () { return new PartyAbdicateThroneMessage(); };
            MessageReceiver._list[PartyAcceptInvitationMessage.ID] = function () { return new PartyAcceptInvitationMessage(); };
            MessageReceiver._list[PartyCancelInvitationMessage.ID] = function () { return new PartyCancelInvitationMessage(); };
            MessageReceiver._list[PartyCancelInvitationNotificationMessage.ID] = function () { return new PartyCancelInvitationNotificationMessage(); };
            MessageReceiver._list[PartyCannotJoinErrorMessage.ID] = function () { return new PartyCannotJoinErrorMessage(); };
            MessageReceiver._list[PartyDeletedMessage.ID] = function () { return new PartyDeletedMessage(); };
            MessageReceiver._list[PartyFollowMemberRequestMessage.ID] = function () { return new PartyFollowMemberRequestMessage(); };
            MessageReceiver._list[PartyFollowStatusUpdateMessage.ID] = function () { return new PartyFollowStatusUpdateMessage(); };
            MessageReceiver._list[PartyFollowThisMemberRequestMessage.ID] = function () { return new PartyFollowThisMemberRequestMessage(); };
            MessageReceiver._list[PartyInvitationArenaRequestMessage.ID] = function () { return new PartyInvitationArenaRequestMessage(); };
            MessageReceiver._list[PartyInvitationCancelledForGuestMessage.ID] = function () { return new PartyInvitationCancelledForGuestMessage(); };
            MessageReceiver._list[PartyInvitationDetailsMessage.ID] = function () { return new PartyInvitationDetailsMessage(); };
            MessageReceiver._list[PartyInvitationDetailsRequestMessage.ID] = function () { return new PartyInvitationDetailsRequestMessage(); };
            MessageReceiver._list[PartyInvitationDungeonDetailsMessage.ID] = function () { return new PartyInvitationDungeonDetailsMessage(); };
            MessageReceiver._list[PartyInvitationDungeonMessage.ID] = function () { return new PartyInvitationDungeonMessage(); };
            MessageReceiver._list[PartyInvitationDungeonRequestMessage.ID] = function () { return new PartyInvitationDungeonRequestMessage(); };
            MessageReceiver._list[PartyInvitationMessage.ID] = function () { return new PartyInvitationMessage(); };
            MessageReceiver._list[PartyInvitationRequestMessage.ID] = function () { return new PartyInvitationRequestMessage(); };
            MessageReceiver._list[PartyJoinMessage.ID] = function () { return new PartyJoinMessage(); };
            MessageReceiver._list[PartyKickRequestMessage.ID] = function () { return new PartyKickRequestMessage(); };
            MessageReceiver._list[PartyKickedByMessage.ID] = function () { return new PartyKickedByMessage(); };
            MessageReceiver._list[PartyLeaderUpdateMessage.ID] = function () { return new PartyLeaderUpdateMessage(); };
            MessageReceiver._list[PartyLeaveMessage.ID] = function () { return new PartyLeaveMessage(); };
            MessageReceiver._list[PartyLeaveRequestMessage.ID] = function () { return new PartyLeaveRequestMessage(); };
            MessageReceiver._list[PartyLocateMembersMessage.ID] = function () { return new PartyLocateMembersMessage(); };
            MessageReceiver._list[PartyLoyaltyStatusMessage.ID] = function () { return new PartyLoyaltyStatusMessage(); };
            MessageReceiver._list[PartyMemberEjectedMessage.ID] = function () { return new PartyMemberEjectedMessage(); };
            MessageReceiver._list[PartyMemberInFightMessage.ID] = function () { return new PartyMemberInFightMessage(); };
            MessageReceiver._list[PartyMemberRemoveMessage.ID] = function () { return new PartyMemberRemoveMessage(); };
            MessageReceiver._list[PartyModifiableStatusMessage.ID] = function () { return new PartyModifiableStatusMessage(); };
            MessageReceiver._list[PartyNameSetErrorMessage.ID] = function () { return new PartyNameSetErrorMessage(); };
            MessageReceiver._list[PartyNameSetRequestMessage.ID] = function () { return new PartyNameSetRequestMessage(); };
            MessageReceiver._list[PartyNameUpdateMessage.ID] = function () { return new PartyNameUpdateMessage(); };
            MessageReceiver._list[PartyNewGuestMessage.ID] = function () { return new PartyNewGuestMessage(); };
            MessageReceiver._list[PartyNewMemberMessage.ID] = function () { return new PartyNewMemberMessage(); };
            MessageReceiver._list[PartyPledgeLoyaltyRequestMessage.ID] = function () { return new PartyPledgeLoyaltyRequestMessage(); };
            MessageReceiver._list[PartyRefuseInvitationMessage.ID] = function () { return new PartyRefuseInvitationMessage(); };
            MessageReceiver._list[PartyRefuseInvitationNotificationMessage.ID] = function () { return new PartyRefuseInvitationNotificationMessage(); };
            MessageReceiver._list[PartyRestrictedMessage.ID] = function () { return new PartyRestrictedMessage(); };
            MessageReceiver._list[PartyStopFollowRequestMessage.ID] = function () { return new PartyStopFollowRequestMessage(); };
            MessageReceiver._list[PartyUpdateLightMessage.ID] = function () { return new PartyUpdateLightMessage(); };
            MessageReceiver._list[PartyUpdateMessage.ID] = function () { return new PartyUpdateMessage(); };
            MessageReceiver._list[PartyCompanionUpdateLightMessage.ID] = function () { return new PartyCompanionUpdateLightMessage(); };
            MessageReceiver._list[PurchasableDialogMessage.ID] = function () { return new PurchasableDialogMessage(); };
            MessageReceiver._list[GuidedModeQuitRequestMessage.ID] = function () { return new GuidedModeQuitRequestMessage(); };
            MessageReceiver._list[GuidedModeReturnRequestMessage.ID] = function () { return new GuidedModeReturnRequestMessage(); };
            MessageReceiver._list[QuestListMessage.ID] = function () { return new QuestListMessage(); };
            MessageReceiver._list[QuestListRequestMessage.ID] = function () { return new QuestListRequestMessage(); };
            MessageReceiver._list[QuestObjectiveValidatedMessage.ID] = function () { return new QuestObjectiveValidatedMessage(); };
            MessageReceiver._list[QuestObjectiveValidationMessage.ID] = function () { return new QuestObjectiveValidationMessage(); };
            MessageReceiver._list[QuestStartRequestMessage.ID] = function () { return new QuestStartRequestMessage(); };
            MessageReceiver._list[QuestStartedMessage.ID] = function () { return new QuestStartedMessage(); };
            MessageReceiver._list[QuestStepInfoMessage.ID] = function () { return new QuestStepInfoMessage(); };
            MessageReceiver._list[QuestStepInfoRequestMessage.ID] = function () { return new QuestStepInfoRequestMessage(); };
            MessageReceiver._list[QuestStepStartedMessage.ID] = function () { return new QuestStepStartedMessage(); };
            MessageReceiver._list[QuestStepValidatedMessage.ID] = function () { return new QuestStepValidatedMessage(); };
            MessageReceiver._list[QuestValidatedMessage.ID] = function () { return new QuestValidatedMessage(); };
            MessageReceiver._list[SpellForgetUIMessage.ID] = function () { return new SpellForgetUIMessage(); };
            MessageReceiver._list[SpellForgottenMessage.ID] = function () { return new SpellForgottenMessage(); };
            MessageReceiver._list[SpellItemBoostMessage.ID] = function () { return new SpellItemBoostMessage(); };
            MessageReceiver._list[SpellUpgradeFailureMessage.ID] = function () { return new SpellUpgradeFailureMessage(); };
            MessageReceiver._list[SpellUpgradeRequestMessage.ID] = function () { return new SpellUpgradeRequestMessage(); };
            MessageReceiver._list[SpellUpgradeSuccessMessage.ID] = function () { return new SpellUpgradeSuccessMessage(); };
            MessageReceiver._list[ValidateSpellForgetMessage.ID] = function () { return new ValidateSpellForgetMessage(); };
            MessageReceiver._list[StatsUpgradeRequestMessage.ID] = function () { return new StatsUpgradeRequestMessage(); };
            MessageReceiver._list[StatsUpgradeResultMessage.ID] = function () { return new StatsUpgradeResultMessage(); };
            MessageReceiver._list[PortalUseRequestMessage.ID] = function () { return new PortalUseRequestMessage(); };
            MessageReceiver._list[TreasureHuntAvailableRetryCountUpdateMessage.ID] = function () { return new TreasureHuntAvailableRetryCountUpdateMessage(); };
            MessageReceiver._list[TreasureHuntDigRequestAnswerFailedMessage.ID] = function () { return new TreasureHuntDigRequestAnswerFailedMessage(); };
            MessageReceiver._list[TreasureHuntDigRequestAnswerMessage.ID] = function () { return new TreasureHuntDigRequestAnswerMessage(); };
            MessageReceiver._list[TreasureHuntDigRequestMessage.ID] = function () { return new TreasureHuntDigRequestMessage(); };
            MessageReceiver._list[TreasureHuntFinishedMessage.ID] = function () { return new TreasureHuntFinishedMessage(); };
            MessageReceiver._list[TreasureHuntFlagRemoveRequestMessage.ID] = function () { return new TreasureHuntFlagRemoveRequestMessage(); };
            MessageReceiver._list[TreasureHuntFlagRequestAnswerMessage.ID] = function () { return new TreasureHuntFlagRequestAnswerMessage(); };
            MessageReceiver._list[TreasureHuntFlagRequestMessage.ID] = function () { return new TreasureHuntFlagRequestMessage(); };
            MessageReceiver._list[TreasureHuntGiveUpRequestMessage.ID] = function () { return new TreasureHuntGiveUpRequestMessage(); };
            MessageReceiver._list[TreasureHuntLegendaryRequestMessage.ID] = function () { return new TreasureHuntLegendaryRequestMessage(); };
            MessageReceiver._list[TreasureHuntMessage.ID] = function () { return new TreasureHuntMessage(); };
            MessageReceiver._list[TreasureHuntRequestAnswerMessage.ID] = function () { return new TreasureHuntRequestAnswerMessage(); };
            MessageReceiver._list[TreasureHuntRequestMessage.ID] = function () { return new TreasureHuntRequestMessage(); };
            MessageReceiver._list[TreasureHuntShowLegendaryUIMessage.ID] = function () { return new TreasureHuntShowLegendaryUIMessage(); };
            MessageReceiver._list[GameRolePlaySpellAnimMessage.ID] = function () { return new GameRolePlaySpellAnimMessage(); };
            MessageReceiver._list[LeaveDialogMessage.ID] = function () { return new LeaveDialogMessage(); };
            MessageReceiver._list[LeaveDialogRequestMessage.ID] = function () { return new LeaveDialogRequestMessage(); };
            MessageReceiver._list[PauseDialogMessage.ID] = function () { return new PauseDialogMessage(); };
            MessageReceiver._list[FriendAddFailureMessage.ID] = function () { return new FriendAddFailureMessage(); };
            MessageReceiver._list[FriendAddRequestMessage.ID] = function () { return new FriendAddRequestMessage(); };
            MessageReceiver._list[FriendAddedMessage.ID] = function () { return new FriendAddedMessage(); };
            MessageReceiver._list[FriendDeleteRequestMessage.ID] = function () { return new FriendDeleteRequestMessage(); };
            MessageReceiver._list[FriendDeleteResultMessage.ID] = function () { return new FriendDeleteResultMessage(); };
            MessageReceiver._list[FriendJoinRequestMessage.ID] = function () { return new FriendJoinRequestMessage(); };
            MessageReceiver._list[FriendSetWarnOnConnectionMessage.ID] = function () { return new FriendSetWarnOnConnectionMessage(); };
            MessageReceiver._list[FriendSetWarnOnLevelGainMessage.ID] = function () { return new FriendSetWarnOnLevelGainMessage(); };
            MessageReceiver._list[FriendSpouseFollowWithCompassRequestMessage.ID] = function () { return new FriendSpouseFollowWithCompassRequestMessage(); };
            MessageReceiver._list[FriendSpouseJoinRequestMessage.ID] = function () { return new FriendSpouseJoinRequestMessage(); };
            MessageReceiver._list[FriendUpdateMessage.ID] = function () { return new FriendUpdateMessage(); };
            MessageReceiver._list[FriendWarnOnConnectionStateMessage.ID] = function () { return new FriendWarnOnConnectionStateMessage(); };
            MessageReceiver._list[FriendWarnOnLevelGainStateMessage.ID] = function () { return new FriendWarnOnLevelGainStateMessage(); };
            MessageReceiver._list[FriendsGetListMessage.ID] = function () { return new FriendsGetListMessage(); };
            MessageReceiver._list[FriendsListMessage.ID] = function () { return new FriendsListMessage(); };
            MessageReceiver._list[GuildMemberSetWarnOnConnectionMessage.ID] = function () { return new GuildMemberSetWarnOnConnectionMessage(); };
            MessageReceiver._list[GuildMemberWarnOnConnectionStateMessage.ID] = function () { return new GuildMemberWarnOnConnectionStateMessage(); };
            MessageReceiver._list[IgnoredAddFailureMessage.ID] = function () { return new IgnoredAddFailureMessage(); };
            MessageReceiver._list[IgnoredAddRequestMessage.ID] = function () { return new IgnoredAddRequestMessage(); };
            MessageReceiver._list[IgnoredAddedMessage.ID] = function () { return new IgnoredAddedMessage(); };
            MessageReceiver._list[IgnoredDeleteRequestMessage.ID] = function () { return new IgnoredDeleteRequestMessage(); };
            MessageReceiver._list[IgnoredDeleteResultMessage.ID] = function () { return new IgnoredDeleteResultMessage(); };
            MessageReceiver._list[IgnoredGetListMessage.ID] = function () { return new IgnoredGetListMessage(); };
            MessageReceiver._list[IgnoredListMessage.ID] = function () { return new IgnoredListMessage(); };
            MessageReceiver._list[SpouseGetInformationsMessage.ID] = function () { return new SpouseGetInformationsMessage(); };
            MessageReceiver._list[SpouseInformationsMessage.ID] = function () { return new SpouseInformationsMessage(); };
            MessageReceiver._list[SpouseStatusMessage.ID] = function () { return new SpouseStatusMessage(); };
            MessageReceiver._list[WarnOnPermaDeathStateMessage.ID] = function () { return new WarnOnPermaDeathStateMessage(); };
            MessageReceiver._list[GuestLimitationMessage.ID] = function () { return new GuestLimitationMessage(); };
            MessageReceiver._list[GuestModeMessage.ID] = function () { return new GuestModeMessage(); };
            MessageReceiver._list[ChallengeFightJoinRefusedMessage.ID] = function () { return new ChallengeFightJoinRefusedMessage(); };
            MessageReceiver._list[GuildChangeMemberParametersMessage.ID] = function () { return new GuildChangeMemberParametersMessage(); };
            MessageReceiver._list[GuildCharacsUpgradeRequestMessage.ID] = function () { return new GuildCharacsUpgradeRequestMessage(); };
            MessageReceiver._list[GuildCreationResultMessage.ID] = function () { return new GuildCreationResultMessage(); };
            MessageReceiver._list[GuildCreationStartedMessage.ID] = function () { return new GuildCreationStartedMessage(); };
            MessageReceiver._list[GuildCreationValidMessage.ID] = function () { return new GuildCreationValidMessage(); };
            MessageReceiver._list[GuildFactsErrorMessage.ID] = function () { return new GuildFactsErrorMessage(); };
            MessageReceiver._list[GuildFactsMessage.ID] = function () { return new GuildFactsMessage(); };
            MessageReceiver._list[GuildFactsRequestMessage.ID] = function () { return new GuildFactsRequestMessage(); };
            MessageReceiver._list[GuildGetInformationsMessage.ID] = function () { return new GuildGetInformationsMessage(); };
            MessageReceiver._list[GuildHouseRemoveMessage.ID] = function () { return new GuildHouseRemoveMessage(); };
            MessageReceiver._list[GuildHouseTeleportRequestMessage.ID] = function () { return new GuildHouseTeleportRequestMessage(); };
            MessageReceiver._list[GuildHouseUpdateInformationMessage.ID] = function () { return new GuildHouseUpdateInformationMessage(); };
            MessageReceiver._list[GuildHousesInformationMessage.ID] = function () { return new GuildHousesInformationMessage(); };
            MessageReceiver._list[GuildInAllianceFactsMessage.ID] = function () { return new GuildInAllianceFactsMessage(); };
            MessageReceiver._list[GuildInformationsGeneralMessage.ID] = function () { return new GuildInformationsGeneralMessage(); };
            MessageReceiver._list[GuildInformationsMemberUpdateMessage.ID] = function () { return new GuildInformationsMemberUpdateMessage(); };
            MessageReceiver._list[GuildInformationsMembersMessage.ID] = function () { return new GuildInformationsMembersMessage(); };
            MessageReceiver._list[GuildInformationsPaddocksMessage.ID] = function () { return new GuildInformationsPaddocksMessage(); };
            MessageReceiver._list[GuildInfosUpgradeMessage.ID] = function () { return new GuildInfosUpgradeMessage(); };
            MessageReceiver._list[GuildInvitationAnswerMessage.ID] = function () { return new GuildInvitationAnswerMessage(); };
            MessageReceiver._list[GuildInvitationByNameMessage.ID] = function () { return new GuildInvitationByNameMessage(); };
            MessageReceiver._list[GuildInvitationMessage.ID] = function () { return new GuildInvitationMessage(); };
            MessageReceiver._list[GuildInvitationStateRecrutedMessage.ID] = function () { return new GuildInvitationStateRecrutedMessage(); };
            MessageReceiver._list[GuildInvitationStateRecruterMessage.ID] = function () { return new GuildInvitationStateRecruterMessage(); };
            MessageReceiver._list[GuildInvitedMessage.ID] = function () { return new GuildInvitedMessage(); };
            MessageReceiver._list[GuildJoinedMessage.ID] = function () { return new GuildJoinedMessage(); };
            MessageReceiver._list[GuildKickRequestMessage.ID] = function () { return new GuildKickRequestMessage(); };
            MessageReceiver._list[GuildLeftMessage.ID] = function () { return new GuildLeftMessage(); };
            MessageReceiver._list[GuildLevelUpMessage.ID] = function () { return new GuildLevelUpMessage(); };
            MessageReceiver._list[GuildListMessage.ID] = function () { return new GuildListMessage(); };
            MessageReceiver._list[GuildMemberLeavingMessage.ID] = function () { return new GuildMemberLeavingMessage(); };
            MessageReceiver._list[GuildMemberOnlineStatusMessage.ID] = function () { return new GuildMemberOnlineStatusMessage(); };
            MessageReceiver._list[GuildMembershipMessage.ID] = function () { return new GuildMembershipMessage(); };
            MessageReceiver._list[GuildModificationEmblemValidMessage.ID] = function () { return new GuildModificationEmblemValidMessage(); };
            MessageReceiver._list[GuildModificationNameValidMessage.ID] = function () { return new GuildModificationNameValidMessage(); };
            MessageReceiver._list[GuildModificationStartedMessage.ID] = function () { return new GuildModificationStartedMessage(); };
            MessageReceiver._list[GuildModificationValidMessage.ID] = function () { return new GuildModificationValidMessage(); };
            MessageReceiver._list[GuildMotdMessage.ID] = function () { return new GuildMotdMessage(); };
            MessageReceiver._list[GuildMotdSetErrorMessage.ID] = function () { return new GuildMotdSetErrorMessage(); };
            MessageReceiver._list[GuildPaddockBoughtMessage.ID] = function () { return new GuildPaddockBoughtMessage(); };
            MessageReceiver._list[GuildPaddockRemovedMessage.ID] = function () { return new GuildPaddockRemovedMessage(); };
            MessageReceiver._list[GuildPaddockTeleportRequestMessage.ID] = function () { return new GuildPaddockTeleportRequestMessage(); };
            MessageReceiver._list[GuildSpellUpgradeRequestMessage.ID] = function () { return new GuildSpellUpgradeRequestMessage(); };
            MessageReceiver._list[GuildVersatileInfoListMessage.ID] = function () { return new GuildVersatileInfoListMessage(); };
            MessageReceiver._list[AbstractTaxCollectorListMessage.ID] = function () { return new AbstractTaxCollectorListMessage(); };
            MessageReceiver._list[GameRolePlayTaxCollectorFightRequestMessage.ID] = function () { return new GameRolePlayTaxCollectorFightRequestMessage(); };
            MessageReceiver._list[GuildFightJoinRequestMessage.ID] = function () { return new GuildFightJoinRequestMessage(); };
            MessageReceiver._list[GuildFightLeaveRequestMessage.ID] = function () { return new GuildFightLeaveRequestMessage(); };
            MessageReceiver._list[GuildFightPlayersEnemiesListMessage.ID] = function () { return new GuildFightPlayersEnemiesListMessage(); };
            MessageReceiver._list[GuildFightPlayersEnemyRemoveMessage.ID] = function () { return new GuildFightPlayersEnemyRemoveMessage(); };
            MessageReceiver._list[GuildFightPlayersHelpersJoinMessage.ID] = function () { return new GuildFightPlayersHelpersJoinMessage(); };
            MessageReceiver._list[GuildFightPlayersHelpersLeaveMessage.ID] = function () { return new GuildFightPlayersHelpersLeaveMessage(); };
            MessageReceiver._list[GuildFightTakePlaceRequestMessage.ID] = function () { return new GuildFightTakePlaceRequestMessage(); };
            MessageReceiver._list[TaxCollectorAttackedMessage.ID] = function () { return new TaxCollectorAttackedMessage(); };
            MessageReceiver._list[TaxCollectorAttackedResultMessage.ID] = function () { return new TaxCollectorAttackedResultMessage(); };
            MessageReceiver._list[TaxCollectorErrorMessage.ID] = function () { return new TaxCollectorErrorMessage(); };
            MessageReceiver._list[TaxCollectorListMessage.ID] = function () { return new TaxCollectorListMessage(); };
            MessageReceiver._list[TaxCollectorMovementAddMessage.ID] = function () { return new TaxCollectorMovementAddMessage(); };
            MessageReceiver._list[TaxCollectorMovementMessage.ID] = function () { return new TaxCollectorMovementMessage(); };
            MessageReceiver._list[TaxCollectorMovementRemoveMessage.ID] = function () { return new TaxCollectorMovementRemoveMessage(); };
            MessageReceiver._list[TaxCollectorStateUpdateMessage.ID] = function () { return new TaxCollectorStateUpdateMessage(); };
            MessageReceiver._list[TopTaxCollectorListMessage.ID] = function () { return new TopTaxCollectorListMessage(); };
            MessageReceiver._list[IdolFightPreparationUpdateMessage.ID] = function () { return new IdolFightPreparationUpdateMessage(); };
            MessageReceiver._list[IdolListMessage.ID] = function () { return new IdolListMessage(); };
            MessageReceiver._list[IdolPartyLostMessage.ID] = function () { return new IdolPartyLostMessage(); };
            MessageReceiver._list[IdolPartyRefreshMessage.ID] = function () { return new IdolPartyRefreshMessage(); };
            MessageReceiver._list[IdolPartyRegisterRequestMessage.ID] = function () { return new IdolPartyRegisterRequestMessage(); };
            MessageReceiver._list[IdolSelectErrorMessage.ID] = function () { return new IdolSelectErrorMessage(); };
            MessageReceiver._list[IdolSelectRequestMessage.ID] = function () { return new IdolSelectRequestMessage(); };
            MessageReceiver._list[IdolSelectedMessage.ID] = function () { return new IdolSelectedMessage(); };
            MessageReceiver._list[CharacterCapabilitiesMessage.ID] = function () { return new CharacterCapabilitiesMessage(); };
            MessageReceiver._list[CharacterLoadingCompleteMessage.ID] = function () { return new CharacterLoadingCompleteMessage(); };
            MessageReceiver._list[OnConnectionEventMessage.ID] = function () { return new OnConnectionEventMessage(); };
            MessageReceiver._list[ServerExperienceModificatorMessage.ID] = function () { return new ServerExperienceModificatorMessage(); };
            MessageReceiver._list[SetCharacterRestrictionsMessage.ID] = function () { return new SetCharacterRestrictionsMessage(); };
            MessageReceiver._list[InteractiveElementUpdatedMessage.ID] = function () { return new InteractiveElementUpdatedMessage(); };
            MessageReceiver._list[InteractiveMapUpdateMessage.ID] = function () { return new InteractiveMapUpdateMessage(); };
            MessageReceiver._list[InteractiveUseEndedMessage.ID] = function () { return new InteractiveUseEndedMessage(); };
            MessageReceiver._list[InteractiveUseErrorMessage.ID] = function () { return new InteractiveUseErrorMessage(); };
            MessageReceiver._list[InteractiveUseRequestMessage.ID] = function () { return new InteractiveUseRequestMessage(); };
            MessageReceiver._list[InteractiveUsedMessage.ID] = function () { return new InteractiveUsedMessage(); };
            MessageReceiver._list[StatedElementUpdatedMessage.ID] = function () { return new StatedElementUpdatedMessage(); };
            MessageReceiver._list[StatedMapUpdateMessage.ID] = function () { return new StatedMapUpdateMessage(); };
            MessageReceiver._list[TeleportBuddiesAnswerMessage.ID] = function () { return new TeleportBuddiesAnswerMessage(); };
            MessageReceiver._list[TeleportBuddiesMessage.ID] = function () { return new TeleportBuddiesMessage(); };
            MessageReceiver._list[TeleportBuddiesRequestedMessage.ID] = function () { return new TeleportBuddiesRequestedMessage(); };
            MessageReceiver._list[TeleportToBuddyAnswerMessage.ID] = function () { return new TeleportToBuddyAnswerMessage(); };
            MessageReceiver._list[TeleportToBuddyCloseMessage.ID] = function () { return new TeleportToBuddyCloseMessage(); };
            MessageReceiver._list[TeleportToBuddyOfferMessage.ID] = function () { return new TeleportToBuddyOfferMessage(); };
            MessageReceiver._list[TeleportDestinationsListMessage.ID] = function () { return new TeleportDestinationsListMessage(); };
            MessageReceiver._list[TeleportRequestMessage.ID] = function () { return new TeleportRequestMessage(); };
            MessageReceiver._list[ZaapListMessage.ID] = function () { return new ZaapListMessage(); };
            MessageReceiver._list[ZaapRespawnSaveRequestMessage.ID] = function () { return new ZaapRespawnSaveRequestMessage(); };
            MessageReceiver._list[ZaapRespawnUpdatedMessage.ID] = function () { return new ZaapRespawnUpdatedMessage(); };
            MessageReceiver._list[KamasUpdateMessage.ID] = function () { return new KamasUpdateMessage(); };
            MessageReceiver._list[ObjectAveragePricesErrorMessage.ID] = function () { return new ObjectAveragePricesErrorMessage(); };
            MessageReceiver._list[ObjectAveragePricesGetMessage.ID] = function () { return new ObjectAveragePricesGetMessage(); };
            MessageReceiver._list[ObjectAveragePricesMessage.ID] = function () { return new ObjectAveragePricesMessage(); };
            MessageReceiver._list[DecraftResultMessage.ID] = function () { return new DecraftResultMessage(); };
            MessageReceiver._list[ExchangeAcceptMessage.ID] = function () { return new ExchangeAcceptMessage(); };
            MessageReceiver._list[ExchangeBidHouseBuyMessage.ID] = function () { return new ExchangeBidHouseBuyMessage(); };
            MessageReceiver._list[ExchangeBidHouseBuyResultMessage.ID] = function () { return new ExchangeBidHouseBuyResultMessage(); };
            MessageReceiver._list[ExchangeBidHouseGenericItemAddedMessage.ID] = function () { return new ExchangeBidHouseGenericItemAddedMessage(); };
            MessageReceiver._list[ExchangeBidHouseGenericItemRemovedMessage.ID] = function () { return new ExchangeBidHouseGenericItemRemovedMessage(); };
            MessageReceiver._list[ExchangeBidHouseInListAddedMessage.ID] = function () { return new ExchangeBidHouseInListAddedMessage(); };
            MessageReceiver._list[ExchangeBidHouseInListRemovedMessage.ID] = function () { return new ExchangeBidHouseInListRemovedMessage(); };
            MessageReceiver._list[ExchangeBidHouseInListUpdatedMessage.ID] = function () { return new ExchangeBidHouseInListUpdatedMessage(); };
            MessageReceiver._list[ExchangeBidHouseItemAddOkMessage.ID] = function () { return new ExchangeBidHouseItemAddOkMessage(); };
            MessageReceiver._list[ExchangeBidHouseItemRemoveOkMessage.ID] = function () { return new ExchangeBidHouseItemRemoveOkMessage(); };
            MessageReceiver._list[ExchangeBidHouseListMessage.ID] = function () { return new ExchangeBidHouseListMessage(); };
            MessageReceiver._list[ExchangeBidHousePriceMessage.ID] = function () { return new ExchangeBidHousePriceMessage(); };
            MessageReceiver._list[ExchangeBidHouseSearchMessage.ID] = function () { return new ExchangeBidHouseSearchMessage(); };
            MessageReceiver._list[ExchangeBidHouseTypeMessage.ID] = function () { return new ExchangeBidHouseTypeMessage(); };
            MessageReceiver._list[ExchangeBidPriceForSellerMessage.ID] = function () { return new ExchangeBidPriceForSellerMessage(); };
            MessageReceiver._list[ExchangeBidPriceMessage.ID] = function () { return new ExchangeBidPriceMessage(); };
            MessageReceiver._list[ExchangeBidSearchOkMessage.ID] = function () { return new ExchangeBidSearchOkMessage(); };
            MessageReceiver._list[ExchangeBuyMessage.ID] = function () { return new ExchangeBuyMessage(); };
            MessageReceiver._list[ExchangeBuyOkMessage.ID] = function () { return new ExchangeBuyOkMessage(); };
            MessageReceiver._list[ExchangeCraftCountModifiedMessage.ID] = function () { return new ExchangeCraftCountModifiedMessage(); };
            MessageReceiver._list[ExchangeCraftCountRequestMessage.ID] = function () { return new ExchangeCraftCountRequestMessage(); };
            MessageReceiver._list[ExchangeCraftInformationObjectMessage.ID] = function () { return new ExchangeCraftInformationObjectMessage(); };
            MessageReceiver._list[ExchangeCraftPaymentModificationRequestMessage.ID] = function () { return new ExchangeCraftPaymentModificationRequestMessage(); };
            MessageReceiver._list[ExchangeCraftPaymentModifiedMessage.ID] = function () { return new ExchangeCraftPaymentModifiedMessage(); };
            MessageReceiver._list[ExchangeCraftResultMagicWithObjectDescMessage.ID] = function () { return new ExchangeCraftResultMagicWithObjectDescMessage(); };
            MessageReceiver._list[ExchangeCraftResultMessage.ID] = function () { return new ExchangeCraftResultMessage(); };
            MessageReceiver._list[ExchangeCraftResultWithObjectDescMessage.ID] = function () { return new ExchangeCraftResultWithObjectDescMessage(); };
            MessageReceiver._list[ExchangeCraftResultWithObjectIdMessage.ID] = function () { return new ExchangeCraftResultWithObjectIdMessage(); };
            MessageReceiver._list[ExchangeCrafterJobLevelupMessage.ID] = function () { return new ExchangeCrafterJobLevelupMessage(); };
            MessageReceiver._list[ExchangeErrorMessage.ID] = function () { return new ExchangeErrorMessage(); };
            MessageReceiver._list[ExchangeGuildTaxCollectorGetMessage.ID] = function () { return new ExchangeGuildTaxCollectorGetMessage(); };
            MessageReceiver._list[ExchangeHandleMountsStableMessage.ID] = function () { return new ExchangeHandleMountsStableMessage(); };
            MessageReceiver._list[ExchangeIsReadyMessage.ID] = function () { return new ExchangeIsReadyMessage(); };
            MessageReceiver._list[ExchangeItemAutoCraftStopedMessage.ID] = function () { return new ExchangeItemAutoCraftStopedMessage(); };
            MessageReceiver._list[ExchangeLeaveMessage.ID] = function () { return new ExchangeLeaveMessage(); };
            MessageReceiver._list[ExchangeMountFreeFromPaddockMessage.ID] = function () { return new ExchangeMountFreeFromPaddockMessage(); };
            MessageReceiver._list[ExchangeMountStableErrorMessage.ID] = function () { return new ExchangeMountStableErrorMessage(); };
            MessageReceiver._list[ExchangeMountSterilizeFromPaddockMessage.ID] = function () { return new ExchangeMountSterilizeFromPaddockMessage(); };
            MessageReceiver._list[ExchangeMountsPaddockAddMessage.ID] = function () { return new ExchangeMountsPaddockAddMessage(); };
            MessageReceiver._list[ExchangeMountsPaddockRemoveMessage.ID] = function () { return new ExchangeMountsPaddockRemoveMessage(); };
            MessageReceiver._list[ExchangeMountsStableAddMessage.ID] = function () { return new ExchangeMountsStableAddMessage(); };
            MessageReceiver._list[ExchangeMountsStableBornAddMessage.ID] = function () { return new ExchangeMountsStableBornAddMessage(); };
            MessageReceiver._list[ExchangeMountsStableRemoveMessage.ID] = function () { return new ExchangeMountsStableRemoveMessage(); };
            MessageReceiver._list[ExchangeMountsTakenFromPaddockMessage.ID] = function () { return new ExchangeMountsTakenFromPaddockMessage(); };
            MessageReceiver._list[ExchangeObjectAddedMessage.ID] = function () { return new ExchangeObjectAddedMessage(); };
            MessageReceiver._list[ExchangeObjectMessage.ID] = function () { return new ExchangeObjectMessage(); };
            MessageReceiver._list[ExchangeObjectModifyPricedMessage.ID] = function () { return new ExchangeObjectModifyPricedMessage(); };
            MessageReceiver._list[ExchangeObjectMoveKamaMessage.ID] = function () { return new ExchangeObjectMoveKamaMessage(); };
            MessageReceiver._list[ExchangeObjectMoveMessage.ID] = function () { return new ExchangeObjectMoveMessage(); };
            MessageReceiver._list[ExchangeObjectMovePricedMessage.ID] = function () { return new ExchangeObjectMovePricedMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertAllFromInvMessage.ID] = function () { return new ExchangeObjectTransfertAllFromInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertAllToInvMessage.ID] = function () { return new ExchangeObjectTransfertAllToInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertExistingFromInvMessage.ID] = function () { return new ExchangeObjectTransfertExistingFromInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertExistingToInvMessage.ID] = function () { return new ExchangeObjectTransfertExistingToInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertListFromInvMessage.ID] = function () { return new ExchangeObjectTransfertListFromInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertListToInvMessage.ID] = function () { return new ExchangeObjectTransfertListToInvMessage(); };
            MessageReceiver._list[ExchangeObjectTransfertListWithQuantityToInvMessage.ID] = function () { return new ExchangeObjectTransfertListWithQuantityToInvMessage(); };
            MessageReceiver._list[ExchangeObjectUseInWorkshopMessage.ID] = function () { return new ExchangeObjectUseInWorkshopMessage(); };
            MessageReceiver._list[ExchangeObjectsAddedMessage.ID] = function () { return new ExchangeObjectsAddedMessage(); };
            MessageReceiver._list[ExchangeOkMultiCraftMessage.ID] = function () { return new ExchangeOkMultiCraftMessage(); };
            MessageReceiver._list[ExchangeOnHumanVendorRequestMessage.ID] = function () { return new ExchangeOnHumanVendorRequestMessage(); };
            MessageReceiver._list[ExchangePlayerMultiCraftRequestMessage.ID] = function () { return new ExchangePlayerMultiCraftRequestMessage(); };
            MessageReceiver._list[ExchangePlayerRequestMessage.ID] = function () { return new ExchangePlayerRequestMessage(); };
            MessageReceiver._list[ExchangeReadyMessage.ID] = function () { return new ExchangeReadyMessage(); };
            MessageReceiver._list[ExchangeReplayStopMessage.ID] = function () { return new ExchangeReplayStopMessage(); };
            MessageReceiver._list[ExchangeReplyTaxVendorMessage.ID] = function () { return new ExchangeReplyTaxVendorMessage(); };
            MessageReceiver._list[ExchangeRequestMessage.ID] = function () { return new ExchangeRequestMessage(); };
            MessageReceiver._list[ExchangeRequestOnMountStockMessage.ID] = function () { return new ExchangeRequestOnMountStockMessage(); };
            MessageReceiver._list[ExchangeRequestOnShopStockMessage.ID] = function () { return new ExchangeRequestOnShopStockMessage(); };
            MessageReceiver._list[ExchangeRequestOnTaxCollectorMessage.ID] = function () { return new ExchangeRequestOnTaxCollectorMessage(); };
            MessageReceiver._list[ExchangeRequestedMessage.ID] = function () { return new ExchangeRequestedMessage(); };
            MessageReceiver._list[ExchangeRequestedTradeMessage.ID] = function () { return new ExchangeRequestedTradeMessage(); };
            MessageReceiver._list[ExchangeSellMessage.ID] = function () { return new ExchangeSellMessage(); };
            MessageReceiver._list[ExchangeSellOkMessage.ID] = function () { return new ExchangeSellOkMessage(); };
            MessageReceiver._list[ExchangeSetCraftRecipeMessage.ID] = function () { return new ExchangeSetCraftRecipeMessage(); };
            MessageReceiver._list[ExchangeShopStockMovementRemovedMessage.ID] = function () { return new ExchangeShopStockMovementRemovedMessage(); };
            MessageReceiver._list[ExchangeShopStockMovementUpdatedMessage.ID] = function () { return new ExchangeShopStockMovementUpdatedMessage(); };
            MessageReceiver._list[ExchangeShopStockMultiMovementRemovedMessage.ID] = function () { return new ExchangeShopStockMultiMovementRemovedMessage(); };
            MessageReceiver._list[ExchangeShopStockMultiMovementUpdatedMessage.ID] = function () { return new ExchangeShopStockMultiMovementUpdatedMessage(); };
            MessageReceiver._list[ExchangeShopStockStartedMessage.ID] = function () { return new ExchangeShopStockStartedMessage(); };
            MessageReceiver._list[ExchangeShowVendorTaxMessage.ID] = function () { return new ExchangeShowVendorTaxMessage(); };
            MessageReceiver._list[ExchangeStartAsVendorMessage.ID] = function () { return new ExchangeStartAsVendorMessage(); };
            MessageReceiver._list[ExchangeStartOkCraftMessage.ID] = function () { return new ExchangeStartOkCraftMessage(); };
            MessageReceiver._list[ExchangeStartOkCraftWithInformationMessage.ID] = function () { return new ExchangeStartOkCraftWithInformationMessage(); };
            MessageReceiver._list[ExchangeStartOkHumanVendorMessage.ID] = function () { return new ExchangeStartOkHumanVendorMessage(); };
            MessageReceiver._list[ExchangeStartOkJobIndexMessage.ID] = function () { return new ExchangeStartOkJobIndexMessage(); };
            MessageReceiver._list[ExchangeStartOkMountMessage.ID] = function () { return new ExchangeStartOkMountMessage(); };
            MessageReceiver._list[ExchangeStartOkMountWithOutPaddockMessage.ID] = function () { return new ExchangeStartOkMountWithOutPaddockMessage(); };
            MessageReceiver._list[ExchangeStartOkMulticraftCrafterMessage.ID] = function () { return new ExchangeStartOkMulticraftCrafterMessage(); };
            MessageReceiver._list[ExchangeStartOkMulticraftCustomerMessage.ID] = function () { return new ExchangeStartOkMulticraftCustomerMessage(); };
            MessageReceiver._list[ExchangeStartOkNpcShopMessage.ID] = function () { return new ExchangeStartOkNpcShopMessage(); };
            MessageReceiver._list[ExchangeStartOkNpcTradeMessage.ID] = function () { return new ExchangeStartOkNpcTradeMessage(); };
            MessageReceiver._list[ExchangeStartOkRecycleTradeMessage.ID] = function () { return new ExchangeStartOkRecycleTradeMessage(); };
            MessageReceiver._list[ExchangeStartOkRunesTradeMessage.ID] = function () { return new ExchangeStartOkRunesTradeMessage(); };
            MessageReceiver._list[ExchangeStartedBidBuyerMessage.ID] = function () { return new ExchangeStartedBidBuyerMessage(); };
            MessageReceiver._list[ExchangeStartedBidSellerMessage.ID] = function () { return new ExchangeStartedBidSellerMessage(); };
            MessageReceiver._list[ExchangeStartedMessage.ID] = function () { return new ExchangeStartedMessage(); };
            MessageReceiver._list[ExchangeStartedMountStockMessage.ID] = function () { return new ExchangeStartedMountStockMessage(); };
            MessageReceiver._list[ExchangeStartedWithPodsMessage.ID] = function () { return new ExchangeStartedWithPodsMessage(); };
            MessageReceiver._list[ExchangeStartedWithStorageMessage.ID] = function () { return new ExchangeStartedWithStorageMessage(); };
            MessageReceiver._list[ExchangeStoppedMessage.ID] = function () { return new ExchangeStoppedMessage(); };
            MessageReceiver._list[ExchangeTypesExchangerDescriptionForUserMessage.ID] = function () { return new ExchangeTypesExchangerDescriptionForUserMessage(); };
            MessageReceiver._list[ExchangeTypesItemsExchangerDescriptionForUserMessage.ID] = function () { return new ExchangeTypesItemsExchangerDescriptionForUserMessage(); };
            MessageReceiver._list[ExchangeWaitingResultMessage.ID] = function () { return new ExchangeWaitingResultMessage(); };
            MessageReceiver._list[ExchangeWeightMessage.ID] = function () { return new ExchangeWeightMessage(); };
            MessageReceiver._list[ItemNoMoreAvailableMessage.ID] = function () { return new ItemNoMoreAvailableMessage(); };
            MessageReceiver._list[JobBookSubscribeRequestMessage.ID] = function () { return new JobBookSubscribeRequestMessage(); };
            MessageReceiver._list[RecycleResultMessage.ID] = function () { return new RecycleResultMessage(); };
            MessageReceiver._list[UpdateMountBoostMessage.ID] = function () { return new UpdateMountBoostMessage(); };
            MessageReceiver._list[ExchangeKamaModifiedMessage.ID] = function () { return new ExchangeKamaModifiedMessage(); };
            MessageReceiver._list[ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.ID] = function () { return new ExchangeMultiCraftCrafterCanUseHisRessourcesMessage(); };
            MessageReceiver._list[ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.ID] = function () { return new ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage(); };
            MessageReceiver._list[ExchangeObjectModifiedInBagMessage.ID] = function () { return new ExchangeObjectModifiedInBagMessage(); };
            MessageReceiver._list[ExchangeObjectModifiedMessage.ID] = function () { return new ExchangeObjectModifiedMessage(); };
            MessageReceiver._list[ExchangeObjectPutInBagMessage.ID] = function () { return new ExchangeObjectPutInBagMessage(); };
            MessageReceiver._list[ExchangeObjectRemovedFromBagMessage.ID] = function () { return new ExchangeObjectRemovedFromBagMessage(); };
            MessageReceiver._list[ExchangeObjectRemovedMessage.ID] = function () { return new ExchangeObjectRemovedMessage(); };
            MessageReceiver._list[ExchangeObjectsModifiedMessage.ID] = function () { return new ExchangeObjectsModifiedMessage(); };
            MessageReceiver._list[ExchangeObjectsRemovedMessage.ID] = function () { return new ExchangeObjectsRemovedMessage(); };
            MessageReceiver._list[GoldAddedMessage.ID] = function () { return new GoldAddedMessage(); };
            MessageReceiver._list[InventoryContentAndPresetMessage.ID] = function () { return new InventoryContentAndPresetMessage(); };
            MessageReceiver._list[InventoryContentMessage.ID] = function () { return new InventoryContentMessage(); };
            MessageReceiver._list[InventoryWeightMessage.ID] = function () { return new InventoryWeightMessage(); };
            MessageReceiver._list[LivingObjectChangeSkinRequestMessage.ID] = function () { return new LivingObjectChangeSkinRequestMessage(); };
            MessageReceiver._list[LivingObjectDissociateMessage.ID] = function () { return new LivingObjectDissociateMessage(); };
            MessageReceiver._list[LivingObjectMessageMessage.ID] = function () { return new LivingObjectMessageMessage(); };
            MessageReceiver._list[LivingObjectMessageRequestMessage.ID] = function () { return new LivingObjectMessageRequestMessage(); };
            MessageReceiver._list[MimicryObjectAssociatedMessage.ID] = function () { return new MimicryObjectAssociatedMessage(); };
            MessageReceiver._list[MimicryObjectEraseRequestMessage.ID] = function () { return new MimicryObjectEraseRequestMessage(); };
            MessageReceiver._list[MimicryObjectErrorMessage.ID] = function () { return new MimicryObjectErrorMessage(); };
            MessageReceiver._list[MimicryObjectFeedAndAssociateRequestMessage.ID] = function () { return new MimicryObjectFeedAndAssociateRequestMessage(); };
            MessageReceiver._list[MimicryObjectPreviewMessage.ID] = function () { return new MimicryObjectPreviewMessage(); };
            MessageReceiver._list[ObjectAddedMessage.ID] = function () { return new ObjectAddedMessage(); };
            MessageReceiver._list[ObjectDeleteMessage.ID] = function () { return new ObjectDeleteMessage(); };
            MessageReceiver._list[ObjectDeletedMessage.ID] = function () { return new ObjectDeletedMessage(); };
            MessageReceiver._list[ObjectDropMessage.ID] = function () { return new ObjectDropMessage(); };
            MessageReceiver._list[ObjectErrorMessage.ID] = function () { return new ObjectErrorMessage(); };
            MessageReceiver._list[ObjectFeedMessage.ID] = function () { return new ObjectFeedMessage(); };
            MessageReceiver._list[ObjectFoundWhileRecoltingMessage.ID] = function () { return new ObjectFoundWhileRecoltingMessage(); };
            MessageReceiver._list[ObjectJobAddedMessage.ID] = function () { return new ObjectJobAddedMessage(); };
            MessageReceiver._list[ObjectModifiedMessage.ID] = function () { return new ObjectModifiedMessage(); };
            MessageReceiver._list[ObjectMovementMessage.ID] = function () { return new ObjectMovementMessage(); };
            MessageReceiver._list[ObjectQuantityMessage.ID] = function () { return new ObjectQuantityMessage(); };
            MessageReceiver._list[ObjectSetPositionMessage.ID] = function () { return new ObjectSetPositionMessage(); };
            MessageReceiver._list[ObjectUseMessage.ID] = function () { return new ObjectUseMessage(); };
            MessageReceiver._list[ObjectUseMultipleMessage.ID] = function () { return new ObjectUseMultipleMessage(); };
            MessageReceiver._list[ObjectUseOnCellMessage.ID] = function () { return new ObjectUseOnCellMessage(); };
            MessageReceiver._list[ObjectUseOnCharacterMessage.ID] = function () { return new ObjectUseOnCharacterMessage(); };
            MessageReceiver._list[ObjectsAddedMessage.ID] = function () { return new ObjectsAddedMessage(); };
            MessageReceiver._list[ObjectsDeletedMessage.ID] = function () { return new ObjectsDeletedMessage(); };
            MessageReceiver._list[ObjectsQuantityMessage.ID] = function () { return new ObjectsQuantityMessage(); };
            MessageReceiver._list[ObtainedItemMessage.ID] = function () { return new ObtainedItemMessage(); };
            MessageReceiver._list[ObtainedItemWithBonusMessage.ID] = function () { return new ObtainedItemWithBonusMessage(); };
            MessageReceiver._list[SetUpdateMessage.ID] = function () { return new SetUpdateMessage(); };
            MessageReceiver._list[SymbioticObjectAssociateRequestMessage.ID] = function () { return new SymbioticObjectAssociateRequestMessage(); };
            MessageReceiver._list[SymbioticObjectAssociatedMessage.ID] = function () { return new SymbioticObjectAssociatedMessage(); };
            MessageReceiver._list[SymbioticObjectErrorMessage.ID] = function () { return new SymbioticObjectErrorMessage(); };
            MessageReceiver._list[WrapperObjectAssociatedMessage.ID] = function () { return new WrapperObjectAssociatedMessage(); };
            MessageReceiver._list[WrapperObjectDissociateRequestMessage.ID] = function () { return new WrapperObjectDissociateRequestMessage(); };
            MessageReceiver._list[WrapperObjectErrorMessage.ID] = function () { return new WrapperObjectErrorMessage(); };
            MessageReceiver._list[IdolsPresetDeleteMessage.ID] = function () { return new IdolsPresetDeleteMessage(); };
            MessageReceiver._list[IdolsPresetDeleteResultMessage.ID] = function () { return new IdolsPresetDeleteResultMessage(); };
            MessageReceiver._list[IdolsPresetSaveMessage.ID] = function () { return new IdolsPresetSaveMessage(); };
            MessageReceiver._list[IdolsPresetSaveResultMessage.ID] = function () { return new IdolsPresetSaveResultMessage(); };
            MessageReceiver._list[IdolsPresetUpdateMessage.ID] = function () { return new IdolsPresetUpdateMessage(); };
            MessageReceiver._list[InventoryPresetDeleteMessage.ID] = function () { return new InventoryPresetDeleteMessage(); };
            MessageReceiver._list[InventoryPresetDeleteResultMessage.ID] = function () { return new InventoryPresetDeleteResultMessage(); };
            MessageReceiver._list[InventoryPresetItemUpdateErrorMessage.ID] = function () { return new InventoryPresetItemUpdateErrorMessage(); };
            MessageReceiver._list[InventoryPresetItemUpdateMessage.ID] = function () { return new InventoryPresetItemUpdateMessage(); };
            MessageReceiver._list[InventoryPresetItemUpdateRequestMessage.ID] = function () { return new InventoryPresetItemUpdateRequestMessage(); };
            MessageReceiver._list[InventoryPresetSaveCustomMessage.ID] = function () { return new InventoryPresetSaveCustomMessage(); };
            MessageReceiver._list[InventoryPresetSaveMessage.ID] = function () { return new InventoryPresetSaveMessage(); };
            MessageReceiver._list[InventoryPresetSaveResultMessage.ID] = function () { return new InventoryPresetSaveResultMessage(); };
            MessageReceiver._list[InventoryPresetUpdateMessage.ID] = function () { return new InventoryPresetUpdateMessage(); };
            MessageReceiver._list[InventoryPresetUseMessage.ID] = function () { return new InventoryPresetUseMessage(); };
            MessageReceiver._list[InventoryPresetUseResultMessage.ID] = function () { return new InventoryPresetUseResultMessage(); };
            MessageReceiver._list[SpellListMessage.ID] = function () { return new SpellListMessage(); };
            MessageReceiver._list[StorageInventoryContentMessage.ID] = function () { return new StorageInventoryContentMessage(); };
            MessageReceiver._list[StorageKamasUpdateMessage.ID] = function () { return new StorageKamasUpdateMessage(); };
            MessageReceiver._list[StorageObjectRemoveMessage.ID] = function () { return new StorageObjectRemoveMessage(); };
            MessageReceiver._list[StorageObjectUpdateMessage.ID] = function () { return new StorageObjectUpdateMessage(); };
            MessageReceiver._list[StorageObjectsRemoveMessage.ID] = function () { return new StorageObjectsRemoveMessage(); };
            MessageReceiver._list[StorageObjectsUpdateMessage.ID] = function () { return new StorageObjectsUpdateMessage(); };
            MessageReceiver._list[AccessoryPreviewErrorMessage.ID] = function () { return new AccessoryPreviewErrorMessage(); };
            MessageReceiver._list[AccessoryPreviewMessage.ID] = function () { return new AccessoryPreviewMessage(); };
            MessageReceiver._list[AccessoryPreviewRequestMessage.ID] = function () { return new AccessoryPreviewRequestMessage(); };
            MessageReceiver._list[PopupWarningMessage.ID] = function () { return new PopupWarningMessage(); };
            MessageReceiver._list[AreaFightModificatorUpdateMessage.ID] = function () { return new AreaFightModificatorUpdateMessage(); };
            MessageReceiver._list[PrismAttackRequestMessage.ID] = function () { return new PrismAttackRequestMessage(); };
            MessageReceiver._list[PrismFightAddedMessage.ID] = function () { return new PrismFightAddedMessage(); };
            MessageReceiver._list[PrismFightAttackerAddMessage.ID] = function () { return new PrismFightAttackerAddMessage(); };
            MessageReceiver._list[PrismFightAttackerRemoveMessage.ID] = function () { return new PrismFightAttackerRemoveMessage(); };
            MessageReceiver._list[PrismFightDefenderAddMessage.ID] = function () { return new PrismFightDefenderAddMessage(); };
            MessageReceiver._list[PrismFightDefenderLeaveMessage.ID] = function () { return new PrismFightDefenderLeaveMessage(); };
            MessageReceiver._list[PrismFightJoinLeaveRequestMessage.ID] = function () { return new PrismFightJoinLeaveRequestMessage(); };
            MessageReceiver._list[PrismFightRemovedMessage.ID] = function () { return new PrismFightRemovedMessage(); };
            MessageReceiver._list[PrismFightStateUpdateMessage.ID] = function () { return new PrismFightStateUpdateMessage(); };
            MessageReceiver._list[PrismFightSwapRequestMessage.ID] = function () { return new PrismFightSwapRequestMessage(); };
            MessageReceiver._list[PrismInfoCloseMessage.ID] = function () { return new PrismInfoCloseMessage(); };
            MessageReceiver._list[PrismInfoInValidMessage.ID] = function () { return new PrismInfoInValidMessage(); };
            MessageReceiver._list[PrismInfoJoinLeaveRequestMessage.ID] = function () { return new PrismInfoJoinLeaveRequestMessage(); };
            MessageReceiver._list[PrismModuleExchangeRequestMessage.ID] = function () { return new PrismModuleExchangeRequestMessage(); };
            MessageReceiver._list[PrismSetSabotagedRefusedMessage.ID] = function () { return new PrismSetSabotagedRefusedMessage(); };
            MessageReceiver._list[PrismSetSabotagedRequestMessage.ID] = function () { return new PrismSetSabotagedRequestMessage(); };
            MessageReceiver._list[PrismSettingsErrorMessage.ID] = function () { return new PrismSettingsErrorMessage(); };
            MessageReceiver._list[PrismSettingsRequestMessage.ID] = function () { return new PrismSettingsRequestMessage(); };
            MessageReceiver._list[PrismUseRequestMessage.ID] = function () { return new PrismUseRequestMessage(); };
            MessageReceiver._list[PrismsInfoValidMessage.ID] = function () { return new PrismsInfoValidMessage(); };
            MessageReceiver._list[PrismsListMessage.ID] = function () { return new PrismsListMessage(); };
            MessageReceiver._list[PrismsListRegisterMessage.ID] = function () { return new PrismsListRegisterMessage(); };
            MessageReceiver._list[PrismsListUpdateMessage.ID] = function () { return new PrismsListUpdateMessage(); };
            MessageReceiver._list[AlignmentRankUpdateMessage.ID] = function () { return new AlignmentRankUpdateMessage(); };
            MessageReceiver._list[SetEnableAVARequestMessage.ID] = function () { return new SetEnableAVARequestMessage(); };
            MessageReceiver._list[SetEnablePVPRequestMessage.ID] = function () { return new SetEnablePVPRequestMessage(); };
            MessageReceiver._list[UpdateMapPlayersAgressableStatusMessage.ID] = function () { return new UpdateMapPlayersAgressableStatusMessage(); };
            MessageReceiver._list[UpdateSelfAgressableStatusMessage.ID] = function () { return new UpdateSelfAgressableStatusMessage(); };
            MessageReceiver._list[CharacterReportMessage.ID] = function () { return new CharacterReportMessage(); };
            MessageReceiver._list[CinematicMessage.ID] = function () { return new CinematicMessage(); };
            MessageReceiver._list[URLOpenMessage.ID] = function () { return new URLOpenMessage(); };
            MessageReceiver._list[ShortcutBarAddErrorMessage.ID] = function () { return new ShortcutBarAddErrorMessage(); };
            MessageReceiver._list[ShortcutBarAddRequestMessage.ID] = function () { return new ShortcutBarAddRequestMessage(); };
            MessageReceiver._list[ShortcutBarContentMessage.ID] = function () { return new ShortcutBarContentMessage(); };
            MessageReceiver._list[ShortcutBarRefreshMessage.ID] = function () { return new ShortcutBarRefreshMessage(); };
            MessageReceiver._list[ShortcutBarRemoveErrorMessage.ID] = function () { return new ShortcutBarRemoveErrorMessage(); };
            MessageReceiver._list[ShortcutBarRemoveRequestMessage.ID] = function () { return new ShortcutBarRemoveRequestMessage(); };
            MessageReceiver._list[ShortcutBarRemovedMessage.ID] = function () { return new ShortcutBarRemovedMessage(); };
            MessageReceiver._list[ShortcutBarSwapErrorMessage.ID] = function () { return new ShortcutBarSwapErrorMessage(); };
            MessageReceiver._list[ShortcutBarSwapRequestMessage.ID] = function () { return new ShortcutBarSwapRequestMessage(); };
            MessageReceiver._list[ContactLookErrorMessage.ID] = function () { return new ContactLookErrorMessage(); };
            MessageReceiver._list[ContactLookMessage.ID] = function () { return new ContactLookMessage(); };
            MessageReceiver._list[ContactLookRequestByIdMessage.ID] = function () { return new ContactLookRequestByIdMessage(); };
            MessageReceiver._list[ContactLookRequestMessage.ID] = function () { return new ContactLookRequestMessage(); };
            MessageReceiver._list[StartupActionAddMessage.ID] = function () { return new StartupActionAddMessage(); };
            MessageReceiver._list[StartupActionFinishedMessage.ID] = function () { return new StartupActionFinishedMessage(); };
            MessageReceiver._list[StartupActionsAllAttributionMessage.ID] = function () { return new StartupActionsAllAttributionMessage(); };
            MessageReceiver._list[StartupActionsExecuteMessage.ID] = function () { return new StartupActionsExecuteMessage(); };
            MessageReceiver._list[StartupActionsListMessage.ID] = function () { return new StartupActionsListMessage(); };
            MessageReceiver._list[StartupActionsObjetAttributionMessage.ID] = function () { return new StartupActionsObjetAttributionMessage(); };
            MessageReceiver._list[SubscriptionLimitationMessage.ID] = function () { return new SubscriptionLimitationMessage(); };
            MessageReceiver._list[SubscriptionZoneMessage.ID] = function () { return new SubscriptionZoneMessage(); };
            MessageReceiver._list[OrnamentGainedMessage.ID] = function () { return new OrnamentGainedMessage(); };
            MessageReceiver._list[OrnamentSelectErrorMessage.ID] = function () { return new OrnamentSelectErrorMessage(); };
            MessageReceiver._list[OrnamentSelectRequestMessage.ID] = function () { return new OrnamentSelectRequestMessage(); };
            MessageReceiver._list[OrnamentSelectedMessage.ID] = function () { return new OrnamentSelectedMessage(); };
            MessageReceiver._list[TitleGainedMessage.ID] = function () { return new TitleGainedMessage(); };
            MessageReceiver._list[TitleLostMessage.ID] = function () { return new TitleLostMessage(); };
            MessageReceiver._list[TitleSelectErrorMessage.ID] = function () { return new TitleSelectErrorMessage(); };
            MessageReceiver._list[TitleSelectRequestMessage.ID] = function () { return new TitleSelectRequestMessage(); };
            MessageReceiver._list[TitleSelectedMessage.ID] = function () { return new TitleSelectedMessage(); };
            MessageReceiver._list[TitlesAndOrnamentsListMessage.ID] = function () { return new TitlesAndOrnamentsListMessage(); };
            MessageReceiver._list[TitlesAndOrnamentsListRequestMessage.ID] = function () { return new TitlesAndOrnamentsListRequestMessage(); };
            MessageReceiver._list[ClientUIOpenedByObjectMessage.ID] = function () { return new ClientUIOpenedByObjectMessage(); };
            MessageReceiver._list[ClientUIOpenedMessage.ID] = function () { return new ClientUIOpenedMessage(); };
            MessageReceiver._list[ProtocolRequired.ID] = function () { return new ProtocolRequired(); };
            MessageReceiver._list[LoginQueueStatusMessage.ID] = function () { return new LoginQueueStatusMessage(); };
            MessageReceiver._list[QueueStatusMessage.ID] = function () { return new QueueStatusMessage(); };
            MessageReceiver._list[TrustStatusMessage.ID] = function () { return new TrustStatusMessage(); };
            MessageReceiver._list[CheckFileMessage.ID] = function () { return new CheckFileMessage(); };
            MessageReceiver._list[CheckFileRequestMessage.ID] = function () { return new CheckFileRequestMessage(); };
            MessageReceiver._list[CheckIntegrityMessage.ID] = function () { return new CheckIntegrityMessage(); };
            MessageReceiver._list[ClientKeyMessage.ID] = function () { return new ClientKeyMessage(); };
            MessageReceiver._list[RawDataMessage.ID] = function () { return new RawDataMessage(); };
            MessageReceiver._list[SystemMessageDisplayMessage.ID] = function () { return new SystemMessageDisplayMessage(); };
            MessageReceiver._list[DownloadCurrentSpeedMessage.ID] = function () { return new DownloadCurrentSpeedMessage(); };
            MessageReceiver._list[DownloadErrorMessage.ID] = function () { return new DownloadErrorMessage(); };
            MessageReceiver._list[DownloadGetCurrentSpeedRequestMessage.ID] = function () { return new DownloadGetCurrentSpeedRequestMessage(); };
            MessageReceiver._list[DownloadPartMessage.ID] = function () { return new DownloadPartMessage(); };
            MessageReceiver._list[DownloadSetSpeedRequestMessage.ID] = function () { return new DownloadSetSpeedRequestMessage(); };
            MessageReceiver._list[GetPartInfoMessage.ID] = function () { return new GetPartInfoMessage(); };
            MessageReceiver._list[GetPartsListMessage.ID] = function () { return new GetPartsListMessage(); };
            MessageReceiver._list[PartInfoMessage.ID] = function () { return new PartInfoMessage(); };
            MessageReceiver._list[PartsListMessage.ID] = function () { return new PartsListMessage(); };
            MessageReceiver._list[MailStatusMessage.ID] = function () { return new MailStatusMessage(); };
            MessageReceiver._list[NewMailMessage.ID] = function () { return new NewMailMessage(); };
            MessageReceiver._list[KrosmasterAuthTokenErrorMessage.ID] = function () { return new KrosmasterAuthTokenErrorMessage(); };
            MessageReceiver._list[KrosmasterAuthTokenMessage.ID] = function () { return new KrosmasterAuthTokenMessage(); };
            MessageReceiver._list[KrosmasterAuthTokenRequestMessage.ID] = function () { return new KrosmasterAuthTokenRequestMessage(); };
            MessageReceiver._list[KrosmasterInventoryErrorMessage.ID] = function () { return new KrosmasterInventoryErrorMessage(); };
            MessageReceiver._list[KrosmasterInventoryMessage.ID] = function () { return new KrosmasterInventoryMessage(); };
            MessageReceiver._list[KrosmasterInventoryRequestMessage.ID] = function () { return new KrosmasterInventoryRequestMessage(); };
            MessageReceiver._list[KrosmasterPlayingStatusMessage.ID] = function () { return new KrosmasterPlayingStatusMessage(); };
            MessageReceiver._list[KrosmasterTransferMessage.ID] = function () { return new KrosmasterTransferMessage(); };
            MessageReceiver._list[KrosmasterTransferRequestMessage.ID] = function () { return new KrosmasterTransferRequestMessage(); };
            MessageReceiver._list[ClientYouAreDrunkMessage.ID] = function () { return new ClientYouAreDrunkMessage(); };
        }
        MessageReceiver.parse = function (param1, param2, param3) {
            var _loc4_ = MessageReceiver._list[param2];
            if (!_loc4_) {
                console.log('Unknown packet received (ID ' + param2 + ', length ' + param3 + ')');
                return null;
            }
            var _loc5_ = _loc4_();
            _loc5_.unpack(param1, param3);
            return _loc5_;
        };
        return MessageReceiver;
    })();
    Protocol.MessageReceiver = MessageReceiver;
    var ProtocolTypeManager = (function () {
        function ProtocolTypeManager() {
            ProtocolTypeManager._list = {};
            ProtocolTypeManager._list[StatisticData.ID] = function () { return new StatisticData(); };
            ProtocolTypeManager._list[StatisticDataBoolean.ID] = function () { return new StatisticDataBoolean(); };
            ProtocolTypeManager._list[StatisticDataByte.ID] = function () { return new StatisticDataByte(); };
            ProtocolTypeManager._list[StatisticDataInt.ID] = function () { return new StatisticDataInt(); };
            ProtocolTypeManager._list[StatisticDataShort.ID] = function () { return new StatisticDataShort(); };
            ProtocolTypeManager._list[StatisticDataString.ID] = function () { return new StatisticDataString(); };
            ProtocolTypeManager._list[GameServerInformations.ID] = function () { return new GameServerInformations(); };
            ProtocolTypeManager._list[Achievement.ID] = function () { return new Achievement(); };
            ProtocolTypeManager._list[AchievementObjective.ID] = function () { return new AchievementObjective(); };
            ProtocolTypeManager._list[AchievementRewardable.ID] = function () { return new AchievementRewardable(); };
            ProtocolTypeManager._list[AchievementStartedObjective.ID] = function () { return new AchievementStartedObjective(); };
            ProtocolTypeManager._list[FightDispellableEffectExtendedInformations.ID] = function () { return new FightDispellableEffectExtendedInformations(); };
            ProtocolTypeManager._list[AbstractFightDispellableEffect.ID] = function () { return new AbstractFightDispellableEffect(); };
            ProtocolTypeManager._list[FightTemporaryBoostEffect.ID] = function () { return new FightTemporaryBoostEffect(); };
            ProtocolTypeManager._list[FightTemporaryBoostStateEffect.ID] = function () { return new FightTemporaryBoostStateEffect(); };
            ProtocolTypeManager._list[FightTemporaryBoostWeaponDamagesEffect.ID] = function () { return new FightTemporaryBoostWeaponDamagesEffect(); };
            ProtocolTypeManager._list[FightTemporarySpellBoostEffect.ID] = function () { return new FightTemporarySpellBoostEffect(); };
            ProtocolTypeManager._list[FightTemporarySpellImmunityEffect.ID] = function () { return new FightTemporarySpellImmunityEffect(); };
            ProtocolTypeManager._list[FightTriggeredEffect.ID] = function () { return new FightTriggeredEffect(); };
            ProtocolTypeManager._list[GameActionMark.ID] = function () { return new GameActionMark(); };
            ProtocolTypeManager._list[GameActionMarkedCell.ID] = function () { return new GameActionMarkedCell(); };
            ProtocolTypeManager._list[ServerSessionConstant.ID] = function () { return new ServerSessionConstant(); };
            ProtocolTypeManager._list[ServerSessionConstantInteger.ID] = function () { return new ServerSessionConstantInteger(); };
            ProtocolTypeManager._list[ServerSessionConstantLong.ID] = function () { return new ServerSessionConstantLong(); };
            ProtocolTypeManager._list[ServerSessionConstantString.ID] = function () { return new ServerSessionConstantString(); };
            ProtocolTypeManager._list[AbstractCharacterInformation.ID] = function () { return new AbstractCharacterInformation(); };
            ProtocolTypeManager._list[CharacterMinimalAllianceInformations.ID] = function () { return new CharacterMinimalAllianceInformations(); };
            ProtocolTypeManager._list[CharacterMinimalGuildInformations.ID] = function () { return new CharacterMinimalGuildInformations(); };
            ProtocolTypeManager._list[CharacterMinimalInformations.ID] = function () { return new CharacterMinimalInformations(); };
            ProtocolTypeManager._list[CharacterMinimalPlusLookAndGradeInformations.ID] = function () { return new CharacterMinimalPlusLookAndGradeInformations(); };
            ProtocolTypeManager._list[CharacterMinimalPlusLookInformations.ID] = function () { return new CharacterMinimalPlusLookInformations(); };
            ProtocolTypeManager._list[ActorAlignmentInformations.ID] = function () { return new ActorAlignmentInformations(); };
            ProtocolTypeManager._list[ActorExtendedAlignmentInformations.ID] = function () { return new ActorExtendedAlignmentInformations(); };
            ProtocolTypeManager._list[CharacterBaseCharacteristic.ID] = function () { return new CharacterBaseCharacteristic(); };
            ProtocolTypeManager._list[CharacterCharacteristicsInformations.ID] = function () { return new CharacterCharacteristicsInformations(); };
            ProtocolTypeManager._list[CharacterSpellModification.ID] = function () { return new CharacterSpellModification(); };
            ProtocolTypeManager._list[AbstractCharacterToRefurbishInformation.ID] = function () { return new AbstractCharacterToRefurbishInformation(); };
            ProtocolTypeManager._list[CharacterBaseInformations.ID] = function () { return new CharacterBaseInformations(); };
            ProtocolTypeManager._list[CharacterHardcoreOrEpicInformations.ID] = function () { return new CharacterHardcoreOrEpicInformations(); };
            ProtocolTypeManager._list[CharacterRemodelingInformation.ID] = function () { return new CharacterRemodelingInformation(); };
            ProtocolTypeManager._list[CharacterToRecolorInformation.ID] = function () { return new CharacterToRecolorInformation(); };
            ProtocolTypeManager._list[CharacterToRelookInformation.ID] = function () { return new CharacterToRelookInformation(); };
            ProtocolTypeManager._list[CharacterToRemodelInformations.ID] = function () { return new CharacterToRemodelInformations(); };
            ProtocolTypeManager._list[RemodelingInformation.ID] = function () { return new RemodelingInformation(); };
            ProtocolTypeManager._list[ActorRestrictionsInformations.ID] = function () { return new ActorRestrictionsInformations(); };
            ProtocolTypeManager._list[PlayerStatus.ID] = function () { return new PlayerStatus(); };
            ProtocolTypeManager._list[PlayerStatusExtended.ID] = function () { return new PlayerStatusExtended(); };
            ProtocolTypeManager._list[ActorOrientation.ID] = function () { return new ActorOrientation(); };
            ProtocolTypeManager._list[EntityDispositionInformations.ID] = function () { return new EntityDispositionInformations(); };
            ProtocolTypeManager._list[EntityMovementInformations.ID] = function () { return new EntityMovementInformations(); };
            ProtocolTypeManager._list[FightEntityDispositionInformations.ID] = function () { return new FightEntityDispositionInformations(); };
            ProtocolTypeManager._list[GameContextActorInformations.ID] = function () { return new GameContextActorInformations(); };
            ProtocolTypeManager._list[GameRolePlayTaxCollectorInformations.ID] = function () { return new GameRolePlayTaxCollectorInformations(); };
            ProtocolTypeManager._list[IdentifiedEntityDispositionInformations.ID] = function () { return new IdentifiedEntityDispositionInformations(); };
            ProtocolTypeManager._list[MapCoordinates.ID] = function () { return new MapCoordinates(); };
            ProtocolTypeManager._list[MapCoordinatesAndId.ID] = function () { return new MapCoordinatesAndId(); };
            ProtocolTypeManager._list[MapCoordinatesExtended.ID] = function () { return new MapCoordinatesExtended(); };
            ProtocolTypeManager._list[TaxCollectorStaticExtendedInformations.ID] = function () { return new TaxCollectorStaticExtendedInformations(); };
            ProtocolTypeManager._list[TaxCollectorStaticInformations.ID] = function () { return new TaxCollectorStaticInformations(); };
            ProtocolTypeManager._list[AbstractFightTeamInformations.ID] = function () { return new AbstractFightTeamInformations(); };
            ProtocolTypeManager._list[FightAllianceTeamInformations.ID] = function () { return new FightAllianceTeamInformations(); };
            ProtocolTypeManager._list[FightCommonInformations.ID] = function () { return new FightCommonInformations(); };
            ProtocolTypeManager._list[FightExternalInformations.ID] = function () { return new FightExternalInformations(); };
            ProtocolTypeManager._list[FightLoot.ID] = function () { return new FightLoot(); };
            ProtocolTypeManager._list[FightOptionsInformations.ID] = function () { return new FightOptionsInformations(); };
            ProtocolTypeManager._list[FightResultAdditionalData.ID] = function () { return new FightResultAdditionalData(); };
            ProtocolTypeManager._list[FightResultExperienceData.ID] = function () { return new FightResultExperienceData(); };
            ProtocolTypeManager._list[FightResultFighterListEntry.ID] = function () { return new FightResultFighterListEntry(); };
            ProtocolTypeManager._list[FightResultListEntry.ID] = function () { return new FightResultListEntry(); };
            ProtocolTypeManager._list[FightResultMutantListEntry.ID] = function () { return new FightResultMutantListEntry(); };
            ProtocolTypeManager._list[FightResultPlayerListEntry.ID] = function () { return new FightResultPlayerListEntry(); };
            ProtocolTypeManager._list[FightResultPvpData.ID] = function () { return new FightResultPvpData(); };
            ProtocolTypeManager._list[FightResultTaxCollectorListEntry.ID] = function () { return new FightResultTaxCollectorListEntry(); };
            ProtocolTypeManager._list[FightTeamInformations.ID] = function () { return new FightTeamInformations(); };
            ProtocolTypeManager._list[FightTeamLightInformations.ID] = function () { return new FightTeamLightInformations(); };
            ProtocolTypeManager._list[FightTeamMemberCharacterInformations.ID] = function () { return new FightTeamMemberCharacterInformations(); };
            ProtocolTypeManager._list[FightTeamMemberCompanionInformations.ID] = function () { return new FightTeamMemberCompanionInformations(); };
            ProtocolTypeManager._list[FightTeamMemberInformations.ID] = function () { return new FightTeamMemberInformations(); };
            ProtocolTypeManager._list[FightTeamMemberMonsterInformations.ID] = function () { return new FightTeamMemberMonsterInformations(); };
            ProtocolTypeManager._list[FightTeamMemberTaxCollectorInformations.ID] = function () { return new FightTeamMemberTaxCollectorInformations(); };
            ProtocolTypeManager._list[FightTeamMemberWithAllianceCharacterInformations.ID] = function () { return new FightTeamMemberWithAllianceCharacterInformations(); };
            ProtocolTypeManager._list[GameFightAIInformations.ID] = function () { return new GameFightAIInformations(); };
            ProtocolTypeManager._list[GameFightCharacterInformations.ID] = function () { return new GameFightCharacterInformations(); };
            ProtocolTypeManager._list[GameFightCompanionInformations.ID] = function () { return new GameFightCompanionInformations(); };
            ProtocolTypeManager._list[GameFightFighterCompanionLightInformations.ID] = function () { return new GameFightFighterCompanionLightInformations(); };
            ProtocolTypeManager._list[GameFightFighterInformations.ID] = function () { return new GameFightFighterInformations(); };
            ProtocolTypeManager._list[GameFightFighterLightInformations.ID] = function () { return new GameFightFighterLightInformations(); };
            ProtocolTypeManager._list[GameFightFighterMonsterLightInformations.ID] = function () { return new GameFightFighterMonsterLightInformations(); };
            ProtocolTypeManager._list[GameFightFighterNamedInformations.ID] = function () { return new GameFightFighterNamedInformations(); };
            ProtocolTypeManager._list[GameFightFighterNamedLightInformations.ID] = function () { return new GameFightFighterNamedLightInformations(); };
            ProtocolTypeManager._list[GameFightFighterTaxCollectorLightInformations.ID] = function () { return new GameFightFighterTaxCollectorLightInformations(); };
            ProtocolTypeManager._list[GameFightMinimalStats.ID] = function () { return new GameFightMinimalStats(); };
            ProtocolTypeManager._list[GameFightMinimalStatsPreparation.ID] = function () { return new GameFightMinimalStatsPreparation(); };
            ProtocolTypeManager._list[GameFightMonsterInformations.ID] = function () { return new GameFightMonsterInformations(); };
            ProtocolTypeManager._list[GameFightMonsterWithAlignmentInformations.ID] = function () { return new GameFightMonsterWithAlignmentInformations(); };
            ProtocolTypeManager._list[GameFightMutantInformations.ID] = function () { return new GameFightMutantInformations(); };
            ProtocolTypeManager._list[GameFightResumeSlaveInfo.ID] = function () { return new GameFightResumeSlaveInfo(); };
            ProtocolTypeManager._list[GameFightSpellCooldown.ID] = function () { return new GameFightSpellCooldown(); };
            ProtocolTypeManager._list[GameFightTaxCollectorInformations.ID] = function () { return new GameFightTaxCollectorInformations(); };
            ProtocolTypeManager._list[AllianceInformations.ID] = function () { return new AllianceInformations(); };
            ProtocolTypeManager._list[AlternativeMonstersInGroupLightInformations.ID] = function () { return new AlternativeMonstersInGroupLightInformations(); };
            ProtocolTypeManager._list[AtlasPointsInformations.ID] = function () { return new AtlasPointsInformations(); };
            ProtocolTypeManager._list[BasicAllianceInformations.ID] = function () { return new BasicAllianceInformations(); };
            ProtocolTypeManager._list[BasicGuildInformations.ID] = function () { return new BasicGuildInformations(); };
            ProtocolTypeManager._list[BasicNamedAllianceInformations.ID] = function () { return new BasicNamedAllianceInformations(); };
            ProtocolTypeManager._list[GameRolePlayActorInformations.ID] = function () { return new GameRolePlayActorInformations(); };
            ProtocolTypeManager._list[GameRolePlayCharacterInformations.ID] = function () { return new GameRolePlayCharacterInformations(); };
            ProtocolTypeManager._list[GameRolePlayGroupMonsterInformations.ID] = function () { return new GameRolePlayGroupMonsterInformations(); };
            ProtocolTypeManager._list[GameRolePlayGroupMonsterWaveInformations.ID] = function () { return new GameRolePlayGroupMonsterWaveInformations(); };
            ProtocolTypeManager._list[GameRolePlayHumanoidInformations.ID] = function () { return new GameRolePlayHumanoidInformations(); };
            ProtocolTypeManager._list[GameRolePlayMerchantInformations.ID] = function () { return new GameRolePlayMerchantInformations(); };
            ProtocolTypeManager._list[GameRolePlayMountInformations.ID] = function () { return new GameRolePlayMountInformations(); };
            ProtocolTypeManager._list[GameRolePlayMutantInformations.ID] = function () { return new GameRolePlayMutantInformations(); };
            ProtocolTypeManager._list[GameRolePlayNamedActorInformations.ID] = function () { return new GameRolePlayNamedActorInformations(); };
            ProtocolTypeManager._list[GameRolePlayNpcInformations.ID] = function () { return new GameRolePlayNpcInformations(); };
            ProtocolTypeManager._list[GameRolePlayNpcWithQuestInformations.ID] = function () { return new GameRolePlayNpcWithQuestInformations(); };
            ProtocolTypeManager._list[GameRolePlayPortalInformations.ID] = function () { return new GameRolePlayPortalInformations(); };
            ProtocolTypeManager._list[GameRolePlayPrismInformations.ID] = function () { return new GameRolePlayPrismInformations(); };
            ProtocolTypeManager._list[GameRolePlayTreasureHintInformations.ID] = function () { return new GameRolePlayTreasureHintInformations(); };
            ProtocolTypeManager._list[GroupMonsterStaticInformations.ID] = function () { return new GroupMonsterStaticInformations(); };
            ProtocolTypeManager._list[GroupMonsterStaticInformationsWithAlternatives.ID] = function () { return new GroupMonsterStaticInformationsWithAlternatives(); };
            ProtocolTypeManager._list[GuildInAllianceInformations.ID] = function () { return new GuildInAllianceInformations(); };
            ProtocolTypeManager._list[GuildInformations.ID] = function () { return new GuildInformations(); };
            ProtocolTypeManager._list[HumanInformations.ID] = function () { return new HumanInformations(); };
            ProtocolTypeManager._list[HumanOption.ID] = function () { return new HumanOption(); };
            ProtocolTypeManager._list[HumanOptionAlliance.ID] = function () { return new HumanOptionAlliance(); };
            ProtocolTypeManager._list[HumanOptionEmote.ID] = function () { return new HumanOptionEmote(); };
            ProtocolTypeManager._list[HumanOptionFollowers.ID] = function () { return new HumanOptionFollowers(); };
            ProtocolTypeManager._list[HumanOptionGuild.ID] = function () { return new HumanOptionGuild(); };
            ProtocolTypeManager._list[HumanOptionObjectUse.ID] = function () { return new HumanOptionObjectUse(); };
            ProtocolTypeManager._list[HumanOptionOrnament.ID] = function () { return new HumanOptionOrnament(); };
            ProtocolTypeManager._list[HumanOptionTitle.ID] = function () { return new HumanOptionTitle(); };
            ProtocolTypeManager._list[MonsterInGroupInformations.ID] = function () { return new MonsterInGroupInformations(); };
            ProtocolTypeManager._list[MonsterInGroupLightInformations.ID] = function () { return new MonsterInGroupLightInformations(); };
            ProtocolTypeManager._list[ObjectItemInRolePlay.ID] = function () { return new ObjectItemInRolePlay(); };
            ProtocolTypeManager._list[DecraftedItemStackInfo.ID] = function () { return new DecraftedItemStackInfo(); };
            ProtocolTypeManager._list[JobCrafterDirectoryEntryJobInfo.ID] = function () { return new JobCrafterDirectoryEntryJobInfo(); };
            ProtocolTypeManager._list[JobCrafterDirectoryEntryPlayerInfo.ID] = function () { return new JobCrafterDirectoryEntryPlayerInfo(); };
            ProtocolTypeManager._list[JobCrafterDirectoryListEntry.ID] = function () { return new JobCrafterDirectoryListEntry(); };
            ProtocolTypeManager._list[JobCrafterDirectorySettings.ID] = function () { return new JobCrafterDirectorySettings(); };
            ProtocolTypeManager._list[JobDescription.ID] = function () { return new JobDescription(); };
            ProtocolTypeManager._list[JobExperience.ID] = function () { return new JobExperience(); };
            ProtocolTypeManager._list[DungeonPartyFinderPlayer.ID] = function () { return new DungeonPartyFinderPlayer(); };
            ProtocolTypeManager._list[NamedPartyTeam.ID] = function () { return new NamedPartyTeam(); };
            ProtocolTypeManager._list[NamedPartyTeamWithOutcome.ID] = function () { return new NamedPartyTeamWithOutcome(); };
            ProtocolTypeManager._list[PartyGuestInformations.ID] = function () { return new PartyGuestInformations(); };
            ProtocolTypeManager._list[PartyInvitationMemberInformations.ID] = function () { return new PartyInvitationMemberInformations(); };
            ProtocolTypeManager._list[PartyMemberArenaInformations.ID] = function () { return new PartyMemberArenaInformations(); };
            ProtocolTypeManager._list[PartyMemberGeoPosition.ID] = function () { return new PartyMemberGeoPosition(); };
            ProtocolTypeManager._list[PartyMemberInformations.ID] = function () { return new PartyMemberInformations(); };
            ProtocolTypeManager._list[PartyCompanionBaseInformations.ID] = function () { return new PartyCompanionBaseInformations(); };
            ProtocolTypeManager._list[PartyCompanionMemberInformations.ID] = function () { return new PartyCompanionMemberInformations(); };
            ProtocolTypeManager._list[GameRolePlayNpcQuestFlag.ID] = function () { return new GameRolePlayNpcQuestFlag(); };
            ProtocolTypeManager._list[QuestActiveDetailedInformations.ID] = function () { return new QuestActiveDetailedInformations(); };
            ProtocolTypeManager._list[QuestActiveInformations.ID] = function () { return new QuestActiveInformations(); };
            ProtocolTypeManager._list[QuestObjectiveInformations.ID] = function () { return new QuestObjectiveInformations(); };
            ProtocolTypeManager._list[QuestObjectiveInformationsWithCompletion.ID] = function () { return new QuestObjectiveInformationsWithCompletion(); };
            ProtocolTypeManager._list[PortalInformation.ID] = function () { return new PortalInformation(); };
            ProtocolTypeManager._list[TreasureHuntFlag.ID] = function () { return new TreasureHuntFlag(); };
            ProtocolTypeManager._list[TreasureHuntStep.ID] = function () { return new TreasureHuntStep(); };
            ProtocolTypeManager._list[TreasureHuntStepDig.ID] = function () { return new TreasureHuntStepDig(); };
            ProtocolTypeManager._list[TreasureHuntStepFight.ID] = function () { return new TreasureHuntStepFight(); };
            ProtocolTypeManager._list[TreasureHuntStepFollowDirection.ID] = function () { return new TreasureHuntStepFollowDirection(); };
            ProtocolTypeManager._list[TreasureHuntStepFollowDirectionToHint.ID] = function () { return new TreasureHuntStepFollowDirectionToHint(); };
            ProtocolTypeManager._list[TreasureHuntStepFollowDirectionToPOI.ID] = function () { return new TreasureHuntStepFollowDirectionToPOI(); };
            ProtocolTypeManager._list[BidExchangerObjectInfo.ID] = function () { return new BidExchangerObjectInfo(); };
            ProtocolTypeManager._list[GoldItem.ID] = function () { return new GoldItem(); };
            ProtocolTypeManager._list[Item.ID] = function () { return new Item(); };
            ProtocolTypeManager._list[ObjectItem.ID] = function () { return new ObjectItem(); };
            ProtocolTypeManager._list[ObjectItemGenericQuantity.ID] = function () { return new ObjectItemGenericQuantity(); };
            ProtocolTypeManager._list[ObjectItemInformationWithQuantity.ID] = function () { return new ObjectItemInformationWithQuantity(); };
            ProtocolTypeManager._list[ObjectItemMinimalInformation.ID] = function () { return new ObjectItemMinimalInformation(); };
            ProtocolTypeManager._list[ObjectItemNotInContainer.ID] = function () { return new ObjectItemNotInContainer(); };
            ProtocolTypeManager._list[ObjectItemQuantity.ID] = function () { return new ObjectItemQuantity(); };
            ProtocolTypeManager._list[ObjectItemToSell.ID] = function () { return new ObjectItemToSell(); };
            ProtocolTypeManager._list[ObjectItemToSellInBid.ID] = function () { return new ObjectItemToSellInBid(); };
            ProtocolTypeManager._list[ObjectItemToSellInHumanVendorShop.ID] = function () { return new ObjectItemToSellInHumanVendorShop(); };
            ProtocolTypeManager._list[ObjectItemToSellInNpcShop.ID] = function () { return new ObjectItemToSellInNpcShop(); };
            ProtocolTypeManager._list[SellerBuyerDescriptor.ID] = function () { return new SellerBuyerDescriptor(); };
            ProtocolTypeManager._list[SpellItem.ID] = function () { return new SpellItem(); };
            ProtocolTypeManager._list[ObjectEffect.ID] = function () { return new ObjectEffect(); };
            ProtocolTypeManager._list[ObjectEffectCreature.ID] = function () { return new ObjectEffectCreature(); };
            ProtocolTypeManager._list[ObjectEffectDate.ID] = function () { return new ObjectEffectDate(); };
            ProtocolTypeManager._list[ObjectEffectDice.ID] = function () { return new ObjectEffectDice(); };
            ProtocolTypeManager._list[ObjectEffectDuration.ID] = function () { return new ObjectEffectDuration(); };
            ProtocolTypeManager._list[ObjectEffectInteger.ID] = function () { return new ObjectEffectInteger(); };
            ProtocolTypeManager._list[ObjectEffectLadder.ID] = function () { return new ObjectEffectLadder(); };
            ProtocolTypeManager._list[ObjectEffectMinMax.ID] = function () { return new ObjectEffectMinMax(); };
            ProtocolTypeManager._list[ObjectEffectMount.ID] = function () { return new ObjectEffectMount(); };
            ProtocolTypeManager._list[ObjectEffectString.ID] = function () { return new ObjectEffectString(); };
            ProtocolTypeManager._list[ProtectedEntityWaitingForHelpInfo.ID] = function () { return new ProtectedEntityWaitingForHelpInfo(); };
            ProtocolTypeManager._list[AbstractContactInformations.ID] = function () { return new AbstractContactInformations(); };
            ProtocolTypeManager._list[FriendInformations.ID] = function () { return new FriendInformations(); };
            ProtocolTypeManager._list[FriendOnlineInformations.ID] = function () { return new FriendOnlineInformations(); };
            ProtocolTypeManager._list[FriendSpouseInformations.ID] = function () { return new FriendSpouseInformations(); };
            ProtocolTypeManager._list[FriendSpouseOnlineInformations.ID] = function () { return new FriendSpouseOnlineInformations(); };
            ProtocolTypeManager._list[IgnoredInformations.ID] = function () { return new IgnoredInformations(); };
            ProtocolTypeManager._list[IgnoredOnlineInformations.ID] = function () { return new IgnoredOnlineInformations(); };
            ProtocolTypeManager._list[GuildEmblem.ID] = function () { return new GuildEmblem(); };
            ProtocolTypeManager._list[GuildMember.ID] = function () { return new GuildMember(); };
            ProtocolTypeManager._list[AdditionalTaxCollectorInformations.ID] = function () { return new AdditionalTaxCollectorInformations(); };
            ProtocolTypeManager._list[TaxCollectorBasicInformations.ID] = function () { return new TaxCollectorBasicInformations(); };
            ProtocolTypeManager._list[TaxCollectorComplementaryInformations.ID] = function () { return new TaxCollectorComplementaryInformations(); };
            ProtocolTypeManager._list[TaxCollectorFightersInformation.ID] = function () { return new TaxCollectorFightersInformation(); };
            ProtocolTypeManager._list[TaxCollectorGuildInformations.ID] = function () { return new TaxCollectorGuildInformations(); };
            ProtocolTypeManager._list[TaxCollectorInformations.ID] = function () { return new TaxCollectorInformations(); };
            ProtocolTypeManager._list[TaxCollectorLootInformations.ID] = function () { return new TaxCollectorLootInformations(); };
            ProtocolTypeManager._list[TaxCollectorWaitingForHelpInformations.ID] = function () { return new TaxCollectorWaitingForHelpInformations(); };
            ProtocolTypeManager._list[AccountHouseInformations.ID] = function () { return new AccountHouseInformations(); };
            ProtocolTypeManager._list[HouseInformations.ID] = function () { return new HouseInformations(); };
            ProtocolTypeManager._list[HouseInformationsExtended.ID] = function () { return new HouseInformationsExtended(); };
            ProtocolTypeManager._list[HouseInformationsForGuild.ID] = function () { return new HouseInformationsForGuild(); };
            ProtocolTypeManager._list[HouseInformationsForSell.ID] = function () { return new HouseInformationsForSell(); };
            ProtocolTypeManager._list[HouseInformationsInside.ID] = function () { return new HouseInformationsInside(); };
            ProtocolTypeManager._list[Idol.ID] = function () { return new Idol(); };
            ProtocolTypeManager._list[PartyIdol.ID] = function () { return new PartyIdol(); };
            ProtocolTypeManager._list[InteractiveElement.ID] = function () { return new InteractiveElement(); };
            ProtocolTypeManager._list[InteractiveElementNamedSkill.ID] = function () { return new InteractiveElementNamedSkill(); };
            ProtocolTypeManager._list[InteractiveElementSkill.ID] = function () { return new InteractiveElementSkill(); };
            ProtocolTypeManager._list[InteractiveElementWithAgeBonus.ID] = function () { return new InteractiveElementWithAgeBonus(); };
            ProtocolTypeManager._list[MapObstacle.ID] = function () { return new MapObstacle(); };
            ProtocolTypeManager._list[StatedElement.ID] = function () { return new StatedElement(); };
            ProtocolTypeManager._list[SkillActionDescription.ID] = function () { return new SkillActionDescription(); };
            ProtocolTypeManager._list[SkillActionDescriptionCollect.ID] = function () { return new SkillActionDescriptionCollect(); };
            ProtocolTypeManager._list[SkillActionDescriptionCraft.ID] = function () { return new SkillActionDescriptionCraft(); };
            ProtocolTypeManager._list[SkillActionDescriptionTimed.ID] = function () { return new SkillActionDescriptionTimed(); };
            ProtocolTypeManager._list[IdolsPreset.ID] = function () { return new IdolsPreset(); };
            ProtocolTypeManager._list[Preset.ID] = function () { return new Preset(); };
            ProtocolTypeManager._list[PresetItem.ID] = function () { return new PresetItem(); };
            ProtocolTypeManager._list[EntityLook.ID] = function () { return new EntityLook(); };
            ProtocolTypeManager._list[IndexedEntityLook.ID] = function () { return new IndexedEntityLook(); };
            ProtocolTypeManager._list[SubEntity.ID] = function () { return new SubEntity(); };
            ProtocolTypeManager._list[ItemDurability.ID] = function () { return new ItemDurability(); };
            ProtocolTypeManager._list[MountClientData.ID] = function () { return new MountClientData(); };
            ProtocolTypeManager._list[UpdateMountBoost.ID] = function () { return new UpdateMountBoost(); };
            ProtocolTypeManager._list[UpdateMountIntBoost.ID] = function () { return new UpdateMountIntBoost(); };
            ProtocolTypeManager._list[MountInformationsForPaddock.ID] = function () { return new MountInformationsForPaddock(); };
            ProtocolTypeManager._list[PaddockAbandonnedInformations.ID] = function () { return new PaddockAbandonnedInformations(); };
            ProtocolTypeManager._list[PaddockBuyableInformations.ID] = function () { return new PaddockBuyableInformations(); };
            ProtocolTypeManager._list[PaddockContentInformations.ID] = function () { return new PaddockContentInformations(); };
            ProtocolTypeManager._list[PaddockInformations.ID] = function () { return new PaddockInformations(); };
            ProtocolTypeManager._list[PaddockInformationsForSell.ID] = function () { return new PaddockInformationsForSell(); };
            ProtocolTypeManager._list[PaddockItem.ID] = function () { return new PaddockItem(); };
            ProtocolTypeManager._list[PaddockPrivateInformations.ID] = function () { return new PaddockPrivateInformations(); };
            ProtocolTypeManager._list[AllianceInsiderPrismInformation.ID] = function () { return new AllianceInsiderPrismInformation(); };
            ProtocolTypeManager._list[AlliancePrismInformation.ID] = function () { return new AlliancePrismInformation(); };
            ProtocolTypeManager._list[PrismFightersInformation.ID] = function () { return new PrismFightersInformation(); };
            ProtocolTypeManager._list[PrismGeolocalizedInformation.ID] = function () { return new PrismGeolocalizedInformation(); };
            ProtocolTypeManager._list[PrismInformation.ID] = function () { return new PrismInformation(); };
            ProtocolTypeManager._list[PrismSubareaEmptyInfo.ID] = function () { return new PrismSubareaEmptyInfo(); };
            ProtocolTypeManager._list[Shortcut.ID] = function () { return new Shortcut(); };
            ProtocolTypeManager._list[ShortcutEmote.ID] = function () { return new ShortcutEmote(); };
            ProtocolTypeManager._list[ShortcutObject.ID] = function () { return new ShortcutObject(); };
            ProtocolTypeManager._list[ShortcutObjectIdolsPreset.ID] = function () { return new ShortcutObjectIdolsPreset(); };
            ProtocolTypeManager._list[ShortcutObjectItem.ID] = function () { return new ShortcutObjectItem(); };
            ProtocolTypeManager._list[ShortcutObjectPreset.ID] = function () { return new ShortcutObjectPreset(); };
            ProtocolTypeManager._list[ShortcutSmiley.ID] = function () { return new ShortcutSmiley(); };
            ProtocolTypeManager._list[ShortcutSpell.ID] = function () { return new ShortcutSpell(); };
            ProtocolTypeManager._list[AbstractSocialGroupInfos.ID] = function () { return new AbstractSocialGroupInfos(); };
            ProtocolTypeManager._list[AllianceFactSheetInformations.ID] = function () { return new AllianceFactSheetInformations(); };
            ProtocolTypeManager._list[AllianceVersatileInformations.ID] = function () { return new AllianceVersatileInformations(); };
            ProtocolTypeManager._list[AlliancedGuildFactSheetInformations.ID] = function () { return new AlliancedGuildFactSheetInformations(); };
            ProtocolTypeManager._list[GuildFactSheetInformations.ID] = function () { return new GuildFactSheetInformations(); };
            ProtocolTypeManager._list[GuildInAllianceVersatileInformations.ID] = function () { return new GuildInAllianceVersatileInformations(); };
            ProtocolTypeManager._list[GuildInsiderFactSheetInformations.ID] = function () { return new GuildInsiderFactSheetInformations(); };
            ProtocolTypeManager._list[GuildVersatileInformations.ID] = function () { return new GuildVersatileInformations(); };
            ProtocolTypeManager._list[StartupActionAddObject.ID] = function () { return new StartupActionAddObject(); };
            ProtocolTypeManager._list[TrustCertificate.ID] = function () { return new TrustCertificate(); };
            ProtocolTypeManager._list[ContentPart.ID] = function () { return new ContentPart(); };
            ProtocolTypeManager._list[Version.ID] = function () { return new Version(); };
            ProtocolTypeManager._list[VersionExtended.ID] = function () { return new VersionExtended(); };
            ProtocolTypeManager._list[KrosmasterFigure.ID] = function () { return new KrosmasterFigure(); };
        }
        ProtocolTypeManager.getInstance = function (networkType, param2) {
            var _loc3_ = ProtocolTypeManager._list[param2];
            if (!_loc3_) {
                throw new Error('Type with id ' + param2 + ' is unknown.');
            }
            return _loc3_();
        };
        return ProtocolTypeManager;
    })();
    Protocol.ProtocolTypeManager = ProtocolTypeManager;
    var Binary64 = (function () {
        function Binary64(low, high) {
            if (low === void 0) { low = 0; }
            if (high === void 0) { high = 0; }
            this.high = high;
            this.low = low;
        }
        Binary64.prototype.div = function (n) {
            var modHigh = 0;
            modHigh = (this.high % n);
            var mod = (((this.low % n) + (modHigh * 6)) % n);
            this.high = (this.high / n);
            var newLow = (((modHigh * 4294967296) + this.low) / n);
            this.high = (this.high + Number((newLow / 4294967296)));
            this.low = newLow;
            return mod;
        };
        ;
        Binary64.prototype.mul = function (n) {
            var newLow = (Number(this.low) * n);
            this.high = (this.high * n);
            this.high = (this.high + Number((newLow / 4294967296)));
            this.low = (this.low * n);
        };
        ;
        Binary64.prototype.add = function (n) {
            var newLow = (Number(this.low) + n);
            this.high = (this.high + Number((newLow / 4294967296)));
            this.low = newLow;
        };
        ;
        Binary64.prototype.bitwiseNot = function (n) {
            this.low = ~(this.low);
            this.high = ~(this.high);
        };
        ;
        return Binary64;
    })();
    Protocol.Binary64 = Binary64;
    var BooleanByteWrapper = (function () {
        function BooleanByteWrapper() {
        }
        BooleanByteWrapper.setFlag = function (param1, param2, param3) {
            switch (param2) {
                case 0:
                    if (param3) {
                        param1 = param1 | 1;
                    }
                    else {
                        param1 = param1 & 255 - 1;
                    }
                    break;
                case 1:
                    if (param3) {
                        param1 = param1 | 2;
                    }
                    else {
                        param1 = param1 & 255 - 2;
                    }
                    break;
                case 2:
                    if (param3) {
                        param1 = param1 | 4;
                    }
                    else {
                        param1 = param1 & 255 - 4;
                    }
                    break;
                case 3:
                    if (param3) {
                        param1 = param1 | 8;
                    }
                    else {
                        param1 = param1 & 255 - 8;
                    }
                    break;
                case 4:
                    if (param3) {
                        param1 = param1 | 16;
                    }
                    else {
                        param1 = param1 & 255 - 16;
                    }
                    break;
                case 5:
                    if (param3) {
                        param1 = param1 | 32;
                    }
                    else {
                        param1 = param1 & 255 - 32;
                    }
                    break;
                case 6:
                    if (param3) {
                        param1 = param1 | 64;
                    }
                    else {
                        param1 = param1 & 255 - 64;
                    }
                    break;
                case 7:
                    if (param3) {
                        param1 = param1 | 128;
                    }
                    else {
                        param1 = param1 & 255 - 128;
                    }
                    break;
                default:
                    throw new Error('Bytebox overflow.');
            }
            return param1;
        };
        BooleanByteWrapper.getFlag = function (param1, param2) {
            switch (param2) {
                case 0:
                    return !((param1 & 1) === 0);
                case 1:
                    return !((param1 & 2) === 0);
                case 2:
                    return !((param1 & 4) === 0);
                case 3:
                    return !((param1 & 8) === 0);
                case 4:
                    return !((param1 & 16) === 0);
                case 5:
                    return !((param1 & 32) === 0);
                case 6:
                    return !((param1 & 64) === 0);
                case 7:
                    return !((param1 & 128) === 0);
                default:
                    throw new Error('Bytebox overflow.');
            }
        };
        return BooleanByteWrapper;
    })();
    Protocol.BooleanByteWrapper = BooleanByteWrapper;
    var CustomDataWrapper = (function () {
        function CustomDataWrapper(data) {
            this._data = data;
        }
        Object.defineProperty(CustomDataWrapper.prototype, "position", {
            get: function () {
                return this._data.position;
            },
            set: function (param1) {
                this._data.position = param1;
            },
            enumerable: true,
            configurable: true
        });
        CustomDataWrapper.prototype.readVarInt = function () {
            var _loc4_ = 0;
            var _loc1_ = 0;
            var _loc2_ = 0;
            var _loc3_ = false;
            while (_loc2_ < CustomDataWrapper.INT_SIZE) {
                _loc4_ = this._data.readByte();
                _loc3_ = (_loc4_ & CustomDataWrapper.MASK_10000000) === CustomDataWrapper.MASK_10000000;
                if (_loc2_ > 0) {
                    _loc1_ = _loc1_ + ((_loc4_ & CustomDataWrapper.MASK_01111111) << _loc2_);
                }
                else {
                    _loc1_ = _loc1_ + (_loc4_ & CustomDataWrapper.MASK_01111111);
                }
                _loc2_ = _loc2_ + CustomDataWrapper.CHUNCK_BIT_SIZE;
                if (!_loc3_) {
                    return _loc1_;
                }
            }
            throw new Error('Too much data');
        };
        CustomDataWrapper.prototype.readVarUhInt = function () {
            return this.readVarInt();
        };
        CustomDataWrapper.prototype.readVarShort = function () {
            var _loc4_ = 0;
            var _loc1_ = 0;
            var _loc2_ = 0;
            var _loc3_ = false;
            while (_loc2_ < CustomDataWrapper.SHORT_SIZE) {
                _loc4_ = this._data.readByte();
                _loc3_ = (_loc4_ & CustomDataWrapper.MASK_10000000) === CustomDataWrapper.MASK_10000000;
                if (_loc2_ > 0) {
                    _loc1_ = _loc1_ + ((_loc4_ & CustomDataWrapper.MASK_01111111) << _loc2_);
                }
                else {
                    _loc1_ = _loc1_ + (_loc4_ & CustomDataWrapper.MASK_01111111);
                }
                _loc2_ = _loc2_ + CustomDataWrapper.CHUNCK_BIT_SIZE;
                if (!_loc3_) {
                    if (_loc1_ > CustomDataWrapper.SHORT_MAX_VALUE) {
                        _loc1_ = _loc1_ - CustomDataWrapper.UNSIGNED_SHORT_MAX_VALUE;
                    }
                    return _loc1_;
                }
            }
            throw new Error('Too much data');
        };
        CustomDataWrapper.prototype.readVarUhShort = function () {
            return this.readVarShort();
        };
        CustomDataWrapper.prototype.readVarLong = function () {
            return this.readInt64(this._data).value();
        };
        CustomDataWrapper.prototype.readVarUhLong = function () {
            return this.readUInt64(this._data).value();
        };
        CustomDataWrapper.prototype.readBytes = function (param1, param2, param3) {
            if (param2 === void 0) { param2 = 0; }
            if (param3 === void 0) { param3 = 0; }
            this._data.readBytes(param1, param2, param3);
        };
        CustomDataWrapper.prototype.readBoolean = function () {
            return this._data.readBoolean();
        };
        CustomDataWrapper.prototype.readByte = function () {
            return this._data.readByte();
        };
        CustomDataWrapper.prototype.readUnsignedByte = function () {
            return this._data.readUnsignedByte();
        };
        CustomDataWrapper.prototype.readShort = function () {
            return this._data.readShort();
        };
        CustomDataWrapper.prototype.readUnsignedShort = function () {
            return this._data.readUnsignedShort();
        };
        CustomDataWrapper.prototype.readInt = function () {
            return this._data.readInt();
        };
        CustomDataWrapper.prototype.readUnsignedInt = function () {
            return this._data.readUnsignedInt();
        };
        CustomDataWrapper.prototype.readFloat = function () {
            return this._data.readFloat();
        };
        CustomDataWrapper.prototype.readDouble = function () {
            return this._data.readDouble();
        };
        CustomDataWrapper.prototype.readMultiByte = function (param1, param2) {
            return this._data.readMultiByte(param1, param2);
        };
        CustomDataWrapper.prototype.readUTF = function () {
            return this._data.readUTF();
        };
        CustomDataWrapper.prototype.readUTFBytes = function (param1) {
            return this._data.readUTFBytes(param1);
        };
        Object.defineProperty(CustomDataWrapper.prototype, "bytesAvailable", {
            get: function () {
                return this._data.bytesAvailable;
            },
            enumerable: true,
            configurable: true
        });
        CustomDataWrapper.prototype.readObject = function () {
            return null;
        };
        Object.defineProperty(CustomDataWrapper.prototype, "endian", {
            get: function () {
                return this._data.endian;
            },
            set: function (param1) {
                this._data.endian = param1;
            },
            enumerable: true,
            configurable: true
        });
        CustomDataWrapper.prototype.writeVarInt = function (param1) {
            var _loc5_ = 0;
            var _loc2_ = new ByteArray();
            if (param1 >= 0 && param1 <= CustomDataWrapper.MASK_01111111) {
                _loc2_.writeByte(param1);
                this._data.writeBytes(_loc2_);
                return;
            }
            var _loc3_ = param1;
            var _loc4_ = new ByteArray();
            while (_loc3_ !== 0) {
                _loc4_.writeByte(_loc3_ & CustomDataWrapper.MASK_01111111);
                _loc4_.position = _loc4_.length - 1;
                _loc5_ = _loc4_.readByte();
                _loc3_ = _loc3_ >>> CustomDataWrapper.CHUNCK_BIT_SIZE;
                if (_loc3_ > 0) {
                    _loc5_ = _loc5_ | CustomDataWrapper.MASK_10000000;
                }
                _loc2_.writeByte(_loc5_);
            }
            this._data.writeBytes(_loc2_);
        };
        CustomDataWrapper.prototype.writeVarShort = function (param1) {
            var _loc5_ = 0;
            if (param1 > CustomDataWrapper.SHORT_MAX_VALUE || param1 < CustomDataWrapper.SHORT_MIN_VALUE) {
                throw new Error('Forbidden value');
            }
            var _loc2_ = new ByteArray();
            if (param1 >= 0 && param1 <= CustomDataWrapper.MASK_01111111) {
                _loc2_.writeByte(param1);
                this._data.writeBytes(_loc2_);
                return;
            }
            var _loc3_ = param1 & 65535;
            var _loc4_ = new ByteArray();
            while (_loc3_ !== 0) {
                _loc4_.writeByte(_loc3_ & CustomDataWrapper.MASK_01111111);
                _loc4_.position = _loc4_.length - 1;
                _loc5_ = _loc4_.readByte();
                _loc3_ = _loc3_ >>> CustomDataWrapper.CHUNCK_BIT_SIZE;
                if (_loc3_ > 0) {
                    _loc5_ = _loc5_ | CustomDataWrapper.MASK_10000000;
                }
                _loc2_.writeByte(_loc5_);
            }
            this._data.writeBytes(_loc2_);
        };
        CustomDataWrapper.prototype.writeVarLong = function (param1) {
            var _loc3_ = 0;
            var _loc2_ = new ByteArray.Int64(param1, 0);
            if (_loc2_.high === 0) {
                this.writeint32(this._data, _loc2_.low);
            }
            else {
                _loc3_ = 0;
                while (_loc3_ < 4) {
                    this._data.writeByte(_loc2_.low & 127 | 128);
                    _loc2_.low = _loc2_.low >>> 7;
                    _loc3_++;
                }
                if ((_loc2_.high & 268435455 << 3) === 0) {
                    this._data.writeByte(_loc2_.high << 4 | _loc2_.low);
                }
                else {
                    this._data.writeByte((_loc2_.high << 4 | _loc2_.low) & 127 | 128);
                    this.writeint32(this._data, _loc2_.high >>> 3);
                }
            }
        };
        CustomDataWrapper.prototype.writeBytes = function (param1, param2, param3) {
            if (param2 === void 0) { param2 = 0; }
            if (param3 === void 0) { param3 = 0; }
            this._data.writeBytes(param1, param2, param3);
        };
        CustomDataWrapper.prototype.writeBoolean = function (param1) {
            this._data.writeBoolean(param1);
        };
        CustomDataWrapper.prototype.writeByte = function (param1) {
            this._data.writeByte(param1);
        };
        CustomDataWrapper.prototype.writeShort = function (param1) {
            this._data.writeShort(param1);
        };
        CustomDataWrapper.prototype.writeInt = function (param1) {
            this._data.writeInt(param1);
        };
        CustomDataWrapper.prototype.writeUnsignedInt = function (param1) {
            this._data.writeUnsignedInt(param1);
        };
        CustomDataWrapper.prototype.writeFloat = function (param1) {
            this._data.writeFloat(param1);
        };
        CustomDataWrapper.prototype.writeDouble = function (param1) {
            this._data.writeDouble(param1);
        };
        CustomDataWrapper.prototype.writeMultiByte = function (param1, param2) {
            this._data.writeMultiByte(param1, param2);
        };
        CustomDataWrapper.prototype.writeUTF = function (param1) {
            this._data.writeUTF(param1);
        };
        CustomDataWrapper.prototype.writeUTFBytes = function (param1) {
            this._data.writeUTFBytes(param1);
        };
        CustomDataWrapper.prototype.writeObject = function (param1) {
        };
        CustomDataWrapper.prototype.readInt64 = function (param1) {
            var _loc3_ = 0;
            var _loc2_ = new ByteArray.Int64(0, 0);
            var _loc4_ = 0;
            while (true) {
                _loc3_ = param1.readUnsignedByte();
                if (_loc4_ === 28) {
                    break;
                }
                if (_loc3_ >= 128) {
                    _loc2_.low = _loc2_.low | (_loc3_ & 127) << _loc4_;
                    _loc4_ = _loc4_ + 7;
                    continue;
                }
                _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
                return _loc2_;
            }
            if (_loc3_ >= 128) {
                _loc3_ = _loc3_ & 127;
                _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
                _loc2_.high = _loc3_ >>> 4;
                _loc4_ = 3;
                while (true) {
                    _loc3_ = param1.readUnsignedByte();
                    if (_loc4_ < 32) {
                        if (_loc3_ >= 128) {
                            _loc2_.high = _loc2_.high | (_loc3_ & 127) << _loc4_;
                        }
                        else {
                            break;
                        }
                    }
                    _loc4_ = _loc4_ + 7;
                }
                _loc2_.high = _loc2_.high | _loc3_ << _loc4_;
                return _loc2_;
            }
            _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
            _loc2_.high = _loc3_ >>> 4;
            return _loc2_;
        };
        CustomDataWrapper.prototype.readUInt64 = function (param1) {
            var _loc3_ = 0;
            var _loc2_ = new ByteArray.UInt64();
            var _loc4_ = 0;
            while (true) {
                _loc3_ = param1.readUnsignedByte();
                if (_loc4_ === 28) {
                    break;
                }
                if (_loc3_ >= 128) {
                    _loc2_.low = _loc2_.low | (_loc3_ & 127) << _loc4_;
                    _loc4_ = _loc4_ + 7;
                    continue;
                }
                _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
                return _loc2_;
            }
            if (_loc3_ >= 128) {
                _loc3_ = _loc3_ & 127;
                _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
                _loc2_.high = _loc3_ >>> 4;
                _loc4_ = 3;
                while (true) {
                    _loc3_ = param1.readUnsignedByte();
                    if (_loc4_ < 32) {
                        if (_loc3_ >= 128) {
                            _loc2_.high = _loc2_.high | (_loc3_ & 127) << _loc4_;
                        }
                        else {
                            break;
                        }
                    }
                    _loc4_ = _loc4_ + 7;
                }
                _loc2_.high = _loc2_.high | _loc3_ << _loc4_;
                return _loc2_;
            }
            _loc2_.low = _loc2_.low | _loc3_ << _loc4_;
            _loc2_.high = _loc3_ >>> 4;
            return _loc2_;
        };
        CustomDataWrapper.prototype.writeint32 = function (param1, param2) {
            while (param2 >= 128) {
                param1.writeByte(param2 & 127 | 128);
                param2 = param2 >>> 7;
            }
            param1.writeByte(param2);
        };
        CustomDataWrapper.INT_SIZE = 32;
        CustomDataWrapper.SHORT_SIZE = 16;
        CustomDataWrapper.SHORT_MIN_VALUE = -32768;
        CustomDataWrapper.SHORT_MAX_VALUE = 32767;
        CustomDataWrapper.UNSIGNED_SHORT_MAX_VALUE = 65536;
        CustomDataWrapper.CHUNCK_BIT_SIZE = 7;
        CustomDataWrapper.MAX_ENCODING_LENGTH = Math.ceil(CustomDataWrapper.INT_SIZE / CustomDataWrapper.CHUNCK_BIT_SIZE);
        CustomDataWrapper.MASK_10000000 = 128;
        CustomDataWrapper.MASK_01111111 = 127;
        return CustomDataWrapper;
    })();
    Protocol.CustomDataWrapper = CustomDataWrapper;
    var NetworkMessage = (function () {
        function NetworkMessage() {
        }
        NetworkMessage.writePacket = function (param1, param2, param3) {
            var _loc5_ = 0;
            var _loc6_ = 0;
            var _loc4_ = this.computeTypeLen(param3.buffer.byteLength);
            param1.writeShort(this.subComputeStaticHeader(param2, _loc4_));
            switch (_loc4_) {
                case 0:
                    return;
                case 1:
                    param1.writeByte(param3.buffer.byteLength);
                    break;
                case 2:
                    param1.writeShort(param3.buffer.byteLength);
                    break;
                case 3:
                    _loc5_ = param3.buffer.byteLength >> 16 & 255;
                    _loc6_ = param3.buffer.byteLength & 65535;
                    param1.writeByte(_loc5_);
                    param1.writeShort(_loc6_);
                    break;
            }
            param1.writeBytes(param3, 0, param3.buffer.byteLength);
        };
        NetworkMessage.computeTypeLen = function (param1) {
            if (param1 > 65535) {
                return 3;
            }
            if (param1 > 255) {
                return 2;
            }
            if (param1 > 0) {
                return 1;
            }
            return 0;
        };
        NetworkMessage.subComputeStaticHeader = function (param1, param2) {
            return param1 << NetworkMessage.BIT_RIGHT_SHIFT_LEN_PACKET_ID | param2;
        };
        NetworkMessage.BIT_RIGHT_SHIFT_LEN_PACKET_ID = 2;
        return NetworkMessage;
    })();
    Protocol.NetworkMessage = NetworkMessage;
})(Protocol || (Protocol = {}));
module.exports = Protocol;
