var AdminCommandMessage = require('./messages/authorized/admin-command-message');
var AdminQuietCommandMessage = require('./messages/authorized/admin-quiet-command-message');
var ConsoleCommandsListMessage = require('./messages/authorized/console-commands-list-message');
var ConsoleMessage = require('./messages/authorized/console-message');
var NetworkDataContainerMessage = require('./messages/common/network-data-container-message');
var BasicPingMessage = require('./messages/common/basic/basic-ping-message');
var BasicPongMessage = require('./messages/common/basic/basic-pong-message');
var BasicStatMessage = require('./messages/common/basic/basic-stat-message');
var CredentialsAcknowledgementMessage = require('./messages/connection/credentials-acknowledgement-message');
var HelloConnectMessage = require('./messages/connection/hello-connect-message');
var IdentificationAccountForceMessage = require('./messages/connection/identification-account-force-message');
var IdentificationFailedBannedMessage = require('./messages/connection/identification-failed-banned-message');
var IdentificationFailedForBadVersionMessage = require('./messages/connection/identification-failed-for-bad-version-message');
var IdentificationFailedMessage = require('./messages/connection/identification-failed-message');
var IdentificationMessage = require('./messages/connection/identification-message');
var IdentificationSuccessMessage = require('./messages/connection/identification-success-message');
var IdentificationSuccessWithLoginTokenMessage = require('./messages/connection/identification-success-with-login-token-message');
var SelectedServerDataExtendedMessage = require('./messages/connection/selected-server-data-extended-message');
var SelectedServerDataMessage = require('./messages/connection/selected-server-data-message');
var SelectedServerRefusedMessage = require('./messages/connection/selected-server-refused-message');
var ServerSelectionMessage = require('./messages/connection/server-selection-message');
var ServerStatusUpdateMessage = require('./messages/connection/server-status-update-message');
var ServersListMessage = require('./messages/connection/servers-list-message');
var AccountLinkRequiredMessage = require('./messages/connection/register/account-link-required-message');
var NicknameAcceptedMessage = require('./messages/connection/register/nickname-accepted-message');
var NicknameChoiceRequestMessage = require('./messages/connection/register/nickname-choice-request-message');
var NicknameRefusedMessage = require('./messages/connection/register/nickname-refused-message');
var NicknameRegistrationMessage = require('./messages/connection/register/nickname-registration-message');
var AcquaintanceSearchErrorMessage = require('./messages/connection/search/acquaintance-search-error-message');
var AcquaintanceSearchMessage = require('./messages/connection/search/acquaintance-search-message');
var AcquaintanceServerListMessage = require('./messages/connection/search/acquaintance-server-list-message');
var DebugClearHighlightCellsMessage = require('./messages/debug/debug-clear-highlight-cells-message');
var DebugHighlightCellsMessage = require('./messages/debug/debug-highlight-cells-message');
var DebugInClientMessage = require('./messages/debug/debug-in-client-message');
var AchievementDetailedListMessage = require('./messages/game/achievement/achievement-detailed-list-message');
var AchievementDetailedListRequestMessage = require('./messages/game/achievement/achievement-detailed-list-request-message');
var AchievementDetailsMessage = require('./messages/game/achievement/achievement-details-message');
var AchievementDetailsRequestMessage = require('./messages/game/achievement/achievement-details-request-message');
var AchievementFinishedInformationMessage = require('./messages/game/achievement/achievement-finished-information-message');
var AchievementFinishedMessage = require('./messages/game/achievement/achievement-finished-message');
var AchievementListMessage = require('./messages/game/achievement/achievement-list-message');
var AchievementRewardErrorMessage = require('./messages/game/achievement/achievement-reward-error-message');
var AchievementRewardRequestMessage = require('./messages/game/achievement/achievement-reward-request-message');
var AchievementRewardSuccessMessage = require('./messages/game/achievement/achievement-reward-success-message');
var FriendGuildSetWarnOnAchievementCompleteMessage = require('./messages/game/achievement/friend-guild-set-warn-on-achievement-complete-message');
var FriendGuildWarnOnAchievementCompleteStateMessage = require('./messages/game/achievement/friend-guild-warn-on-achievement-complete-state-message');
var AbstractGameActionMessage = require('./messages/game/actions/abstract-game-action-message');
var AbstractGameActionWithAckMessage = require('./messages/game/actions/abstract-game-action-with-ack-message');
var GameActionAcknowledgementMessage = require('./messages/game/actions/game-action-acknowledgement-message');
var GameActionNoopMessage = require('./messages/game/actions/game-action-noop-message');
var AbstractGameActionFightTargetedAbilityMessage = require('./messages/game/actions/fight/abstract-game-action-fight-targeted-ability-message');
var GameActionFightActivateGlyphTrapMessage = require('./messages/game/actions/fight/game-action-fight-activate-glyph-trap-message');
var GameActionFightCarryCharacterMessage = require('./messages/game/actions/fight/game-action-fight-carry-character-message');
var GameActionFightCastOnTargetRequestMessage = require('./messages/game/actions/fight/game-action-fight-cast-on-target-request-message');
var GameActionFightCastRequestMessage = require('./messages/game/actions/fight/game-action-fight-cast-request-message');
var GameActionFightChangeLookMessage = require('./messages/game/actions/fight/game-action-fight-change-look-message');
var GameActionFightCloseCombatMessage = require('./messages/game/actions/fight/game-action-fight-close-combat-message');
var GameActionFightDeathMessage = require('./messages/game/actions/fight/game-action-fight-death-message');
var GameActionFightDispellEffectMessage = require('./messages/game/actions/fight/game-action-fight-dispell-effect-message');
var GameActionFightDispellMessage = require('./messages/game/actions/fight/game-action-fight-dispell-message');
var GameActionFightDispellSpellMessage = require('./messages/game/actions/fight/game-action-fight-dispell-spell-message');
var GameActionFightDispellableEffectMessage = require('./messages/game/actions/fight/game-action-fight-dispellable-effect-message');
var GameActionFightDodgePointLossMessage = require('./messages/game/actions/fight/game-action-fight-dodge-point-loss-message');
var GameActionFightDropCharacterMessage = require('./messages/game/actions/fight/game-action-fight-drop-character-message');
var GameActionFightExchangePositionsMessage = require('./messages/game/actions/fight/game-action-fight-exchange-positions-message');
var GameActionFightInvisibilityMessage = require('./messages/game/actions/fight/game-action-fight-invisibility-message');
var GameActionFightInvisibleDetectedMessage = require('./messages/game/actions/fight/game-action-fight-invisible-detected-message');
var GameActionFightKillMessage = require('./messages/game/actions/fight/game-action-fight-kill-message');
var GameActionFightLifeAndShieldPointsLostMessage = require('./messages/game/actions/fight/game-action-fight-life-and-shield-points-lost-message');
var GameActionFightLifePointsGainMessage = require('./messages/game/actions/fight/game-action-fight-life-points-gain-message');
var GameActionFightLifePointsLostMessage = require('./messages/game/actions/fight/game-action-fight-life-points-lost-message');
var GameActionFightMarkCellsMessage = require('./messages/game/actions/fight/game-action-fight-mark-cells-message');
var GameActionFightModifyEffectsDurationMessage = require('./messages/game/actions/fight/game-action-fight-modify-effects-duration-message');
var GameActionFightNoSpellCastMessage = require('./messages/game/actions/fight/game-action-fight-no-spell-cast-message');
var GameActionFightPointsVariationMessage = require('./messages/game/actions/fight/game-action-fight-points-variation-message');
var GameActionFightReduceDamagesMessage = require('./messages/game/actions/fight/game-action-fight-reduce-damages-message');
var GameActionFightReflectDamagesMessage = require('./messages/game/actions/fight/game-action-fight-reflect-damages-message');
var GameActionFightReflectSpellMessage = require('./messages/game/actions/fight/game-action-fight-reflect-spell-message');
var GameActionFightSlideMessage = require('./messages/game/actions/fight/game-action-fight-slide-message');
var GameActionFightSpellCastMessage = require('./messages/game/actions/fight/game-action-fight-spell-cast-message');
var GameActionFightSpellCooldownVariationMessage = require('./messages/game/actions/fight/game-action-fight-spell-cooldown-variation-message');
var GameActionFightSpellImmunityMessage = require('./messages/game/actions/fight/game-action-fight-spell-immunity-message');
var GameActionFightStealKamaMessage = require('./messages/game/actions/fight/game-action-fight-steal-kama-message');
var GameActionFightSummonMessage = require('./messages/game/actions/fight/game-action-fight-summon-message');
var GameActionFightTackledMessage = require('./messages/game/actions/fight/game-action-fight-tackled-message');
var GameActionFightTeleportOnSameMapMessage = require('./messages/game/actions/fight/game-action-fight-teleport-on-same-map-message');
var GameActionFightThrowCharacterMessage = require('./messages/game/actions/fight/game-action-fight-throw-character-message');
var GameActionFightTriggerEffectMessage = require('./messages/game/actions/fight/game-action-fight-trigger-effect-message');
var GameActionFightTriggerGlyphTrapMessage = require('./messages/game/actions/fight/game-action-fight-trigger-glyph-trap-message');
var GameActionFightUnmarkCellsMessage = require('./messages/game/actions/fight/game-action-fight-unmark-cells-message');
var GameActionFightVanishMessage = require('./messages/game/actions/fight/game-action-fight-vanish-message');
var SequenceEndMessage = require('./messages/game/actions/sequence/sequence-end-message');
var SequenceStartMessage = require('./messages/game/actions/sequence/sequence-start-message');
var AllianceChangeGuildRightsMessage = require('./messages/game/alliance/alliance-change-guild-rights-message');
var AllianceCreationResultMessage = require('./messages/game/alliance/alliance-creation-result-message');
var AllianceCreationStartedMessage = require('./messages/game/alliance/alliance-creation-started-message');
var AllianceCreationValidMessage = require('./messages/game/alliance/alliance-creation-valid-message');
var AllianceFactsErrorMessage = require('./messages/game/alliance/alliance-facts-error-message');
var AllianceFactsMessage = require('./messages/game/alliance/alliance-facts-message');
var AllianceFactsRequestMessage = require('./messages/game/alliance/alliance-facts-request-message');
var AllianceGuildLeavingMessage = require('./messages/game/alliance/alliance-guild-leaving-message');
var AllianceInsiderInfoMessage = require('./messages/game/alliance/alliance-insider-info-message');
var AllianceInsiderInfoRequestMessage = require('./messages/game/alliance/alliance-insider-info-request-message');
var AllianceInvitationAnswerMessage = require('./messages/game/alliance/alliance-invitation-answer-message');
var AllianceInvitationMessage = require('./messages/game/alliance/alliance-invitation-message');
var AllianceInvitationStateRecrutedMessage = require('./messages/game/alliance/alliance-invitation-state-recruted-message');
var AllianceInvitationStateRecruterMessage = require('./messages/game/alliance/alliance-invitation-state-recruter-message');
var AllianceInvitedMessage = require('./messages/game/alliance/alliance-invited-message');
var AllianceJoinedMessage = require('./messages/game/alliance/alliance-joined-message');
var AllianceKickRequestMessage = require('./messages/game/alliance/alliance-kick-request-message');
var AllianceLeftMessage = require('./messages/game/alliance/alliance-left-message');
var AllianceListMessage = require('./messages/game/alliance/alliance-list-message');
var AllianceMembershipMessage = require('./messages/game/alliance/alliance-membership-message');
var AllianceModificationEmblemValidMessage = require('./messages/game/alliance/alliance-modification-emblem-valid-message');
var AllianceModificationNameAndTagValidMessage = require('./messages/game/alliance/alliance-modification-name-and-tag-valid-message');
var AllianceModificationStartedMessage = require('./messages/game/alliance/alliance-modification-started-message');
var AllianceModificationValidMessage = require('./messages/game/alliance/alliance-modification-valid-message');
var AlliancePartialListMessage = require('./messages/game/alliance/alliance-partial-list-message');
var AllianceVersatileInfoListMessage = require('./messages/game/alliance/alliance-versatile-info-list-message');
var KohUpdateMessage = require('./messages/game/alliance/koh-update-message');
var AlmanachCalendarDateMessage = require('./messages/game/almanach/almanach-calendar-date-message');
var AccountCapabilitiesMessage = require('./messages/game/approach/account-capabilities-message');
var AccountLoggingKickedMessage = require('./messages/game/approach/account-logging-kicked-message');
var AlreadyConnectedMessage = require('./messages/game/approach/already-connected-message');
var AuthenticationTicketAcceptedMessage = require('./messages/game/approach/authentication-ticket-accepted-message');
var AuthenticationTicketMessage = require('./messages/game/approach/authentication-ticket-message');
var AuthenticationTicketRefusedMessage = require('./messages/game/approach/authentication-ticket-refused-message');
var HelloGameMessage = require('./messages/game/approach/hello-game-message');
var ReloginTokenRequestMessage = require('./messages/game/approach/relogin-token-request-message');
var ReloginTokenStatusMessage = require('./messages/game/approach/relogin-token-status-message');
var ServerOptionalFeaturesMessage = require('./messages/game/approach/server-optional-features-message');
var ServerSessionConstantsMessage = require('./messages/game/approach/server-session-constants-message');
var ServerSettingsMessage = require('./messages/game/approach/server-settings-message');
var AtlasPointInformationsMessage = require('./messages/game/atlas/atlas-point-informations-message');
var CompassResetMessage = require('./messages/game/atlas/compass/compass-reset-message');
var CompassUpdateMessage = require('./messages/game/atlas/compass/compass-update-message');
var CompassUpdatePartyMemberMessage = require('./messages/game/atlas/compass/compass-update-party-member-message');
var CompassUpdatePvpSeekMessage = require('./messages/game/atlas/compass/compass-update-pvp-seek-message');
var BasicAckMessage = require('./messages/game/basic/basic-ack-message');
var BasicDateMessage = require('./messages/game/basic/basic-date-message');
var BasicLatencyStatsMessage = require('./messages/game/basic/basic-latency-stats-message');
var BasicLatencyStatsRequestMessage = require('./messages/game/basic/basic-latency-stats-request-message');
var BasicNoOperationMessage = require('./messages/game/basic/basic-no-operation-message');
var BasicTimeMessage = require('./messages/game/basic/basic-time-message');
var BasicWhoAmIRequestMessage = require('./messages/game/basic/basic-who-am-i-request-message');
var BasicWhoIsMessage = require('./messages/game/basic/basic-who-is-message');
var BasicWhoIsNoMatchMessage = require('./messages/game/basic/basic-who-is-no-match-message');
var BasicWhoIsRequestMessage = require('./messages/game/basic/basic-who-is-request-message');
var CurrentServerStatusUpdateMessage = require('./messages/game/basic/current-server-status-update-message');
var NumericWhoIsMessage = require('./messages/game/basic/numeric-who-is-message');
var NumericWhoIsRequestMessage = require('./messages/game/basic/numeric-who-is-request-message');
var SequenceNumberMessage = require('./messages/game/basic/sequence-number-message');
var SequenceNumberRequestMessage = require('./messages/game/basic/sequence-number-request-message');
var TextInformationMessage = require('./messages/game/basic/text-information-message');
var BasicCharactersListMessage = require('./messages/game/character/choice/basic-characters-list-message');
var CharacterFirstSelectionMessage = require('./messages/game/character/choice/character-first-selection-message');
var CharacterReplayWithRemodelRequestMessage = require('./messages/game/character/choice/character-replay-with-remodel-request-message');
var CharacterSelectedErrorMessage = require('./messages/game/character/choice/character-selected-error-message');
var CharacterSelectedForceMessage = require('./messages/game/character/choice/character-selected-force-message');
var CharacterSelectedForceReadyMessage = require('./messages/game/character/choice/character-selected-force-ready-message');
var CharacterSelectedSuccessMessage = require('./messages/game/character/choice/character-selected-success-message');
var CharacterSelectionMessage = require('./messages/game/character/choice/character-selection-message');
var CharacterSelectionWithRemodelMessage = require('./messages/game/character/choice/character-selection-with-remodel-message');
var CharactersListErrorMessage = require('./messages/game/character/choice/characters-list-error-message');
var CharactersListMessage = require('./messages/game/character/choice/characters-list-message');
var CharactersListRequestMessage = require('./messages/game/character/choice/characters-list-request-message');
var CharactersListWithModificationsMessage = require('./messages/game/character/choice/characters-list-with-modifications-message');
var CharactersListWithRemodelingMessage = require('./messages/game/character/choice/characters-list-with-remodeling-message');
var CharacterCreationRequestMessage = require('./messages/game/character/creation/character-creation-request-message');
var CharacterCreationResultMessage = require('./messages/game/character/creation/character-creation-result-message');
var CharacterNameSuggestionFailureMessage = require('./messages/game/character/creation/character-name-suggestion-failure-message');
var CharacterNameSuggestionRequestMessage = require('./messages/game/character/creation/character-name-suggestion-request-message');
var CharacterNameSuggestionSuccessMessage = require('./messages/game/character/creation/character-name-suggestion-success-message');
var CharacterDeletionErrorMessage = require('./messages/game/character/deletion/character-deletion-error-message');
var CharacterDeletionRequestMessage = require('./messages/game/character/deletion/character-deletion-request-message');
var CharacterReplayRequestMessage = require('./messages/game/character/replay/character-replay-request-message');
var CharacterExperienceGainMessage = require('./messages/game/character/stats/character-experience-gain-message');
var CharacterLevelUpInformationMessage = require('./messages/game/character/stats/character-level-up-information-message');
var CharacterLevelUpMessage = require('./messages/game/character/stats/character-level-up-message');
var CharacterStatsListMessage = require('./messages/game/character/stats/character-stats-list-message');
var FighterStatsListMessage = require('./messages/game/character/stats/fighter-stats-list-message');
var LifePointsRegenBeginMessage = require('./messages/game/character/stats/life-points-regen-begin-message');
var LifePointsRegenEndMessage = require('./messages/game/character/stats/life-points-regen-end-message');
var UpdateLifePointsMessage = require('./messages/game/character/stats/update-life-points-message');
var PlayerStatusUpdateErrorMessage = require('./messages/game/character/status/player-status-update-error-message');
var PlayerStatusUpdateMessage = require('./messages/game/character/status/player-status-update-message');
var PlayerStatusUpdateRequestMessage = require('./messages/game/character/status/player-status-update-request-message');
var ChatAbstractClientMessage = require('./messages/game/chat/chat-abstract-client-message');
var ChatAbstractServerMessage = require('./messages/game/chat/chat-abstract-server-message');
var ChatAdminServerMessage = require('./messages/game/chat/chat-admin-server-message');
var ChatClientMultiMessage = require('./messages/game/chat/chat-client-multi-message');
var ChatClientMultiWithObjectMessage = require('./messages/game/chat/chat-client-multi-with-object-message');
var ChatClientPrivateMessage = require('./messages/game/chat/chat-client-private-message');
var ChatClientPrivateWithObjectMessage = require('./messages/game/chat/chat-client-private-with-object-message');
var ChatErrorMessage = require('./messages/game/chat/chat-error-message');
var ChatServerCopyMessage = require('./messages/game/chat/chat-server-copy-message');
var ChatServerCopyWithObjectMessage = require('./messages/game/chat/chat-server-copy-with-object-message');
var ChatServerMessage = require('./messages/game/chat/chat-server-message');
var ChatServerWithObjectMessage = require('./messages/game/chat/chat-server-with-object-message');
var ChannelEnablingChangeMessage = require('./messages/game/chat/channel/channel-enabling-change-message');
var ChannelEnablingMessage = require('./messages/game/chat/channel/channel-enabling-message');
var EnabledChannelsMessage = require('./messages/game/chat/channel/enabled-channels-message');
var ChatMessageReportMessage = require('./messages/game/chat/report/chat-message-report-message');
var ChatSmileyExtraPackListMessage = require('./messages/game/chat/smiley/chat-smiley-extra-pack-list-message');
var ChatSmileyMessage = require('./messages/game/chat/smiley/chat-smiley-message');
var ChatSmileyRequestMessage = require('./messages/game/chat/smiley/chat-smiley-request-message');
var LocalizedChatSmileyMessage = require('./messages/game/chat/smiley/localized-chat-smiley-message');
var MoodSmileyRequestMessage = require('./messages/game/chat/smiley/mood-smiley-request-message');
var MoodSmileyResultMessage = require('./messages/game/chat/smiley/mood-smiley-result-message');
var MoodSmileyUpdateMessage = require('./messages/game/chat/smiley/mood-smiley-update-message');
var GameCautiousMapMovementMessage = require('./messages/game/context/game-cautious-map-movement-message');
var GameCautiousMapMovementRequestMessage = require('./messages/game/context/game-cautious-map-movement-request-message');
var GameContextCreateErrorMessage = require('./messages/game/context/game-context-create-error-message');
var GameContextCreateMessage = require('./messages/game/context/game-context-create-message');
var GameContextCreateRequestMessage = require('./messages/game/context/game-context-create-request-message');
var GameContextDestroyMessage = require('./messages/game/context/game-context-destroy-message');
var GameContextKickMessage = require('./messages/game/context/game-context-kick-message');
var GameContextMoveElementMessage = require('./messages/game/context/game-context-move-element-message');
var GameContextMoveMultipleElementsMessage = require('./messages/game/context/game-context-move-multiple-elements-message');
var GameContextQuitMessage = require('./messages/game/context/game-context-quit-message');
var GameContextReadyMessage = require('./messages/game/context/game-context-ready-message');
var GameContextRefreshEntityLookMessage = require('./messages/game/context/game-context-refresh-entity-look-message');
var GameContextRemoveElementMessage = require('./messages/game/context/game-context-remove-element-message');
var GameContextRemoveElementWithEventMessage = require('./messages/game/context/game-context-remove-element-with-event-message');
var GameContextRemoveMultipleElementsMessage = require('./messages/game/context/game-context-remove-multiple-elements-message');
var GameContextRemoveMultipleElementsWithEventsMessage = require('./messages/game/context/game-context-remove-multiple-elements-with-events-message');
var GameEntitiesDispositionMessage = require('./messages/game/context/game-entities-disposition-message');
var GameEntityDispositionErrorMessage = require('./messages/game/context/game-entity-disposition-error-message');
var GameEntityDispositionMessage = require('./messages/game/context/game-entity-disposition-message');
var GameMapChangeOrientationMessage = require('./messages/game/context/game-map-change-orientation-message');
var GameMapChangeOrientationRequestMessage = require('./messages/game/context/game-map-change-orientation-request-message');
var GameMapChangeOrientationsMessage = require('./messages/game/context/game-map-change-orientations-message');
var GameMapMovementCancelMessage = require('./messages/game/context/game-map-movement-cancel-message');
var GameMapMovementConfirmMessage = require('./messages/game/context/game-map-movement-confirm-message');
var GameMapMovementMessage = require('./messages/game/context/game-map-movement-message');
var GameMapMovementRequestMessage = require('./messages/game/context/game-map-movement-request-message');
var GameMapNoMovementMessage = require('./messages/game/context/game-map-no-movement-message');
var ShowCellMessage = require('./messages/game/context/show-cell-message');
var ShowCellRequestMessage = require('./messages/game/context/show-cell-request-message');
var ShowCellSpectatorMessage = require('./messages/game/context/show-cell-spectator-message');
var DisplayNumericalValuePaddockMessage = require('./messages/game/context/display/display-numerical-value-paddock-message');
var DungeonKeyRingMessage = require('./messages/game/context/dungeon/dungeon-key-ring-message');
var DungeonKeyRingUpdateMessage = require('./messages/game/context/dungeon/dungeon-key-ring-update-message');
var GameFightEndMessage = require('./messages/game/context/fight/game-fight-end-message');
var GameFightHumanReadyStateMessage = require('./messages/game/context/fight/game-fight-human-ready-state-message');
var GameFightJoinMessage = require('./messages/game/context/fight/game-fight-join-message');
var GameFightJoinRequestMessage = require('./messages/game/context/fight/game-fight-join-request-message');
var GameFightLeaveMessage = require('./messages/game/context/fight/game-fight-leave-message');
var GameFightNewRoundMessage = require('./messages/game/context/fight/game-fight-new-round-message');
var GameFightNewWaveMessage = require('./messages/game/context/fight/game-fight-new-wave-message');
var GameFightOptionStateUpdateMessage = require('./messages/game/context/fight/game-fight-option-state-update-message');
var GameFightOptionToggleMessage = require('./messages/game/context/fight/game-fight-option-toggle-message');
var GameFightPlacementPositionRequestMessage = require('./messages/game/context/fight/game-fight-placement-position-request-message');
var GameFightPlacementPossiblePositionsMessage = require('./messages/game/context/fight/game-fight-placement-possible-positions-message');
var GameFightPlacementSwapPositionsAcceptMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-accept-message');
var GameFightPlacementSwapPositionsCancelMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-cancel-message');
var GameFightPlacementSwapPositionsCancelledMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-cancelled-message');
var GameFightPlacementSwapPositionsErrorMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-error-message');
var GameFightPlacementSwapPositionsMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-message');
var GameFightPlacementSwapPositionsOfferMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-offer-message');
var GameFightPlacementSwapPositionsRequestMessage = require('./messages/game/context/fight/game-fight-placement-swap-positions-request-message');
var GameFightReadyMessage = require('./messages/game/context/fight/game-fight-ready-message');
var GameFightRemoveTeamMemberMessage = require('./messages/game/context/fight/game-fight-remove-team-member-message');
var GameFightResumeMessage = require('./messages/game/context/fight/game-fight-resume-message');
var GameFightResumeWithSlavesMessage = require('./messages/game/context/fight/game-fight-resume-with-slaves-message');
var GameFightSpectateMessage = require('./messages/game/context/fight/game-fight-spectate-message');
var GameFightSpectatePlayerRequestMessage = require('./messages/game/context/fight/game-fight-spectate-player-request-message');
var GameFightSpectatorJoinMessage = require('./messages/game/context/fight/game-fight-spectator-join-message');
var GameFightStartMessage = require('./messages/game/context/fight/game-fight-start-message');
var GameFightStartingMessage = require('./messages/game/context/fight/game-fight-starting-message');
var GameFightSynchronizeMessage = require('./messages/game/context/fight/game-fight-synchronize-message');
var GameFightTurnEndMessage = require('./messages/game/context/fight/game-fight-turn-end-message');
var GameFightTurnFinishMessage = require('./messages/game/context/fight/game-fight-turn-finish-message');
var GameFightTurnListMessage = require('./messages/game/context/fight/game-fight-turn-list-message');
var GameFightTurnReadyMessage = require('./messages/game/context/fight/game-fight-turn-ready-message');
var GameFightTurnReadyRequestMessage = require('./messages/game/context/fight/game-fight-turn-ready-request-message');
var GameFightTurnResumeMessage = require('./messages/game/context/fight/game-fight-turn-resume-message');
var GameFightTurnStartMessage = require('./messages/game/context/fight/game-fight-turn-start-message');
var GameFightTurnStartPlayingMessage = require('./messages/game/context/fight/game-fight-turn-start-playing-message');
var GameFightUpdateTeamMessage = require('./messages/game/context/fight/game-fight-update-team-message');
var SlaveSwitchContextMessage = require('./messages/game/context/fight/slave-switch-context-message');
var ChallengeInfoMessage = require('./messages/game/context/fight/challenge/challenge-info-message');
var ChallengeResultMessage = require('./messages/game/context/fight/challenge/challenge-result-message');
var ChallengeTargetUpdateMessage = require('./messages/game/context/fight/challenge/challenge-target-update-message');
var ChallengeTargetsListMessage = require('./messages/game/context/fight/challenge/challenge-targets-list-message');
var ChallengeTargetsListRequestMessage = require('./messages/game/context/fight/challenge/challenge-targets-list-request-message');
var GameFightRefreshFighterMessage = require('./messages/game/context/fight/character/game-fight-refresh-fighter-message');
var GameFightShowFighterMessage = require('./messages/game/context/fight/character/game-fight-show-fighter-message');
var GameFightShowFighterRandomStaticPoseMessage = require('./messages/game/context/fight/character/game-fight-show-fighter-random-static-pose-message');
var GameDataPaddockObjectAddMessage = require('./messages/game/context/mount/game-data-paddock-object-add-message');
var GameDataPaddockObjectListAddMessage = require('./messages/game/context/mount/game-data-paddock-object-list-add-message');
var GameDataPaddockObjectRemoveMessage = require('./messages/game/context/mount/game-data-paddock-object-remove-message');
var MountDataErrorMessage = require('./messages/game/context/mount/mount-data-error-message');
var MountDataMessage = require('./messages/game/context/mount/mount-data-message');
var MountEmoteIconUsedOkMessage = require('./messages/game/context/mount/mount-emote-icon-used-ok-message');
var MountEquipedErrorMessage = require('./messages/game/context/mount/mount-equiped-error-message');
var MountFeedRequestMessage = require('./messages/game/context/mount/mount-feed-request-message');
var MountInformationInPaddockRequestMessage = require('./messages/game/context/mount/mount-information-in-paddock-request-message');
var MountInformationRequestMessage = require('./messages/game/context/mount/mount-information-request-message');
var MountReleaseRequestMessage = require('./messages/game/context/mount/mount-release-request-message');
var MountReleasedMessage = require('./messages/game/context/mount/mount-released-message');
var MountRenameRequestMessage = require('./messages/game/context/mount/mount-rename-request-message');
var MountRenamedMessage = require('./messages/game/context/mount/mount-renamed-message');
var MountRidingMessage = require('./messages/game/context/mount/mount-riding-message');
var MountSetMessage = require('./messages/game/context/mount/mount-set-message');
var MountSetXpRatioRequestMessage = require('./messages/game/context/mount/mount-set-xp-ratio-request-message');
var MountSterilizeRequestMessage = require('./messages/game/context/mount/mount-sterilize-request-message');
var MountSterilizedMessage = require('./messages/game/context/mount/mount-sterilized-message');
var MountToggleRidingRequestMessage = require('./messages/game/context/mount/mount-toggle-riding-request-message');
var MountUnSetMessage = require('./messages/game/context/mount/mount-un-set-message');
var MountXpRatioMessage = require('./messages/game/context/mount/mount-xp-ratio-message');
var PaddockBuyRequestMessage = require('./messages/game/context/mount/paddock-buy-request-message');
var PaddockBuyResultMessage = require('./messages/game/context/mount/paddock-buy-result-message');
var PaddockMoveItemRequestMessage = require('./messages/game/context/mount/paddock-move-item-request-message');
var PaddockRemoveItemRequestMessage = require('./messages/game/context/mount/paddock-remove-item-request-message');
var PaddockSellRequestMessage = require('./messages/game/context/mount/paddock-sell-request-message');
var NotificationByServerMessage = require('./messages/game/context/notification/notification-by-server-message');
var NotificationListMessage = require('./messages/game/context/notification/notification-list-message');
var NotificationResetMessage = require('./messages/game/context/notification/notification-reset-message');
var NotificationUpdateFlagMessage = require('./messages/game/context/notification/notification-update-flag-message');
var ChangeMapMessage = require('./messages/game/context/roleplay/change-map-message');
var CurrentMapMessage = require('./messages/game/context/roleplay/current-map-message');
var ErrorMapNotFoundMessage = require('./messages/game/context/roleplay/error-map-not-found-message');
var GameRolePlayShowActorMessage = require('./messages/game/context/roleplay/game-role-play-show-actor-message');
var GameRolePlayShowActorWithEventMessage = require('./messages/game/context/roleplay/game-role-play-show-actor-with-event-message');
var MapComplementaryInformationsDataInHouseMessage = require('./messages/game/context/roleplay/map-complementary-informations-data-in-house-message');
var MapComplementaryInformationsDataMessage = require('./messages/game/context/roleplay/map-complementary-informations-data-message');
var MapComplementaryInformationsWithCoordsMessage = require('./messages/game/context/roleplay/map-complementary-informations-with-coords-message');
var MapFightCountMessage = require('./messages/game/context/roleplay/map-fight-count-message');
var MapInformationsRequestMessage = require('./messages/game/context/roleplay/map-informations-request-message');
var MapObstacleUpdateMessage = require('./messages/game/context/roleplay/map-obstacle-update-message');
var MapRunningFightDetailsExtendedMessage = require('./messages/game/context/roleplay/map-running-fight-details-extended-message');
var MapRunningFightDetailsMessage = require('./messages/game/context/roleplay/map-running-fight-details-message');
var MapRunningFightDetailsRequestMessage = require('./messages/game/context/roleplay/map-running-fight-details-request-message');
var MapRunningFightListMessage = require('./messages/game/context/roleplay/map-running-fight-list-message');
var MapRunningFightListRequestMessage = require('./messages/game/context/roleplay/map-running-fight-list-request-message');
var StopToListenRunningFightRequestMessage = require('./messages/game/context/roleplay/stop-to-listen-running-fight-request-message');
var TeleportOnSameMapMessage = require('./messages/game/context/roleplay/teleport-on-same-map-message');
var GameRolePlayFreeSoulRequestMessage = require('./messages/game/context/roleplay/death/game-role-play-free-soul-request-message');
var GameRolePlayGameOverMessage = require('./messages/game/context/roleplay/death/game-role-play-game-over-message');
var GameRolePlayPlayerLifeStatusMessage = require('./messages/game/context/roleplay/death/game-role-play-player-life-status-message');
var WarnOnPermaDeathMessage = require('./messages/game/context/roleplay/death/warn-on-perma-death-message');
var GameRolePlayDelayedActionFinishedMessage = require('./messages/game/context/roleplay/delay/game-role-play-delayed-action-finished-message');
var GameRolePlayDelayedActionMessage = require('./messages/game/context/roleplay/delay/game-role-play-delayed-action-message');
var GameRolePlayDelayedObjectUseMessage = require('./messages/game/context/roleplay/delay/game-role-play-delayed-object-use-message');
var ComicReadingBeginMessage = require('./messages/game/context/roleplay/document/comic-reading-begin-message');
var DocumentReadingBeginMessage = require('./messages/game/context/roleplay/document/document-reading-begin-message');
var EmoteAddMessage = require('./messages/game/context/roleplay/emote/emote-add-message');
var EmoteListMessage = require('./messages/game/context/roleplay/emote/emote-list-message');
var EmotePlayAbstractMessage = require('./messages/game/context/roleplay/emote/emote-play-abstract-message');
var EmotePlayErrorMessage = require('./messages/game/context/roleplay/emote/emote-play-error-message');
var EmotePlayMassiveMessage = require('./messages/game/context/roleplay/emote/emote-play-massive-message');
var EmotePlayMessage = require('./messages/game/context/roleplay/emote/emote-play-message');
var EmotePlayRequestMessage = require('./messages/game/context/roleplay/emote/emote-play-request-message');
var EmoteRemoveMessage = require('./messages/game/context/roleplay/emote/emote-remove-message');
var GameRolePlayAggressionMessage = require('./messages/game/context/roleplay/fight/game-role-play-aggression-message');
var GameRolePlayAttackMonsterRequestMessage = require('./messages/game/context/roleplay/fight/game-role-play-attack-monster-request-message');
var GameRolePlayFightRequestCanceledMessage = require('./messages/game/context/roleplay/fight/game-role-play-fight-request-canceled-message');
var GameRolePlayPlayerFightFriendlyAnswerMessage = require('./messages/game/context/roleplay/fight/game-role-play-player-fight-friendly-answer-message');
var GameRolePlayPlayerFightFriendlyAnsweredMessage = require('./messages/game/context/roleplay/fight/game-role-play-player-fight-friendly-answered-message');
var GameRolePlayPlayerFightFriendlyRequestedMessage = require('./messages/game/context/roleplay/fight/game-role-play-player-fight-friendly-requested-message');
var GameRolePlayPlayerFightRequestMessage = require('./messages/game/context/roleplay/fight/game-role-play-player-fight-request-message');
var GameRolePlayRemoveChallengeMessage = require('./messages/game/context/roleplay/fight/game-role-play-remove-challenge-message');
var GameRolePlayShowChallengeMessage = require('./messages/game/context/roleplay/fight/game-role-play-show-challenge-message');
var GameRolePlayArenaFightAnswerMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-fight-answer-message');
var GameRolePlayArenaFightPropositionMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-fight-proposition-message');
var GameRolePlayArenaFighterStatusMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-fighter-status-message');
var GameRolePlayArenaRegisterMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-register-message');
var GameRolePlayArenaRegistrationStatusMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-registration-status-message');
var GameRolePlayArenaSwitchToFightServerMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-switch-to-fight-server-message');
var GameRolePlayArenaSwitchToGameServerMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-switch-to-game-server-message');
var GameRolePlayArenaUnregisterMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-unregister-message');
var GameRolePlayArenaUpdatePlayerInfosMessage = require('./messages/game/context/roleplay/fight/arena/game-role-play-arena-update-player-infos-message');
var AccountHouseMessage = require('./messages/game/context/roleplay/houses/account-house-message');
var HouseBuyRequestMessage = require('./messages/game/context/roleplay/houses/house-buy-request-message');
var HouseBuyResultMessage = require('./messages/game/context/roleplay/houses/house-buy-result-message');
var HouseKickIndoorMerchantRequestMessage = require('./messages/game/context/roleplay/houses/house-kick-indoor-merchant-request-message');
var HouseKickRequestMessage = require('./messages/game/context/roleplay/houses/house-kick-request-message');
var HouseLockFromInsideRequestMessage = require('./messages/game/context/roleplay/houses/house-lock-from-inside-request-message');
var HousePropertiesMessage = require('./messages/game/context/roleplay/houses/house-properties-message');
var HouseSellFromInsideRequestMessage = require('./messages/game/context/roleplay/houses/house-sell-from-inside-request-message');
var HouseSellRequestMessage = require('./messages/game/context/roleplay/houses/house-sell-request-message');
var HouseSoldMessage = require('./messages/game/context/roleplay/houses/house-sold-message');
var HouseToSellFilterMessage = require('./messages/game/context/roleplay/houses/house-to-sell-filter-message');
var HouseToSellListMessage = require('./messages/game/context/roleplay/houses/house-to-sell-list-message');
var HouseToSellListRequestMessage = require('./messages/game/context/roleplay/houses/house-to-sell-list-request-message');
var HouseGuildNoneMessage = require('./messages/game/context/roleplay/houses/guild/house-guild-none-message');
var HouseGuildRightsMessage = require('./messages/game/context/roleplay/houses/guild/house-guild-rights-message');
var HouseGuildRightsViewMessage = require('./messages/game/context/roleplay/houses/guild/house-guild-rights-view-message');
var HouseGuildShareRequestMessage = require('./messages/game/context/roleplay/houses/guild/house-guild-share-request-message');
var JobAllowMultiCraftRequestMessage = require('./messages/game/context/roleplay/job/job-allow-multi-craft-request-message');
var JobBookSubscriptionMessage = require('./messages/game/context/roleplay/job/job-book-subscription-message');
var JobCrafterDirectoryAddMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-add-message');
var JobCrafterDirectoryDefineSettingsMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-define-settings-message');
var JobCrafterDirectoryEntryMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-entry-message');
var JobCrafterDirectoryEntryRequestMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-entry-request-message');
var JobCrafterDirectoryListMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-list-message');
var JobCrafterDirectoryListRequestMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-list-request-message');
var JobCrafterDirectoryRemoveMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-remove-message');
var JobCrafterDirectorySettingsMessage = require('./messages/game/context/roleplay/job/job-crafter-directory-settings-message');
var JobDescriptionMessage = require('./messages/game/context/roleplay/job/job-description-message');
var JobExperienceMultiUpdateMessage = require('./messages/game/context/roleplay/job/job-experience-multi-update-message');
var JobExperienceOtherPlayerUpdateMessage = require('./messages/game/context/roleplay/job/job-experience-other-player-update-message');
var JobExperienceUpdateMessage = require('./messages/game/context/roleplay/job/job-experience-update-message');
var JobLevelUpMessage = require('./messages/game/context/roleplay/job/job-level-up-message');
var JobMultiCraftAvailableSkillsMessage = require('./messages/game/context/roleplay/job/job-multi-craft-available-skills-message');
var LockableChangeCodeMessage = require('./messages/game/context/roleplay/lockable/lockable-change-code-message');
var LockableCodeResultMessage = require('./messages/game/context/roleplay/lockable/lockable-code-result-message');
var LockableShowCodeDialogMessage = require('./messages/game/context/roleplay/lockable/lockable-show-code-dialog-message');
var LockableStateUpdateAbstractMessage = require('./messages/game/context/roleplay/lockable/lockable-state-update-abstract-message');
var LockableStateUpdateHouseDoorMessage = require('./messages/game/context/roleplay/lockable/lockable-state-update-house-door-message');
var LockableStateUpdateStorageMessage = require('./messages/game/context/roleplay/lockable/lockable-state-update-storage-message');
var LockableUseCodeMessage = require('./messages/game/context/roleplay/lockable/lockable-use-code-message');
var AlliancePrismDialogQuestionMessage = require('./messages/game/context/roleplay/npc/alliance-prism-dialog-question-message');
var AllianceTaxCollectorDialogQuestionExtendedMessage = require('./messages/game/context/roleplay/npc/alliance-tax-collector-dialog-question-extended-message');
var EntityTalkMessage = require('./messages/game/context/roleplay/npc/entity-talk-message');
var MapNpcsQuestStatusUpdateMessage = require('./messages/game/context/roleplay/npc/map-npcs-quest-status-update-message');
var NpcDialogCreationMessage = require('./messages/game/context/roleplay/npc/npc-dialog-creation-message');
var NpcDialogQuestionMessage = require('./messages/game/context/roleplay/npc/npc-dialog-question-message');
var NpcDialogReplyMessage = require('./messages/game/context/roleplay/npc/npc-dialog-reply-message');
var NpcGenericActionFailureMessage = require('./messages/game/context/roleplay/npc/npc-generic-action-failure-message');
var NpcGenericActionRequestMessage = require('./messages/game/context/roleplay/npc/npc-generic-action-request-message');
var TaxCollectorDialogQuestionBasicMessage = require('./messages/game/context/roleplay/npc/tax-collector-dialog-question-basic-message');
var TaxCollectorDialogQuestionExtendedMessage = require('./messages/game/context/roleplay/npc/tax-collector-dialog-question-extended-message');
var ObjectGroundAddedMessage = require('./messages/game/context/roleplay/objects/object-ground-added-message');
var ObjectGroundListAddedMessage = require('./messages/game/context/roleplay/objects/object-ground-list-added-message');
var ObjectGroundRemovedMessage = require('./messages/game/context/roleplay/objects/object-ground-removed-message');
var ObjectGroundRemovedMultipleMessage = require('./messages/game/context/roleplay/objects/object-ground-removed-multiple-message');
var GameDataPlayFarmObjectAnimationMessage = require('./messages/game/context/roleplay/paddock/game-data-play-farm-object-animation-message');
var PaddockPropertiesMessage = require('./messages/game/context/roleplay/paddock/paddock-properties-message');
var PaddockSellBuyDialogMessage = require('./messages/game/context/roleplay/paddock/paddock-sell-buy-dialog-message');
var PaddockToSellFilterMessage = require('./messages/game/context/roleplay/paddock/paddock-to-sell-filter-message');
var PaddockToSellListMessage = require('./messages/game/context/roleplay/paddock/paddock-to-sell-list-message');
var PaddockToSellListRequestMessage = require('./messages/game/context/roleplay/paddock/paddock-to-sell-list-request-message');
var AbstractPartyEventMessage = require('./messages/game/context/roleplay/party/abstract-party-event-message');
var AbstractPartyMessage = require('./messages/game/context/roleplay/party/abstract-party-message');
var DungeonPartyFinderAvailableDungeonsMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-available-dungeons-message');
var DungeonPartyFinderAvailableDungeonsRequestMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-available-dungeons-request-message');
var DungeonPartyFinderListenErrorMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-listen-error-message');
var DungeonPartyFinderListenRequestMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-listen-request-message');
var DungeonPartyFinderRegisterErrorMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-register-error-message');
var DungeonPartyFinderRegisterRequestMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-register-request-message');
var DungeonPartyFinderRegisterSuccessMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-register-success-message');
var DungeonPartyFinderRoomContentMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-room-content-message');
var DungeonPartyFinderRoomContentUpdateMessage = require('./messages/game/context/roleplay/party/dungeon-party-finder-room-content-update-message');
var PartyAbdicateThroneMessage = require('./messages/game/context/roleplay/party/party-abdicate-throne-message');
var PartyAcceptInvitationMessage = require('./messages/game/context/roleplay/party/party-accept-invitation-message');
var PartyCancelInvitationMessage = require('./messages/game/context/roleplay/party/party-cancel-invitation-message');
var PartyCancelInvitationNotificationMessage = require('./messages/game/context/roleplay/party/party-cancel-invitation-notification-message');
var PartyCannotJoinErrorMessage = require('./messages/game/context/roleplay/party/party-cannot-join-error-message');
var PartyDeletedMessage = require('./messages/game/context/roleplay/party/party-deleted-message');
var PartyFollowMemberRequestMessage = require('./messages/game/context/roleplay/party/party-follow-member-request-message');
var PartyFollowStatusUpdateMessage = require('./messages/game/context/roleplay/party/party-follow-status-update-message');
var PartyFollowThisMemberRequestMessage = require('./messages/game/context/roleplay/party/party-follow-this-member-request-message');
var PartyInvitationArenaRequestMessage = require('./messages/game/context/roleplay/party/party-invitation-arena-request-message');
var PartyInvitationCancelledForGuestMessage = require('./messages/game/context/roleplay/party/party-invitation-cancelled-for-guest-message');
var PartyInvitationDetailsMessage = require('./messages/game/context/roleplay/party/party-invitation-details-message');
var PartyInvitationDetailsRequestMessage = require('./messages/game/context/roleplay/party/party-invitation-details-request-message');
var PartyInvitationDungeonDetailsMessage = require('./messages/game/context/roleplay/party/party-invitation-dungeon-details-message');
var PartyInvitationDungeonMessage = require('./messages/game/context/roleplay/party/party-invitation-dungeon-message');
var PartyInvitationDungeonRequestMessage = require('./messages/game/context/roleplay/party/party-invitation-dungeon-request-message');
var PartyInvitationMessage = require('./messages/game/context/roleplay/party/party-invitation-message');
var PartyInvitationRequestMessage = require('./messages/game/context/roleplay/party/party-invitation-request-message');
var PartyJoinMessage = require('./messages/game/context/roleplay/party/party-join-message');
var PartyKickRequestMessage = require('./messages/game/context/roleplay/party/party-kick-request-message');
var PartyKickedByMessage = require('./messages/game/context/roleplay/party/party-kicked-by-message');
var PartyLeaderUpdateMessage = require('./messages/game/context/roleplay/party/party-leader-update-message');
var PartyLeaveMessage = require('./messages/game/context/roleplay/party/party-leave-message');
var PartyLeaveRequestMessage = require('./messages/game/context/roleplay/party/party-leave-request-message');
var PartyLocateMembersMessage = require('./messages/game/context/roleplay/party/party-locate-members-message');
var PartyLoyaltyStatusMessage = require('./messages/game/context/roleplay/party/party-loyalty-status-message');
var PartyMemberEjectedMessage = require('./messages/game/context/roleplay/party/party-member-ejected-message');
var PartyMemberInFightMessage = require('./messages/game/context/roleplay/party/party-member-in-fight-message');
var PartyMemberRemoveMessage = require('./messages/game/context/roleplay/party/party-member-remove-message');
var PartyModifiableStatusMessage = require('./messages/game/context/roleplay/party/party-modifiable-status-message');
var PartyNameSetErrorMessage = require('./messages/game/context/roleplay/party/party-name-set-error-message');
var PartyNameSetRequestMessage = require('./messages/game/context/roleplay/party/party-name-set-request-message');
var PartyNameUpdateMessage = require('./messages/game/context/roleplay/party/party-name-update-message');
var PartyNewGuestMessage = require('./messages/game/context/roleplay/party/party-new-guest-message');
var PartyNewMemberMessage = require('./messages/game/context/roleplay/party/party-new-member-message');
var PartyPledgeLoyaltyRequestMessage = require('./messages/game/context/roleplay/party/party-pledge-loyalty-request-message');
var PartyRefuseInvitationMessage = require('./messages/game/context/roleplay/party/party-refuse-invitation-message');
var PartyRefuseInvitationNotificationMessage = require('./messages/game/context/roleplay/party/party-refuse-invitation-notification-message');
var PartyRestrictedMessage = require('./messages/game/context/roleplay/party/party-restricted-message');
var PartyStopFollowRequestMessage = require('./messages/game/context/roleplay/party/party-stop-follow-request-message');
var PartyUpdateLightMessage = require('./messages/game/context/roleplay/party/party-update-light-message');
var PartyUpdateMessage = require('./messages/game/context/roleplay/party/party-update-message');
var PartyCompanionUpdateLightMessage = require('./messages/game/context/roleplay/party/companion/party-companion-update-light-message');
var PurchasableDialogMessage = require('./messages/game/context/roleplay/purchasable/purchasable-dialog-message');
var GuidedModeQuitRequestMessage = require('./messages/game/context/roleplay/quest/guided-mode-quit-request-message');
var GuidedModeReturnRequestMessage = require('./messages/game/context/roleplay/quest/guided-mode-return-request-message');
var QuestListMessage = require('./messages/game/context/roleplay/quest/quest-list-message');
var QuestListRequestMessage = require('./messages/game/context/roleplay/quest/quest-list-request-message');
var QuestObjectiveValidatedMessage = require('./messages/game/context/roleplay/quest/quest-objective-validated-message');
var QuestObjectiveValidationMessage = require('./messages/game/context/roleplay/quest/quest-objective-validation-message');
var QuestStartRequestMessage = require('./messages/game/context/roleplay/quest/quest-start-request-message');
var QuestStartedMessage = require('./messages/game/context/roleplay/quest/quest-started-message');
var QuestStepInfoMessage = require('./messages/game/context/roleplay/quest/quest-step-info-message');
var QuestStepInfoRequestMessage = require('./messages/game/context/roleplay/quest/quest-step-info-request-message');
var QuestStepStartedMessage = require('./messages/game/context/roleplay/quest/quest-step-started-message');
var QuestStepValidatedMessage = require('./messages/game/context/roleplay/quest/quest-step-validated-message');
var QuestValidatedMessage = require('./messages/game/context/roleplay/quest/quest-validated-message');
var SpellForgetUIMessage = require('./messages/game/context/roleplay/spell/spell-forget-u-i-message');
var SpellForgottenMessage = require('./messages/game/context/roleplay/spell/spell-forgotten-message');
var SpellItemBoostMessage = require('./messages/game/context/roleplay/spell/spell-item-boost-message');
var SpellUpgradeFailureMessage = require('./messages/game/context/roleplay/spell/spell-upgrade-failure-message');
var SpellUpgradeRequestMessage = require('./messages/game/context/roleplay/spell/spell-upgrade-request-message');
var SpellUpgradeSuccessMessage = require('./messages/game/context/roleplay/spell/spell-upgrade-success-message');
var ValidateSpellForgetMessage = require('./messages/game/context/roleplay/spell/validate-spell-forget-message');
var StatsUpgradeRequestMessage = require('./messages/game/context/roleplay/stats/stats-upgrade-request-message');
var StatsUpgradeResultMessage = require('./messages/game/context/roleplay/stats/stats-upgrade-result-message');
var PortalUseRequestMessage = require('./messages/game/context/roleplay/treasureHunt/portal-use-request-message');
var TreasureHuntAvailableRetryCountUpdateMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-available-retry-count-update-message');
var TreasureHuntDigRequestAnswerFailedMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-dig-request-answer-failed-message');
var TreasureHuntDigRequestAnswerMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-dig-request-answer-message');
var TreasureHuntDigRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-dig-request-message');
var TreasureHuntFinishedMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-finished-message');
var TreasureHuntFlagRemoveRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-flag-remove-request-message');
var TreasureHuntFlagRequestAnswerMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-flag-request-answer-message');
var TreasureHuntFlagRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-flag-request-message');
var TreasureHuntGiveUpRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-give-up-request-message');
var TreasureHuntLegendaryRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-legendary-request-message');
var TreasureHuntMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-message');
var TreasureHuntRequestAnswerMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-request-answer-message');
var TreasureHuntRequestMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-request-message');
var TreasureHuntShowLegendaryUIMessage = require('./messages/game/context/roleplay/treasureHunt/treasure-hunt-show-legendary-u-i-message');
var GameRolePlaySpellAnimMessage = require('./messages/game/context/roleplay/visual/game-role-play-spell-anim-message');
var LeaveDialogMessage = require('./messages/game/dialog/leave-dialog-message');
var LeaveDialogRequestMessage = require('./messages/game/dialog/leave-dialog-request-message');
var PauseDialogMessage = require('./messages/game/dialog/pause-dialog-message');
var FriendAddFailureMessage = require('./messages/game/friend/friend-add-failure-message');
var FriendAddRequestMessage = require('./messages/game/friend/friend-add-request-message');
var FriendAddedMessage = require('./messages/game/friend/friend-added-message');
var FriendDeleteRequestMessage = require('./messages/game/friend/friend-delete-request-message');
var FriendDeleteResultMessage = require('./messages/game/friend/friend-delete-result-message');
var FriendJoinRequestMessage = require('./messages/game/friend/friend-join-request-message');
var FriendSetWarnOnConnectionMessage = require('./messages/game/friend/friend-set-warn-on-connection-message');
var FriendSetWarnOnLevelGainMessage = require('./messages/game/friend/friend-set-warn-on-level-gain-message');
var FriendSpouseFollowWithCompassRequestMessage = require('./messages/game/friend/friend-spouse-follow-with-compass-request-message');
var FriendSpouseJoinRequestMessage = require('./messages/game/friend/friend-spouse-join-request-message');
var FriendUpdateMessage = require('./messages/game/friend/friend-update-message');
var FriendWarnOnConnectionStateMessage = require('./messages/game/friend/friend-warn-on-connection-state-message');
var FriendWarnOnLevelGainStateMessage = require('./messages/game/friend/friend-warn-on-level-gain-state-message');
var FriendsGetListMessage = require('./messages/game/friend/friends-get-list-message');
var FriendsListMessage = require('./messages/game/friend/friends-list-message');
var GuildMemberSetWarnOnConnectionMessage = require('./messages/game/friend/guild-member-set-warn-on-connection-message');
var GuildMemberWarnOnConnectionStateMessage = require('./messages/game/friend/guild-member-warn-on-connection-state-message');
var IgnoredAddFailureMessage = require('./messages/game/friend/ignored-add-failure-message');
var IgnoredAddRequestMessage = require('./messages/game/friend/ignored-add-request-message');
var IgnoredAddedMessage = require('./messages/game/friend/ignored-added-message');
var IgnoredDeleteRequestMessage = require('./messages/game/friend/ignored-delete-request-message');
var IgnoredDeleteResultMessage = require('./messages/game/friend/ignored-delete-result-message');
var IgnoredGetListMessage = require('./messages/game/friend/ignored-get-list-message');
var IgnoredListMessage = require('./messages/game/friend/ignored-list-message');
var SpouseGetInformationsMessage = require('./messages/game/friend/spouse-get-informations-message');
var SpouseInformationsMessage = require('./messages/game/friend/spouse-informations-message');
var SpouseStatusMessage = require('./messages/game/friend/spouse-status-message');
var WarnOnPermaDeathStateMessage = require('./messages/game/friend/warn-on-perma-death-state-message');
var GuestLimitationMessage = require('./messages/game/guest/guest-limitation-message');
var GuestModeMessage = require('./messages/game/guest/guest-mode-message');
var ChallengeFightJoinRefusedMessage = require('./messages/game/guild/challenge-fight-join-refused-message');
var GuildChangeMemberParametersMessage = require('./messages/game/guild/guild-change-member-parameters-message');
var GuildCharacsUpgradeRequestMessage = require('./messages/game/guild/guild-characs-upgrade-request-message');
var GuildCreationResultMessage = require('./messages/game/guild/guild-creation-result-message');
var GuildCreationStartedMessage = require('./messages/game/guild/guild-creation-started-message');
var GuildCreationValidMessage = require('./messages/game/guild/guild-creation-valid-message');
var GuildFactsErrorMessage = require('./messages/game/guild/guild-facts-error-message');
var GuildFactsMessage = require('./messages/game/guild/guild-facts-message');
var GuildFactsRequestMessage = require('./messages/game/guild/guild-facts-request-message');
var GuildGetInformationsMessage = require('./messages/game/guild/guild-get-informations-message');
var GuildHouseRemoveMessage = require('./messages/game/guild/guild-house-remove-message');
var GuildHouseTeleportRequestMessage = require('./messages/game/guild/guild-house-teleport-request-message');
var GuildHouseUpdateInformationMessage = require('./messages/game/guild/guild-house-update-information-message');
var GuildHousesInformationMessage = require('./messages/game/guild/guild-houses-information-message');
var GuildInAllianceFactsMessage = require('./messages/game/guild/guild-in-alliance-facts-message');
var GuildInformationsGeneralMessage = require('./messages/game/guild/guild-informations-general-message');
var GuildInformationsMemberUpdateMessage = require('./messages/game/guild/guild-informations-member-update-message');
var GuildInformationsMembersMessage = require('./messages/game/guild/guild-informations-members-message');
var GuildInformationsPaddocksMessage = require('./messages/game/guild/guild-informations-paddocks-message');
var GuildInfosUpgradeMessage = require('./messages/game/guild/guild-infos-upgrade-message');
var GuildInvitationAnswerMessage = require('./messages/game/guild/guild-invitation-answer-message');
var GuildInvitationByNameMessage = require('./messages/game/guild/guild-invitation-by-name-message');
var GuildInvitationMessage = require('./messages/game/guild/guild-invitation-message');
var GuildInvitationStateRecrutedMessage = require('./messages/game/guild/guild-invitation-state-recruted-message');
var GuildInvitationStateRecruterMessage = require('./messages/game/guild/guild-invitation-state-recruter-message');
var GuildInvitedMessage = require('./messages/game/guild/guild-invited-message');
var GuildJoinedMessage = require('./messages/game/guild/guild-joined-message');
var GuildKickRequestMessage = require('./messages/game/guild/guild-kick-request-message');
var GuildLeftMessage = require('./messages/game/guild/guild-left-message');
var GuildLevelUpMessage = require('./messages/game/guild/guild-level-up-message');
var GuildListMessage = require('./messages/game/guild/guild-list-message');
var GuildMemberLeavingMessage = require('./messages/game/guild/guild-member-leaving-message');
var GuildMemberOnlineStatusMessage = require('./messages/game/guild/guild-member-online-status-message');
var GuildMembershipMessage = require('./messages/game/guild/guild-membership-message');
var GuildModificationEmblemValidMessage = require('./messages/game/guild/guild-modification-emblem-valid-message');
var GuildModificationNameValidMessage = require('./messages/game/guild/guild-modification-name-valid-message');
var GuildModificationStartedMessage = require('./messages/game/guild/guild-modification-started-message');
var GuildModificationValidMessage = require('./messages/game/guild/guild-modification-valid-message');
var GuildMotdMessage = require('./messages/game/guild/guild-motd-message');
var GuildMotdSetErrorMessage = require('./messages/game/guild/guild-motd-set-error-message');
var GuildPaddockBoughtMessage = require('./messages/game/guild/guild-paddock-bought-message');
var GuildPaddockRemovedMessage = require('./messages/game/guild/guild-paddock-removed-message');
var GuildPaddockTeleportRequestMessage = require('./messages/game/guild/guild-paddock-teleport-request-message');
var GuildSpellUpgradeRequestMessage = require('./messages/game/guild/guild-spell-upgrade-request-message');
var GuildVersatileInfoListMessage = require('./messages/game/guild/guild-versatile-info-list-message');
var AbstractTaxCollectorListMessage = require('./messages/game/guild/tax/abstract-tax-collector-list-message');
var GameRolePlayTaxCollectorFightRequestMessage = require('./messages/game/guild/tax/game-role-play-tax-collector-fight-request-message');
var GuildFightJoinRequestMessage = require('./messages/game/guild/tax/guild-fight-join-request-message');
var GuildFightLeaveRequestMessage = require('./messages/game/guild/tax/guild-fight-leave-request-message');
var GuildFightPlayersEnemiesListMessage = require('./messages/game/guild/tax/guild-fight-players-enemies-list-message');
var GuildFightPlayersEnemyRemoveMessage = require('./messages/game/guild/tax/guild-fight-players-enemy-remove-message');
var GuildFightPlayersHelpersJoinMessage = require('./messages/game/guild/tax/guild-fight-players-helpers-join-message');
var GuildFightPlayersHelpersLeaveMessage = require('./messages/game/guild/tax/guild-fight-players-helpers-leave-message');
var GuildFightTakePlaceRequestMessage = require('./messages/game/guild/tax/guild-fight-take-place-request-message');
var TaxCollectorAttackedMessage = require('./messages/game/guild/tax/tax-collector-attacked-message');
var TaxCollectorAttackedResultMessage = require('./messages/game/guild/tax/tax-collector-attacked-result-message');
var TaxCollectorErrorMessage = require('./messages/game/guild/tax/tax-collector-error-message');
var TaxCollectorListMessage = require('./messages/game/guild/tax/tax-collector-list-message');
var TaxCollectorMovementAddMessage = require('./messages/game/guild/tax/tax-collector-movement-add-message');
var TaxCollectorMovementMessage = require('./messages/game/guild/tax/tax-collector-movement-message');
var TaxCollectorMovementRemoveMessage = require('./messages/game/guild/tax/tax-collector-movement-remove-message');
var TaxCollectorStateUpdateMessage = require('./messages/game/guild/tax/tax-collector-state-update-message');
var TopTaxCollectorListMessage = require('./messages/game/guild/tax/top-tax-collector-list-message');
var IdolFightPreparationUpdateMessage = require('./messages/game/idol/idol-fight-preparation-update-message');
var IdolListMessage = require('./messages/game/idol/idol-list-message');
var IdolPartyLostMessage = require('./messages/game/idol/idol-party-lost-message');
var IdolPartyRefreshMessage = require('./messages/game/idol/idol-party-refresh-message');
var IdolPartyRegisterRequestMessage = require('./messages/game/idol/idol-party-register-request-message');
var IdolSelectErrorMessage = require('./messages/game/idol/idol-select-error-message');
var IdolSelectRequestMessage = require('./messages/game/idol/idol-select-request-message');
var IdolSelectedMessage = require('./messages/game/idol/idol-selected-message');
var CharacterCapabilitiesMessage = require('./messages/game/initialization/character-capabilities-message');
var CharacterLoadingCompleteMessage = require('./messages/game/initialization/character-loading-complete-message');
var OnConnectionEventMessage = require('./messages/game/initialization/on-connection-event-message');
var ServerExperienceModificatorMessage = require('./messages/game/initialization/server-experience-modificator-message');
var SetCharacterRestrictionsMessage = require('./messages/game/initialization/set-character-restrictions-message');
var InteractiveElementUpdatedMessage = require('./messages/game/interactive/interactive-element-updated-message');
var InteractiveMapUpdateMessage = require('./messages/game/interactive/interactive-map-update-message');
var InteractiveUseEndedMessage = require('./messages/game/interactive/interactive-use-ended-message');
var InteractiveUseErrorMessage = require('./messages/game/interactive/interactive-use-error-message');
var InteractiveUseRequestMessage = require('./messages/game/interactive/interactive-use-request-message');
var InteractiveUsedMessage = require('./messages/game/interactive/interactive-used-message');
var StatedElementUpdatedMessage = require('./messages/game/interactive/stated-element-updated-message');
var StatedMapUpdateMessage = require('./messages/game/interactive/stated-map-update-message');
var TeleportBuddiesAnswerMessage = require('./messages/game/interactive/meeting/teleport-buddies-answer-message');
var TeleportBuddiesMessage = require('./messages/game/interactive/meeting/teleport-buddies-message');
var TeleportBuddiesRequestedMessage = require('./messages/game/interactive/meeting/teleport-buddies-requested-message');
var TeleportToBuddyAnswerMessage = require('./messages/game/interactive/meeting/teleport-to-buddy-answer-message');
var TeleportToBuddyCloseMessage = require('./messages/game/interactive/meeting/teleport-to-buddy-close-message');
var TeleportToBuddyOfferMessage = require('./messages/game/interactive/meeting/teleport-to-buddy-offer-message');
var TeleportDestinationsListMessage = require('./messages/game/interactive/zaap/teleport-destinations-list-message');
var TeleportRequestMessage = require('./messages/game/interactive/zaap/teleport-request-message');
var ZaapListMessage = require('./messages/game/interactive/zaap/zaap-list-message');
var ZaapRespawnSaveRequestMessage = require('./messages/game/interactive/zaap/zaap-respawn-save-request-message');
var ZaapRespawnUpdatedMessage = require('./messages/game/interactive/zaap/zaap-respawn-updated-message');
var KamasUpdateMessage = require('./messages/game/inventory/kamas-update-message');
var ObjectAveragePricesErrorMessage = require('./messages/game/inventory/object-average-prices-error-message');
var ObjectAveragePricesGetMessage = require('./messages/game/inventory/object-average-prices-get-message');
var ObjectAveragePricesMessage = require('./messages/game/inventory/object-average-prices-message');
var DecraftResultMessage = require('./messages/game/inventory/exchanges/decraft-result-message');
var ExchangeAcceptMessage = require('./messages/game/inventory/exchanges/exchange-accept-message');
var ExchangeBidHouseBuyMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-buy-message');
var ExchangeBidHouseBuyResultMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-buy-result-message');
var ExchangeBidHouseGenericItemAddedMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-generic-item-added-message');
var ExchangeBidHouseGenericItemRemovedMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-generic-item-removed-message');
var ExchangeBidHouseInListAddedMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-in-list-added-message');
var ExchangeBidHouseInListRemovedMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-in-list-removed-message');
var ExchangeBidHouseInListUpdatedMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-in-list-updated-message');
var ExchangeBidHouseItemAddOkMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-item-add-ok-message');
var ExchangeBidHouseItemRemoveOkMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-item-remove-ok-message');
var ExchangeBidHouseListMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-list-message');
var ExchangeBidHousePriceMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-price-message');
var ExchangeBidHouseSearchMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-search-message');
var ExchangeBidHouseTypeMessage = require('./messages/game/inventory/exchanges/exchange-bid-house-type-message');
var ExchangeBidPriceForSellerMessage = require('./messages/game/inventory/exchanges/exchange-bid-price-for-seller-message');
var ExchangeBidPriceMessage = require('./messages/game/inventory/exchanges/exchange-bid-price-message');
var ExchangeBidSearchOkMessage = require('./messages/game/inventory/exchanges/exchange-bid-search-ok-message');
var ExchangeBuyMessage = require('./messages/game/inventory/exchanges/exchange-buy-message');
var ExchangeBuyOkMessage = require('./messages/game/inventory/exchanges/exchange-buy-ok-message');
var ExchangeCraftCountModifiedMessage = require('./messages/game/inventory/exchanges/exchange-craft-count-modified-message');
var ExchangeCraftCountRequestMessage = require('./messages/game/inventory/exchanges/exchange-craft-count-request-message');
var ExchangeCraftInformationObjectMessage = require('./messages/game/inventory/exchanges/exchange-craft-information-object-message');
var ExchangeCraftPaymentModificationRequestMessage = require('./messages/game/inventory/exchanges/exchange-craft-payment-modification-request-message');
var ExchangeCraftPaymentModifiedMessage = require('./messages/game/inventory/exchanges/exchange-craft-payment-modified-message');
var ExchangeCraftResultMagicWithObjectDescMessage = require('./messages/game/inventory/exchanges/exchange-craft-result-magic-with-object-desc-message');
var ExchangeCraftResultMessage = require('./messages/game/inventory/exchanges/exchange-craft-result-message');
var ExchangeCraftResultWithObjectDescMessage = require('./messages/game/inventory/exchanges/exchange-craft-result-with-object-desc-message');
var ExchangeCraftResultWithObjectIdMessage = require('./messages/game/inventory/exchanges/exchange-craft-result-with-object-id-message');
var ExchangeCrafterJobLevelupMessage = require('./messages/game/inventory/exchanges/exchange-crafter-job-levelup-message');
var ExchangeErrorMessage = require('./messages/game/inventory/exchanges/exchange-error-message');
var ExchangeGuildTaxCollectorGetMessage = require('./messages/game/inventory/exchanges/exchange-guild-tax-collector-get-message');
var ExchangeHandleMountsStableMessage = require('./messages/game/inventory/exchanges/exchange-handle-mounts-stable-message');
var ExchangeIsReadyMessage = require('./messages/game/inventory/exchanges/exchange-is-ready-message');
var ExchangeItemAutoCraftStopedMessage = require('./messages/game/inventory/exchanges/exchange-item-auto-craft-stoped-message');
var ExchangeLeaveMessage = require('./messages/game/inventory/exchanges/exchange-leave-message');
var ExchangeMountFreeFromPaddockMessage = require('./messages/game/inventory/exchanges/exchange-mount-free-from-paddock-message');
var ExchangeMountStableErrorMessage = require('./messages/game/inventory/exchanges/exchange-mount-stable-error-message');
var ExchangeMountSterilizeFromPaddockMessage = require('./messages/game/inventory/exchanges/exchange-mount-sterilize-from-paddock-message');
var ExchangeMountsPaddockAddMessage = require('./messages/game/inventory/exchanges/exchange-mounts-paddock-add-message');
var ExchangeMountsPaddockRemoveMessage = require('./messages/game/inventory/exchanges/exchange-mounts-paddock-remove-message');
var ExchangeMountsStableAddMessage = require('./messages/game/inventory/exchanges/exchange-mounts-stable-add-message');
var ExchangeMountsStableBornAddMessage = require('./messages/game/inventory/exchanges/exchange-mounts-stable-born-add-message');
var ExchangeMountsStableRemoveMessage = require('./messages/game/inventory/exchanges/exchange-mounts-stable-remove-message');
var ExchangeMountsTakenFromPaddockMessage = require('./messages/game/inventory/exchanges/exchange-mounts-taken-from-paddock-message');
var ExchangeObjectAddedMessage = require('./messages/game/inventory/exchanges/exchange-object-added-message');
var ExchangeObjectMessage = require('./messages/game/inventory/exchanges/exchange-object-message');
var ExchangeObjectModifyPricedMessage = require('./messages/game/inventory/exchanges/exchange-object-modify-priced-message');
var ExchangeObjectMoveKamaMessage = require('./messages/game/inventory/exchanges/exchange-object-move-kama-message');
var ExchangeObjectMoveMessage = require('./messages/game/inventory/exchanges/exchange-object-move-message');
var ExchangeObjectMovePricedMessage = require('./messages/game/inventory/exchanges/exchange-object-move-priced-message');
var ExchangeObjectTransfertAllFromInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-all-from-inv-message');
var ExchangeObjectTransfertAllToInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-all-to-inv-message');
var ExchangeObjectTransfertExistingFromInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-existing-from-inv-message');
var ExchangeObjectTransfertExistingToInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-existing-to-inv-message');
var ExchangeObjectTransfertListFromInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-list-from-inv-message');
var ExchangeObjectTransfertListToInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-list-to-inv-message');
var ExchangeObjectTransfertListWithQuantityToInvMessage = require('./messages/game/inventory/exchanges/exchange-object-transfert-list-with-quantity-to-inv-message');
var ExchangeObjectUseInWorkshopMessage = require('./messages/game/inventory/exchanges/exchange-object-use-in-workshop-message');
var ExchangeObjectsAddedMessage = require('./messages/game/inventory/exchanges/exchange-objects-added-message');
var ExchangeOkMultiCraftMessage = require('./messages/game/inventory/exchanges/exchange-ok-multi-craft-message');
var ExchangeOnHumanVendorRequestMessage = require('./messages/game/inventory/exchanges/exchange-on-human-vendor-request-message');
var ExchangePlayerMultiCraftRequestMessage = require('./messages/game/inventory/exchanges/exchange-player-multi-craft-request-message');
var ExchangePlayerRequestMessage = require('./messages/game/inventory/exchanges/exchange-player-request-message');
var ExchangeReadyMessage = require('./messages/game/inventory/exchanges/exchange-ready-message');
var ExchangeReplayStopMessage = require('./messages/game/inventory/exchanges/exchange-replay-stop-message');
var ExchangeReplyTaxVendorMessage = require('./messages/game/inventory/exchanges/exchange-reply-tax-vendor-message');
var ExchangeRequestMessage = require('./messages/game/inventory/exchanges/exchange-request-message');
var ExchangeRequestOnMountStockMessage = require('./messages/game/inventory/exchanges/exchange-request-on-mount-stock-message');
var ExchangeRequestOnShopStockMessage = require('./messages/game/inventory/exchanges/exchange-request-on-shop-stock-message');
var ExchangeRequestOnTaxCollectorMessage = require('./messages/game/inventory/exchanges/exchange-request-on-tax-collector-message');
var ExchangeRequestedMessage = require('./messages/game/inventory/exchanges/exchange-requested-message');
var ExchangeRequestedTradeMessage = require('./messages/game/inventory/exchanges/exchange-requested-trade-message');
var ExchangeSellMessage = require('./messages/game/inventory/exchanges/exchange-sell-message');
var ExchangeSellOkMessage = require('./messages/game/inventory/exchanges/exchange-sell-ok-message');
var ExchangeSetCraftRecipeMessage = require('./messages/game/inventory/exchanges/exchange-set-craft-recipe-message');
var ExchangeShopStockMovementRemovedMessage = require('./messages/game/inventory/exchanges/exchange-shop-stock-movement-removed-message');
var ExchangeShopStockMovementUpdatedMessage = require('./messages/game/inventory/exchanges/exchange-shop-stock-movement-updated-message');
var ExchangeShopStockMultiMovementRemovedMessage = require('./messages/game/inventory/exchanges/exchange-shop-stock-multi-movement-removed-message');
var ExchangeShopStockMultiMovementUpdatedMessage = require('./messages/game/inventory/exchanges/exchange-shop-stock-multi-movement-updated-message');
var ExchangeShopStockStartedMessage = require('./messages/game/inventory/exchanges/exchange-shop-stock-started-message');
var ExchangeShowVendorTaxMessage = require('./messages/game/inventory/exchanges/exchange-show-vendor-tax-message');
var ExchangeStartAsVendorMessage = require('./messages/game/inventory/exchanges/exchange-start-as-vendor-message');
var ExchangeStartOkCraftMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-craft-message');
var ExchangeStartOkCraftWithInformationMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-craft-with-information-message');
var ExchangeStartOkHumanVendorMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-human-vendor-message');
var ExchangeStartOkJobIndexMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-job-index-message');
var ExchangeStartOkMountMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-mount-message');
var ExchangeStartOkMountWithOutPaddockMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-mount-with-out-paddock-message');
var ExchangeStartOkMulticraftCrafterMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-multicraft-crafter-message');
var ExchangeStartOkMulticraftCustomerMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-multicraft-customer-message');
var ExchangeStartOkNpcShopMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-npc-shop-message');
var ExchangeStartOkNpcTradeMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-npc-trade-message');
var ExchangeStartOkRecycleTradeMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-recycle-trade-message');
var ExchangeStartOkRunesTradeMessage = require('./messages/game/inventory/exchanges/exchange-start-ok-runes-trade-message');
var ExchangeStartedBidBuyerMessage = require('./messages/game/inventory/exchanges/exchange-started-bid-buyer-message');
var ExchangeStartedBidSellerMessage = require('./messages/game/inventory/exchanges/exchange-started-bid-seller-message');
var ExchangeStartedMessage = require('./messages/game/inventory/exchanges/exchange-started-message');
var ExchangeStartedMountStockMessage = require('./messages/game/inventory/exchanges/exchange-started-mount-stock-message');
var ExchangeStartedWithPodsMessage = require('./messages/game/inventory/exchanges/exchange-started-with-pods-message');
var ExchangeStartedWithStorageMessage = require('./messages/game/inventory/exchanges/exchange-started-with-storage-message');
var ExchangeStoppedMessage = require('./messages/game/inventory/exchanges/exchange-stopped-message');
var ExchangeTypesExchangerDescriptionForUserMessage = require('./messages/game/inventory/exchanges/exchange-types-exchanger-description-for-user-message');
var ExchangeTypesItemsExchangerDescriptionForUserMessage = require('./messages/game/inventory/exchanges/exchange-types-items-exchanger-description-for-user-message');
var ExchangeWaitingResultMessage = require('./messages/game/inventory/exchanges/exchange-waiting-result-message');
var ExchangeWeightMessage = require('./messages/game/inventory/exchanges/exchange-weight-message');
var ItemNoMoreAvailableMessage = require('./messages/game/inventory/exchanges/item-no-more-available-message');
var JobBookSubscribeRequestMessage = require('./messages/game/inventory/exchanges/job-book-subscribe-request-message');
var RecycleResultMessage = require('./messages/game/inventory/exchanges/recycle-result-message');
var UpdateMountBoostMessage = require('./messages/game/inventory/exchanges/update-mount-boost-message');
var ExchangeKamaModifiedMessage = require('./messages/game/inventory/items/exchange-kama-modified-message');
var ExchangeMultiCraftCrafterCanUseHisRessourcesMessage = require('./messages/game/inventory/items/exchange-multi-craft-crafter-can-use-his-ressources-message');
var ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage = require('./messages/game/inventory/items/exchange-multi-craft-set-crafter-can-use-his-ressources-message');
var ExchangeObjectModifiedInBagMessage = require('./messages/game/inventory/items/exchange-object-modified-in-bag-message');
var ExchangeObjectModifiedMessage = require('./messages/game/inventory/items/exchange-object-modified-message');
var ExchangeObjectPutInBagMessage = require('./messages/game/inventory/items/exchange-object-put-in-bag-message');
var ExchangeObjectRemovedFromBagMessage = require('./messages/game/inventory/items/exchange-object-removed-from-bag-message');
var ExchangeObjectRemovedMessage = require('./messages/game/inventory/items/exchange-object-removed-message');
var ExchangeObjectsModifiedMessage = require('./messages/game/inventory/items/exchange-objects-modified-message');
var ExchangeObjectsRemovedMessage = require('./messages/game/inventory/items/exchange-objects-removed-message');
var GoldAddedMessage = require('./messages/game/inventory/items/gold-added-message');
var InventoryContentAndPresetMessage = require('./messages/game/inventory/items/inventory-content-and-preset-message');
var InventoryContentMessage = require('./messages/game/inventory/items/inventory-content-message');
var InventoryWeightMessage = require('./messages/game/inventory/items/inventory-weight-message');
var LivingObjectChangeSkinRequestMessage = require('./messages/game/inventory/items/living-object-change-skin-request-message');
var LivingObjectDissociateMessage = require('./messages/game/inventory/items/living-object-dissociate-message');
var LivingObjectMessageMessage = require('./messages/game/inventory/items/living-object-message-message');
var LivingObjectMessageRequestMessage = require('./messages/game/inventory/items/living-object-message-request-message');
var MimicryObjectAssociatedMessage = require('./messages/game/inventory/items/mimicry-object-associated-message');
var MimicryObjectEraseRequestMessage = require('./messages/game/inventory/items/mimicry-object-erase-request-message');
var MimicryObjectErrorMessage = require('./messages/game/inventory/items/mimicry-object-error-message');
var MimicryObjectFeedAndAssociateRequestMessage = require('./messages/game/inventory/items/mimicry-object-feed-and-associate-request-message');
var MimicryObjectPreviewMessage = require('./messages/game/inventory/items/mimicry-object-preview-message');
var ObjectAddedMessage = require('./messages/game/inventory/items/object-added-message');
var ObjectDeleteMessage = require('./messages/game/inventory/items/object-delete-message');
var ObjectDeletedMessage = require('./messages/game/inventory/items/object-deleted-message');
var ObjectDropMessage = require('./messages/game/inventory/items/object-drop-message');
var ObjectErrorMessage = require('./messages/game/inventory/items/object-error-message');
var ObjectFeedMessage = require('./messages/game/inventory/items/object-feed-message');
var ObjectFoundWhileRecoltingMessage = require('./messages/game/inventory/items/object-found-while-recolting-message');
var ObjectJobAddedMessage = require('./messages/game/inventory/items/object-job-added-message');
var ObjectModifiedMessage = require('./messages/game/inventory/items/object-modified-message');
var ObjectMovementMessage = require('./messages/game/inventory/items/object-movement-message');
var ObjectQuantityMessage = require('./messages/game/inventory/items/object-quantity-message');
var ObjectSetPositionMessage = require('./messages/game/inventory/items/object-set-position-message');
var ObjectUseMessage = require('./messages/game/inventory/items/object-use-message');
var ObjectUseMultipleMessage = require('./messages/game/inventory/items/object-use-multiple-message');
var ObjectUseOnCellMessage = require('./messages/game/inventory/items/object-use-on-cell-message');
var ObjectUseOnCharacterMessage = require('./messages/game/inventory/items/object-use-on-character-message');
var ObjectsAddedMessage = require('./messages/game/inventory/items/objects-added-message');
var ObjectsDeletedMessage = require('./messages/game/inventory/items/objects-deleted-message');
var ObjectsQuantityMessage = require('./messages/game/inventory/items/objects-quantity-message');
var ObtainedItemMessage = require('./messages/game/inventory/items/obtained-item-message');
var ObtainedItemWithBonusMessage = require('./messages/game/inventory/items/obtained-item-with-bonus-message');
var SetUpdateMessage = require('./messages/game/inventory/items/set-update-message');
var SymbioticObjectAssociateRequestMessage = require('./messages/game/inventory/items/symbiotic-object-associate-request-message');
var SymbioticObjectAssociatedMessage = require('./messages/game/inventory/items/symbiotic-object-associated-message');
var SymbioticObjectErrorMessage = require('./messages/game/inventory/items/symbiotic-object-error-message');
var WrapperObjectAssociatedMessage = require('./messages/game/inventory/items/wrapper-object-associated-message');
var WrapperObjectDissociateRequestMessage = require('./messages/game/inventory/items/wrapper-object-dissociate-request-message');
var WrapperObjectErrorMessage = require('./messages/game/inventory/items/wrapper-object-error-message');
var IdolsPresetDeleteMessage = require('./messages/game/inventory/preset/idols-preset-delete-message');
var IdolsPresetDeleteResultMessage = require('./messages/game/inventory/preset/idols-preset-delete-result-message');
var IdolsPresetSaveMessage = require('./messages/game/inventory/preset/idols-preset-save-message');
var IdolsPresetSaveResultMessage = require('./messages/game/inventory/preset/idols-preset-save-result-message');
var IdolsPresetUpdateMessage = require('./messages/game/inventory/preset/idols-preset-update-message');
var InventoryPresetDeleteMessage = require('./messages/game/inventory/preset/inventory-preset-delete-message');
var InventoryPresetDeleteResultMessage = require('./messages/game/inventory/preset/inventory-preset-delete-result-message');
var InventoryPresetItemUpdateErrorMessage = require('./messages/game/inventory/preset/inventory-preset-item-update-error-message');
var InventoryPresetItemUpdateMessage = require('./messages/game/inventory/preset/inventory-preset-item-update-message');
var InventoryPresetItemUpdateRequestMessage = require('./messages/game/inventory/preset/inventory-preset-item-update-request-message');
var InventoryPresetSaveCustomMessage = require('./messages/game/inventory/preset/inventory-preset-save-custom-message');
var InventoryPresetSaveMessage = require('./messages/game/inventory/preset/inventory-preset-save-message');
var InventoryPresetSaveResultMessage = require('./messages/game/inventory/preset/inventory-preset-save-result-message');
var InventoryPresetUpdateMessage = require('./messages/game/inventory/preset/inventory-preset-update-message');
var InventoryPresetUseMessage = require('./messages/game/inventory/preset/inventory-preset-use-message');
var InventoryPresetUseResultMessage = require('./messages/game/inventory/preset/inventory-preset-use-result-message');
var SpellListMessage = require('./messages/game/inventory/spells/spell-list-message');
var StorageInventoryContentMessage = require('./messages/game/inventory/storage/storage-inventory-content-message');
var StorageKamasUpdateMessage = require('./messages/game/inventory/storage/storage-kamas-update-message');
var StorageObjectRemoveMessage = require('./messages/game/inventory/storage/storage-object-remove-message');
var StorageObjectUpdateMessage = require('./messages/game/inventory/storage/storage-object-update-message');
var StorageObjectsRemoveMessage = require('./messages/game/inventory/storage/storage-objects-remove-message');
var StorageObjectsUpdateMessage = require('./messages/game/inventory/storage/storage-objects-update-message');
var AccessoryPreviewErrorMessage = require('./messages/game/look/accessory-preview-error-message');
var AccessoryPreviewMessage = require('./messages/game/look/accessory-preview-message');
var AccessoryPreviewRequestMessage = require('./messages/game/look/accessory-preview-request-message');
var PopupWarningMessage = require('./messages/game/moderation/popup-warning-message');
var AreaFightModificatorUpdateMessage = require('./messages/game/modificator/area-fight-modificator-update-message');
var PrismAttackRequestMessage = require('./messages/game/prism/prism-attack-request-message');
var PrismFightAddedMessage = require('./messages/game/prism/prism-fight-added-message');
var PrismFightAttackerAddMessage = require('./messages/game/prism/prism-fight-attacker-add-message');
var PrismFightAttackerRemoveMessage = require('./messages/game/prism/prism-fight-attacker-remove-message');
var PrismFightDefenderAddMessage = require('./messages/game/prism/prism-fight-defender-add-message');
var PrismFightDefenderLeaveMessage = require('./messages/game/prism/prism-fight-defender-leave-message');
var PrismFightJoinLeaveRequestMessage = require('./messages/game/prism/prism-fight-join-leave-request-message');
var PrismFightRemovedMessage = require('./messages/game/prism/prism-fight-removed-message');
var PrismFightStateUpdateMessage = require('./messages/game/prism/prism-fight-state-update-message');
var PrismFightSwapRequestMessage = require('./messages/game/prism/prism-fight-swap-request-message');
var PrismInfoCloseMessage = require('./messages/game/prism/prism-info-close-message');
var PrismInfoInValidMessage = require('./messages/game/prism/prism-info-in-valid-message');
var PrismInfoJoinLeaveRequestMessage = require('./messages/game/prism/prism-info-join-leave-request-message');
var PrismModuleExchangeRequestMessage = require('./messages/game/prism/prism-module-exchange-request-message');
var PrismSetSabotagedRefusedMessage = require('./messages/game/prism/prism-set-sabotaged-refused-message');
var PrismSetSabotagedRequestMessage = require('./messages/game/prism/prism-set-sabotaged-request-message');
var PrismSettingsErrorMessage = require('./messages/game/prism/prism-settings-error-message');
var PrismSettingsRequestMessage = require('./messages/game/prism/prism-settings-request-message');
var PrismUseRequestMessage = require('./messages/game/prism/prism-use-request-message');
var PrismsInfoValidMessage = require('./messages/game/prism/prisms-info-valid-message');
var PrismsListMessage = require('./messages/game/prism/prisms-list-message');
var PrismsListRegisterMessage = require('./messages/game/prism/prisms-list-register-message');
var PrismsListUpdateMessage = require('./messages/game/prism/prisms-list-update-message');
var AlignmentRankUpdateMessage = require('./messages/game/pvp/alignment-rank-update-message');
var SetEnableAVARequestMessage = require('./messages/game/pvp/set-enable-a-v-a-request-message');
var SetEnablePVPRequestMessage = require('./messages/game/pvp/set-enable-p-v-p-request-message');
var UpdateMapPlayersAgressableStatusMessage = require('./messages/game/pvp/update-map-players-agressable-status-message');
var UpdateSelfAgressableStatusMessage = require('./messages/game/pvp/update-self-agressable-status-message');
var CharacterReportMessage = require('./messages/game/report/character-report-message');
var CinematicMessage = require('./messages/game/script/cinematic-message');
var URLOpenMessage = require('./messages/game/script/u-r-l-open-message');
var ShortcutBarAddErrorMessage = require('./messages/game/shortcut/shortcut-bar-add-error-message');
var ShortcutBarAddRequestMessage = require('./messages/game/shortcut/shortcut-bar-add-request-message');
var ShortcutBarContentMessage = require('./messages/game/shortcut/shortcut-bar-content-message');
var ShortcutBarRefreshMessage = require('./messages/game/shortcut/shortcut-bar-refresh-message');
var ShortcutBarRemoveErrorMessage = require('./messages/game/shortcut/shortcut-bar-remove-error-message');
var ShortcutBarRemoveRequestMessage = require('./messages/game/shortcut/shortcut-bar-remove-request-message');
var ShortcutBarRemovedMessage = require('./messages/game/shortcut/shortcut-bar-removed-message');
var ShortcutBarSwapErrorMessage = require('./messages/game/shortcut/shortcut-bar-swap-error-message');
var ShortcutBarSwapRequestMessage = require('./messages/game/shortcut/shortcut-bar-swap-request-message');
var ContactLookErrorMessage = require('./messages/game/social/contact-look-error-message');
var ContactLookMessage = require('./messages/game/social/contact-look-message');
var ContactLookRequestByIdMessage = require('./messages/game/social/contact-look-request-by-id-message');
var ContactLookRequestMessage = require('./messages/game/social/contact-look-request-message');
var StartupActionAddMessage = require('./messages/game/startup/startup-action-add-message');
var StartupActionFinishedMessage = require('./messages/game/startup/startup-action-finished-message');
var StartupActionsAllAttributionMessage = require('./messages/game/startup/startup-actions-all-attribution-message');
var StartupActionsExecuteMessage = require('./messages/game/startup/startup-actions-execute-message');
var StartupActionsListMessage = require('./messages/game/startup/startup-actions-list-message');
var StartupActionsObjetAttributionMessage = require('./messages/game/startup/startup-actions-objet-attribution-message');
var SubscriptionLimitationMessage = require('./messages/game/subscriber/subscription-limitation-message');
var SubscriptionZoneMessage = require('./messages/game/subscriber/subscription-zone-message');
var OrnamentGainedMessage = require('./messages/game/tinsel/ornament-gained-message');
var OrnamentSelectErrorMessage = require('./messages/game/tinsel/ornament-select-error-message');
var OrnamentSelectRequestMessage = require('./messages/game/tinsel/ornament-select-request-message');
var OrnamentSelectedMessage = require('./messages/game/tinsel/ornament-selected-message');
var TitleGainedMessage = require('./messages/game/tinsel/title-gained-message');
var TitleLostMessage = require('./messages/game/tinsel/title-lost-message');
var TitleSelectErrorMessage = require('./messages/game/tinsel/title-select-error-message');
var TitleSelectRequestMessage = require('./messages/game/tinsel/title-select-request-message');
var TitleSelectedMessage = require('./messages/game/tinsel/title-selected-message');
var TitlesAndOrnamentsListMessage = require('./messages/game/tinsel/titles-and-ornaments-list-message');
var TitlesAndOrnamentsListRequestMessage = require('./messages/game/tinsel/titles-and-ornaments-list-request-message');
var ClientUIOpenedByObjectMessage = require('./messages/game/ui/client-u-i-opened-by-object-message');
var ClientUIOpenedMessage = require('./messages/game/ui/client-u-i-opened-message');
var ProtocolRequired = require('./messages/handshake/protocol-required');
var LoginQueueStatusMessage = require('./messages/queues/login-queue-status-message');
var QueueStatusMessage = require('./messages/queues/queue-status-message');
var TrustStatusMessage = require('./messages/secure/trust-status-message');
var CheckFileMessage = require('./messages/security/check-file-message');
var CheckFileRequestMessage = require('./messages/security/check-file-request-message');
var CheckIntegrityMessage = require('./messages/security/check-integrity-message');
var ClientKeyMessage = require('./messages/security/client-key-message');
var RawDataMessage = require('./messages/security/raw-data-message');
var SystemMessageDisplayMessage = require('./messages/server/basic/system-message-display-message');
var DownloadCurrentSpeedMessage = require('./messages/updater/parts/download-current-speed-message');
var DownloadErrorMessage = require('./messages/updater/parts/download-error-message');
var DownloadGetCurrentSpeedRequestMessage = require('./messages/updater/parts/download-get-current-speed-request-message');
var DownloadPartMessage = require('./messages/updater/parts/download-part-message');
var DownloadSetSpeedRequestMessage = require('./messages/updater/parts/download-set-speed-request-message');
var GetPartInfoMessage = require('./messages/updater/parts/get-part-info-message');
var GetPartsListMessage = require('./messages/updater/parts/get-parts-list-message');
var PartInfoMessage = require('./messages/updater/parts/part-info-message');
var PartsListMessage = require('./messages/updater/parts/parts-list-message');
var MailStatusMessage = require('./messages/web/ankabox/mail-status-message');
var NewMailMessage = require('./messages/web/ankabox/new-mail-message');
var KrosmasterAuthTokenErrorMessage = require('./messages/web/krosmaster/krosmaster-auth-token-error-message');
var KrosmasterAuthTokenMessage = require('./messages/web/krosmaster/krosmaster-auth-token-message');
var KrosmasterAuthTokenRequestMessage = require('./messages/web/krosmaster/krosmaster-auth-token-request-message');
var KrosmasterInventoryErrorMessage = require('./messages/web/krosmaster/krosmaster-inventory-error-message');
var KrosmasterInventoryMessage = require('./messages/web/krosmaster/krosmaster-inventory-message');
var KrosmasterInventoryRequestMessage = require('./messages/web/krosmaster/krosmaster-inventory-request-message');
var KrosmasterPlayingStatusMessage = require('./messages/web/krosmaster/krosmaster-playing-status-message');
var KrosmasterTransferMessage = require('./messages/web/krosmaster/krosmaster-transfer-message');
var KrosmasterTransferRequestMessage = require('./messages/web/krosmaster/krosmaster-transfer-request-message');
var ClientYouAreDrunkMessage = require('./messages/wtf/client-you-are-drunk-message');
var MessageReceiver = (function () {
    function MessageReceiver() {
        MessageReceiver._list = {};
        MessageReceiver._list[AdminCommandMessage.ID] = function () { return new AdminCommandMessage(); };
        MessageReceiver._list[AdminQuietCommandMessage.ID] = function () { return new AdminQuietCommandMessage(); };
        MessageReceiver._list[ConsoleCommandsListMessage.ID] = function () { return new ConsoleCommandsListMessage(); };
        MessageReceiver._list[ConsoleMessage.ID] = function () { return new ConsoleMessage(); };
        MessageReceiver._list[NetworkDataContainerMessage.ID] = function () { return new NetworkDataContainerMessage(); };
        MessageReceiver._list[BasicPingMessage.ID] = function () { return new BasicPingMessage(); };
        MessageReceiver._list[BasicPongMessage.ID] = function () { return new BasicPongMessage(); };
        MessageReceiver._list[BasicStatMessage.ID] = function () { return new BasicStatMessage(); };
        MessageReceiver._list[CredentialsAcknowledgementMessage.ID] = function () { return new CredentialsAcknowledgementMessage(); };
        MessageReceiver._list[HelloConnectMessage.ID] = function () { return new HelloConnectMessage(); };
        MessageReceiver._list[IdentificationAccountForceMessage.ID] = function () { return new IdentificationAccountForceMessage(); };
        MessageReceiver._list[IdentificationFailedBannedMessage.ID] = function () { return new IdentificationFailedBannedMessage(); };
        MessageReceiver._list[IdentificationFailedForBadVersionMessage.ID] = function () { return new IdentificationFailedForBadVersionMessage(); };
        MessageReceiver._list[IdentificationFailedMessage.ID] = function () { return new IdentificationFailedMessage(); };
        MessageReceiver._list[IdentificationMessage.ID] = function () { return new IdentificationMessage(); };
        MessageReceiver._list[IdentificationSuccessMessage.ID] = function () { return new IdentificationSuccessMessage(); };
        MessageReceiver._list[IdentificationSuccessWithLoginTokenMessage.ID] = function () { return new IdentificationSuccessWithLoginTokenMessage(); };
        MessageReceiver._list[SelectedServerDataExtendedMessage.ID] = function () { return new SelectedServerDataExtendedMessage(); };
        MessageReceiver._list[SelectedServerDataMessage.ID] = function () { return new SelectedServerDataMessage(); };
        MessageReceiver._list[SelectedServerRefusedMessage.ID] = function () { return new SelectedServerRefusedMessage(); };
        MessageReceiver._list[ServerSelectionMessage.ID] = function () { return new ServerSelectionMessage(); };
        MessageReceiver._list[ServerStatusUpdateMessage.ID] = function () { return new ServerStatusUpdateMessage(); };
        MessageReceiver._list[ServersListMessage.ID] = function () { return new ServersListMessage(); };
        MessageReceiver._list[AccountLinkRequiredMessage.ID] = function () { return new AccountLinkRequiredMessage(); };
        MessageReceiver._list[NicknameAcceptedMessage.ID] = function () { return new NicknameAcceptedMessage(); };
        MessageReceiver._list[NicknameChoiceRequestMessage.ID] = function () { return new NicknameChoiceRequestMessage(); };
        MessageReceiver._list[NicknameRefusedMessage.ID] = function () { return new NicknameRefusedMessage(); };
        MessageReceiver._list[NicknameRegistrationMessage.ID] = function () { return new NicknameRegistrationMessage(); };
        MessageReceiver._list[AcquaintanceSearchErrorMessage.ID] = function () { return new AcquaintanceSearchErrorMessage(); };
        MessageReceiver._list[AcquaintanceSearchMessage.ID] = function () { return new AcquaintanceSearchMessage(); };
        MessageReceiver._list[AcquaintanceServerListMessage.ID] = function () { return new AcquaintanceServerListMessage(); };
        MessageReceiver._list[DebugClearHighlightCellsMessage.ID] = function () { return new DebugClearHighlightCellsMessage(); };
        MessageReceiver._list[DebugHighlightCellsMessage.ID] = function () { return new DebugHighlightCellsMessage(); };
        MessageReceiver._list[DebugInClientMessage.ID] = function () { return new DebugInClientMessage(); };
        MessageReceiver._list[AchievementDetailedListMessage.ID] = function () { return new AchievementDetailedListMessage(); };
        MessageReceiver._list[AchievementDetailedListRequestMessage.ID] = function () { return new AchievementDetailedListRequestMessage(); };
        MessageReceiver._list[AchievementDetailsMessage.ID] = function () { return new AchievementDetailsMessage(); };
        MessageReceiver._list[AchievementDetailsRequestMessage.ID] = function () { return new AchievementDetailsRequestMessage(); };
        MessageReceiver._list[AchievementFinishedInformationMessage.ID] = function () { return new AchievementFinishedInformationMessage(); };
        MessageReceiver._list[AchievementFinishedMessage.ID] = function () { return new AchievementFinishedMessage(); };
        MessageReceiver._list[AchievementListMessage.ID] = function () { return new AchievementListMessage(); };
        MessageReceiver._list[AchievementRewardErrorMessage.ID] = function () { return new AchievementRewardErrorMessage(); };
        MessageReceiver._list[AchievementRewardRequestMessage.ID] = function () { return new AchievementRewardRequestMessage(); };
        MessageReceiver._list[AchievementRewardSuccessMessage.ID] = function () { return new AchievementRewardSuccessMessage(); };
        MessageReceiver._list[FriendGuildSetWarnOnAchievementCompleteMessage.ID] = function () { return new FriendGuildSetWarnOnAchievementCompleteMessage(); };
        MessageReceiver._list[FriendGuildWarnOnAchievementCompleteStateMessage.ID] = function () { return new FriendGuildWarnOnAchievementCompleteStateMessage(); };
        MessageReceiver._list[AbstractGameActionMessage.ID] = function () { return new AbstractGameActionMessage(); };
        MessageReceiver._list[AbstractGameActionWithAckMessage.ID] = function () { return new AbstractGameActionWithAckMessage(); };
        MessageReceiver._list[GameActionAcknowledgementMessage.ID] = function () { return new GameActionAcknowledgementMessage(); };
        MessageReceiver._list[GameActionNoopMessage.ID] = function () { return new GameActionNoopMessage(); };
        MessageReceiver._list[AbstractGameActionFightTargetedAbilityMessage.ID] = function () { return new AbstractGameActionFightTargetedAbilityMessage(); };
        MessageReceiver._list[GameActionFightActivateGlyphTrapMessage.ID] = function () { return new GameActionFightActivateGlyphTrapMessage(); };
        MessageReceiver._list[GameActionFightCarryCharacterMessage.ID] = function () { return new GameActionFightCarryCharacterMessage(); };
        MessageReceiver._list[GameActionFightCastOnTargetRequestMessage.ID] = function () { return new GameActionFightCastOnTargetRequestMessage(); };
        MessageReceiver._list[GameActionFightCastRequestMessage.ID] = function () { return new GameActionFightCastRequestMessage(); };
        MessageReceiver._list[GameActionFightChangeLookMessage.ID] = function () { return new GameActionFightChangeLookMessage(); };
        MessageReceiver._list[GameActionFightCloseCombatMessage.ID] = function () { return new GameActionFightCloseCombatMessage(); };
        MessageReceiver._list[GameActionFightDeathMessage.ID] = function () { return new GameActionFightDeathMessage(); };
        MessageReceiver._list[GameActionFightDispellEffectMessage.ID] = function () { return new GameActionFightDispellEffectMessage(); };
        MessageReceiver._list[GameActionFightDispellMessage.ID] = function () { return new GameActionFightDispellMessage(); };
        MessageReceiver._list[GameActionFightDispellSpellMessage.ID] = function () { return new GameActionFightDispellSpellMessage(); };
        MessageReceiver._list[GameActionFightDispellableEffectMessage.ID] = function () { return new GameActionFightDispellableEffectMessage(); };
        MessageReceiver._list[GameActionFightDodgePointLossMessage.ID] = function () { return new GameActionFightDodgePointLossMessage(); };
        MessageReceiver._list[GameActionFightDropCharacterMessage.ID] = function () { return new GameActionFightDropCharacterMessage(); };
        MessageReceiver._list[GameActionFightExchangePositionsMessage.ID] = function () { return new GameActionFightExchangePositionsMessage(); };
        MessageReceiver._list[GameActionFightInvisibilityMessage.ID] = function () { return new GameActionFightInvisibilityMessage(); };
        MessageReceiver._list[GameActionFightInvisibleDetectedMessage.ID] = function () { return new GameActionFightInvisibleDetectedMessage(); };
        MessageReceiver._list[GameActionFightKillMessage.ID] = function () { return new GameActionFightKillMessage(); };
        MessageReceiver._list[GameActionFightLifeAndShieldPointsLostMessage.ID] = function () { return new GameActionFightLifeAndShieldPointsLostMessage(); };
        MessageReceiver._list[GameActionFightLifePointsGainMessage.ID] = function () { return new GameActionFightLifePointsGainMessage(); };
        MessageReceiver._list[GameActionFightLifePointsLostMessage.ID] = function () { return new GameActionFightLifePointsLostMessage(); };
        MessageReceiver._list[GameActionFightMarkCellsMessage.ID] = function () { return new GameActionFightMarkCellsMessage(); };
        MessageReceiver._list[GameActionFightModifyEffectsDurationMessage.ID] = function () { return new GameActionFightModifyEffectsDurationMessage(); };
        MessageReceiver._list[GameActionFightNoSpellCastMessage.ID] = function () { return new GameActionFightNoSpellCastMessage(); };
        MessageReceiver._list[GameActionFightPointsVariationMessage.ID] = function () { return new GameActionFightPointsVariationMessage(); };
        MessageReceiver._list[GameActionFightReduceDamagesMessage.ID] = function () { return new GameActionFightReduceDamagesMessage(); };
        MessageReceiver._list[GameActionFightReflectDamagesMessage.ID] = function () { return new GameActionFightReflectDamagesMessage(); };
        MessageReceiver._list[GameActionFightReflectSpellMessage.ID] = function () { return new GameActionFightReflectSpellMessage(); };
        MessageReceiver._list[GameActionFightSlideMessage.ID] = function () { return new GameActionFightSlideMessage(); };
        MessageReceiver._list[GameActionFightSpellCastMessage.ID] = function () { return new GameActionFightSpellCastMessage(); };
        MessageReceiver._list[GameActionFightSpellCooldownVariationMessage.ID] = function () { return new GameActionFightSpellCooldownVariationMessage(); };
        MessageReceiver._list[GameActionFightSpellImmunityMessage.ID] = function () { return new GameActionFightSpellImmunityMessage(); };
        MessageReceiver._list[GameActionFightStealKamaMessage.ID] = function () { return new GameActionFightStealKamaMessage(); };
        MessageReceiver._list[GameActionFightSummonMessage.ID] = function () { return new GameActionFightSummonMessage(); };
        MessageReceiver._list[GameActionFightTackledMessage.ID] = function () { return new GameActionFightTackledMessage(); };
        MessageReceiver._list[GameActionFightTeleportOnSameMapMessage.ID] = function () { return new GameActionFightTeleportOnSameMapMessage(); };
        MessageReceiver._list[GameActionFightThrowCharacterMessage.ID] = function () { return new GameActionFightThrowCharacterMessage(); };
        MessageReceiver._list[GameActionFightTriggerEffectMessage.ID] = function () { return new GameActionFightTriggerEffectMessage(); };
        MessageReceiver._list[GameActionFightTriggerGlyphTrapMessage.ID] = function () { return new GameActionFightTriggerGlyphTrapMessage(); };
        MessageReceiver._list[GameActionFightUnmarkCellsMessage.ID] = function () { return new GameActionFightUnmarkCellsMessage(); };
        MessageReceiver._list[GameActionFightVanishMessage.ID] = function () { return new GameActionFightVanishMessage(); };
        MessageReceiver._list[SequenceEndMessage.ID] = function () { return new SequenceEndMessage(); };
        MessageReceiver._list[SequenceStartMessage.ID] = function () { return new SequenceStartMessage(); };
        MessageReceiver._list[AllianceChangeGuildRightsMessage.ID] = function () { return new AllianceChangeGuildRightsMessage(); };
        MessageReceiver._list[AllianceCreationResultMessage.ID] = function () { return new AllianceCreationResultMessage(); };
        MessageReceiver._list[AllianceCreationStartedMessage.ID] = function () { return new AllianceCreationStartedMessage(); };
        MessageReceiver._list[AllianceCreationValidMessage.ID] = function () { return new AllianceCreationValidMessage(); };
        MessageReceiver._list[AllianceFactsErrorMessage.ID] = function () { return new AllianceFactsErrorMessage(); };
        MessageReceiver._list[AllianceFactsMessage.ID] = function () { return new AllianceFactsMessage(); };
        MessageReceiver._list[AllianceFactsRequestMessage.ID] = function () { return new AllianceFactsRequestMessage(); };
        MessageReceiver._list[AllianceGuildLeavingMessage.ID] = function () { return new AllianceGuildLeavingMessage(); };
        MessageReceiver._list[AllianceInsiderInfoMessage.ID] = function () { return new AllianceInsiderInfoMessage(); };
        MessageReceiver._list[AllianceInsiderInfoRequestMessage.ID] = function () { return new AllianceInsiderInfoRequestMessage(); };
        MessageReceiver._list[AllianceInvitationAnswerMessage.ID] = function () { return new AllianceInvitationAnswerMessage(); };
        MessageReceiver._list[AllianceInvitationMessage.ID] = function () { return new AllianceInvitationMessage(); };
        MessageReceiver._list[AllianceInvitationStateRecrutedMessage.ID] = function () { return new AllianceInvitationStateRecrutedMessage(); };
        MessageReceiver._list[AllianceInvitationStateRecruterMessage.ID] = function () { return new AllianceInvitationStateRecruterMessage(); };
        MessageReceiver._list[AllianceInvitedMessage.ID] = function () { return new AllianceInvitedMessage(); };
        MessageReceiver._list[AllianceJoinedMessage.ID] = function () { return new AllianceJoinedMessage(); };
        MessageReceiver._list[AllianceKickRequestMessage.ID] = function () { return new AllianceKickRequestMessage(); };
        MessageReceiver._list[AllianceLeftMessage.ID] = function () { return new AllianceLeftMessage(); };
        MessageReceiver._list[AllianceListMessage.ID] = function () { return new AllianceListMessage(); };
        MessageReceiver._list[AllianceMembershipMessage.ID] = function () { return new AllianceMembershipMessage(); };
        MessageReceiver._list[AllianceModificationEmblemValidMessage.ID] = function () { return new AllianceModificationEmblemValidMessage(); };
        MessageReceiver._list[AllianceModificationNameAndTagValidMessage.ID] = function () { return new AllianceModificationNameAndTagValidMessage(); };
        MessageReceiver._list[AllianceModificationStartedMessage.ID] = function () { return new AllianceModificationStartedMessage(); };
        MessageReceiver._list[AllianceModificationValidMessage.ID] = function () { return new AllianceModificationValidMessage(); };
        MessageReceiver._list[AlliancePartialListMessage.ID] = function () { return new AlliancePartialListMessage(); };
        MessageReceiver._list[AllianceVersatileInfoListMessage.ID] = function () { return new AllianceVersatileInfoListMessage(); };
        MessageReceiver._list[KohUpdateMessage.ID] = function () { return new KohUpdateMessage(); };
        MessageReceiver._list[AlmanachCalendarDateMessage.ID] = function () { return new AlmanachCalendarDateMessage(); };
        MessageReceiver._list[AccountCapabilitiesMessage.ID] = function () { return new AccountCapabilitiesMessage(); };
        MessageReceiver._list[AccountLoggingKickedMessage.ID] = function () { return new AccountLoggingKickedMessage(); };
        MessageReceiver._list[AlreadyConnectedMessage.ID] = function () { return new AlreadyConnectedMessage(); };
        MessageReceiver._list[AuthenticationTicketAcceptedMessage.ID] = function () { return new AuthenticationTicketAcceptedMessage(); };
        MessageReceiver._list[AuthenticationTicketMessage.ID] = function () { return new AuthenticationTicketMessage(); };
        MessageReceiver._list[AuthenticationTicketRefusedMessage.ID] = function () { return new AuthenticationTicketRefusedMessage(); };
        MessageReceiver._list[HelloGameMessage.ID] = function () { return new HelloGameMessage(); };
        MessageReceiver._list[ReloginTokenRequestMessage.ID] = function () { return new ReloginTokenRequestMessage(); };
        MessageReceiver._list[ReloginTokenStatusMessage.ID] = function () { return new ReloginTokenStatusMessage(); };
        MessageReceiver._list[ServerOptionalFeaturesMessage.ID] = function () { return new ServerOptionalFeaturesMessage(); };
        MessageReceiver._list[ServerSessionConstantsMessage.ID] = function () { return new ServerSessionConstantsMessage(); };
        MessageReceiver._list[ServerSettingsMessage.ID] = function () { return new ServerSettingsMessage(); };
        MessageReceiver._list[AtlasPointInformationsMessage.ID] = function () { return new AtlasPointInformationsMessage(); };
        MessageReceiver._list[CompassResetMessage.ID] = function () { return new CompassResetMessage(); };
        MessageReceiver._list[CompassUpdateMessage.ID] = function () { return new CompassUpdateMessage(); };
        MessageReceiver._list[CompassUpdatePartyMemberMessage.ID] = function () { return new CompassUpdatePartyMemberMessage(); };
        MessageReceiver._list[CompassUpdatePvpSeekMessage.ID] = function () { return new CompassUpdatePvpSeekMessage(); };
        MessageReceiver._list[BasicAckMessage.ID] = function () { return new BasicAckMessage(); };
        MessageReceiver._list[BasicDateMessage.ID] = function () { return new BasicDateMessage(); };
        MessageReceiver._list[BasicLatencyStatsMessage.ID] = function () { return new BasicLatencyStatsMessage(); };
        MessageReceiver._list[BasicLatencyStatsRequestMessage.ID] = function () { return new BasicLatencyStatsRequestMessage(); };
        MessageReceiver._list[BasicNoOperationMessage.ID] = function () { return new BasicNoOperationMessage(); };
        MessageReceiver._list[BasicTimeMessage.ID] = function () { return new BasicTimeMessage(); };
        MessageReceiver._list[BasicWhoAmIRequestMessage.ID] = function () { return new BasicWhoAmIRequestMessage(); };
        MessageReceiver._list[BasicWhoIsMessage.ID] = function () { return new BasicWhoIsMessage(); };
        MessageReceiver._list[BasicWhoIsNoMatchMessage.ID] = function () { return new BasicWhoIsNoMatchMessage(); };
        MessageReceiver._list[BasicWhoIsRequestMessage.ID] = function () { return new BasicWhoIsRequestMessage(); };
        MessageReceiver._list[CurrentServerStatusUpdateMessage.ID] = function () { return new CurrentServerStatusUpdateMessage(); };
        MessageReceiver._list[NumericWhoIsMessage.ID] = function () { return new NumericWhoIsMessage(); };
        MessageReceiver._list[NumericWhoIsRequestMessage.ID] = function () { return new NumericWhoIsRequestMessage(); };
        MessageReceiver._list[SequenceNumberMessage.ID] = function () { return new SequenceNumberMessage(); };
        MessageReceiver._list[SequenceNumberRequestMessage.ID] = function () { return new SequenceNumberRequestMessage(); };
        MessageReceiver._list[TextInformationMessage.ID] = function () { return new TextInformationMessage(); };
        MessageReceiver._list[BasicCharactersListMessage.ID] = function () { return new BasicCharactersListMessage(); };
        MessageReceiver._list[CharacterFirstSelectionMessage.ID] = function () { return new CharacterFirstSelectionMessage(); };
        MessageReceiver._list[CharacterReplayWithRemodelRequestMessage.ID] = function () { return new CharacterReplayWithRemodelRequestMessage(); };
        MessageReceiver._list[CharacterSelectedErrorMessage.ID] = function () { return new CharacterSelectedErrorMessage(); };
        MessageReceiver._list[CharacterSelectedForceMessage.ID] = function () { return new CharacterSelectedForceMessage(); };
        MessageReceiver._list[CharacterSelectedForceReadyMessage.ID] = function () { return new CharacterSelectedForceReadyMessage(); };
        MessageReceiver._list[CharacterSelectedSuccessMessage.ID] = function () { return new CharacterSelectedSuccessMessage(); };
        MessageReceiver._list[CharacterSelectionMessage.ID] = function () { return new CharacterSelectionMessage(); };
        MessageReceiver._list[CharacterSelectionWithRemodelMessage.ID] = function () { return new CharacterSelectionWithRemodelMessage(); };
        MessageReceiver._list[CharactersListErrorMessage.ID] = function () { return new CharactersListErrorMessage(); };
        MessageReceiver._list[CharactersListMessage.ID] = function () { return new CharactersListMessage(); };
        MessageReceiver._list[CharactersListRequestMessage.ID] = function () { return new CharactersListRequestMessage(); };
        MessageReceiver._list[CharactersListWithModificationsMessage.ID] = function () { return new CharactersListWithModificationsMessage(); };
        MessageReceiver._list[CharactersListWithRemodelingMessage.ID] = function () { return new CharactersListWithRemodelingMessage(); };
        MessageReceiver._list[CharacterCreationRequestMessage.ID] = function () { return new CharacterCreationRequestMessage(); };
        MessageReceiver._list[CharacterCreationResultMessage.ID] = function () { return new CharacterCreationResultMessage(); };
        MessageReceiver._list[CharacterNameSuggestionFailureMessage.ID] = function () { return new CharacterNameSuggestionFailureMessage(); };
        MessageReceiver._list[CharacterNameSuggestionRequestMessage.ID] = function () { return new CharacterNameSuggestionRequestMessage(); };
        MessageReceiver._list[CharacterNameSuggestionSuccessMessage.ID] = function () { return new CharacterNameSuggestionSuccessMessage(); };
        MessageReceiver._list[CharacterDeletionErrorMessage.ID] = function () { return new CharacterDeletionErrorMessage(); };
        MessageReceiver._list[CharacterDeletionRequestMessage.ID] = function () { return new CharacterDeletionRequestMessage(); };
        MessageReceiver._list[CharacterReplayRequestMessage.ID] = function () { return new CharacterReplayRequestMessage(); };
        MessageReceiver._list[CharacterExperienceGainMessage.ID] = function () { return new CharacterExperienceGainMessage(); };
        MessageReceiver._list[CharacterLevelUpInformationMessage.ID] = function () { return new CharacterLevelUpInformationMessage(); };
        MessageReceiver._list[CharacterLevelUpMessage.ID] = function () { return new CharacterLevelUpMessage(); };
        MessageReceiver._list[CharacterStatsListMessage.ID] = function () { return new CharacterStatsListMessage(); };
        MessageReceiver._list[FighterStatsListMessage.ID] = function () { return new FighterStatsListMessage(); };
        MessageReceiver._list[LifePointsRegenBeginMessage.ID] = function () { return new LifePointsRegenBeginMessage(); };
        MessageReceiver._list[LifePointsRegenEndMessage.ID] = function () { return new LifePointsRegenEndMessage(); };
        MessageReceiver._list[UpdateLifePointsMessage.ID] = function () { return new UpdateLifePointsMessage(); };
        MessageReceiver._list[PlayerStatusUpdateErrorMessage.ID] = function () { return new PlayerStatusUpdateErrorMessage(); };
        MessageReceiver._list[PlayerStatusUpdateMessage.ID] = function () { return new PlayerStatusUpdateMessage(); };
        MessageReceiver._list[PlayerStatusUpdateRequestMessage.ID] = function () { return new PlayerStatusUpdateRequestMessage(); };
        MessageReceiver._list[ChatAbstractClientMessage.ID] = function () { return new ChatAbstractClientMessage(); };
        MessageReceiver._list[ChatAbstractServerMessage.ID] = function () { return new ChatAbstractServerMessage(); };
        MessageReceiver._list[ChatAdminServerMessage.ID] = function () { return new ChatAdminServerMessage(); };
        MessageReceiver._list[ChatClientMultiMessage.ID] = function () { return new ChatClientMultiMessage(); };
        MessageReceiver._list[ChatClientMultiWithObjectMessage.ID] = function () { return new ChatClientMultiWithObjectMessage(); };
        MessageReceiver._list[ChatClientPrivateMessage.ID] = function () { return new ChatClientPrivateMessage(); };
        MessageReceiver._list[ChatClientPrivateWithObjectMessage.ID] = function () { return new ChatClientPrivateWithObjectMessage(); };
        MessageReceiver._list[ChatErrorMessage.ID] = function () { return new ChatErrorMessage(); };
        MessageReceiver._list[ChatServerCopyMessage.ID] = function () { return new ChatServerCopyMessage(); };
        MessageReceiver._list[ChatServerCopyWithObjectMessage.ID] = function () { return new ChatServerCopyWithObjectMessage(); };
        MessageReceiver._list[ChatServerMessage.ID] = function () { return new ChatServerMessage(); };
        MessageReceiver._list[ChatServerWithObjectMessage.ID] = function () { return new ChatServerWithObjectMessage(); };
        MessageReceiver._list[ChannelEnablingChangeMessage.ID] = function () { return new ChannelEnablingChangeMessage(); };
        MessageReceiver._list[ChannelEnablingMessage.ID] = function () { return new ChannelEnablingMessage(); };
        MessageReceiver._list[EnabledChannelsMessage.ID] = function () { return new EnabledChannelsMessage(); };
        MessageReceiver._list[ChatMessageReportMessage.ID] = function () { return new ChatMessageReportMessage(); };
        MessageReceiver._list[ChatSmileyExtraPackListMessage.ID] = function () { return new ChatSmileyExtraPackListMessage(); };
        MessageReceiver._list[ChatSmileyMessage.ID] = function () { return new ChatSmileyMessage(); };
        MessageReceiver._list[ChatSmileyRequestMessage.ID] = function () { return new ChatSmileyRequestMessage(); };
        MessageReceiver._list[LocalizedChatSmileyMessage.ID] = function () { return new LocalizedChatSmileyMessage(); };
        MessageReceiver._list[MoodSmileyRequestMessage.ID] = function () { return new MoodSmileyRequestMessage(); };
        MessageReceiver._list[MoodSmileyResultMessage.ID] = function () { return new MoodSmileyResultMessage(); };
        MessageReceiver._list[MoodSmileyUpdateMessage.ID] = function () { return new MoodSmileyUpdateMessage(); };
        MessageReceiver._list[GameCautiousMapMovementMessage.ID] = function () { return new GameCautiousMapMovementMessage(); };
        MessageReceiver._list[GameCautiousMapMovementRequestMessage.ID] = function () { return new GameCautiousMapMovementRequestMessage(); };
        MessageReceiver._list[GameContextCreateErrorMessage.ID] = function () { return new GameContextCreateErrorMessage(); };
        MessageReceiver._list[GameContextCreateMessage.ID] = function () { return new GameContextCreateMessage(); };
        MessageReceiver._list[GameContextCreateRequestMessage.ID] = function () { return new GameContextCreateRequestMessage(); };
        MessageReceiver._list[GameContextDestroyMessage.ID] = function () { return new GameContextDestroyMessage(); };
        MessageReceiver._list[GameContextKickMessage.ID] = function () { return new GameContextKickMessage(); };
        MessageReceiver._list[GameContextMoveElementMessage.ID] = function () { return new GameContextMoveElementMessage(); };
        MessageReceiver._list[GameContextMoveMultipleElementsMessage.ID] = function () { return new GameContextMoveMultipleElementsMessage(); };
        MessageReceiver._list[GameContextQuitMessage.ID] = function () { return new GameContextQuitMessage(); };
        MessageReceiver._list[GameContextReadyMessage.ID] = function () { return new GameContextReadyMessage(); };
        MessageReceiver._list[GameContextRefreshEntityLookMessage.ID] = function () { return new GameContextRefreshEntityLookMessage(); };
        MessageReceiver._list[GameContextRemoveElementMessage.ID] = function () { return new GameContextRemoveElementMessage(); };
        MessageReceiver._list[GameContextRemoveElementWithEventMessage.ID] = function () { return new GameContextRemoveElementWithEventMessage(); };
        MessageReceiver._list[GameContextRemoveMultipleElementsMessage.ID] = function () { return new GameContextRemoveMultipleElementsMessage(); };
        MessageReceiver._list[GameContextRemoveMultipleElementsWithEventsMessage.ID] = function () { return new GameContextRemoveMultipleElementsWithEventsMessage(); };
        MessageReceiver._list[GameEntitiesDispositionMessage.ID] = function () { return new GameEntitiesDispositionMessage(); };
        MessageReceiver._list[GameEntityDispositionErrorMessage.ID] = function () { return new GameEntityDispositionErrorMessage(); };
        MessageReceiver._list[GameEntityDispositionMessage.ID] = function () { return new GameEntityDispositionMessage(); };
        MessageReceiver._list[GameMapChangeOrientationMessage.ID] = function () { return new GameMapChangeOrientationMessage(); };
        MessageReceiver._list[GameMapChangeOrientationRequestMessage.ID] = function () { return new GameMapChangeOrientationRequestMessage(); };
        MessageReceiver._list[GameMapChangeOrientationsMessage.ID] = function () { return new GameMapChangeOrientationsMessage(); };
        MessageReceiver._list[GameMapMovementCancelMessage.ID] = function () { return new GameMapMovementCancelMessage(); };
        MessageReceiver._list[GameMapMovementConfirmMessage.ID] = function () { return new GameMapMovementConfirmMessage(); };
        MessageReceiver._list[GameMapMovementMessage.ID] = function () { return new GameMapMovementMessage(); };
        MessageReceiver._list[GameMapMovementRequestMessage.ID] = function () { return new GameMapMovementRequestMessage(); };
        MessageReceiver._list[GameMapNoMovementMessage.ID] = function () { return new GameMapNoMovementMessage(); };
        MessageReceiver._list[ShowCellMessage.ID] = function () { return new ShowCellMessage(); };
        MessageReceiver._list[ShowCellRequestMessage.ID] = function () { return new ShowCellRequestMessage(); };
        MessageReceiver._list[ShowCellSpectatorMessage.ID] = function () { return new ShowCellSpectatorMessage(); };
        MessageReceiver._list[DisplayNumericalValuePaddockMessage.ID] = function () { return new DisplayNumericalValuePaddockMessage(); };
        MessageReceiver._list[DungeonKeyRingMessage.ID] = function () { return new DungeonKeyRingMessage(); };
        MessageReceiver._list[DungeonKeyRingUpdateMessage.ID] = function () { return new DungeonKeyRingUpdateMessage(); };
        MessageReceiver._list[GameFightEndMessage.ID] = function () { return new GameFightEndMessage(); };
        MessageReceiver._list[GameFightHumanReadyStateMessage.ID] = function () { return new GameFightHumanReadyStateMessage(); };
        MessageReceiver._list[GameFightJoinMessage.ID] = function () { return new GameFightJoinMessage(); };
        MessageReceiver._list[GameFightJoinRequestMessage.ID] = function () { return new GameFightJoinRequestMessage(); };
        MessageReceiver._list[GameFightLeaveMessage.ID] = function () { return new GameFightLeaveMessage(); };
        MessageReceiver._list[GameFightNewRoundMessage.ID] = function () { return new GameFightNewRoundMessage(); };
        MessageReceiver._list[GameFightNewWaveMessage.ID] = function () { return new GameFightNewWaveMessage(); };
        MessageReceiver._list[GameFightOptionStateUpdateMessage.ID] = function () { return new GameFightOptionStateUpdateMessage(); };
        MessageReceiver._list[GameFightOptionToggleMessage.ID] = function () { return new GameFightOptionToggleMessage(); };
        MessageReceiver._list[GameFightPlacementPositionRequestMessage.ID] = function () { return new GameFightPlacementPositionRequestMessage(); };
        MessageReceiver._list[GameFightPlacementPossiblePositionsMessage.ID] = function () { return new GameFightPlacementPossiblePositionsMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsAcceptMessage.ID] = function () { return new GameFightPlacementSwapPositionsAcceptMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsCancelMessage.ID] = function () { return new GameFightPlacementSwapPositionsCancelMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsCancelledMessage.ID] = function () { return new GameFightPlacementSwapPositionsCancelledMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsErrorMessage.ID] = function () { return new GameFightPlacementSwapPositionsErrorMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsMessage.ID] = function () { return new GameFightPlacementSwapPositionsMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsOfferMessage.ID] = function () { return new GameFightPlacementSwapPositionsOfferMessage(); };
        MessageReceiver._list[GameFightPlacementSwapPositionsRequestMessage.ID] = function () { return new GameFightPlacementSwapPositionsRequestMessage(); };
        MessageReceiver._list[GameFightReadyMessage.ID] = function () { return new GameFightReadyMessage(); };
        MessageReceiver._list[GameFightRemoveTeamMemberMessage.ID] = function () { return new GameFightRemoveTeamMemberMessage(); };
        MessageReceiver._list[GameFightResumeMessage.ID] = function () { return new GameFightResumeMessage(); };
        MessageReceiver._list[GameFightResumeWithSlavesMessage.ID] = function () { return new GameFightResumeWithSlavesMessage(); };
        MessageReceiver._list[GameFightSpectateMessage.ID] = function () { return new GameFightSpectateMessage(); };
        MessageReceiver._list[GameFightSpectatePlayerRequestMessage.ID] = function () { return new GameFightSpectatePlayerRequestMessage(); };
        MessageReceiver._list[GameFightSpectatorJoinMessage.ID] = function () { return new GameFightSpectatorJoinMessage(); };
        MessageReceiver._list[GameFightStartMessage.ID] = function () { return new GameFightStartMessage(); };
        MessageReceiver._list[GameFightStartingMessage.ID] = function () { return new GameFightStartingMessage(); };
        MessageReceiver._list[GameFightSynchronizeMessage.ID] = function () { return new GameFightSynchronizeMessage(); };
        MessageReceiver._list[GameFightTurnEndMessage.ID] = function () { return new GameFightTurnEndMessage(); };
        MessageReceiver._list[GameFightTurnFinishMessage.ID] = function () { return new GameFightTurnFinishMessage(); };
        MessageReceiver._list[GameFightTurnListMessage.ID] = function () { return new GameFightTurnListMessage(); };
        MessageReceiver._list[GameFightTurnReadyMessage.ID] = function () { return new GameFightTurnReadyMessage(); };
        MessageReceiver._list[GameFightTurnReadyRequestMessage.ID] = function () { return new GameFightTurnReadyRequestMessage(); };
        MessageReceiver._list[GameFightTurnResumeMessage.ID] = function () { return new GameFightTurnResumeMessage(); };
        MessageReceiver._list[GameFightTurnStartMessage.ID] = function () { return new GameFightTurnStartMessage(); };
        MessageReceiver._list[GameFightTurnStartPlayingMessage.ID] = function () { return new GameFightTurnStartPlayingMessage(); };
        MessageReceiver._list[GameFightUpdateTeamMessage.ID] = function () { return new GameFightUpdateTeamMessage(); };
        MessageReceiver._list[SlaveSwitchContextMessage.ID] = function () { return new SlaveSwitchContextMessage(); };
        MessageReceiver._list[ChallengeInfoMessage.ID] = function () { return new ChallengeInfoMessage(); };
        MessageReceiver._list[ChallengeResultMessage.ID] = function () { return new ChallengeResultMessage(); };
        MessageReceiver._list[ChallengeTargetUpdateMessage.ID] = function () { return new ChallengeTargetUpdateMessage(); };
        MessageReceiver._list[ChallengeTargetsListMessage.ID] = function () { return new ChallengeTargetsListMessage(); };
        MessageReceiver._list[ChallengeTargetsListRequestMessage.ID] = function () { return new ChallengeTargetsListRequestMessage(); };
        MessageReceiver._list[GameFightRefreshFighterMessage.ID] = function () { return new GameFightRefreshFighterMessage(); };
        MessageReceiver._list[GameFightShowFighterMessage.ID] = function () { return new GameFightShowFighterMessage(); };
        MessageReceiver._list[GameFightShowFighterRandomStaticPoseMessage.ID] = function () { return new GameFightShowFighterRandomStaticPoseMessage(); };
        MessageReceiver._list[GameDataPaddockObjectAddMessage.ID] = function () { return new GameDataPaddockObjectAddMessage(); };
        MessageReceiver._list[GameDataPaddockObjectListAddMessage.ID] = function () { return new GameDataPaddockObjectListAddMessage(); };
        MessageReceiver._list[GameDataPaddockObjectRemoveMessage.ID] = function () { return new GameDataPaddockObjectRemoveMessage(); };
        MessageReceiver._list[MountDataErrorMessage.ID] = function () { return new MountDataErrorMessage(); };
        MessageReceiver._list[MountDataMessage.ID] = function () { return new MountDataMessage(); };
        MessageReceiver._list[MountEmoteIconUsedOkMessage.ID] = function () { return new MountEmoteIconUsedOkMessage(); };
        MessageReceiver._list[MountEquipedErrorMessage.ID] = function () { return new MountEquipedErrorMessage(); };
        MessageReceiver._list[MountFeedRequestMessage.ID] = function () { return new MountFeedRequestMessage(); };
        MessageReceiver._list[MountInformationInPaddockRequestMessage.ID] = function () { return new MountInformationInPaddockRequestMessage(); };
        MessageReceiver._list[MountInformationRequestMessage.ID] = function () { return new MountInformationRequestMessage(); };
        MessageReceiver._list[MountReleaseRequestMessage.ID] = function () { return new MountReleaseRequestMessage(); };
        MessageReceiver._list[MountReleasedMessage.ID] = function () { return new MountReleasedMessage(); };
        MessageReceiver._list[MountRenameRequestMessage.ID] = function () { return new MountRenameRequestMessage(); };
        MessageReceiver._list[MountRenamedMessage.ID] = function () { return new MountRenamedMessage(); };
        MessageReceiver._list[MountRidingMessage.ID] = function () { return new MountRidingMessage(); };
        MessageReceiver._list[MountSetMessage.ID] = function () { return new MountSetMessage(); };
        MessageReceiver._list[MountSetXpRatioRequestMessage.ID] = function () { return new MountSetXpRatioRequestMessage(); };
        MessageReceiver._list[MountSterilizeRequestMessage.ID] = function () { return new MountSterilizeRequestMessage(); };
        MessageReceiver._list[MountSterilizedMessage.ID] = function () { return new MountSterilizedMessage(); };
        MessageReceiver._list[MountToggleRidingRequestMessage.ID] = function () { return new MountToggleRidingRequestMessage(); };
        MessageReceiver._list[MountUnSetMessage.ID] = function () { return new MountUnSetMessage(); };
        MessageReceiver._list[MountXpRatioMessage.ID] = function () { return new MountXpRatioMessage(); };
        MessageReceiver._list[PaddockBuyRequestMessage.ID] = function () { return new PaddockBuyRequestMessage(); };
        MessageReceiver._list[PaddockBuyResultMessage.ID] = function () { return new PaddockBuyResultMessage(); };
        MessageReceiver._list[PaddockMoveItemRequestMessage.ID] = function () { return new PaddockMoveItemRequestMessage(); };
        MessageReceiver._list[PaddockRemoveItemRequestMessage.ID] = function () { return new PaddockRemoveItemRequestMessage(); };
        MessageReceiver._list[PaddockSellRequestMessage.ID] = function () { return new PaddockSellRequestMessage(); };
        MessageReceiver._list[NotificationByServerMessage.ID] = function () { return new NotificationByServerMessage(); };
        MessageReceiver._list[NotificationListMessage.ID] = function () { return new NotificationListMessage(); };
        MessageReceiver._list[NotificationResetMessage.ID] = function () { return new NotificationResetMessage(); };
        MessageReceiver._list[NotificationUpdateFlagMessage.ID] = function () { return new NotificationUpdateFlagMessage(); };
        MessageReceiver._list[ChangeMapMessage.ID] = function () { return new ChangeMapMessage(); };
        MessageReceiver._list[CurrentMapMessage.ID] = function () { return new CurrentMapMessage(); };
        MessageReceiver._list[ErrorMapNotFoundMessage.ID] = function () { return new ErrorMapNotFoundMessage(); };
        MessageReceiver._list[GameRolePlayShowActorMessage.ID] = function () { return new GameRolePlayShowActorMessage(); };
        MessageReceiver._list[GameRolePlayShowActorWithEventMessage.ID] = function () { return new GameRolePlayShowActorWithEventMessage(); };
        MessageReceiver._list[MapComplementaryInformationsDataInHouseMessage.ID] = function () { return new MapComplementaryInformationsDataInHouseMessage(); };
        MessageReceiver._list[MapComplementaryInformationsDataMessage.ID] = function () { return new MapComplementaryInformationsDataMessage(); };
        MessageReceiver._list[MapComplementaryInformationsWithCoordsMessage.ID] = function () { return new MapComplementaryInformationsWithCoordsMessage(); };
        MessageReceiver._list[MapFightCountMessage.ID] = function () { return new MapFightCountMessage(); };
        MessageReceiver._list[MapInformationsRequestMessage.ID] = function () { return new MapInformationsRequestMessage(); };
        MessageReceiver._list[MapObstacleUpdateMessage.ID] = function () { return new MapObstacleUpdateMessage(); };
        MessageReceiver._list[MapRunningFightDetailsExtendedMessage.ID] = function () { return new MapRunningFightDetailsExtendedMessage(); };
        MessageReceiver._list[MapRunningFightDetailsMessage.ID] = function () { return new MapRunningFightDetailsMessage(); };
        MessageReceiver._list[MapRunningFightDetailsRequestMessage.ID] = function () { return new MapRunningFightDetailsRequestMessage(); };
        MessageReceiver._list[MapRunningFightListMessage.ID] = function () { return new MapRunningFightListMessage(); };
        MessageReceiver._list[MapRunningFightListRequestMessage.ID] = function () { return new MapRunningFightListRequestMessage(); };
        MessageReceiver._list[StopToListenRunningFightRequestMessage.ID] = function () { return new StopToListenRunningFightRequestMessage(); };
        MessageReceiver._list[TeleportOnSameMapMessage.ID] = function () { return new TeleportOnSameMapMessage(); };
        MessageReceiver._list[GameRolePlayFreeSoulRequestMessage.ID] = function () { return new GameRolePlayFreeSoulRequestMessage(); };
        MessageReceiver._list[GameRolePlayGameOverMessage.ID] = function () { return new GameRolePlayGameOverMessage(); };
        MessageReceiver._list[GameRolePlayPlayerLifeStatusMessage.ID] = function () { return new GameRolePlayPlayerLifeStatusMessage(); };
        MessageReceiver._list[WarnOnPermaDeathMessage.ID] = function () { return new WarnOnPermaDeathMessage(); };
        MessageReceiver._list[GameRolePlayDelayedActionFinishedMessage.ID] = function () { return new GameRolePlayDelayedActionFinishedMessage(); };
        MessageReceiver._list[GameRolePlayDelayedActionMessage.ID] = function () { return new GameRolePlayDelayedActionMessage(); };
        MessageReceiver._list[GameRolePlayDelayedObjectUseMessage.ID] = function () { return new GameRolePlayDelayedObjectUseMessage(); };
        MessageReceiver._list[ComicReadingBeginMessage.ID] = function () { return new ComicReadingBeginMessage(); };
        MessageReceiver._list[DocumentReadingBeginMessage.ID] = function () { return new DocumentReadingBeginMessage(); };
        MessageReceiver._list[EmoteAddMessage.ID] = function () { return new EmoteAddMessage(); };
        MessageReceiver._list[EmoteListMessage.ID] = function () { return new EmoteListMessage(); };
        MessageReceiver._list[EmotePlayAbstractMessage.ID] = function () { return new EmotePlayAbstractMessage(); };
        MessageReceiver._list[EmotePlayErrorMessage.ID] = function () { return new EmotePlayErrorMessage(); };
        MessageReceiver._list[EmotePlayMassiveMessage.ID] = function () { return new EmotePlayMassiveMessage(); };
        MessageReceiver._list[EmotePlayMessage.ID] = function () { return new EmotePlayMessage(); };
        MessageReceiver._list[EmotePlayRequestMessage.ID] = function () { return new EmotePlayRequestMessage(); };
        MessageReceiver._list[EmoteRemoveMessage.ID] = function () { return new EmoteRemoveMessage(); };
        MessageReceiver._list[GameRolePlayAggressionMessage.ID] = function () { return new GameRolePlayAggressionMessage(); };
        MessageReceiver._list[GameRolePlayAttackMonsterRequestMessage.ID] = function () { return new GameRolePlayAttackMonsterRequestMessage(); };
        MessageReceiver._list[GameRolePlayFightRequestCanceledMessage.ID] = function () { return new GameRolePlayFightRequestCanceledMessage(); };
        MessageReceiver._list[GameRolePlayPlayerFightFriendlyAnswerMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyAnswerMessage(); };
        MessageReceiver._list[GameRolePlayPlayerFightFriendlyAnsweredMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyAnsweredMessage(); };
        MessageReceiver._list[GameRolePlayPlayerFightFriendlyRequestedMessage.ID] = function () { return new GameRolePlayPlayerFightFriendlyRequestedMessage(); };
        MessageReceiver._list[GameRolePlayPlayerFightRequestMessage.ID] = function () { return new GameRolePlayPlayerFightRequestMessage(); };
        MessageReceiver._list[GameRolePlayRemoveChallengeMessage.ID] = function () { return new GameRolePlayRemoveChallengeMessage(); };
        MessageReceiver._list[GameRolePlayShowChallengeMessage.ID] = function () { return new GameRolePlayShowChallengeMessage(); };
        MessageReceiver._list[GameRolePlayArenaFightAnswerMessage.ID] = function () { return new GameRolePlayArenaFightAnswerMessage(); };
        MessageReceiver._list[GameRolePlayArenaFightPropositionMessage.ID] = function () { return new GameRolePlayArenaFightPropositionMessage(); };
        MessageReceiver._list[GameRolePlayArenaFighterStatusMessage.ID] = function () { return new GameRolePlayArenaFighterStatusMessage(); };
        MessageReceiver._list[GameRolePlayArenaRegisterMessage.ID] = function () { return new GameRolePlayArenaRegisterMessage(); };
        MessageReceiver._list[GameRolePlayArenaRegistrationStatusMessage.ID] = function () { return new GameRolePlayArenaRegistrationStatusMessage(); };
        MessageReceiver._list[GameRolePlayArenaSwitchToFightServerMessage.ID] = function () { return new GameRolePlayArenaSwitchToFightServerMessage(); };
        MessageReceiver._list[GameRolePlayArenaSwitchToGameServerMessage.ID] = function () { return new GameRolePlayArenaSwitchToGameServerMessage(); };
        MessageReceiver._list[GameRolePlayArenaUnregisterMessage.ID] = function () { return new GameRolePlayArenaUnregisterMessage(); };
        MessageReceiver._list[GameRolePlayArenaUpdatePlayerInfosMessage.ID] = function () { return new GameRolePlayArenaUpdatePlayerInfosMessage(); };
        MessageReceiver._list[AccountHouseMessage.ID] = function () { return new AccountHouseMessage(); };
        MessageReceiver._list[HouseBuyRequestMessage.ID] = function () { return new HouseBuyRequestMessage(); };
        MessageReceiver._list[HouseBuyResultMessage.ID] = function () { return new HouseBuyResultMessage(); };
        MessageReceiver._list[HouseKickIndoorMerchantRequestMessage.ID] = function () { return new HouseKickIndoorMerchantRequestMessage(); };
        MessageReceiver._list[HouseKickRequestMessage.ID] = function () { return new HouseKickRequestMessage(); };
        MessageReceiver._list[HouseLockFromInsideRequestMessage.ID] = function () { return new HouseLockFromInsideRequestMessage(); };
        MessageReceiver._list[HousePropertiesMessage.ID] = function () { return new HousePropertiesMessage(); };
        MessageReceiver._list[HouseSellFromInsideRequestMessage.ID] = function () { return new HouseSellFromInsideRequestMessage(); };
        MessageReceiver._list[HouseSellRequestMessage.ID] = function () { return new HouseSellRequestMessage(); };
        MessageReceiver._list[HouseSoldMessage.ID] = function () { return new HouseSoldMessage(); };
        MessageReceiver._list[HouseToSellFilterMessage.ID] = function () { return new HouseToSellFilterMessage(); };
        MessageReceiver._list[HouseToSellListMessage.ID] = function () { return new HouseToSellListMessage(); };
        MessageReceiver._list[HouseToSellListRequestMessage.ID] = function () { return new HouseToSellListRequestMessage(); };
        MessageReceiver._list[HouseGuildNoneMessage.ID] = function () { return new HouseGuildNoneMessage(); };
        MessageReceiver._list[HouseGuildRightsMessage.ID] = function () { return new HouseGuildRightsMessage(); };
        MessageReceiver._list[HouseGuildRightsViewMessage.ID] = function () { return new HouseGuildRightsViewMessage(); };
        MessageReceiver._list[HouseGuildShareRequestMessage.ID] = function () { return new HouseGuildShareRequestMessage(); };
        MessageReceiver._list[JobAllowMultiCraftRequestMessage.ID] = function () { return new JobAllowMultiCraftRequestMessage(); };
        MessageReceiver._list[JobBookSubscriptionMessage.ID] = function () { return new JobBookSubscriptionMessage(); };
        MessageReceiver._list[JobCrafterDirectoryAddMessage.ID] = function () { return new JobCrafterDirectoryAddMessage(); };
        MessageReceiver._list[JobCrafterDirectoryDefineSettingsMessage.ID] = function () { return new JobCrafterDirectoryDefineSettingsMessage(); };
        MessageReceiver._list[JobCrafterDirectoryEntryMessage.ID] = function () { return new JobCrafterDirectoryEntryMessage(); };
        MessageReceiver._list[JobCrafterDirectoryEntryRequestMessage.ID] = function () { return new JobCrafterDirectoryEntryRequestMessage(); };
        MessageReceiver._list[JobCrafterDirectoryListMessage.ID] = function () { return new JobCrafterDirectoryListMessage(); };
        MessageReceiver._list[JobCrafterDirectoryListRequestMessage.ID] = function () { return new JobCrafterDirectoryListRequestMessage(); };
        MessageReceiver._list[JobCrafterDirectoryRemoveMessage.ID] = function () { return new JobCrafterDirectoryRemoveMessage(); };
        MessageReceiver._list[JobCrafterDirectorySettingsMessage.ID] = function () { return new JobCrafterDirectorySettingsMessage(); };
        MessageReceiver._list[JobDescriptionMessage.ID] = function () { return new JobDescriptionMessage(); };
        MessageReceiver._list[JobExperienceMultiUpdateMessage.ID] = function () { return new JobExperienceMultiUpdateMessage(); };
        MessageReceiver._list[JobExperienceOtherPlayerUpdateMessage.ID] = function () { return new JobExperienceOtherPlayerUpdateMessage(); };
        MessageReceiver._list[JobExperienceUpdateMessage.ID] = function () { return new JobExperienceUpdateMessage(); };
        MessageReceiver._list[JobLevelUpMessage.ID] = function () { return new JobLevelUpMessage(); };
        MessageReceiver._list[JobMultiCraftAvailableSkillsMessage.ID] = function () { return new JobMultiCraftAvailableSkillsMessage(); };
        MessageReceiver._list[LockableChangeCodeMessage.ID] = function () { return new LockableChangeCodeMessage(); };
        MessageReceiver._list[LockableCodeResultMessage.ID] = function () { return new LockableCodeResultMessage(); };
        MessageReceiver._list[LockableShowCodeDialogMessage.ID] = function () { return new LockableShowCodeDialogMessage(); };
        MessageReceiver._list[LockableStateUpdateAbstractMessage.ID] = function () { return new LockableStateUpdateAbstractMessage(); };
        MessageReceiver._list[LockableStateUpdateHouseDoorMessage.ID] = function () { return new LockableStateUpdateHouseDoorMessage(); };
        MessageReceiver._list[LockableStateUpdateStorageMessage.ID] = function () { return new LockableStateUpdateStorageMessage(); };
        MessageReceiver._list[LockableUseCodeMessage.ID] = function () { return new LockableUseCodeMessage(); };
        MessageReceiver._list[AlliancePrismDialogQuestionMessage.ID] = function () { return new AlliancePrismDialogQuestionMessage(); };
        MessageReceiver._list[AllianceTaxCollectorDialogQuestionExtendedMessage.ID] = function () { return new AllianceTaxCollectorDialogQuestionExtendedMessage(); };
        MessageReceiver._list[EntityTalkMessage.ID] = function () { return new EntityTalkMessage(); };
        MessageReceiver._list[MapNpcsQuestStatusUpdateMessage.ID] = function () { return new MapNpcsQuestStatusUpdateMessage(); };
        MessageReceiver._list[NpcDialogCreationMessage.ID] = function () { return new NpcDialogCreationMessage(); };
        MessageReceiver._list[NpcDialogQuestionMessage.ID] = function () { return new NpcDialogQuestionMessage(); };
        MessageReceiver._list[NpcDialogReplyMessage.ID] = function () { return new NpcDialogReplyMessage(); };
        MessageReceiver._list[NpcGenericActionFailureMessage.ID] = function () { return new NpcGenericActionFailureMessage(); };
        MessageReceiver._list[NpcGenericActionRequestMessage.ID] = function () { return new NpcGenericActionRequestMessage(); };
        MessageReceiver._list[TaxCollectorDialogQuestionBasicMessage.ID] = function () { return new TaxCollectorDialogQuestionBasicMessage(); };
        MessageReceiver._list[TaxCollectorDialogQuestionExtendedMessage.ID] = function () { return new TaxCollectorDialogQuestionExtendedMessage(); };
        MessageReceiver._list[ObjectGroundAddedMessage.ID] = function () { return new ObjectGroundAddedMessage(); };
        MessageReceiver._list[ObjectGroundListAddedMessage.ID] = function () { return new ObjectGroundListAddedMessage(); };
        MessageReceiver._list[ObjectGroundRemovedMessage.ID] = function () { return new ObjectGroundRemovedMessage(); };
        MessageReceiver._list[ObjectGroundRemovedMultipleMessage.ID] = function () { return new ObjectGroundRemovedMultipleMessage(); };
        MessageReceiver._list[GameDataPlayFarmObjectAnimationMessage.ID] = function () { return new GameDataPlayFarmObjectAnimationMessage(); };
        MessageReceiver._list[PaddockPropertiesMessage.ID] = function () { return new PaddockPropertiesMessage(); };
        MessageReceiver._list[PaddockSellBuyDialogMessage.ID] = function () { return new PaddockSellBuyDialogMessage(); };
        MessageReceiver._list[PaddockToSellFilterMessage.ID] = function () { return new PaddockToSellFilterMessage(); };
        MessageReceiver._list[PaddockToSellListMessage.ID] = function () { return new PaddockToSellListMessage(); };
        MessageReceiver._list[PaddockToSellListRequestMessage.ID] = function () { return new PaddockToSellListRequestMessage(); };
        MessageReceiver._list[AbstractPartyEventMessage.ID] = function () { return new AbstractPartyEventMessage(); };
        MessageReceiver._list[AbstractPartyMessage.ID] = function () { return new AbstractPartyMessage(); };
        MessageReceiver._list[DungeonPartyFinderAvailableDungeonsMessage.ID] = function () { return new DungeonPartyFinderAvailableDungeonsMessage(); };
        MessageReceiver._list[DungeonPartyFinderAvailableDungeonsRequestMessage.ID] = function () { return new DungeonPartyFinderAvailableDungeonsRequestMessage(); };
        MessageReceiver._list[DungeonPartyFinderListenErrorMessage.ID] = function () { return new DungeonPartyFinderListenErrorMessage(); };
        MessageReceiver._list[DungeonPartyFinderListenRequestMessage.ID] = function () { return new DungeonPartyFinderListenRequestMessage(); };
        MessageReceiver._list[DungeonPartyFinderRegisterErrorMessage.ID] = function () { return new DungeonPartyFinderRegisterErrorMessage(); };
        MessageReceiver._list[DungeonPartyFinderRegisterRequestMessage.ID] = function () { return new DungeonPartyFinderRegisterRequestMessage(); };
        MessageReceiver._list[DungeonPartyFinderRegisterSuccessMessage.ID] = function () { return new DungeonPartyFinderRegisterSuccessMessage(); };
        MessageReceiver._list[DungeonPartyFinderRoomContentMessage.ID] = function () { return new DungeonPartyFinderRoomContentMessage(); };
        MessageReceiver._list[DungeonPartyFinderRoomContentUpdateMessage.ID] = function () { return new DungeonPartyFinderRoomContentUpdateMessage(); };
        MessageReceiver._list[PartyAbdicateThroneMessage.ID] = function () { return new PartyAbdicateThroneMessage(); };
        MessageReceiver._list[PartyAcceptInvitationMessage.ID] = function () { return new PartyAcceptInvitationMessage(); };
        MessageReceiver._list[PartyCancelInvitationMessage.ID] = function () { return new PartyCancelInvitationMessage(); };
        MessageReceiver._list[PartyCancelInvitationNotificationMessage.ID] = function () { return new PartyCancelInvitationNotificationMessage(); };
        MessageReceiver._list[PartyCannotJoinErrorMessage.ID] = function () { return new PartyCannotJoinErrorMessage(); };
        MessageReceiver._list[PartyDeletedMessage.ID] = function () { return new PartyDeletedMessage(); };
        MessageReceiver._list[PartyFollowMemberRequestMessage.ID] = function () { return new PartyFollowMemberRequestMessage(); };
        MessageReceiver._list[PartyFollowStatusUpdateMessage.ID] = function () { return new PartyFollowStatusUpdateMessage(); };
        MessageReceiver._list[PartyFollowThisMemberRequestMessage.ID] = function () { return new PartyFollowThisMemberRequestMessage(); };
        MessageReceiver._list[PartyInvitationArenaRequestMessage.ID] = function () { return new PartyInvitationArenaRequestMessage(); };
        MessageReceiver._list[PartyInvitationCancelledForGuestMessage.ID] = function () { return new PartyInvitationCancelledForGuestMessage(); };
        MessageReceiver._list[PartyInvitationDetailsMessage.ID] = function () { return new PartyInvitationDetailsMessage(); };
        MessageReceiver._list[PartyInvitationDetailsRequestMessage.ID] = function () { return new PartyInvitationDetailsRequestMessage(); };
        MessageReceiver._list[PartyInvitationDungeonDetailsMessage.ID] = function () { return new PartyInvitationDungeonDetailsMessage(); };
        MessageReceiver._list[PartyInvitationDungeonMessage.ID] = function () { return new PartyInvitationDungeonMessage(); };
        MessageReceiver._list[PartyInvitationDungeonRequestMessage.ID] = function () { return new PartyInvitationDungeonRequestMessage(); };
        MessageReceiver._list[PartyInvitationMessage.ID] = function () { return new PartyInvitationMessage(); };
        MessageReceiver._list[PartyInvitationRequestMessage.ID] = function () { return new PartyInvitationRequestMessage(); };
        MessageReceiver._list[PartyJoinMessage.ID] = function () { return new PartyJoinMessage(); };
        MessageReceiver._list[PartyKickRequestMessage.ID] = function () { return new PartyKickRequestMessage(); };
        MessageReceiver._list[PartyKickedByMessage.ID] = function () { return new PartyKickedByMessage(); };
        MessageReceiver._list[PartyLeaderUpdateMessage.ID] = function () { return new PartyLeaderUpdateMessage(); };
        MessageReceiver._list[PartyLeaveMessage.ID] = function () { return new PartyLeaveMessage(); };
        MessageReceiver._list[PartyLeaveRequestMessage.ID] = function () { return new PartyLeaveRequestMessage(); };
        MessageReceiver._list[PartyLocateMembersMessage.ID] = function () { return new PartyLocateMembersMessage(); };
        MessageReceiver._list[PartyLoyaltyStatusMessage.ID] = function () { return new PartyLoyaltyStatusMessage(); };
        MessageReceiver._list[PartyMemberEjectedMessage.ID] = function () { return new PartyMemberEjectedMessage(); };
        MessageReceiver._list[PartyMemberInFightMessage.ID] = function () { return new PartyMemberInFightMessage(); };
        MessageReceiver._list[PartyMemberRemoveMessage.ID] = function () { return new PartyMemberRemoveMessage(); };
        MessageReceiver._list[PartyModifiableStatusMessage.ID] = function () { return new PartyModifiableStatusMessage(); };
        MessageReceiver._list[PartyNameSetErrorMessage.ID] = function () { return new PartyNameSetErrorMessage(); };
        MessageReceiver._list[PartyNameSetRequestMessage.ID] = function () { return new PartyNameSetRequestMessage(); };
        MessageReceiver._list[PartyNameUpdateMessage.ID] = function () { return new PartyNameUpdateMessage(); };
        MessageReceiver._list[PartyNewGuestMessage.ID] = function () { return new PartyNewGuestMessage(); };
        MessageReceiver._list[PartyNewMemberMessage.ID] = function () { return new PartyNewMemberMessage(); };
        MessageReceiver._list[PartyPledgeLoyaltyRequestMessage.ID] = function () { return new PartyPledgeLoyaltyRequestMessage(); };
        MessageReceiver._list[PartyRefuseInvitationMessage.ID] = function () { return new PartyRefuseInvitationMessage(); };
        MessageReceiver._list[PartyRefuseInvitationNotificationMessage.ID] = function () { return new PartyRefuseInvitationNotificationMessage(); };
        MessageReceiver._list[PartyRestrictedMessage.ID] = function () { return new PartyRestrictedMessage(); };
        MessageReceiver._list[PartyStopFollowRequestMessage.ID] = function () { return new PartyStopFollowRequestMessage(); };
        MessageReceiver._list[PartyUpdateLightMessage.ID] = function () { return new PartyUpdateLightMessage(); };
        MessageReceiver._list[PartyUpdateMessage.ID] = function () { return new PartyUpdateMessage(); };
        MessageReceiver._list[PartyCompanionUpdateLightMessage.ID] = function () { return new PartyCompanionUpdateLightMessage(); };
        MessageReceiver._list[PurchasableDialogMessage.ID] = function () { return new PurchasableDialogMessage(); };
        MessageReceiver._list[GuidedModeQuitRequestMessage.ID] = function () { return new GuidedModeQuitRequestMessage(); };
        MessageReceiver._list[GuidedModeReturnRequestMessage.ID] = function () { return new GuidedModeReturnRequestMessage(); };
        MessageReceiver._list[QuestListMessage.ID] = function () { return new QuestListMessage(); };
        MessageReceiver._list[QuestListRequestMessage.ID] = function () { return new QuestListRequestMessage(); };
        MessageReceiver._list[QuestObjectiveValidatedMessage.ID] = function () { return new QuestObjectiveValidatedMessage(); };
        MessageReceiver._list[QuestObjectiveValidationMessage.ID] = function () { return new QuestObjectiveValidationMessage(); };
        MessageReceiver._list[QuestStartRequestMessage.ID] = function () { return new QuestStartRequestMessage(); };
        MessageReceiver._list[QuestStartedMessage.ID] = function () { return new QuestStartedMessage(); };
        MessageReceiver._list[QuestStepInfoMessage.ID] = function () { return new QuestStepInfoMessage(); };
        MessageReceiver._list[QuestStepInfoRequestMessage.ID] = function () { return new QuestStepInfoRequestMessage(); };
        MessageReceiver._list[QuestStepStartedMessage.ID] = function () { return new QuestStepStartedMessage(); };
        MessageReceiver._list[QuestStepValidatedMessage.ID] = function () { return new QuestStepValidatedMessage(); };
        MessageReceiver._list[QuestValidatedMessage.ID] = function () { return new QuestValidatedMessage(); };
        MessageReceiver._list[SpellForgetUIMessage.ID] = function () { return new SpellForgetUIMessage(); };
        MessageReceiver._list[SpellForgottenMessage.ID] = function () { return new SpellForgottenMessage(); };
        MessageReceiver._list[SpellItemBoostMessage.ID] = function () { return new SpellItemBoostMessage(); };
        MessageReceiver._list[SpellUpgradeFailureMessage.ID] = function () { return new SpellUpgradeFailureMessage(); };
        MessageReceiver._list[SpellUpgradeRequestMessage.ID] = function () { return new SpellUpgradeRequestMessage(); };
        MessageReceiver._list[SpellUpgradeSuccessMessage.ID] = function () { return new SpellUpgradeSuccessMessage(); };
        MessageReceiver._list[ValidateSpellForgetMessage.ID] = function () { return new ValidateSpellForgetMessage(); };
        MessageReceiver._list[StatsUpgradeRequestMessage.ID] = function () { return new StatsUpgradeRequestMessage(); };
        MessageReceiver._list[StatsUpgradeResultMessage.ID] = function () { return new StatsUpgradeResultMessage(); };
        MessageReceiver._list[PortalUseRequestMessage.ID] = function () { return new PortalUseRequestMessage(); };
        MessageReceiver._list[TreasureHuntAvailableRetryCountUpdateMessage.ID] = function () { return new TreasureHuntAvailableRetryCountUpdateMessage(); };
        MessageReceiver._list[TreasureHuntDigRequestAnswerFailedMessage.ID] = function () { return new TreasureHuntDigRequestAnswerFailedMessage(); };
        MessageReceiver._list[TreasureHuntDigRequestAnswerMessage.ID] = function () { return new TreasureHuntDigRequestAnswerMessage(); };
        MessageReceiver._list[TreasureHuntDigRequestMessage.ID] = function () { return new TreasureHuntDigRequestMessage(); };
        MessageReceiver._list[TreasureHuntFinishedMessage.ID] = function () { return new TreasureHuntFinishedMessage(); };
        MessageReceiver._list[TreasureHuntFlagRemoveRequestMessage.ID] = function () { return new TreasureHuntFlagRemoveRequestMessage(); };
        MessageReceiver._list[TreasureHuntFlagRequestAnswerMessage.ID] = function () { return new TreasureHuntFlagRequestAnswerMessage(); };
        MessageReceiver._list[TreasureHuntFlagRequestMessage.ID] = function () { return new TreasureHuntFlagRequestMessage(); };
        MessageReceiver._list[TreasureHuntGiveUpRequestMessage.ID] = function () { return new TreasureHuntGiveUpRequestMessage(); };
        MessageReceiver._list[TreasureHuntLegendaryRequestMessage.ID] = function () { return new TreasureHuntLegendaryRequestMessage(); };
        MessageReceiver._list[TreasureHuntMessage.ID] = function () { return new TreasureHuntMessage(); };
        MessageReceiver._list[TreasureHuntRequestAnswerMessage.ID] = function () { return new TreasureHuntRequestAnswerMessage(); };
        MessageReceiver._list[TreasureHuntRequestMessage.ID] = function () { return new TreasureHuntRequestMessage(); };
        MessageReceiver._list[TreasureHuntShowLegendaryUIMessage.ID] = function () { return new TreasureHuntShowLegendaryUIMessage(); };
        MessageReceiver._list[GameRolePlaySpellAnimMessage.ID] = function () { return new GameRolePlaySpellAnimMessage(); };
        MessageReceiver._list[LeaveDialogMessage.ID] = function () { return new LeaveDialogMessage(); };
        MessageReceiver._list[LeaveDialogRequestMessage.ID] = function () { return new LeaveDialogRequestMessage(); };
        MessageReceiver._list[PauseDialogMessage.ID] = function () { return new PauseDialogMessage(); };
        MessageReceiver._list[FriendAddFailureMessage.ID] = function () { return new FriendAddFailureMessage(); };
        MessageReceiver._list[FriendAddRequestMessage.ID] = function () { return new FriendAddRequestMessage(); };
        MessageReceiver._list[FriendAddedMessage.ID] = function () { return new FriendAddedMessage(); };
        MessageReceiver._list[FriendDeleteRequestMessage.ID] = function () { return new FriendDeleteRequestMessage(); };
        MessageReceiver._list[FriendDeleteResultMessage.ID] = function () { return new FriendDeleteResultMessage(); };
        MessageReceiver._list[FriendJoinRequestMessage.ID] = function () { return new FriendJoinRequestMessage(); };
        MessageReceiver._list[FriendSetWarnOnConnectionMessage.ID] = function () { return new FriendSetWarnOnConnectionMessage(); };
        MessageReceiver._list[FriendSetWarnOnLevelGainMessage.ID] = function () { return new FriendSetWarnOnLevelGainMessage(); };
        MessageReceiver._list[FriendSpouseFollowWithCompassRequestMessage.ID] = function () { return new FriendSpouseFollowWithCompassRequestMessage(); };
        MessageReceiver._list[FriendSpouseJoinRequestMessage.ID] = function () { return new FriendSpouseJoinRequestMessage(); };
        MessageReceiver._list[FriendUpdateMessage.ID] = function () { return new FriendUpdateMessage(); };
        MessageReceiver._list[FriendWarnOnConnectionStateMessage.ID] = function () { return new FriendWarnOnConnectionStateMessage(); };
        MessageReceiver._list[FriendWarnOnLevelGainStateMessage.ID] = function () { return new FriendWarnOnLevelGainStateMessage(); };
        MessageReceiver._list[FriendsGetListMessage.ID] = function () { return new FriendsGetListMessage(); };
        MessageReceiver._list[FriendsListMessage.ID] = function () { return new FriendsListMessage(); };
        MessageReceiver._list[GuildMemberSetWarnOnConnectionMessage.ID] = function () { return new GuildMemberSetWarnOnConnectionMessage(); };
        MessageReceiver._list[GuildMemberWarnOnConnectionStateMessage.ID] = function () { return new GuildMemberWarnOnConnectionStateMessage(); };
        MessageReceiver._list[IgnoredAddFailureMessage.ID] = function () { return new IgnoredAddFailureMessage(); };
        MessageReceiver._list[IgnoredAddRequestMessage.ID] = function () { return new IgnoredAddRequestMessage(); };
        MessageReceiver._list[IgnoredAddedMessage.ID] = function () { return new IgnoredAddedMessage(); };
        MessageReceiver._list[IgnoredDeleteRequestMessage.ID] = function () { return new IgnoredDeleteRequestMessage(); };
        MessageReceiver._list[IgnoredDeleteResultMessage.ID] = function () { return new IgnoredDeleteResultMessage(); };
        MessageReceiver._list[IgnoredGetListMessage.ID] = function () { return new IgnoredGetListMessage(); };
        MessageReceiver._list[IgnoredListMessage.ID] = function () { return new IgnoredListMessage(); };
        MessageReceiver._list[SpouseGetInformationsMessage.ID] = function () { return new SpouseGetInformationsMessage(); };
        MessageReceiver._list[SpouseInformationsMessage.ID] = function () { return new SpouseInformationsMessage(); };
        MessageReceiver._list[SpouseStatusMessage.ID] = function () { return new SpouseStatusMessage(); };
        MessageReceiver._list[WarnOnPermaDeathStateMessage.ID] = function () { return new WarnOnPermaDeathStateMessage(); };
        MessageReceiver._list[GuestLimitationMessage.ID] = function () { return new GuestLimitationMessage(); };
        MessageReceiver._list[GuestModeMessage.ID] = function () { return new GuestModeMessage(); };
        MessageReceiver._list[ChallengeFightJoinRefusedMessage.ID] = function () { return new ChallengeFightJoinRefusedMessage(); };
        MessageReceiver._list[GuildChangeMemberParametersMessage.ID] = function () { return new GuildChangeMemberParametersMessage(); };
        MessageReceiver._list[GuildCharacsUpgradeRequestMessage.ID] = function () { return new GuildCharacsUpgradeRequestMessage(); };
        MessageReceiver._list[GuildCreationResultMessage.ID] = function () { return new GuildCreationResultMessage(); };
        MessageReceiver._list[GuildCreationStartedMessage.ID] = function () { return new GuildCreationStartedMessage(); };
        MessageReceiver._list[GuildCreationValidMessage.ID] = function () { return new GuildCreationValidMessage(); };
        MessageReceiver._list[GuildFactsErrorMessage.ID] = function () { return new GuildFactsErrorMessage(); };
        MessageReceiver._list[GuildFactsMessage.ID] = function () { return new GuildFactsMessage(); };
        MessageReceiver._list[GuildFactsRequestMessage.ID] = function () { return new GuildFactsRequestMessage(); };
        MessageReceiver._list[GuildGetInformationsMessage.ID] = function () { return new GuildGetInformationsMessage(); };
        MessageReceiver._list[GuildHouseRemoveMessage.ID] = function () { return new GuildHouseRemoveMessage(); };
        MessageReceiver._list[GuildHouseTeleportRequestMessage.ID] = function () { return new GuildHouseTeleportRequestMessage(); };
        MessageReceiver._list[GuildHouseUpdateInformationMessage.ID] = function () { return new GuildHouseUpdateInformationMessage(); };
        MessageReceiver._list[GuildHousesInformationMessage.ID] = function () { return new GuildHousesInformationMessage(); };
        MessageReceiver._list[GuildInAllianceFactsMessage.ID] = function () { return new GuildInAllianceFactsMessage(); };
        MessageReceiver._list[GuildInformationsGeneralMessage.ID] = function () { return new GuildInformationsGeneralMessage(); };
        MessageReceiver._list[GuildInformationsMemberUpdateMessage.ID] = function () { return new GuildInformationsMemberUpdateMessage(); };
        MessageReceiver._list[GuildInformationsMembersMessage.ID] = function () { return new GuildInformationsMembersMessage(); };
        MessageReceiver._list[GuildInformationsPaddocksMessage.ID] = function () { return new GuildInformationsPaddocksMessage(); };
        MessageReceiver._list[GuildInfosUpgradeMessage.ID] = function () { return new GuildInfosUpgradeMessage(); };
        MessageReceiver._list[GuildInvitationAnswerMessage.ID] = function () { return new GuildInvitationAnswerMessage(); };
        MessageReceiver._list[GuildInvitationByNameMessage.ID] = function () { return new GuildInvitationByNameMessage(); };
        MessageReceiver._list[GuildInvitationMessage.ID] = function () { return new GuildInvitationMessage(); };
        MessageReceiver._list[GuildInvitationStateRecrutedMessage.ID] = function () { return new GuildInvitationStateRecrutedMessage(); };
        MessageReceiver._list[GuildInvitationStateRecruterMessage.ID] = function () { return new GuildInvitationStateRecruterMessage(); };
        MessageReceiver._list[GuildInvitedMessage.ID] = function () { return new GuildInvitedMessage(); };
        MessageReceiver._list[GuildJoinedMessage.ID] = function () { return new GuildJoinedMessage(); };
        MessageReceiver._list[GuildKickRequestMessage.ID] = function () { return new GuildKickRequestMessage(); };
        MessageReceiver._list[GuildLeftMessage.ID] = function () { return new GuildLeftMessage(); };
        MessageReceiver._list[GuildLevelUpMessage.ID] = function () { return new GuildLevelUpMessage(); };
        MessageReceiver._list[GuildListMessage.ID] = function () { return new GuildListMessage(); };
        MessageReceiver._list[GuildMemberLeavingMessage.ID] = function () { return new GuildMemberLeavingMessage(); };
        MessageReceiver._list[GuildMemberOnlineStatusMessage.ID] = function () { return new GuildMemberOnlineStatusMessage(); };
        MessageReceiver._list[GuildMembershipMessage.ID] = function () { return new GuildMembershipMessage(); };
        MessageReceiver._list[GuildModificationEmblemValidMessage.ID] = function () { return new GuildModificationEmblemValidMessage(); };
        MessageReceiver._list[GuildModificationNameValidMessage.ID] = function () { return new GuildModificationNameValidMessage(); };
        MessageReceiver._list[GuildModificationStartedMessage.ID] = function () { return new GuildModificationStartedMessage(); };
        MessageReceiver._list[GuildModificationValidMessage.ID] = function () { return new GuildModificationValidMessage(); };
        MessageReceiver._list[GuildMotdMessage.ID] = function () { return new GuildMotdMessage(); };
        MessageReceiver._list[GuildMotdSetErrorMessage.ID] = function () { return new GuildMotdSetErrorMessage(); };
        MessageReceiver._list[GuildPaddockBoughtMessage.ID] = function () { return new GuildPaddockBoughtMessage(); };
        MessageReceiver._list[GuildPaddockRemovedMessage.ID] = function () { return new GuildPaddockRemovedMessage(); };
        MessageReceiver._list[GuildPaddockTeleportRequestMessage.ID] = function () { return new GuildPaddockTeleportRequestMessage(); };
        MessageReceiver._list[GuildSpellUpgradeRequestMessage.ID] = function () { return new GuildSpellUpgradeRequestMessage(); };
        MessageReceiver._list[GuildVersatileInfoListMessage.ID] = function () { return new GuildVersatileInfoListMessage(); };
        MessageReceiver._list[AbstractTaxCollectorListMessage.ID] = function () { return new AbstractTaxCollectorListMessage(); };
        MessageReceiver._list[GameRolePlayTaxCollectorFightRequestMessage.ID] = function () { return new GameRolePlayTaxCollectorFightRequestMessage(); };
        MessageReceiver._list[GuildFightJoinRequestMessage.ID] = function () { return new GuildFightJoinRequestMessage(); };
        MessageReceiver._list[GuildFightLeaveRequestMessage.ID] = function () { return new GuildFightLeaveRequestMessage(); };
        MessageReceiver._list[GuildFightPlayersEnemiesListMessage.ID] = function () { return new GuildFightPlayersEnemiesListMessage(); };
        MessageReceiver._list[GuildFightPlayersEnemyRemoveMessage.ID] = function () { return new GuildFightPlayersEnemyRemoveMessage(); };
        MessageReceiver._list[GuildFightPlayersHelpersJoinMessage.ID] = function () { return new GuildFightPlayersHelpersJoinMessage(); };
        MessageReceiver._list[GuildFightPlayersHelpersLeaveMessage.ID] = function () { return new GuildFightPlayersHelpersLeaveMessage(); };
        MessageReceiver._list[GuildFightTakePlaceRequestMessage.ID] = function () { return new GuildFightTakePlaceRequestMessage(); };
        MessageReceiver._list[TaxCollectorAttackedMessage.ID] = function () { return new TaxCollectorAttackedMessage(); };
        MessageReceiver._list[TaxCollectorAttackedResultMessage.ID] = function () { return new TaxCollectorAttackedResultMessage(); };
        MessageReceiver._list[TaxCollectorErrorMessage.ID] = function () { return new TaxCollectorErrorMessage(); };
        MessageReceiver._list[TaxCollectorListMessage.ID] = function () { return new TaxCollectorListMessage(); };
        MessageReceiver._list[TaxCollectorMovementAddMessage.ID] = function () { return new TaxCollectorMovementAddMessage(); };
        MessageReceiver._list[TaxCollectorMovementMessage.ID] = function () { return new TaxCollectorMovementMessage(); };
        MessageReceiver._list[TaxCollectorMovementRemoveMessage.ID] = function () { return new TaxCollectorMovementRemoveMessage(); };
        MessageReceiver._list[TaxCollectorStateUpdateMessage.ID] = function () { return new TaxCollectorStateUpdateMessage(); };
        MessageReceiver._list[TopTaxCollectorListMessage.ID] = function () { return new TopTaxCollectorListMessage(); };
        MessageReceiver._list[IdolFightPreparationUpdateMessage.ID] = function () { return new IdolFightPreparationUpdateMessage(); };
        MessageReceiver._list[IdolListMessage.ID] = function () { return new IdolListMessage(); };
        MessageReceiver._list[IdolPartyLostMessage.ID] = function () { return new IdolPartyLostMessage(); };
        MessageReceiver._list[IdolPartyRefreshMessage.ID] = function () { return new IdolPartyRefreshMessage(); };
        MessageReceiver._list[IdolPartyRegisterRequestMessage.ID] = function () { return new IdolPartyRegisterRequestMessage(); };
        MessageReceiver._list[IdolSelectErrorMessage.ID] = function () { return new IdolSelectErrorMessage(); };
        MessageReceiver._list[IdolSelectRequestMessage.ID] = function () { return new IdolSelectRequestMessage(); };
        MessageReceiver._list[IdolSelectedMessage.ID] = function () { return new IdolSelectedMessage(); };
        MessageReceiver._list[CharacterCapabilitiesMessage.ID] = function () { return new CharacterCapabilitiesMessage(); };
        MessageReceiver._list[CharacterLoadingCompleteMessage.ID] = function () { return new CharacterLoadingCompleteMessage(); };
        MessageReceiver._list[OnConnectionEventMessage.ID] = function () { return new OnConnectionEventMessage(); };
        MessageReceiver._list[ServerExperienceModificatorMessage.ID] = function () { return new ServerExperienceModificatorMessage(); };
        MessageReceiver._list[SetCharacterRestrictionsMessage.ID] = function () { return new SetCharacterRestrictionsMessage(); };
        MessageReceiver._list[InteractiveElementUpdatedMessage.ID] = function () { return new InteractiveElementUpdatedMessage(); };
        MessageReceiver._list[InteractiveMapUpdateMessage.ID] = function () { return new InteractiveMapUpdateMessage(); };
        MessageReceiver._list[InteractiveUseEndedMessage.ID] = function () { return new InteractiveUseEndedMessage(); };
        MessageReceiver._list[InteractiveUseErrorMessage.ID] = function () { return new InteractiveUseErrorMessage(); };
        MessageReceiver._list[InteractiveUseRequestMessage.ID] = function () { return new InteractiveUseRequestMessage(); };
        MessageReceiver._list[InteractiveUsedMessage.ID] = function () { return new InteractiveUsedMessage(); };
        MessageReceiver._list[StatedElementUpdatedMessage.ID] = function () { return new StatedElementUpdatedMessage(); };
        MessageReceiver._list[StatedMapUpdateMessage.ID] = function () { return new StatedMapUpdateMessage(); };
        MessageReceiver._list[TeleportBuddiesAnswerMessage.ID] = function () { return new TeleportBuddiesAnswerMessage(); };
        MessageReceiver._list[TeleportBuddiesMessage.ID] = function () { return new TeleportBuddiesMessage(); };
        MessageReceiver._list[TeleportBuddiesRequestedMessage.ID] = function () { return new TeleportBuddiesRequestedMessage(); };
        MessageReceiver._list[TeleportToBuddyAnswerMessage.ID] = function () { return new TeleportToBuddyAnswerMessage(); };
        MessageReceiver._list[TeleportToBuddyCloseMessage.ID] = function () { return new TeleportToBuddyCloseMessage(); };
        MessageReceiver._list[TeleportToBuddyOfferMessage.ID] = function () { return new TeleportToBuddyOfferMessage(); };
        MessageReceiver._list[TeleportDestinationsListMessage.ID] = function () { return new TeleportDestinationsListMessage(); };
        MessageReceiver._list[TeleportRequestMessage.ID] = function () { return new TeleportRequestMessage(); };
        MessageReceiver._list[ZaapListMessage.ID] = function () { return new ZaapListMessage(); };
        MessageReceiver._list[ZaapRespawnSaveRequestMessage.ID] = function () { return new ZaapRespawnSaveRequestMessage(); };
        MessageReceiver._list[ZaapRespawnUpdatedMessage.ID] = function () { return new ZaapRespawnUpdatedMessage(); };
        MessageReceiver._list[KamasUpdateMessage.ID] = function () { return new KamasUpdateMessage(); };
        MessageReceiver._list[ObjectAveragePricesErrorMessage.ID] = function () { return new ObjectAveragePricesErrorMessage(); };
        MessageReceiver._list[ObjectAveragePricesGetMessage.ID] = function () { return new ObjectAveragePricesGetMessage(); };
        MessageReceiver._list[ObjectAveragePricesMessage.ID] = function () { return new ObjectAveragePricesMessage(); };
        MessageReceiver._list[DecraftResultMessage.ID] = function () { return new DecraftResultMessage(); };
        MessageReceiver._list[ExchangeAcceptMessage.ID] = function () { return new ExchangeAcceptMessage(); };
        MessageReceiver._list[ExchangeBidHouseBuyMessage.ID] = function () { return new ExchangeBidHouseBuyMessage(); };
        MessageReceiver._list[ExchangeBidHouseBuyResultMessage.ID] = function () { return new ExchangeBidHouseBuyResultMessage(); };
        MessageReceiver._list[ExchangeBidHouseGenericItemAddedMessage.ID] = function () { return new ExchangeBidHouseGenericItemAddedMessage(); };
        MessageReceiver._list[ExchangeBidHouseGenericItemRemovedMessage.ID] = function () { return new ExchangeBidHouseGenericItemRemovedMessage(); };
        MessageReceiver._list[ExchangeBidHouseInListAddedMessage.ID] = function () { return new ExchangeBidHouseInListAddedMessage(); };
        MessageReceiver._list[ExchangeBidHouseInListRemovedMessage.ID] = function () { return new ExchangeBidHouseInListRemovedMessage(); };
        MessageReceiver._list[ExchangeBidHouseInListUpdatedMessage.ID] = function () { return new ExchangeBidHouseInListUpdatedMessage(); };
        MessageReceiver._list[ExchangeBidHouseItemAddOkMessage.ID] = function () { return new ExchangeBidHouseItemAddOkMessage(); };
        MessageReceiver._list[ExchangeBidHouseItemRemoveOkMessage.ID] = function () { return new ExchangeBidHouseItemRemoveOkMessage(); };
        MessageReceiver._list[ExchangeBidHouseListMessage.ID] = function () { return new ExchangeBidHouseListMessage(); };
        MessageReceiver._list[ExchangeBidHousePriceMessage.ID] = function () { return new ExchangeBidHousePriceMessage(); };
        MessageReceiver._list[ExchangeBidHouseSearchMessage.ID] = function () { return new ExchangeBidHouseSearchMessage(); };
        MessageReceiver._list[ExchangeBidHouseTypeMessage.ID] = function () { return new ExchangeBidHouseTypeMessage(); };
        MessageReceiver._list[ExchangeBidPriceForSellerMessage.ID] = function () { return new ExchangeBidPriceForSellerMessage(); };
        MessageReceiver._list[ExchangeBidPriceMessage.ID] = function () { return new ExchangeBidPriceMessage(); };
        MessageReceiver._list[ExchangeBidSearchOkMessage.ID] = function () { return new ExchangeBidSearchOkMessage(); };
        MessageReceiver._list[ExchangeBuyMessage.ID] = function () { return new ExchangeBuyMessage(); };
        MessageReceiver._list[ExchangeBuyOkMessage.ID] = function () { return new ExchangeBuyOkMessage(); };
        MessageReceiver._list[ExchangeCraftCountModifiedMessage.ID] = function () { return new ExchangeCraftCountModifiedMessage(); };
        MessageReceiver._list[ExchangeCraftCountRequestMessage.ID] = function () { return new ExchangeCraftCountRequestMessage(); };
        MessageReceiver._list[ExchangeCraftInformationObjectMessage.ID] = function () { return new ExchangeCraftInformationObjectMessage(); };
        MessageReceiver._list[ExchangeCraftPaymentModificationRequestMessage.ID] = function () { return new ExchangeCraftPaymentModificationRequestMessage(); };
        MessageReceiver._list[ExchangeCraftPaymentModifiedMessage.ID] = function () { return new ExchangeCraftPaymentModifiedMessage(); };
        MessageReceiver._list[ExchangeCraftResultMagicWithObjectDescMessage.ID] = function () { return new ExchangeCraftResultMagicWithObjectDescMessage(); };
        MessageReceiver._list[ExchangeCraftResultMessage.ID] = function () { return new ExchangeCraftResultMessage(); };
        MessageReceiver._list[ExchangeCraftResultWithObjectDescMessage.ID] = function () { return new ExchangeCraftResultWithObjectDescMessage(); };
        MessageReceiver._list[ExchangeCraftResultWithObjectIdMessage.ID] = function () { return new ExchangeCraftResultWithObjectIdMessage(); };
        MessageReceiver._list[ExchangeCrafterJobLevelupMessage.ID] = function () { return new ExchangeCrafterJobLevelupMessage(); };
        MessageReceiver._list[ExchangeErrorMessage.ID] = function () { return new ExchangeErrorMessage(); };
        MessageReceiver._list[ExchangeGuildTaxCollectorGetMessage.ID] = function () { return new ExchangeGuildTaxCollectorGetMessage(); };
        MessageReceiver._list[ExchangeHandleMountsStableMessage.ID] = function () { return new ExchangeHandleMountsStableMessage(); };
        MessageReceiver._list[ExchangeIsReadyMessage.ID] = function () { return new ExchangeIsReadyMessage(); };
        MessageReceiver._list[ExchangeItemAutoCraftStopedMessage.ID] = function () { return new ExchangeItemAutoCraftStopedMessage(); };
        MessageReceiver._list[ExchangeLeaveMessage.ID] = function () { return new ExchangeLeaveMessage(); };
        MessageReceiver._list[ExchangeMountFreeFromPaddockMessage.ID] = function () { return new ExchangeMountFreeFromPaddockMessage(); };
        MessageReceiver._list[ExchangeMountStableErrorMessage.ID] = function () { return new ExchangeMountStableErrorMessage(); };
        MessageReceiver._list[ExchangeMountSterilizeFromPaddockMessage.ID] = function () { return new ExchangeMountSterilizeFromPaddockMessage(); };
        MessageReceiver._list[ExchangeMountsPaddockAddMessage.ID] = function () { return new ExchangeMountsPaddockAddMessage(); };
        MessageReceiver._list[ExchangeMountsPaddockRemoveMessage.ID] = function () { return new ExchangeMountsPaddockRemoveMessage(); };
        MessageReceiver._list[ExchangeMountsStableAddMessage.ID] = function () { return new ExchangeMountsStableAddMessage(); };
        MessageReceiver._list[ExchangeMountsStableBornAddMessage.ID] = function () { return new ExchangeMountsStableBornAddMessage(); };
        MessageReceiver._list[ExchangeMountsStableRemoveMessage.ID] = function () { return new ExchangeMountsStableRemoveMessage(); };
        MessageReceiver._list[ExchangeMountsTakenFromPaddockMessage.ID] = function () { return new ExchangeMountsTakenFromPaddockMessage(); };
        MessageReceiver._list[ExchangeObjectAddedMessage.ID] = function () { return new ExchangeObjectAddedMessage(); };
        MessageReceiver._list[ExchangeObjectMessage.ID] = function () { return new ExchangeObjectMessage(); };
        MessageReceiver._list[ExchangeObjectModifyPricedMessage.ID] = function () { return new ExchangeObjectModifyPricedMessage(); };
        MessageReceiver._list[ExchangeObjectMoveKamaMessage.ID] = function () { return new ExchangeObjectMoveKamaMessage(); };
        MessageReceiver._list[ExchangeObjectMoveMessage.ID] = function () { return new ExchangeObjectMoveMessage(); };
        MessageReceiver._list[ExchangeObjectMovePricedMessage.ID] = function () { return new ExchangeObjectMovePricedMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertAllFromInvMessage.ID] = function () { return new ExchangeObjectTransfertAllFromInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertAllToInvMessage.ID] = function () { return new ExchangeObjectTransfertAllToInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertExistingFromInvMessage.ID] = function () { return new ExchangeObjectTransfertExistingFromInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertExistingToInvMessage.ID] = function () { return new ExchangeObjectTransfertExistingToInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertListFromInvMessage.ID] = function () { return new ExchangeObjectTransfertListFromInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertListToInvMessage.ID] = function () { return new ExchangeObjectTransfertListToInvMessage(); };
        MessageReceiver._list[ExchangeObjectTransfertListWithQuantityToInvMessage.ID] = function () { return new ExchangeObjectTransfertListWithQuantityToInvMessage(); };
        MessageReceiver._list[ExchangeObjectUseInWorkshopMessage.ID] = function () { return new ExchangeObjectUseInWorkshopMessage(); };
        MessageReceiver._list[ExchangeObjectsAddedMessage.ID] = function () { return new ExchangeObjectsAddedMessage(); };
        MessageReceiver._list[ExchangeOkMultiCraftMessage.ID] = function () { return new ExchangeOkMultiCraftMessage(); };
        MessageReceiver._list[ExchangeOnHumanVendorRequestMessage.ID] = function () { return new ExchangeOnHumanVendorRequestMessage(); };
        MessageReceiver._list[ExchangePlayerMultiCraftRequestMessage.ID] = function () { return new ExchangePlayerMultiCraftRequestMessage(); };
        MessageReceiver._list[ExchangePlayerRequestMessage.ID] = function () { return new ExchangePlayerRequestMessage(); };
        MessageReceiver._list[ExchangeReadyMessage.ID] = function () { return new ExchangeReadyMessage(); };
        MessageReceiver._list[ExchangeReplayStopMessage.ID] = function () { return new ExchangeReplayStopMessage(); };
        MessageReceiver._list[ExchangeReplyTaxVendorMessage.ID] = function () { return new ExchangeReplyTaxVendorMessage(); };
        MessageReceiver._list[ExchangeRequestMessage.ID] = function () { return new ExchangeRequestMessage(); };
        MessageReceiver._list[ExchangeRequestOnMountStockMessage.ID] = function () { return new ExchangeRequestOnMountStockMessage(); };
        MessageReceiver._list[ExchangeRequestOnShopStockMessage.ID] = function () { return new ExchangeRequestOnShopStockMessage(); };
        MessageReceiver._list[ExchangeRequestOnTaxCollectorMessage.ID] = function () { return new ExchangeRequestOnTaxCollectorMessage(); };
        MessageReceiver._list[ExchangeRequestedMessage.ID] = function () { return new ExchangeRequestedMessage(); };
        MessageReceiver._list[ExchangeRequestedTradeMessage.ID] = function () { return new ExchangeRequestedTradeMessage(); };
        MessageReceiver._list[ExchangeSellMessage.ID] = function () { return new ExchangeSellMessage(); };
        MessageReceiver._list[ExchangeSellOkMessage.ID] = function () { return new ExchangeSellOkMessage(); };
        MessageReceiver._list[ExchangeSetCraftRecipeMessage.ID] = function () { return new ExchangeSetCraftRecipeMessage(); };
        MessageReceiver._list[ExchangeShopStockMovementRemovedMessage.ID] = function () { return new ExchangeShopStockMovementRemovedMessage(); };
        MessageReceiver._list[ExchangeShopStockMovementUpdatedMessage.ID] = function () { return new ExchangeShopStockMovementUpdatedMessage(); };
        MessageReceiver._list[ExchangeShopStockMultiMovementRemovedMessage.ID] = function () { return new ExchangeShopStockMultiMovementRemovedMessage(); };
        MessageReceiver._list[ExchangeShopStockMultiMovementUpdatedMessage.ID] = function () { return new ExchangeShopStockMultiMovementUpdatedMessage(); };
        MessageReceiver._list[ExchangeShopStockStartedMessage.ID] = function () { return new ExchangeShopStockStartedMessage(); };
        MessageReceiver._list[ExchangeShowVendorTaxMessage.ID] = function () { return new ExchangeShowVendorTaxMessage(); };
        MessageReceiver._list[ExchangeStartAsVendorMessage.ID] = function () { return new ExchangeStartAsVendorMessage(); };
        MessageReceiver._list[ExchangeStartOkCraftMessage.ID] = function () { return new ExchangeStartOkCraftMessage(); };
        MessageReceiver._list[ExchangeStartOkCraftWithInformationMessage.ID] = function () { return new ExchangeStartOkCraftWithInformationMessage(); };
        MessageReceiver._list[ExchangeStartOkHumanVendorMessage.ID] = function () { return new ExchangeStartOkHumanVendorMessage(); };
        MessageReceiver._list[ExchangeStartOkJobIndexMessage.ID] = function () { return new ExchangeStartOkJobIndexMessage(); };
        MessageReceiver._list[ExchangeStartOkMountMessage.ID] = function () { return new ExchangeStartOkMountMessage(); };
        MessageReceiver._list[ExchangeStartOkMountWithOutPaddockMessage.ID] = function () { return new ExchangeStartOkMountWithOutPaddockMessage(); };
        MessageReceiver._list[ExchangeStartOkMulticraftCrafterMessage.ID] = function () { return new ExchangeStartOkMulticraftCrafterMessage(); };
        MessageReceiver._list[ExchangeStartOkMulticraftCustomerMessage.ID] = function () { return new ExchangeStartOkMulticraftCustomerMessage(); };
        MessageReceiver._list[ExchangeStartOkNpcShopMessage.ID] = function () { return new ExchangeStartOkNpcShopMessage(); };
        MessageReceiver._list[ExchangeStartOkNpcTradeMessage.ID] = function () { return new ExchangeStartOkNpcTradeMessage(); };
        MessageReceiver._list[ExchangeStartOkRecycleTradeMessage.ID] = function () { return new ExchangeStartOkRecycleTradeMessage(); };
        MessageReceiver._list[ExchangeStartOkRunesTradeMessage.ID] = function () { return new ExchangeStartOkRunesTradeMessage(); };
        MessageReceiver._list[ExchangeStartedBidBuyerMessage.ID] = function () { return new ExchangeStartedBidBuyerMessage(); };
        MessageReceiver._list[ExchangeStartedBidSellerMessage.ID] = function () { return new ExchangeStartedBidSellerMessage(); };
        MessageReceiver._list[ExchangeStartedMessage.ID] = function () { return new ExchangeStartedMessage(); };
        MessageReceiver._list[ExchangeStartedMountStockMessage.ID] = function () { return new ExchangeStartedMountStockMessage(); };
        MessageReceiver._list[ExchangeStartedWithPodsMessage.ID] = function () { return new ExchangeStartedWithPodsMessage(); };
        MessageReceiver._list[ExchangeStartedWithStorageMessage.ID] = function () { return new ExchangeStartedWithStorageMessage(); };
        MessageReceiver._list[ExchangeStoppedMessage.ID] = function () { return new ExchangeStoppedMessage(); };
        MessageReceiver._list[ExchangeTypesExchangerDescriptionForUserMessage.ID] = function () { return new ExchangeTypesExchangerDescriptionForUserMessage(); };
        MessageReceiver._list[ExchangeTypesItemsExchangerDescriptionForUserMessage.ID] = function () { return new ExchangeTypesItemsExchangerDescriptionForUserMessage(); };
        MessageReceiver._list[ExchangeWaitingResultMessage.ID] = function () { return new ExchangeWaitingResultMessage(); };
        MessageReceiver._list[ExchangeWeightMessage.ID] = function () { return new ExchangeWeightMessage(); };
        MessageReceiver._list[ItemNoMoreAvailableMessage.ID] = function () { return new ItemNoMoreAvailableMessage(); };
        MessageReceiver._list[JobBookSubscribeRequestMessage.ID] = function () { return new JobBookSubscribeRequestMessage(); };
        MessageReceiver._list[RecycleResultMessage.ID] = function () { return new RecycleResultMessage(); };
        MessageReceiver._list[UpdateMountBoostMessage.ID] = function () { return new UpdateMountBoostMessage(); };
        MessageReceiver._list[ExchangeKamaModifiedMessage.ID] = function () { return new ExchangeKamaModifiedMessage(); };
        MessageReceiver._list[ExchangeMultiCraftCrafterCanUseHisRessourcesMessage.ID] = function () { return new ExchangeMultiCraftCrafterCanUseHisRessourcesMessage(); };
        MessageReceiver._list[ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage.ID] = function () { return new ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage(); };
        MessageReceiver._list[ExchangeObjectModifiedInBagMessage.ID] = function () { return new ExchangeObjectModifiedInBagMessage(); };
        MessageReceiver._list[ExchangeObjectModifiedMessage.ID] = function () { return new ExchangeObjectModifiedMessage(); };
        MessageReceiver._list[ExchangeObjectPutInBagMessage.ID] = function () { return new ExchangeObjectPutInBagMessage(); };
        MessageReceiver._list[ExchangeObjectRemovedFromBagMessage.ID] = function () { return new ExchangeObjectRemovedFromBagMessage(); };
        MessageReceiver._list[ExchangeObjectRemovedMessage.ID] = function () { return new ExchangeObjectRemovedMessage(); };
        MessageReceiver._list[ExchangeObjectsModifiedMessage.ID] = function () { return new ExchangeObjectsModifiedMessage(); };
        MessageReceiver._list[ExchangeObjectsRemovedMessage.ID] = function () { return new ExchangeObjectsRemovedMessage(); };
        MessageReceiver._list[GoldAddedMessage.ID] = function () { return new GoldAddedMessage(); };
        MessageReceiver._list[InventoryContentAndPresetMessage.ID] = function () { return new InventoryContentAndPresetMessage(); };
        MessageReceiver._list[InventoryContentMessage.ID] = function () { return new InventoryContentMessage(); };
        MessageReceiver._list[InventoryWeightMessage.ID] = function () { return new InventoryWeightMessage(); };
        MessageReceiver._list[LivingObjectChangeSkinRequestMessage.ID] = function () { return new LivingObjectChangeSkinRequestMessage(); };
        MessageReceiver._list[LivingObjectDissociateMessage.ID] = function () { return new LivingObjectDissociateMessage(); };
        MessageReceiver._list[LivingObjectMessageMessage.ID] = function () { return new LivingObjectMessageMessage(); };
        MessageReceiver._list[LivingObjectMessageRequestMessage.ID] = function () { return new LivingObjectMessageRequestMessage(); };
        MessageReceiver._list[MimicryObjectAssociatedMessage.ID] = function () { return new MimicryObjectAssociatedMessage(); };
        MessageReceiver._list[MimicryObjectEraseRequestMessage.ID] = function () { return new MimicryObjectEraseRequestMessage(); };
        MessageReceiver._list[MimicryObjectErrorMessage.ID] = function () { return new MimicryObjectErrorMessage(); };
        MessageReceiver._list[MimicryObjectFeedAndAssociateRequestMessage.ID] = function () { return new MimicryObjectFeedAndAssociateRequestMessage(); };
        MessageReceiver._list[MimicryObjectPreviewMessage.ID] = function () { return new MimicryObjectPreviewMessage(); };
        MessageReceiver._list[ObjectAddedMessage.ID] = function () { return new ObjectAddedMessage(); };
        MessageReceiver._list[ObjectDeleteMessage.ID] = function () { return new ObjectDeleteMessage(); };
        MessageReceiver._list[ObjectDeletedMessage.ID] = function () { return new ObjectDeletedMessage(); };
        MessageReceiver._list[ObjectDropMessage.ID] = function () { return new ObjectDropMessage(); };
        MessageReceiver._list[ObjectErrorMessage.ID] = function () { return new ObjectErrorMessage(); };
        MessageReceiver._list[ObjectFeedMessage.ID] = function () { return new ObjectFeedMessage(); };
        MessageReceiver._list[ObjectFoundWhileRecoltingMessage.ID] = function () { return new ObjectFoundWhileRecoltingMessage(); };
        MessageReceiver._list[ObjectJobAddedMessage.ID] = function () { return new ObjectJobAddedMessage(); };
        MessageReceiver._list[ObjectModifiedMessage.ID] = function () { return new ObjectModifiedMessage(); };
        MessageReceiver._list[ObjectMovementMessage.ID] = function () { return new ObjectMovementMessage(); };
        MessageReceiver._list[ObjectQuantityMessage.ID] = function () { return new ObjectQuantityMessage(); };
        MessageReceiver._list[ObjectSetPositionMessage.ID] = function () { return new ObjectSetPositionMessage(); };
        MessageReceiver._list[ObjectUseMessage.ID] = function () { return new ObjectUseMessage(); };
        MessageReceiver._list[ObjectUseMultipleMessage.ID] = function () { return new ObjectUseMultipleMessage(); };
        MessageReceiver._list[ObjectUseOnCellMessage.ID] = function () { return new ObjectUseOnCellMessage(); };
        MessageReceiver._list[ObjectUseOnCharacterMessage.ID] = function () { return new ObjectUseOnCharacterMessage(); };
        MessageReceiver._list[ObjectsAddedMessage.ID] = function () { return new ObjectsAddedMessage(); };
        MessageReceiver._list[ObjectsDeletedMessage.ID] = function () { return new ObjectsDeletedMessage(); };
        MessageReceiver._list[ObjectsQuantityMessage.ID] = function () { return new ObjectsQuantityMessage(); };
        MessageReceiver._list[ObtainedItemMessage.ID] = function () { return new ObtainedItemMessage(); };
        MessageReceiver._list[ObtainedItemWithBonusMessage.ID] = function () { return new ObtainedItemWithBonusMessage(); };
        MessageReceiver._list[SetUpdateMessage.ID] = function () { return new SetUpdateMessage(); };
        MessageReceiver._list[SymbioticObjectAssociateRequestMessage.ID] = function () { return new SymbioticObjectAssociateRequestMessage(); };
        MessageReceiver._list[SymbioticObjectAssociatedMessage.ID] = function () { return new SymbioticObjectAssociatedMessage(); };
        MessageReceiver._list[SymbioticObjectErrorMessage.ID] = function () { return new SymbioticObjectErrorMessage(); };
        MessageReceiver._list[WrapperObjectAssociatedMessage.ID] = function () { return new WrapperObjectAssociatedMessage(); };
        MessageReceiver._list[WrapperObjectDissociateRequestMessage.ID] = function () { return new WrapperObjectDissociateRequestMessage(); };
        MessageReceiver._list[WrapperObjectErrorMessage.ID] = function () { return new WrapperObjectErrorMessage(); };
        MessageReceiver._list[IdolsPresetDeleteMessage.ID] = function () { return new IdolsPresetDeleteMessage(); };
        MessageReceiver._list[IdolsPresetDeleteResultMessage.ID] = function () { return new IdolsPresetDeleteResultMessage(); };
        MessageReceiver._list[IdolsPresetSaveMessage.ID] = function () { return new IdolsPresetSaveMessage(); };
        MessageReceiver._list[IdolsPresetSaveResultMessage.ID] = function () { return new IdolsPresetSaveResultMessage(); };
        MessageReceiver._list[IdolsPresetUpdateMessage.ID] = function () { return new IdolsPresetUpdateMessage(); };
        MessageReceiver._list[InventoryPresetDeleteMessage.ID] = function () { return new InventoryPresetDeleteMessage(); };
        MessageReceiver._list[InventoryPresetDeleteResultMessage.ID] = function () { return new InventoryPresetDeleteResultMessage(); };
        MessageReceiver._list[InventoryPresetItemUpdateErrorMessage.ID] = function () { return new InventoryPresetItemUpdateErrorMessage(); };
        MessageReceiver._list[InventoryPresetItemUpdateMessage.ID] = function () { return new InventoryPresetItemUpdateMessage(); };
        MessageReceiver._list[InventoryPresetItemUpdateRequestMessage.ID] = function () { return new InventoryPresetItemUpdateRequestMessage(); };
        MessageReceiver._list[InventoryPresetSaveCustomMessage.ID] = function () { return new InventoryPresetSaveCustomMessage(); };
        MessageReceiver._list[InventoryPresetSaveMessage.ID] = function () { return new InventoryPresetSaveMessage(); };
        MessageReceiver._list[InventoryPresetSaveResultMessage.ID] = function () { return new InventoryPresetSaveResultMessage(); };
        MessageReceiver._list[InventoryPresetUpdateMessage.ID] = function () { return new InventoryPresetUpdateMessage(); };
        MessageReceiver._list[InventoryPresetUseMessage.ID] = function () { return new InventoryPresetUseMessage(); };
        MessageReceiver._list[InventoryPresetUseResultMessage.ID] = function () { return new InventoryPresetUseResultMessage(); };
        MessageReceiver._list[SpellListMessage.ID] = function () { return new SpellListMessage(); };
        MessageReceiver._list[StorageInventoryContentMessage.ID] = function () { return new StorageInventoryContentMessage(); };
        MessageReceiver._list[StorageKamasUpdateMessage.ID] = function () { return new StorageKamasUpdateMessage(); };
        MessageReceiver._list[StorageObjectRemoveMessage.ID] = function () { return new StorageObjectRemoveMessage(); };
        MessageReceiver._list[StorageObjectUpdateMessage.ID] = function () { return new StorageObjectUpdateMessage(); };
        MessageReceiver._list[StorageObjectsRemoveMessage.ID] = function () { return new StorageObjectsRemoveMessage(); };
        MessageReceiver._list[StorageObjectsUpdateMessage.ID] = function () { return new StorageObjectsUpdateMessage(); };
        MessageReceiver._list[AccessoryPreviewErrorMessage.ID] = function () { return new AccessoryPreviewErrorMessage(); };
        MessageReceiver._list[AccessoryPreviewMessage.ID] = function () { return new AccessoryPreviewMessage(); };
        MessageReceiver._list[AccessoryPreviewRequestMessage.ID] = function () { return new AccessoryPreviewRequestMessage(); };
        MessageReceiver._list[PopupWarningMessage.ID] = function () { return new PopupWarningMessage(); };
        MessageReceiver._list[AreaFightModificatorUpdateMessage.ID] = function () { return new AreaFightModificatorUpdateMessage(); };
        MessageReceiver._list[PrismAttackRequestMessage.ID] = function () { return new PrismAttackRequestMessage(); };
        MessageReceiver._list[PrismFightAddedMessage.ID] = function () { return new PrismFightAddedMessage(); };
        MessageReceiver._list[PrismFightAttackerAddMessage.ID] = function () { return new PrismFightAttackerAddMessage(); };
        MessageReceiver._list[PrismFightAttackerRemoveMessage.ID] = function () { return new PrismFightAttackerRemoveMessage(); };
        MessageReceiver._list[PrismFightDefenderAddMessage.ID] = function () { return new PrismFightDefenderAddMessage(); };
        MessageReceiver._list[PrismFightDefenderLeaveMessage.ID] = function () { return new PrismFightDefenderLeaveMessage(); };
        MessageReceiver._list[PrismFightJoinLeaveRequestMessage.ID] = function () { return new PrismFightJoinLeaveRequestMessage(); };
        MessageReceiver._list[PrismFightRemovedMessage.ID] = function () { return new PrismFightRemovedMessage(); };
        MessageReceiver._list[PrismFightStateUpdateMessage.ID] = function () { return new PrismFightStateUpdateMessage(); };
        MessageReceiver._list[PrismFightSwapRequestMessage.ID] = function () { return new PrismFightSwapRequestMessage(); };
        MessageReceiver._list[PrismInfoCloseMessage.ID] = function () { return new PrismInfoCloseMessage(); };
        MessageReceiver._list[PrismInfoInValidMessage.ID] = function () { return new PrismInfoInValidMessage(); };
        MessageReceiver._list[PrismInfoJoinLeaveRequestMessage.ID] = function () { return new PrismInfoJoinLeaveRequestMessage(); };
        MessageReceiver._list[PrismModuleExchangeRequestMessage.ID] = function () { return new PrismModuleExchangeRequestMessage(); };
        MessageReceiver._list[PrismSetSabotagedRefusedMessage.ID] = function () { return new PrismSetSabotagedRefusedMessage(); };
        MessageReceiver._list[PrismSetSabotagedRequestMessage.ID] = function () { return new PrismSetSabotagedRequestMessage(); };
        MessageReceiver._list[PrismSettingsErrorMessage.ID] = function () { return new PrismSettingsErrorMessage(); };
        MessageReceiver._list[PrismSettingsRequestMessage.ID] = function () { return new PrismSettingsRequestMessage(); };
        MessageReceiver._list[PrismUseRequestMessage.ID] = function () { return new PrismUseRequestMessage(); };
        MessageReceiver._list[PrismsInfoValidMessage.ID] = function () { return new PrismsInfoValidMessage(); };
        MessageReceiver._list[PrismsListMessage.ID] = function () { return new PrismsListMessage(); };
        MessageReceiver._list[PrismsListRegisterMessage.ID] = function () { return new PrismsListRegisterMessage(); };
        MessageReceiver._list[PrismsListUpdateMessage.ID] = function () { return new PrismsListUpdateMessage(); };
        MessageReceiver._list[AlignmentRankUpdateMessage.ID] = function () { return new AlignmentRankUpdateMessage(); };
        MessageReceiver._list[SetEnableAVARequestMessage.ID] = function () { return new SetEnableAVARequestMessage(); };
        MessageReceiver._list[SetEnablePVPRequestMessage.ID] = function () { return new SetEnablePVPRequestMessage(); };
        MessageReceiver._list[UpdateMapPlayersAgressableStatusMessage.ID] = function () { return new UpdateMapPlayersAgressableStatusMessage(); };
        MessageReceiver._list[UpdateSelfAgressableStatusMessage.ID] = function () { return new UpdateSelfAgressableStatusMessage(); };
        MessageReceiver._list[CharacterReportMessage.ID] = function () { return new CharacterReportMessage(); };
        MessageReceiver._list[CinematicMessage.ID] = function () { return new CinematicMessage(); };
        MessageReceiver._list[URLOpenMessage.ID] = function () { return new URLOpenMessage(); };
        MessageReceiver._list[ShortcutBarAddErrorMessage.ID] = function () { return new ShortcutBarAddErrorMessage(); };
        MessageReceiver._list[ShortcutBarAddRequestMessage.ID] = function () { return new ShortcutBarAddRequestMessage(); };
        MessageReceiver._list[ShortcutBarContentMessage.ID] = function () { return new ShortcutBarContentMessage(); };
        MessageReceiver._list[ShortcutBarRefreshMessage.ID] = function () { return new ShortcutBarRefreshMessage(); };
        MessageReceiver._list[ShortcutBarRemoveErrorMessage.ID] = function () { return new ShortcutBarRemoveErrorMessage(); };
        MessageReceiver._list[ShortcutBarRemoveRequestMessage.ID] = function () { return new ShortcutBarRemoveRequestMessage(); };
        MessageReceiver._list[ShortcutBarRemovedMessage.ID] = function () { return new ShortcutBarRemovedMessage(); };
        MessageReceiver._list[ShortcutBarSwapErrorMessage.ID] = function () { return new ShortcutBarSwapErrorMessage(); };
        MessageReceiver._list[ShortcutBarSwapRequestMessage.ID] = function () { return new ShortcutBarSwapRequestMessage(); };
        MessageReceiver._list[ContactLookErrorMessage.ID] = function () { return new ContactLookErrorMessage(); };
        MessageReceiver._list[ContactLookMessage.ID] = function () { return new ContactLookMessage(); };
        MessageReceiver._list[ContactLookRequestByIdMessage.ID] = function () { return new ContactLookRequestByIdMessage(); };
        MessageReceiver._list[ContactLookRequestMessage.ID] = function () { return new ContactLookRequestMessage(); };
        MessageReceiver._list[StartupActionAddMessage.ID] = function () { return new StartupActionAddMessage(); };
        MessageReceiver._list[StartupActionFinishedMessage.ID] = function () { return new StartupActionFinishedMessage(); };
        MessageReceiver._list[StartupActionsAllAttributionMessage.ID] = function () { return new StartupActionsAllAttributionMessage(); };
        MessageReceiver._list[StartupActionsExecuteMessage.ID] = function () { return new StartupActionsExecuteMessage(); };
        MessageReceiver._list[StartupActionsListMessage.ID] = function () { return new StartupActionsListMessage(); };
        MessageReceiver._list[StartupActionsObjetAttributionMessage.ID] = function () { return new StartupActionsObjetAttributionMessage(); };
        MessageReceiver._list[SubscriptionLimitationMessage.ID] = function () { return new SubscriptionLimitationMessage(); };
        MessageReceiver._list[SubscriptionZoneMessage.ID] = function () { return new SubscriptionZoneMessage(); };
        MessageReceiver._list[OrnamentGainedMessage.ID] = function () { return new OrnamentGainedMessage(); };
        MessageReceiver._list[OrnamentSelectErrorMessage.ID] = function () { return new OrnamentSelectErrorMessage(); };
        MessageReceiver._list[OrnamentSelectRequestMessage.ID] = function () { return new OrnamentSelectRequestMessage(); };
        MessageReceiver._list[OrnamentSelectedMessage.ID] = function () { return new OrnamentSelectedMessage(); };
        MessageReceiver._list[TitleGainedMessage.ID] = function () { return new TitleGainedMessage(); };
        MessageReceiver._list[TitleLostMessage.ID] = function () { return new TitleLostMessage(); };
        MessageReceiver._list[TitleSelectErrorMessage.ID] = function () { return new TitleSelectErrorMessage(); };
        MessageReceiver._list[TitleSelectRequestMessage.ID] = function () { return new TitleSelectRequestMessage(); };
        MessageReceiver._list[TitleSelectedMessage.ID] = function () { return new TitleSelectedMessage(); };
        MessageReceiver._list[TitlesAndOrnamentsListMessage.ID] = function () { return new TitlesAndOrnamentsListMessage(); };
        MessageReceiver._list[TitlesAndOrnamentsListRequestMessage.ID] = function () { return new TitlesAndOrnamentsListRequestMessage(); };
        MessageReceiver._list[ClientUIOpenedByObjectMessage.ID] = function () { return new ClientUIOpenedByObjectMessage(); };
        MessageReceiver._list[ClientUIOpenedMessage.ID] = function () { return new ClientUIOpenedMessage(); };
        MessageReceiver._list[ProtocolRequired.ID] = function () { return new ProtocolRequired(); };
        MessageReceiver._list[LoginQueueStatusMessage.ID] = function () { return new LoginQueueStatusMessage(); };
        MessageReceiver._list[QueueStatusMessage.ID] = function () { return new QueueStatusMessage(); };
        MessageReceiver._list[TrustStatusMessage.ID] = function () { return new TrustStatusMessage(); };
        MessageReceiver._list[CheckFileMessage.ID] = function () { return new CheckFileMessage(); };
        MessageReceiver._list[CheckFileRequestMessage.ID] = function () { return new CheckFileRequestMessage(); };
        MessageReceiver._list[CheckIntegrityMessage.ID] = function () { return new CheckIntegrityMessage(); };
        MessageReceiver._list[ClientKeyMessage.ID] = function () { return new ClientKeyMessage(); };
        MessageReceiver._list[RawDataMessage.ID] = function () { return new RawDataMessage(); };
        MessageReceiver._list[SystemMessageDisplayMessage.ID] = function () { return new SystemMessageDisplayMessage(); };
        MessageReceiver._list[DownloadCurrentSpeedMessage.ID] = function () { return new DownloadCurrentSpeedMessage(); };
        MessageReceiver._list[DownloadErrorMessage.ID] = function () { return new DownloadErrorMessage(); };
        MessageReceiver._list[DownloadGetCurrentSpeedRequestMessage.ID] = function () { return new DownloadGetCurrentSpeedRequestMessage(); };
        MessageReceiver._list[DownloadPartMessage.ID] = function () { return new DownloadPartMessage(); };
        MessageReceiver._list[DownloadSetSpeedRequestMessage.ID] = function () { return new DownloadSetSpeedRequestMessage(); };
        MessageReceiver._list[GetPartInfoMessage.ID] = function () { return new GetPartInfoMessage(); };
        MessageReceiver._list[GetPartsListMessage.ID] = function () { return new GetPartsListMessage(); };
        MessageReceiver._list[PartInfoMessage.ID] = function () { return new PartInfoMessage(); };
        MessageReceiver._list[PartsListMessage.ID] = function () { return new PartsListMessage(); };
        MessageReceiver._list[MailStatusMessage.ID] = function () { return new MailStatusMessage(); };
        MessageReceiver._list[NewMailMessage.ID] = function () { return new NewMailMessage(); };
        MessageReceiver._list[KrosmasterAuthTokenErrorMessage.ID] = function () { return new KrosmasterAuthTokenErrorMessage(); };
        MessageReceiver._list[KrosmasterAuthTokenMessage.ID] = function () { return new KrosmasterAuthTokenMessage(); };
        MessageReceiver._list[KrosmasterAuthTokenRequestMessage.ID] = function () { return new KrosmasterAuthTokenRequestMessage(); };
        MessageReceiver._list[KrosmasterInventoryErrorMessage.ID] = function () { return new KrosmasterInventoryErrorMessage(); };
        MessageReceiver._list[KrosmasterInventoryMessage.ID] = function () { return new KrosmasterInventoryMessage(); };
        MessageReceiver._list[KrosmasterInventoryRequestMessage.ID] = function () { return new KrosmasterInventoryRequestMessage(); };
        MessageReceiver._list[KrosmasterPlayingStatusMessage.ID] = function () { return new KrosmasterPlayingStatusMessage(); };
        MessageReceiver._list[KrosmasterTransferMessage.ID] = function () { return new KrosmasterTransferMessage(); };
        MessageReceiver._list[KrosmasterTransferRequestMessage.ID] = function () { return new KrosmasterTransferRequestMessage(); };
        MessageReceiver._list[ClientYouAreDrunkMessage.ID] = function () { return new ClientYouAreDrunkMessage(); };
    }
    MessageReceiver.parse = function (param1, param2, param3) {
        var _loc4_ = MessageReceiver._list[param2];
        if (!_loc4_) {
            console.log('Unknown packet received (ID ' + param2 + ', length ' + param3 + ')');
            return null;
        }
        var _loc5_ = _loc4_();
        _loc5_.unpack(param1, param3);
        return _loc5_;
    };
    return MessageReceiver;
})();
module.exports = MessageReceiver;
