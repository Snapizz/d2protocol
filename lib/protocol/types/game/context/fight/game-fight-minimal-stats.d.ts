/// <reference path="../../../../../../node_modules/ts-bytearray/ts-bytearray.d.ts" />
import INetworkType = require('../../../../network-type');
import { ICustomDataOutput, ICustomDataInput } from '../../../../custom-data-wrapper';
declare class GameFightMinimalStats implements INetworkType {
    static ID: number;
    lifePoints: number;
    maxLifePoints: number;
    baseMaxLifePoints: number;
    permanentDamagePercent: number;
    shieldPoints: number;
    actionPoints: number;
    maxActionPoints: number;
    movementPoints: number;
    maxMovementPoints: number;
    summoner: number;
    summoned: boolean;
    neutralElementResistPercent: number;
    earthElementResistPercent: number;
    waterElementResistPercent: number;
    airElementResistPercent: number;
    fireElementResistPercent: number;
    neutralElementReduction: number;
    earthElementReduction: number;
    waterElementReduction: number;
    airElementReduction: number;
    fireElementReduction: number;
    criticalDamageFixedResist: number;
    pushDamageFixedResist: number;
    pvpNeutralElementResistPercent: number;
    pvpEarthElementResistPercent: number;
    pvpWaterElementResistPercent: number;
    pvpAirElementResistPercent: number;
    pvpFireElementResistPercent: number;
    pvpNeutralElementReduction: number;
    pvpEarthElementReduction: number;
    pvpWaterElementReduction: number;
    pvpAirElementReduction: number;
    pvpFireElementReduction: number;
    dodgePALostProbability: number;
    dodgePMLostProbability: number;
    tackleBlock: number;
    tackleEvade: number;
    invisibilityState: number;
    constructor();
    getTypeId(): number;
    reset(): void;
    serialize(param1: ICustomDataOutput): void;
    serializeAs_GameFightMinimalStats(param1: ICustomDataOutput): void;
    deserialize(param1: ICustomDataInput): void;
    deserializeAs_GameFightMinimalStats(param1: ICustomDataInput): void;
}
export = GameFightMinimalStats;
